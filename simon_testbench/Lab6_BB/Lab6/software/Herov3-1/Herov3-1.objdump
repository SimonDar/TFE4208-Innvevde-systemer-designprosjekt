
Herov3-1.elf:     file format elf32-littlenios2
Herov3-1.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040238

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00014344 memsz 0x00014344 flags r-x
    LOAD off    0x00015364 vaddr 0x00054364 paddr 0x00055f3c align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00000b14 vaddr 0x00057b14 paddr 0x00057b14 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013998  00040238  00040238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000794  00053bd0  00053bd0  00014bd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00054364  00055f3c  00015364  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  00057b14  00057b14  00017b14  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  00057c70  00057c70  00016f3c  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00016f3c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001340  00000000  00000000  00016f70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00036206  00000000  00000000  000182b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000de9b  00000000  00000000  0004e4b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   000148e4  00000000  00000000  0005c351  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002c5c  00000000  00000000  00070c38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    000039d9  00000000  00000000  00073894  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_alt_sim_info 00000030  00000000  00000000  00077270  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  000772a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 000027b5  00000000  00000000  00077310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00001e56  00000000  00000000  00079ac5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_loclists 000181f7  00000000  00000000  0007b91b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  0009772e  2**0
                  CONTENTS, READONLY
 20 .cpu          00000008  00000000  00000000  00097731  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  00097739  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0009773a  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   00000009  00000000  00000000  0009773b  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    00000009  00000000  00000000  00097744  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   00000009  00000000  00000000  0009774d  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000c  00000000  00000000  00097756  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000059  00000000  00000000  00097762  2**0
                  CONTENTS, READONLY
 28 .jdi          00008f98  00000000  00000000  000977bb  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00032481  00000000  00000000  000a0753  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040238 l    d  .text	00000000 .text
00053bd0 l    d  .rodata	00000000 .rodata
00054364 l    d  .rwdata	00000000 .rwdata
00057b14 l    d  .bss	00000000 .bss
00057c70 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    df *ABS*	00000000 crt0.o
00040280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 CheckSignal.cpp
00053bd0 l     O .rodata	00000018 _ZL18gitarFrequency_mHz
00000000 l    df *ABS*	00000000 LedLibrary.cpp
00053be8 l     O .rodata	00000018 _ZL18gitarFrequency_mHz
00000000 l    df *ABS*	00000000 Main.cpp
00053c28 l     O .rodata	00000018 _ZL18gitarFrequency_mHz
00000000 l    df *ABS*	00000000 PolynomSolver.cpp
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 math_err.c
00042b98 l     F .text	00000048 with_errno
00042be0 l     F .text	00000050 xflow
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00054364 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00049000 l     F .text	000000c0 __sbprintf
00053e74 l     O .rodata	00000010 blanks.1
00053e64 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00049224 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0004ae88 l     F .text	00000008 __fp_lock
0004ae9c l     F .text	00000008 __fp_unlock
0004aea4 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00053f20 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004e44c l     F .text	000000f4 __sprint_r.part.0
0004f7c0 l     F .text	000000c0 __sbprintf
00054054 l     O .rodata	00000010 blanks.1
00054044 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
000514a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
000515b4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00051618 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00051724 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
00051804 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00051930 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00051a1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00051bf0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00055f2c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00051e38 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00051f6c l     F .text	00000034 alt_dev_reg
00054ea4 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00052248 l     F .text	0000020c altera_avalon_jtag_uart_irq
00052454 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00052c44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000530bc l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
000531e8 l     F .text	0000003c alt_get_errno
00053224 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00057b44 g     O .bss	00000004 alt_instruction_exception_handler
00046e48 g     F .text	00000018 putchar
0004da4c g     F .text	00000070 _mprec_log10
00040bd0  w    F .text	00000088 _ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
0004db38 g     F .text	00000060 __any_on
00050000 g     F .text	00000058 _isatty_r
00053f2c g     O .rodata	00000028 __mprec_tinytens
00051b2c g     F .text	0000007c alt_main
00046e60 g     F .text	000000cc _puts_r
00057b70 g     O .bss	00000100 alt_irq
0005014c g     F .text	00000064 _lseek_r
00055f3c g       *ABS*	00000000 __flash_rwdata_start
00045590 g     F .text	00000080 .hidden __eqdf2
00057c70 g       *ABS*	00000000 __alt_heap_start
00050954 g     F .text	00000060 _kill_r
00046e08 g     F .text	00000038 printf
00050320 g     F .text	0000006c _wcrtomb_r
000504c4 g     F .text	00000098 _signal_r
0004e3e8 g     F .text	0000005c __sseek
0004b1c4 g     F .text	00000010 __sinit
0004f880 g     F .text	00000148 __swbuf_r
00050058 g     F .text	00000074 _setlocale_r
0004b00c g     F .text	00000068 __sfmoreglue
00051bcc g     F .text	00000024 __malloc_unlock
00043458 g     F .text	00000414 .hidden __divsf3
00042c54 g     F .text	0000004c .hidden __math_divzero
0004c830 g     F .text	0000012c memmove
0004b1b0 g     F .text	00000014 _cleanup
0004ca50 g     F .text	000000a4 _Balloc
000405fc g     F .text	00000280 _Z10prosentageii
00045610 g     F .text	000000e8 .hidden __gtdf2
00053600 g     F .text	00000024 altera_nios2_gen2_irq_init
00046dcc g     F .text	0000000c __errno
00040000 g     F .entry	0000001c __reset
0004bc20 g     F .text	00000008 __localeconv_l
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004ffa0 g     F .text	00000060 _fstat_r
00057b20 g     O .bss	00000004 errno
0004e360 g     F .text	00000008 __seofread
00057b2c g     O .bss	00000004 alt_argv
0005df04 g       *ABS*	00000000 _gp
00043e80 g     F .text	00000494 .hidden __subsf3
00051704 g     F .text	00000020 getpid
00054d24 g     O .rwdata	00000180 alt_fd_list
00046e40 g     F .text	00000008 _putchar_r
00053624 g     F .text	00000090 alt_find_dev
0004c730 g     F .text	00000100 memcpy
00042ca0 g     F .text	00000094 .hidden __math_invalid
0004ae90 g     F .text	0000000c _cleanup_r
0004689c g     F .text	000000b8 .hidden __floatsidf
0005316c g     F .text	0000007c alt_io_redirect
000456f8 g     F .text	000000e8 .hidden __ltdf2
00053bd0 g       *ABS*	00000000 __DTOR_END__
00046f2c g     F .text	00000010 puts
000538ec g     F .text	00000074 alt_exception_cause_generated_bad_addr
0004d9a4 g     F .text	000000a8 __ratio
00040f00 g     F .text	0000020c _Z19determinantOfMatrixPA3_f
0004f7a4 g     F .text	0000001c __vfiprintf_internal
00052650 g     F .text	00000220 altera_avalon_jtag_uart_read
00046dd8 g     F .text	00000030 _printf_r
00046d0c g     F .text	00000064 .hidden __udivsi3
00051760 g     F .text	000000a4 isatty
0005055c g     F .text	000000c4 _raise_r
0004fa9c g     F .text	00000064 __assert_func
00053f7c g     O .rodata	000000c8 __mprec_tens
00043994 g     F .text	000000b4 .hidden __lesf2
0005385c g     F .text	00000090 alt_icache_flush
00057b1c g     O .bss	00000004 __malloc_top_pad
000509b4 g     F .text	00000004 _getpid_r
00040e00 g     F .text	0000005c _Z9initprintv
0004bc28 g     F .text	0000000c _localeconv_r
0004ce9c g     F .text	000000b0 __i2b
0004b624 g     F .text	000004bc __sfvwrite_r
00050620 g     F .text	000000bc __sigtramp_r
0004e2b4 g     F .text	00000058 _sbrk_r
00050200 g     F .text	00000064 _read_r
00055f24 g     O .rwdata	00000004 alt_max_fd
0004fc40 g     F .text	000000f8 _fclose_r
0004ae04 g     F .text	00000084 fflush
00057b18 g     O .bss	00000004 __malloc_max_sbrked_mem
00040b00 g     F .text	00000048 _Z20greenLedBinaryValuesi
00046954 g     F .text	000000fc .hidden __extendsfdf2
00044438 g     F .text	0000090c .hidden __adddf3
0004386c g     F .text	00000070 .hidden __nesf2
0004d754 g     F .text	000000f8 __b2d
00050f08 g     F .text	00000510 .hidden __umoddi3
00051a58 g     F .text	000000d4 lseek
00055f04 g     O .rwdata	00000004 _global_impure_ptr
0004dd44 g     F .text	00000570 _realloc_r
00057c70 g       *ABS*	00000000 __bss_end
00052fd4 g     F .text	000000e8 alt_iic_isr_register
000534d4 g     F .text	0000012c alt_tick
000509b8 g     F .text	00000550 .hidden __udivdi3
0004ff04 g     F .text	00000024 _fputwc_r
00053f54 g     O .rodata	00000028 __mprec_bigtens
0004cc50 g     F .text	00000138 __s2b
00050450 g     F .text	00000018 abort
00051418 g     F .text	00000090 .hidden __floatunsidf
0004d470 g     F .text	00000058 __mcmp
00040424 g     F .text	000001d8 _Z13SpectrumValueb
0004b1e4 g     F .text	00000014 __fp_lock_all
00052f88 g     F .text	0000004c alt_ic_irq_enabled
00053430 g     F .text	000000a4 alt_alarm_stop
00057b34 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000c8 alt_irq_handler
00040ce0 g     F .text	00000078 _Z8printbitj
00054cfc g     O .rwdata	00000028 alt_dev_null
00040c58  w    F .text	00000088 _ZSt3powIifEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
00052bf8 g     F .text	0000004c alt_dcache_flush_all
0004cd88 g     F .text	00000064 __hi0bits
0004681c g     F .text	00000080 .hidden __fixdfsi
00055f3c g       *ABS*	00000000 __ram_rwdata_end
00055f1c g     O .rwdata	00000008 alt_dev_list
00051e74 g     F .text	000000f8 write
0004db98 g     F .text	000000cc _putc_r
000438dc g     F .text	000000b8 .hidden __gtsf2
00054364 g       *ABS*	00000000 __ram_rodata_end
00051654 g     F .text	000000b0 fstat
00051840 g     F .text	000000f0 kill
000456f8 g     F .text	000000e8 .hidden __ledf2
00042c48 g     F .text	0000000c .hidden __math_oflow
0004d1a0 g     F .text	00000148 __pow5mult
0004e558 g     F .text	0000124c ___vfiprintf_internal_r
00046d70 g     F .text	0000005c .hidden __umodsi3
00040284 g     F .text	00000020 _Z10arrayLengtv
00057c70 g       *ABS*	00000000 end
00052188 g     F .text	000000c0 altera_avalon_jtag_uart_init
0004110c g     F .text	0000046c _Z12findSolutionPA4_f
000401c4 g     F .exceptions	00000074 alt_instruction_exception_entry
00042d98 g     F .text	000000a0 .hidden __math_check_oflow
00053bd0 g       *ABS*	00000000 __CTOR_LIST__
00072000 g       *ABS*	00000000 __alt_stack_pointer
00042c3c g     F .text	0000000c .hidden __math_may_uflow
00046bc8 g     F .text	00000050 .hidden __clzsi2
00052870 g     F .text	00000228 altera_avalon_jtag_uart_write
0004b1d4 g     F .text	00000004 __sfp_lock_acquire
0004c664 g     F .text	000000cc memchr
00046fd4 g     F .text	00002010 ___vfprintf_internal_r
0004b328 g     F .text	000002fc _free_r
000541b8 g     O .rodata	00000180 _ctype_b
000500cc g     F .text	0000000c __locale_mb_cur_max
00053ab0 g     F .text	00000120 __call_exitprocs
00055f0c g     O .rwdata	00000004 __malloc_sbrk_base
00040238 g     F .text	0000004c _start
00057b38 g     O .bss	00000004 _alt_tick_rate
00040b48  w    F .text	00000088 _ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
0004d2e8 g     F .text	00000188 __lshift
00057b3c g     O .bss	00000008 _alt_nticks
00050798 g     F .text	000000a0 signal
00051c2c g     F .text	000000fc read
00051fdc g     F .text	00000048 alt_sys_init
00044314 g     F .text	00000124 .hidden __floatsisf
00053a20 g     F .text	00000090 __register_exitproc
0004cf4c g     F .text	00000254 __multiply
00041834 g     F .text	00001108 __ieee754_pow
000524f4 g     F .text	00000068 altera_avalon_jtag_uart_close
00041578 g     F .text	000002bc pow
00054364 g       *ABS*	00000000 __ram_rwdata_start
00053bd0 g       *ABS*	00000000 __ram_rodata_start
00057b48 g     O .bss	00000028 __malloc_current_mallinfo
0004386c g     F .text	00000070 .hidden __eqsf2
0004d84c g     F .text	00000158 __d2b
00052024 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000537bc g     F .text	000000a0 alt_get_fd
0004fa44 g     F .text	00000058 _close_r
000539a8 g     F .text	00000078 memcmp
000520e4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00057c70 g       *ABS*	00000000 __alt_stack_base
00052134 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000490c0 g     F .text	00000164 __swsetup_r
00044d44 g     F .text	0000084c .hidden __divdf3
0004b074 g     F .text	0000013c __sfp
0004dabc g     F .text	0000007c __copybits
00054788 g     O .rwdata	00000408 __malloc_av_
0004b1e0 g     F .text	00000004 __sinit_lock_release
000457e0 g     F .text	00000714 .hidden __muldf3
0004e30c g     F .text	00000054 __sread
0004087c g     F .text	00000284 _Z18redLedBinaryValuesi
000536b4 g     F .text	00000108 alt_find_file
00052c80 g     F .text	000000a8 alt_dev_llist_insert
00051ba8 g     F .text	00000024 __malloc_lock
00051d80 g     F .text	000000b8 sbrk
0004ada4 g     F .text	00000060 _fflush_r
0004fb14 g     F .text	0000012c _calloc_r
00057b14 g       *ABS*	00000000 __bss_start
0004c95c g     F .text	000000f4 memset
00040e84 g     F .text	0000007c main
00057b30 g     O .bss	00000004 alt_envp
00057b14 g     O .bss	00000004 __malloc_max_total_mem
00052084 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004f9c8 g     F .text	00000018 __swbuf
00043994 g     F .text	000000b4 .hidden __ltsf2
0004e444 g     F .text	00000008 __sclose
00072000 g       *ABS*	00000000 __alt_heap_limit
0004fd38 g     F .text	00000010 fclose
00046a50 g     F .text	00000178 .hidden __truncdfsf2
00049420 g     F .text	0000175c _dtoa_r
0004be80 g     F .text	000007e4 _malloc_r
00050420 g     F .text	00000030 __ascii_wctomb
00055f28 g     O .rwdata	00000004 alt_errno
000402e0 g     F .text	00000028 _Z10CheckInputv
0004fd48 g     F .text	00000020 _fiprintf_r
00050838 g     F .text	00000060 _init_signal
0004bae0 g     F .text	00000098 _fwalk
000501b0 g     F .text	0000000c _mbtowc_r
0004dc64 g     F .text	000000e0 putc
00046c18 g     F .text	00000080 .hidden __divsi3
0004b20c g     F .text	0000011c _malloc_trim_r
00053bd0 g       *ABS*	00000000 __CTOR_END__
00043a48 g     F .text	00000438 .hidden __mulsf3
00042d34 g     F .text	00000064 .hidden __math_check_uflow
00050264 g     F .text	000000b8 strcmp
00053bd0 g       *ABS*	00000000 __flash_rodata_start
00053bd0 g       *ABS*	00000000 __DTOR_LIST__
00045590 g     F .text	00000080 .hidden __nedf2
00051fa0 g     F .text	0000003c alt_irq_init
00051d28 g     F .text	00000058 alt_release_fd
00053d1c g     O .rodata	00000100 .hidden __clz_tab
00057b24 g     O .bss	00000004 _PathLocale
00053960 g     F .text	00000014 atexit
000438dc g     F .text	000000b8 .hidden __gesf2
0004f9e0 g     F .text	00000064 _write_r
000500d8 g     F .text	00000074 setlocale
00055f08 g     O .rwdata	00000004 _impure_ptr
00057b28 g     O .bss	00000004 alt_argc
0004ab7c g     F .text	00000228 __sflush_r
00042e38 g     F .text	000001b4 scalbn
00052d8c g     F .text	00000064 _do_dtors
00040020 g       .exceptions	00000000 alt_irq_entry
000501bc g     F .text	00000044 __ascii_mbtowc
0004d6f4 g     F .text	00000060 __ulp
0004b1f8 g     F .text	00000014 __fp_unlock_all
00055f14 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004bc34 g     F .text	0000000c localeconv
0004293c g     F .text	0000025c __ieee754_sqrt
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0004bdf0 g     F .text	00000090 __swhatbuf_r
00052e24 g     F .text	00000050 alt_ic_isr_register
00055f3c g       *ABS*	00000000 _edata
00057c70 g       *ABS*	00000000 _end
0004fda0 g     F .text	00000164 __fputwc
00040238 g       *ABS*	00000000 __ram_exceptions_end
0005255c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00052efc g     F .text	0000008c alt_ic_irq_disable
0004e368 g     F .text	00000080 __swrite
00055f10 g     O .rwdata	00000004 __malloc_trim_threshold
00053974 g     F .text	00000034 exit
0004fd68 g     F .text	00000038 fiprintf
0005031c g     F .text	00000004 _vfiprintf_r
0004bb78 g     F .text	000000a8 _fwalk_reent
0004d4c8 g     F .text	0000022c __mdiff
00042c30 g     F .text	0000000c .hidden __math_uflow
00046c98 g     F .text	00000074 .hidden __modsi3
00072000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004b1d8 g     F .text	00000004 __sfp_lock_release
00040d58 g     F .text	000000a8 _Z7testledv
00040308 g     F .text	0000011c _Z10CheckClosei
000540b4 g     O .rodata	00000101 _ctype_
000467c8 g     F .text	00000054 .hidden __unorddf2
000515e0 g     F .text	00000038 _exit
00052a98 g     F .text	00000160 alt_alarm_start
0004bc40 g     F .text	000001b0 __smakebuf_r
00046f3c g     F .text	00000098 strlen
00050468 g     F .text	0000005c _init_signal_r
000532dc g     F .text	00000154 open
00045610 g     F .text	000000e8 .hidden __gedf2
0004fb00 g     F .text	00000014 __assert
0004e540 g     F .text	00000018 __sprint_r
00052df0 g     F .text	00000034 alt_icache_flush_all
00055f30 g     O .rwdata	00000004 alt_priority_mask
00040e5c g     F .text	00000028 _Z14combinedOutputii
00052e74 g     F .text	00000088 alt_ic_irq_enable
00048fe4 g     F .text	0000001c __vfprintf_internal
00050414 g     F .text	0000000c _wctomb_r
00045ef4 g     F .text	000008d4 .hidden __subdf3
0004cdec g     F .text	000000b0 __lo0bits
00055f34 g     O .rwdata	00000008 alt_alarm_list
00052d28 g     F .text	00000064 _do_ctors
00050898 g     F .text	000000bc __sigtramp
0005038c g     F .text	00000088 wcrtomb
000402a4 g     F .text	0000003c _Z7halfWayii
000514e4 g     F .text	000000d0 close
00042fec g     F .text	0000046c .hidden __addsf3
00054b90 g     O .rwdata	0000016c __global_locale
00051998 g     F .text	00000084 alt_load
0004ff28 g     F .text	00000078 fputwc
000506dc g     F .text	000000bc raise
0004b1dc g     F .text	00000004 __sinit_lock_acquire
0004cb18 g     F .text	00000138 __multadd
0004caf4 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08408e14 	ori	at,at,568
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
   40094:	e93fff04 	addi	r4,ea,-4
   40098:	00401c40 	call	401c4 <alt_instruction_exception_entry>
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>
   400a0:	ebffff04 	addi	r15,ea,-4
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0ffff17 	ldw	r3,-4(fp)
   40130:	e0bffe17 	ldw	r2,-8(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001126 	beq	r2,zero,40180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	e0bffd17 	ldw	r2,-12(fp)
   40140:	100690fa 	slli	r3,r2,3
   40144:	00800174 	movhi	r2,5
   40148:	1885883a 	add	r2,r3,r2
   4014c:	10dedc17 	ldw	r3,31600(r2)
   40150:	e0bffd17 	ldw	r2,-12(fp)
   40154:	100890fa 	slli	r4,r2,3
   40158:	00800174 	movhi	r2,5
   4015c:	2085883a 	add	r2,r4,r2
   40160:	109edd17 	ldw	r2,31604(r2)
   40164:	1009883a 	mov	r4,r2
   40168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   4016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   40170:	0005313a 	rdctl	r2,ipending
   40174:	e0bffb15 	stw	r2,-20(fp)
  return active;
   40178:	e0bffb17 	ldw	r2,-20(fp)
   4017c:	00000706 	br	4019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
   40180:	e0bffe17 	ldw	r2,-8(fp)
   40184:	1085883a 	add	r2,r2,r2
   40188:	e0bffe15 	stw	r2,-8(fp)
      i++;
   4018c:	e0bffd17 	ldw	r2,-12(fp)
   40190:	10800044 	addi	r2,r2,1
   40194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   40198:	003fe406 	br	4012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   4019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   401a0:	e0bfff17 	ldw	r2,-4(fp)
   401a4:	103fde1e 	bne	r2,zero,40120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401a8:	0001883a 	nop
}
   401ac:	0001883a 	nop
   401b0:	e037883a 	mov	sp,fp
   401b4:	dfc00117 	ldw	ra,4(sp)
   401b8:	df000017 	ldw	fp,0(sp)
   401bc:	dec00204 	addi	sp,sp,8
   401c0:	f800283a 	ret

000401c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401c4:	defffb04 	addi	sp,sp,-20
   401c8:	dfc00415 	stw	ra,16(sp)
   401cc:	df000315 	stw	fp,12(sp)
   401d0:	df000304 	addi	fp,sp,12
   401d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401d8:	000531fa 	rdctl	r2,exception
   401dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401e0:	e0bfff17 	ldw	r2,-4(fp)
   401e4:	1004d0ba 	srli	r2,r2,2
   401e8:	108007cc 	andi	r2,r2,31
   401ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401f0:	0005333a 	rdctl	r2,badaddr
   401f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f8:	d0a71017 	ldw	r2,-25536(gp)
   401fc:	10000726 	beq	r2,zero,4021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   40200:	d0a71017 	ldw	r2,-25536(gp)
   40204:	e0ffff17 	ldw	r3,-4(fp)
   40208:	e1bffe17 	ldw	r6,-8(fp)
   4020c:	e17ffd17 	ldw	r5,-12(fp)
   40210:	1809883a 	mov	r4,r3
   40214:	103ee83a 	callr	r2
   40218:	00000206 	br	40224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   4021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40220:	0005883a 	mov	r2,zero
}
   40224:	e037883a 	mov	sp,fp
   40228:	dfc00117 	ldw	ra,4(sp)
   4022c:	df000017 	ldw	fp,0(sp)
   40230:	dec00204 	addi	sp,sp,8
   40234:	f800283a 	ret

Disassembly of section .text:

00040238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   4023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   40240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40244:	00bffd16 	blt	zero,r2,4023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40248:	06c001f4 	movhi	sp,7
    ori sp, sp, %lo(__alt_stack_pointer)
   4024c:	dec80014 	ori	sp,sp,8192
    movhi gp, %hi(_gp)
   40250:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40254:	d6b7c114 	ori	gp,gp,57092
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40258:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   4025c:	109ec514 	ori	r2,r2,31508

    movhi r3, %hi(__bss_end)
   40260:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40264:	18df1c14 	ori	r3,r3,31856

    beq r2, r3, 1f
   40268:	10c00326 	beq	r2,r3,40278 <_start+0x40>

0:
    stw zero, (r2)
   4026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40274:	10fffd36 	bltu	r2,r3,4026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40278:	00519980 	call	51998 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   4027c:	0051b2c0 	call	51b2c <alt_main>

00040280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40280:	003fff06 	br	40280 <alt_after_alt_main>

00040284 <_Z10arrayLengtv>:
 *  Created on: Mar 26, 2023
 *      Author: simondar
 */

#include "CheckSignal.hpp"
int arrayLengt() { return (sizeof(gitarFrequency_mHz) / sizeof(gitarFrequency_mHz[0])); }
   40284:	deffff04 	addi	sp,sp,-4
   40288:	df000015 	stw	fp,0(sp)
   4028c:	d839883a 	mov	fp,sp
   40290:	00800184 	movi	r2,6
   40294:	e037883a 	mov	sp,fp
   40298:	df000017 	ldw	fp,0(sp)
   4029c:	dec00104 	addi	sp,sp,4
   402a0:	f800283a 	ret

000402a4 <_Z7halfWayii>:

int halfWay(int A, int B) { return((A+B)/2); }
   402a4:	defffd04 	addi	sp,sp,-12
   402a8:	df000215 	stw	fp,8(sp)
   402ac:	df000204 	addi	fp,sp,8
   402b0:	e13fff15 	stw	r4,-4(fp)
   402b4:	e17ffe15 	stw	r5,-8(fp)
   402b8:	e0ffff17 	ldw	r3,-4(fp)
   402bc:	e0bffe17 	ldw	r2,-8(fp)
   402c0:	1885883a 	add	r2,r3,r2
   402c4:	1006d7fa 	srli	r3,r2,31
   402c8:	1885883a 	add	r2,r3,r2
   402cc:	1005d07a 	srai	r2,r2,1
   402d0:	e037883a 	mov	sp,fp
   402d4:	df000017 	ldw	fp,0(sp)
   402d8:	dec00104 	addi	sp,sp,4
   402dc:	f800283a 	ret

000402e0 <_Z10CheckInputv>:

int CheckInput()
{
   402e0:	defffe04 	addi	sp,sp,-8
   402e4:	df000115 	stw	fp,4(sp)
   402e8:	df000104 	addi	fp,sp,4
    int TempValueToOutput_mHZ = 14681;
   402ec:	008e5644 	movi	r2,14681
   402f0:	e0bfff15 	stw	r2,-4(fp)
    return(TempValueToOutput_mHZ);
   402f4:	e0bfff17 	ldw	r2,-4(fp)
}
   402f8:	e037883a 	mov	sp,fp
   402fc:	df000017 	ldw	fp,0(sp)
   40300:	dec00104 	addi	sp,sp,4
   40304:	f800283a 	ret

00040308 <_Z10CheckClosei>:


int CheckClose(int InputFrequency) {
   40308:	defff804 	addi	sp,sp,-32
   4030c:	dfc00715 	stw	ra,28(sp)
   40310:	df000615 	stw	fp,24(sp)
   40314:	df000604 	addi	fp,sp,24
   40318:	e13ffa15 	stw	r4,-24(fp)

    int HighNumber, LowNumber;
    int return_value = 404;
   4031c:	00806504 	movi	r2,404
   40320:	e0bfff15 	stw	r2,-4(fp)

    for (int i = 0; i < arrayLengt(); ++i)
   40324:	e03ffe15 	stw	zero,-8(fp)
   40328:	00003206 	br	403f4 <_Z10CheckClosei+0xec>
    {

        HighNumber = halfWay(gitarFrequency_mHz[i+1], gitarFrequency_mHz[i+2]);
   4032c:	e0bffe17 	ldw	r2,-8(fp)
   40330:	10800044 	addi	r2,r2,1
   40334:	100690ba 	slli	r3,r2,2
   40338:	00800174 	movhi	r2,5
   4033c:	1885883a 	add	r2,r3,r2
   40340:	110ef417 	ldw	r4,15312(r2)
   40344:	e0bffe17 	ldw	r2,-8(fp)
   40348:	10800084 	addi	r2,r2,2
   4034c:	100690ba 	slli	r3,r2,2
   40350:	00800174 	movhi	r2,5
   40354:	1885883a 	add	r2,r3,r2
   40358:	108ef417 	ldw	r2,15312(r2)
   4035c:	100b883a 	mov	r5,r2
   40360:	00402a40 	call	402a4 <_Z7halfWayii>
   40364:	e0bffd15 	stw	r2,-12(fp)
        LowNumber= halfWay(gitarFrequency_mHz[i], gitarFrequency_mHz[i+1]);
   40368:	e0bffe17 	ldw	r2,-8(fp)
   4036c:	100690ba 	slli	r3,r2,2
   40370:	00800174 	movhi	r2,5
   40374:	1885883a 	add	r2,r3,r2
   40378:	110ef417 	ldw	r4,15312(r2)
   4037c:	e0bffe17 	ldw	r2,-8(fp)
   40380:	10800044 	addi	r2,r2,1
   40384:	100690ba 	slli	r3,r2,2
   40388:	00800174 	movhi	r2,5
   4038c:	1885883a 	add	r2,r3,r2
   40390:	108ef417 	ldw	r2,15312(r2)
   40394:	100b883a 	mov	r5,r2
   40398:	00402a40 	call	402a4 <_Z7halfWayii>
   4039c:	e0bffc15 	stw	r2,-16(fp)
        const int InputFrequency = CheckInput();
   403a0:	00402e00 	call	402e0 <_Z10CheckInputv>
   403a4:	e0bffb15 	stw	r2,-20(fp)

       if (i == 0 && InputFrequency <= LowNumber)
   403a8:	e0bffe17 	ldw	r2,-8(fp)
   403ac:	1000051e 	bne	r2,zero,403c4 <_Z10CheckClosei+0xbc>
   403b0:	e0bffb17 	ldw	r2,-20(fp)
   403b4:	e0fffc17 	ldw	r3,-16(fp)
   403b8:	18800216 	blt	r3,r2,403c4 <_Z10CheckClosei+0xbc>
        {
            return_value = 0;
   403bc:	e03fff15 	stw	zero,-4(fp)
   403c0:	00000906 	br	403e8 <_Z10CheckClosei+0xe0>
        }
        else if(LowNumber < InputFrequency && InputFrequency <= HighNumber)
   403c4:	e0fffc17 	ldw	r3,-16(fp)
   403c8:	e0bffb17 	ldw	r2,-20(fp)
   403cc:	1880060e 	bge	r3,r2,403e8 <_Z10CheckClosei+0xe0>
   403d0:	e0bffb17 	ldw	r2,-20(fp)
   403d4:	e0fffd17 	ldw	r3,-12(fp)
   403d8:	18800316 	blt	r3,r2,403e8 <_Z10CheckClosei+0xe0>
        {
          return_value = i + 1;
   403dc:	e0bffe17 	ldw	r2,-8(fp)
   403e0:	10800044 	addi	r2,r2,1
   403e4:	e0bfff15 	stw	r2,-4(fp)
    for (int i = 0; i < arrayLengt(); ++i)
   403e8:	e0bffe17 	ldw	r2,-8(fp)
   403ec:	10800044 	addi	r2,r2,1
   403f0:	e0bffe15 	stw	r2,-8(fp)
   403f4:	00402840 	call	40284 <_Z10arrayLengtv>
   403f8:	1007883a 	mov	r3,r2
   403fc:	e0bffe17 	ldw	r2,-8(fp)
   40400:	10c4803a 	cmplt	r2,r2,r3
   40404:	10803fcc 	andi	r2,r2,255
   40408:	103fc81e 	bne	r2,zero,4032c <_Z10CheckClosei+0x24>
        }
    }

    return(return_value);
   4040c:	e0bfff17 	ldw	r2,-4(fp)
}
   40410:	e037883a 	mov	sp,fp
   40414:	dfc00117 	ldw	ra,4(sp)
   40418:	df000017 	ldw	fp,0(sp)
   4041c:	dec00204 	addi	sp,sp,8
   40420:	f800283a 	ret

00040424 <_Z13SpectrumValueb>:

int SpectrumValue(bool print_max_value)
{
   40424:	defff804 	addi	sp,sp,-32
   40428:	dfc00715 	stw	ra,28(sp)
   4042c:	df000615 	stw	fp,24(sp)
   40430:	df000604 	addi	fp,sp,24
   40434:	2005883a 	mov	r2,r4
   40438:	e0bffa05 	stb	r2,-24(fp)

    const int InputFrequency_const  = CheckInput();
   4043c:	00402e00 	call	402e0 <_Z10CheckInputv>
   40440:	e0bffe15 	stw	r2,-8(fp)
    int interval = CheckClose(InputFrequency_const);
   40444:	e13ffe17 	ldw	r4,-8(fp)
   40448:	00403080 	call	40308 <_Z10CheckClosei>
   4044c:	e0bffd15 	stw	r2,-12(fp)


    int HighNumber, LowNumber;


    switch(interval)
   40450:	e0bffd17 	ldw	r2,-12(fp)
   40454:	10000426 	beq	r2,zero,40468 <_Z13SpectrumValueb+0x44>
   40458:	e0bffd17 	ldw	r2,-12(fp)
   4045c:	10800160 	cmpeqi	r2,r2,5
   40460:	10001e1e 	bne	r2,zero,404dc <_Z13SpectrumValueb+0xb8>
   40464:	00003a06 	br	40550 <_Z13SpectrumValueb+0x12c>
    {
      case 0:
        HighNumber = halfWay(gitarFrequency_mHz[interval], gitarFrequency_mHz[interval+1]);
   40468:	e0bffd17 	ldw	r2,-12(fp)
   4046c:	100690ba 	slli	r3,r2,2
   40470:	00800174 	movhi	r2,5
   40474:	1885883a 	add	r2,r3,r2
   40478:	110ef417 	ldw	r4,15312(r2)
   4047c:	e0bffd17 	ldw	r2,-12(fp)
   40480:	10800044 	addi	r2,r2,1
   40484:	100690ba 	slli	r3,r2,2
   40488:	00800174 	movhi	r2,5
   4048c:	1885883a 	add	r2,r3,r2
   40490:	108ef417 	ldw	r2,15312(r2)
   40494:	100b883a 	mov	r5,r2
   40498:	00402a40 	call	402a4 <_Z7halfWayii>
   4049c:	e0bffc15 	stw	r2,-16(fp)
        LowNumber = halfWay(gitarFrequency_mHz[interval], gitarFrequency_mHz[interval+1]);
   404a0:	e0bffd17 	ldw	r2,-12(fp)
   404a4:	100690ba 	slli	r3,r2,2
   404a8:	00800174 	movhi	r2,5
   404ac:	1885883a 	add	r2,r3,r2
   404b0:	110ef417 	ldw	r4,15312(r2)
   404b4:	e0bffd17 	ldw	r2,-12(fp)
   404b8:	10800044 	addi	r2,r2,1
   404bc:	100690ba 	slli	r3,r2,2
   404c0:	00800174 	movhi	r2,5
   404c4:	1885883a 	add	r2,r3,r2
   404c8:	108ef417 	ldw	r2,15312(r2)
   404cc:	100b883a 	mov	r5,r2
   404d0:	00402a40 	call	402a4 <_Z7halfWayii>
   404d4:	e0bffb15 	stw	r2,-20(fp)
        break;
   404d8:	00003a06 	br	405c4 <_Z13SpectrumValueb+0x1a0>

      case 5:
        HighNumber = halfWay(gitarFrequency_mHz[interval], gitarFrequency_mHz[interval-1]);
   404dc:	e0bffd17 	ldw	r2,-12(fp)
   404e0:	100690ba 	slli	r3,r2,2
   404e4:	00800174 	movhi	r2,5
   404e8:	1885883a 	add	r2,r3,r2
   404ec:	110ef417 	ldw	r4,15312(r2)
   404f0:	e0bffd17 	ldw	r2,-12(fp)
   404f4:	10bfffc4 	addi	r2,r2,-1
   404f8:	100690ba 	slli	r3,r2,2
   404fc:	00800174 	movhi	r2,5
   40500:	1885883a 	add	r2,r3,r2
   40504:	108ef417 	ldw	r2,15312(r2)
   40508:	100b883a 	mov	r5,r2
   4050c:	00402a40 	call	402a4 <_Z7halfWayii>
   40510:	e0bffc15 	stw	r2,-16(fp)
        LowNumber = halfWay(gitarFrequency_mHz[interval], gitarFrequency_mHz[interval-1]);
   40514:	e0bffd17 	ldw	r2,-12(fp)
   40518:	100690ba 	slli	r3,r2,2
   4051c:	00800174 	movhi	r2,5
   40520:	1885883a 	add	r2,r3,r2
   40524:	110ef417 	ldw	r4,15312(r2)
   40528:	e0bffd17 	ldw	r2,-12(fp)
   4052c:	10bfffc4 	addi	r2,r2,-1
   40530:	100690ba 	slli	r3,r2,2
   40534:	00800174 	movhi	r2,5
   40538:	1885883a 	add	r2,r3,r2
   4053c:	108ef417 	ldw	r2,15312(r2)
   40540:	100b883a 	mov	r5,r2
   40544:	00402a40 	call	402a4 <_Z7halfWayii>
   40548:	e0bffb15 	stw	r2,-20(fp)
        break;
   4054c:	00001d06 	br	405c4 <_Z13SpectrumValueb+0x1a0>

      default:
        HighNumber = halfWay(gitarFrequency_mHz[interval], gitarFrequency_mHz[interval+1]);
   40550:	e0bffd17 	ldw	r2,-12(fp)
   40554:	100690ba 	slli	r3,r2,2
   40558:	00800174 	movhi	r2,5
   4055c:	1885883a 	add	r2,r3,r2
   40560:	110ef417 	ldw	r4,15312(r2)
   40564:	e0bffd17 	ldw	r2,-12(fp)
   40568:	10800044 	addi	r2,r2,1
   4056c:	100690ba 	slli	r3,r2,2
   40570:	00800174 	movhi	r2,5
   40574:	1885883a 	add	r2,r3,r2
   40578:	108ef417 	ldw	r2,15312(r2)
   4057c:	100b883a 	mov	r5,r2
   40580:	00402a40 	call	402a4 <_Z7halfWayii>
   40584:	e0bffc15 	stw	r2,-16(fp)
        LowNumber = halfWay(gitarFrequency_mHz[interval], gitarFrequency_mHz[interval-1]);
   40588:	e0bffd17 	ldw	r2,-12(fp)
   4058c:	100690ba 	slli	r3,r2,2
   40590:	00800174 	movhi	r2,5
   40594:	1885883a 	add	r2,r3,r2
   40598:	110ef417 	ldw	r4,15312(r2)
   4059c:	e0bffd17 	ldw	r2,-12(fp)
   405a0:	10bfffc4 	addi	r2,r2,-1
   405a4:	100690ba 	slli	r3,r2,2
   405a8:	00800174 	movhi	r2,5
   405ac:	1885883a 	add	r2,r3,r2
   405b0:	108ef417 	ldw	r2,15312(r2)
   405b4:	100b883a 	mov	r5,r2
   405b8:	00402a40 	call	402a4 <_Z7halfWayii>
   405bc:	e0bffb15 	stw	r2,-20(fp)
        break;
   405c0:	0001883a 	nop
    }

    if (print_max_value)
   405c4:	e0bffa03 	ldbu	r2,-24(fp)
   405c8:	10000326 	beq	r2,zero,405d8 <_Z13SpectrumValueb+0x1b4>
    {
      printout = &HighNumber;
   405cc:	e0bffc04 	addi	r2,fp,-16
   405d0:	e0bfff15 	stw	r2,-4(fp)
   405d4:	00000206 	br	405e0 <_Z13SpectrumValueb+0x1bc>
    }
    else
    {
      printout = &LowNumber;
   405d8:	e0bffb04 	addi	r2,fp,-20
   405dc:	e0bfff15 	stw	r2,-4(fp)
    }


return (*printout);
   405e0:	e0bfff17 	ldw	r2,-4(fp)
   405e4:	10800017 	ldw	r2,0(r2)
}
   405e8:	e037883a 	mov	sp,fp
   405ec:	dfc00117 	ldw	ra,4(sp)
   405f0:	df000017 	ldw	fp,0(sp)
   405f4:	dec00204 	addi	sp,sp,8
   405f8:	f800283a 	ret

000405fc <_Z10prosentageii>:
#include "LedLibrary.hpp"

int prosentage(int LowNumber, int HighNumber) {
   405fc:	deffe604 	addi	sp,sp,-104
   40600:	dfc01915 	stw	ra,100(sp)
   40604:	df001815 	stw	fp,96(sp)
   40608:	dc401715 	stw	r17,92(sp)
   4060c:	dc001615 	stw	r16,88(sp)
   40610:	df001804 	addi	fp,sp,96
   40614:	e13fe915 	stw	r4,-92(fp)
   40618:	e17fe815 	stw	r5,-96(fp)

    int results = 1;
   4061c:	00800044 	movi	r2,1
   40620:	e0bffd15 	stw	r2,-12(fp)

    float Input = CheckInput();
   40624:	00402e00 	call	402e0 <_Z10CheckInputv>
   40628:	1009883a 	mov	r4,r2
   4062c:	00443140 	call	44314 <__floatsisf>
   40630:	1007883a 	mov	r3,r2
   40634:	e0fffc15 	stw	r3,-16(fp)
    float ZeroPoint = float(gitarFrequency_mHz[CheckClose(CheckInput())]);
   40638:	00402e00 	call	402e0 <_Z10CheckInputv>
   4063c:	1009883a 	mov	r4,r2
   40640:	00403080 	call	40308 <_Z10CheckClosei>
   40644:	100690ba 	slli	r3,r2,2
   40648:	00800174 	movhi	r2,5
   4064c:	1885883a 	add	r2,r3,r2
   40650:	108efa17 	ldw	r2,15336(r2)
   40654:	1009883a 	mov	r4,r2
   40658:	00443140 	call	44314 <__floatsisf>
   4065c:	1007883a 	mov	r3,r2
   40660:	e0fffb15 	stw	r3,-20(fp)
    float MaxValueOut = 100;
   40664:	0090b234 	movhi	r2,17096
   40668:	e0bffa15 	stw	r2,-24(fp)
    float MinValueOut = 0;
   4066c:	e03ff915 	stw	zero,-28(fp)


    float coeff[3][4] = {
   40670:	e03fed15 	stw	zero,-76(fp)
   40674:	e03fee15 	stw	zero,-72(fp)
   40678:	e03fef15 	stw	zero,-68(fp)
   4067c:	e03ff015 	stw	zero,-64(fp)
   40680:	e03ff115 	stw	zero,-60(fp)
   40684:	e03ff215 	stw	zero,-56(fp)
   40688:	e03ff315 	stw	zero,-52(fp)
   4068c:	e03ff415 	stw	zero,-48(fp)
   40690:	e03ff515 	stw	zero,-44(fp)
   40694:	e03ff615 	stw	zero,-40(fp)
   40698:	e03ff715 	stw	zero,-36(fp)
   4069c:	e03ff815 	stw	zero,-32(fp)
   406a0:	008fe034 	movhi	r2,16256
   406a4:	e0bfef15 	stw	r2,-68(fp)
   406a8:	008fe034 	movhi	r2,16256
   406ac:	e0bff315 	stw	r2,-52(fp)
   406b0:	0090b234 	movhi	r2,17096
   406b4:	e0bff415 	stw	r2,-48(fp)
   406b8:	008fe034 	movhi	r2,16256
   406bc:	e0bff715 	stw	r2,-36(fp)
   406c0:	0090b234 	movhi	r2,17096
   406c4:	e0bff815 	stw	r2,-32(fp)
        { float(pow(ZeroPoint, 2)), ZeroPoint, 1, 0 },
   406c8:	01400084 	movi	r5,2
   406cc:	e13ffb17 	ldw	r4,-20(fp)
   406d0:	0040bd00 	call	40bd0 <_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   406d4:	100d883a 	mov	r6,r2
   406d8:	180f883a 	mov	r7,r3
   406dc:	3009883a 	mov	r4,r6
   406e0:	380b883a 	mov	r5,r7
   406e4:	0046a500 	call	46a50 <__truncdfsf2>
   406e8:	1007883a 	mov	r3,r2
        { float(pow(LowNumber, 2)), float(LowNumber), 1, 100 },
        { float(pow(HighNumber, 2)), float(HighNumber), 1, 100 },
    };
   406ec:	e0ffed15 	stw	r3,-76(fp)
   406f0:	e0bffb17 	ldw	r2,-20(fp)
   406f4:	e0bfee15 	stw	r2,-72(fp)
        { float(pow(LowNumber, 2)), float(LowNumber), 1, 100 },
   406f8:	01400084 	movi	r5,2
   406fc:	e13fe917 	ldw	r4,-92(fp)
   40700:	0040b480 	call	40b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   40704:	100d883a 	mov	r6,r2
   40708:	180f883a 	mov	r7,r3
   4070c:	3009883a 	mov	r4,r6
   40710:	380b883a 	mov	r5,r7
   40714:	0046a500 	call	46a50 <__truncdfsf2>
   40718:	1007883a 	mov	r3,r2
    };
   4071c:	e0fff115 	stw	r3,-60(fp)
        { float(pow(LowNumber, 2)), float(LowNumber), 1, 100 },
   40720:	e13fe917 	ldw	r4,-92(fp)
   40724:	00443140 	call	44314 <__floatsisf>
   40728:	1007883a 	mov	r3,r2
    };
   4072c:	e0fff215 	stw	r3,-56(fp)
        { float(pow(HighNumber, 2)), float(HighNumber), 1, 100 },
   40730:	01400084 	movi	r5,2
   40734:	e13fe817 	ldw	r4,-96(fp)
   40738:	0040b480 	call	40b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   4073c:	100d883a 	mov	r6,r2
   40740:	180f883a 	mov	r7,r3
   40744:	3009883a 	mov	r4,r6
   40748:	380b883a 	mov	r5,r7
   4074c:	0046a500 	call	46a50 <__truncdfsf2>
   40750:	1007883a 	mov	r3,r2
    };
   40754:	e0fff515 	stw	r3,-44(fp)
        { float(pow(HighNumber, 2)), float(HighNumber), 1, 100 },
   40758:	e13fe817 	ldw	r4,-96(fp)
   4075c:	00443140 	call	44314 <__floatsisf>
   40760:	1007883a 	mov	r3,r2
    };
   40764:	e0fff615 	stw	r3,-40(fp)

    thirdDegreeFormula Formula = findSolution(coeff);
   40768:	e0bfea04 	addi	r2,fp,-88
   4076c:	e0ffed04 	addi	r3,fp,-76
   40770:	180b883a 	mov	r5,r3
   40774:	1009883a 	mov	r4,r2
   40778:	004110c0 	call	4110c <_Z12findSolutionPA4_f>

    results = Formula.x *pow(Input,2) + Formula.y * Input + Formula.z;
   4077c:	e0bfea17 	ldw	r2,-88(fp)
   40780:	1009883a 	mov	r4,r2
   40784:	00469540 	call	46954 <__extendsfdf2>
   40788:	1021883a 	mov	r16,r2
   4078c:	1823883a 	mov	r17,r3
   40790:	01400084 	movi	r5,2
   40794:	e13ffc17 	ldw	r4,-16(fp)
   40798:	0040bd00 	call	40bd0 <_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   4079c:	1009883a 	mov	r4,r2
   407a0:	180b883a 	mov	r5,r3
   407a4:	200d883a 	mov	r6,r4
   407a8:	280f883a 	mov	r7,r5
   407ac:	8009883a 	mov	r4,r16
   407b0:	880b883a 	mov	r5,r17
   407b4:	00457e00 	call	457e0 <__muldf3>
   407b8:	1009883a 	mov	r4,r2
   407bc:	180b883a 	mov	r5,r3
   407c0:	2021883a 	mov	r16,r4
   407c4:	2823883a 	mov	r17,r5
   407c8:	e0bfeb17 	ldw	r2,-84(fp)
   407cc:	e17ffc17 	ldw	r5,-16(fp)
   407d0:	1009883a 	mov	r4,r2
   407d4:	0043a480 	call	43a48 <__mulsf3>
   407d8:	1007883a 	mov	r3,r2
   407dc:	1805883a 	mov	r2,r3
   407e0:	1009883a 	mov	r4,r2
   407e4:	00469540 	call	46954 <__extendsfdf2>
   407e8:	1009883a 	mov	r4,r2
   407ec:	180b883a 	mov	r5,r3
   407f0:	200d883a 	mov	r6,r4
   407f4:	280f883a 	mov	r7,r5
   407f8:	8009883a 	mov	r4,r16
   407fc:	880b883a 	mov	r5,r17
   40800:	00444380 	call	44438 <__adddf3>
   40804:	1009883a 	mov	r4,r2
   40808:	180b883a 	mov	r5,r3
   4080c:	2021883a 	mov	r16,r4
   40810:	2823883a 	mov	r17,r5
   40814:	e0bfec17 	ldw	r2,-80(fp)
   40818:	1009883a 	mov	r4,r2
   4081c:	00469540 	call	46954 <__extendsfdf2>
   40820:	1009883a 	mov	r4,r2
   40824:	180b883a 	mov	r5,r3
   40828:	200d883a 	mov	r6,r4
   4082c:	280f883a 	mov	r7,r5
   40830:	8009883a 	mov	r4,r16
   40834:	880b883a 	mov	r5,r17
   40838:	00444380 	call	44438 <__adddf3>
   4083c:	1009883a 	mov	r4,r2
   40840:	180b883a 	mov	r5,r3
   40844:	2005883a 	mov	r2,r4
   40848:	2807883a 	mov	r3,r5
   4084c:	1009883a 	mov	r4,r2
   40850:	180b883a 	mov	r5,r3
   40854:	004681c0 	call	4681c <__fixdfsi>
   40858:	e0bffd15 	stw	r2,-12(fp)

    return(results);
   4085c:	e0bffd17 	ldw	r2,-12(fp)
}
   40860:	e6fffe04 	addi	sp,fp,-8
   40864:	dfc00317 	ldw	ra,12(sp)
   40868:	df000217 	ldw	fp,8(sp)
   4086c:	dc400117 	ldw	r17,4(sp)
   40870:	dc000017 	ldw	r16,0(sp)
   40874:	dec00404 	addi	sp,sp,16
   40878:	f800283a 	ret

0004087c <_Z18redLedBinaryValuesi>:

int redLedBinaryValues(int prosentage)
{
   4087c:	defff604 	addi	sp,sp,-40
   40880:	dfc00915 	stw	ra,36(sp)
   40884:	df000815 	stw	fp,32(sp)
   40888:	dc400715 	stw	r17,28(sp)
   4088c:	dc000615 	stw	r16,24(sp)
   40890:	df000804 	addi	fp,sp,32
   40894:	e13ff815 	stw	r4,-32(fp)
    float steps = 100;
   40898:	0090b234 	movhi	r2,17096
   4089c:	e0bffa15 	stw	r2,-24(fp)
    steps /= 18;
   408a0:	01506434 	movhi	r5,16784
   408a4:	e13ffa17 	ldw	r4,-24(fp)
   408a8:	00434580 	call	43458 <__divsf3>
   408ac:	1007883a 	mov	r3,r2
   408b0:	e0fffa15 	stw	r3,-24(fp)
    int toleranceProsentage = 1;
   408b4:	00800044 	movi	r2,1
   408b8:	e0bff915 	stw	r2,-28(fp)
    int result = 0;
   408bc:	e03ffd15 	stw	zero,-12(fp)



    if( 50-toleranceProsentage < prosentage && prosentage < 50+toleranceProsentage)
   408c0:	00c00c84 	movi	r3,50
   408c4:	e0bff917 	ldw	r2,-28(fp)
   408c8:	1887c83a 	sub	r3,r3,r2
   408cc:	e0bff817 	ldw	r2,-32(fp)
   408d0:	18801f0e 	bge	r3,r2,40950 <_Z18redLedBinaryValuesi+0xd4>
   408d4:	e0bff917 	ldw	r2,-28(fp)
   408d8:	10c00c44 	addi	r3,r2,49
   408dc:	e0bff817 	ldw	r2,-32(fp)
   408e0:	18801b16 	blt	r3,r2,40950 <_Z18redLedBinaryValuesi+0xd4>
    {
        printf("\nMiddle value\n");
   408e4:	01000174 	movhi	r4,5
   408e8:	210f0004 	addi	r4,r4,15360
   408ec:	0046f2c0 	call	46f2c <puts>
        result = pow(2, 8) + pow(2, 9);
   408f0:	01400204 	movi	r5,8
   408f4:	01000084 	movi	r4,2
   408f8:	0040b480 	call	40b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   408fc:	1021883a 	mov	r16,r2
   40900:	1823883a 	mov	r17,r3
   40904:	01400244 	movi	r5,9
   40908:	01000084 	movi	r4,2
   4090c:	0040b480 	call	40b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   40910:	1009883a 	mov	r4,r2
   40914:	180b883a 	mov	r5,r3
   40918:	200d883a 	mov	r6,r4
   4091c:	280f883a 	mov	r7,r5
   40920:	8009883a 	mov	r4,r16
   40924:	880b883a 	mov	r5,r17
   40928:	00444380 	call	44438 <__adddf3>
   4092c:	1009883a 	mov	r4,r2
   40930:	180b883a 	mov	r5,r3
   40934:	2005883a 	mov	r2,r4
   40938:	2807883a 	mov	r3,r5
   4093c:	1009883a 	mov	r4,r2
   40940:	180b883a 	mov	r5,r3
   40944:	004681c0 	call	4681c <__fixdfsi>
   40948:	e0bffd15 	stw	r2,-12(fp)
   4094c:	00006406 	br	40ae0 <_Z18redLedBinaryValuesi+0x264>
    }
    else if (50+toleranceProsentage <= prosentage)
   40950:	e0bff917 	ldw	r2,-28(fp)
   40954:	10c00c44 	addi	r3,r2,49
   40958:	e0bff817 	ldw	r2,-32(fp)
   4095c:	18802e0e 	bge	r3,r2,40a18 <_Z18redLedBinaryValuesi+0x19c>
    {
        printf("\nHigh value\n");
   40960:	01000174 	movhi	r4,5
   40964:	210f0404 	addi	r4,r4,15376
   40968:	0046f2c0 	call	46f2c <puts>


        for (float i = 9; i*steps <= prosentage; i+= 1)
   4096c:	00904434 	movhi	r2,16656
   40970:	e0bffc15 	stw	r2,-16(fp)
   40974:	00001b06 	br	409e4 <_Z18redLedBinaryValuesi+0x168>
        {
             result += pow(2, i);
   40978:	e17ffc17 	ldw	r5,-16(fp)
   4097c:	01000084 	movi	r4,2
   40980:	0040c580 	call	40c58 <_ZSt3powIifEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   40984:	1021883a 	mov	r16,r2
   40988:	1823883a 	mov	r17,r3
   4098c:	e13ffd17 	ldw	r4,-12(fp)
   40990:	004689c0 	call	4689c <__floatsidf>
   40994:	1009883a 	mov	r4,r2
   40998:	180b883a 	mov	r5,r3
   4099c:	200d883a 	mov	r6,r4
   409a0:	280f883a 	mov	r7,r5
   409a4:	8009883a 	mov	r4,r16
   409a8:	880b883a 	mov	r5,r17
   409ac:	00444380 	call	44438 <__adddf3>
   409b0:	1009883a 	mov	r4,r2
   409b4:	180b883a 	mov	r5,r3
   409b8:	2005883a 	mov	r2,r4
   409bc:	2807883a 	mov	r3,r5
   409c0:	1009883a 	mov	r4,r2
   409c4:	180b883a 	mov	r5,r3
   409c8:	004681c0 	call	4681c <__fixdfsi>
   409cc:	e0bffd15 	stw	r2,-12(fp)
        for (float i = 9; i*steps <= prosentage; i+= 1)
   409d0:	014fe034 	movhi	r5,16256
   409d4:	e13ffc17 	ldw	r4,-16(fp)
   409d8:	0042fec0 	call	42fec <__addsf3>
   409dc:	1007883a 	mov	r3,r2
   409e0:	e0fffc15 	stw	r3,-16(fp)
   409e4:	e17ffa17 	ldw	r5,-24(fp)
   409e8:	e13ffc17 	ldw	r4,-16(fp)
   409ec:	0043a480 	call	43a48 <__mulsf3>
   409f0:	1007883a 	mov	r3,r2
   409f4:	1821883a 	mov	r16,r3
   409f8:	e13ff817 	ldw	r4,-32(fp)
   409fc:	00443140 	call	44314 <__floatsisf>
   40a00:	1007883a 	mov	r3,r2
   40a04:	180b883a 	mov	r5,r3
   40a08:	8009883a 	mov	r4,r16
   40a0c:	00439940 	call	43994 <__lesf2>
   40a10:	00bfd90e 	bge	zero,r2,40978 <_Z18redLedBinaryValuesi+0xfc>
   40a14:	00003206 	br	40ae0 <_Z18redLedBinaryValuesi+0x264>
        }

    }
    else if (50-toleranceProsentage >= prosentage)
   40a18:	00c00c84 	movi	r3,50
   40a1c:	e0bff917 	ldw	r2,-28(fp)
   40a20:	1887c83a 	sub	r3,r3,r2
   40a24:	e0bff817 	ldw	r2,-32(fp)
   40a28:	18802d16 	blt	r3,r2,40ae0 <_Z18redLedBinaryValuesi+0x264>
    {
        printf("\nLow value\n");
   40a2c:	01000174 	movhi	r4,5
   40a30:	210f0704 	addi	r4,r4,15388
   40a34:	0046f2c0 	call	46f2c <puts>

        for (float i = 8; i*steps >= prosentage; i -= 1)
   40a38:	00904034 	movhi	r2,16640
   40a3c:	e0bffb15 	stw	r2,-20(fp)
   40a40:	00001b06 	br	40ab0 <_Z18redLedBinaryValuesi+0x234>
        {
             result += pow(2, i);
   40a44:	e17ffb17 	ldw	r5,-20(fp)
   40a48:	01000084 	movi	r4,2
   40a4c:	0040c580 	call	40c58 <_ZSt3powIifEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   40a50:	1021883a 	mov	r16,r2
   40a54:	1823883a 	mov	r17,r3
   40a58:	e13ffd17 	ldw	r4,-12(fp)
   40a5c:	004689c0 	call	4689c <__floatsidf>
   40a60:	1009883a 	mov	r4,r2
   40a64:	180b883a 	mov	r5,r3
   40a68:	200d883a 	mov	r6,r4
   40a6c:	280f883a 	mov	r7,r5
   40a70:	8009883a 	mov	r4,r16
   40a74:	880b883a 	mov	r5,r17
   40a78:	00444380 	call	44438 <__adddf3>
   40a7c:	1009883a 	mov	r4,r2
   40a80:	180b883a 	mov	r5,r3
   40a84:	2005883a 	mov	r2,r4
   40a88:	2807883a 	mov	r3,r5
   40a8c:	1009883a 	mov	r4,r2
   40a90:	180b883a 	mov	r5,r3
   40a94:	004681c0 	call	4681c <__fixdfsi>
   40a98:	e0bffd15 	stw	r2,-12(fp)
        for (float i = 8; i*steps >= prosentage; i -= 1)
   40a9c:	014fe034 	movhi	r5,16256
   40aa0:	e13ffb17 	ldw	r4,-20(fp)
   40aa4:	0043e800 	call	43e80 <__subsf3>
   40aa8:	1007883a 	mov	r3,r2
   40aac:	e0fffb15 	stw	r3,-20(fp)
   40ab0:	e17ffa17 	ldw	r5,-24(fp)
   40ab4:	e13ffb17 	ldw	r4,-20(fp)
   40ab8:	0043a480 	call	43a48 <__mulsf3>
   40abc:	1007883a 	mov	r3,r2
   40ac0:	1821883a 	mov	r16,r3
   40ac4:	e13ff817 	ldw	r4,-32(fp)
   40ac8:	00443140 	call	44314 <__floatsisf>
   40acc:	1007883a 	mov	r3,r2
   40ad0:	180b883a 	mov	r5,r3
   40ad4:	8009883a 	mov	r4,r16
   40ad8:	00438dc0 	call	438dc <__gesf2>
   40adc:	103fd90e 	bge	r2,zero,40a44 <_Z18redLedBinaryValuesi+0x1c8>
        }
    }


return result;
   40ae0:	e0bffd17 	ldw	r2,-12(fp)
}
   40ae4:	e6fffe04 	addi	sp,fp,-8
   40ae8:	dfc00317 	ldw	ra,12(sp)
   40aec:	df000217 	ldw	fp,8(sp)
   40af0:	dc400117 	ldw	r17,4(sp)
   40af4:	dc000017 	ldw	r16,0(sp)
   40af8:	dec00404 	addi	sp,sp,16
   40afc:	f800283a 	ret

00040b00 <_Z20greenLedBinaryValuesi>:

int greenLedBinaryValues(int position)
{
   40b00:	defffd04 	addi	sp,sp,-12
   40b04:	dfc00215 	stw	ra,8(sp)
   40b08:	df000115 	stw	fp,4(sp)
   40b0c:	df000104 	addi	fp,sp,4
   40b10:	e13fff15 	stw	r4,-4(fp)
    return (pow(2, position));
   40b14:	e17fff17 	ldw	r5,-4(fp)
   40b18:	01000084 	movi	r4,2
   40b1c:	0040b480 	call	40b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   40b20:	100d883a 	mov	r6,r2
   40b24:	180f883a 	mov	r7,r3
   40b28:	3009883a 	mov	r4,r6
   40b2c:	380b883a 	mov	r5,r7
   40b30:	004681c0 	call	4681c <__fixdfsi>
}
   40b34:	e037883a 	mov	sp,fp
   40b38:	dfc00117 	ldw	ra,4(sp)
   40b3c:	df000017 	ldw	fp,0(sp)
   40b40:	dec00204 	addi	sp,sp,8
   40b44:	f800283a 	ret

00040b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
#endif

  template<typename _Tp, typename _Up>
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
   40b48:	defffa04 	addi	sp,sp,-24
   40b4c:	dfc00515 	stw	ra,20(sp)
   40b50:	df000415 	stw	fp,16(sp)
   40b54:	dc400315 	stw	r17,12(sp)
   40b58:	dc000215 	stw	r16,8(sp)
   40b5c:	df000404 	addi	fp,sp,16
   40b60:	e13ffd15 	stw	r4,-12(fp)
   40b64:	e17ffc15 	stw	r5,-16(fp)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
   40b68:	e13ffd17 	ldw	r4,-12(fp)
   40b6c:	004689c0 	call	4689c <__floatsidf>
   40b70:	1021883a 	mov	r16,r2
   40b74:	1823883a 	mov	r17,r3
   40b78:	e13ffc17 	ldw	r4,-16(fp)
   40b7c:	004689c0 	call	4689c <__floatsidf>
   40b80:	1009883a 	mov	r4,r2
   40b84:	180b883a 	mov	r5,r3
   40b88:	200d883a 	mov	r6,r4
   40b8c:	280f883a 	mov	r7,r5
   40b90:	8009883a 	mov	r4,r16
   40b94:	880b883a 	mov	r5,r17
   40b98:	00415780 	call	41578 <pow>
   40b9c:	100d883a 	mov	r6,r2
   40ba0:	180f883a 	mov	r7,r3
   40ba4:	3009883a 	mov	r4,r6
   40ba8:	380b883a 	mov	r5,r7
    }
   40bac:	2005883a 	mov	r2,r4
   40bb0:	2807883a 	mov	r3,r5
   40bb4:	e6fffe04 	addi	sp,fp,-8
   40bb8:	dfc00317 	ldw	ra,12(sp)
   40bbc:	df000217 	ldw	fp,8(sp)
   40bc0:	dc400117 	ldw	r17,4(sp)
   40bc4:	dc000017 	ldw	r16,0(sp)
   40bc8:	dec00404 	addi	sp,sp,16
   40bcc:	f800283a 	ret

00040bd0 <_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
    pow(_Tp __x, _Up __y)
   40bd0:	defffa04 	addi	sp,sp,-24
   40bd4:	dfc00515 	stw	ra,20(sp)
   40bd8:	df000415 	stw	fp,16(sp)
   40bdc:	dc400315 	stw	r17,12(sp)
   40be0:	dc000215 	stw	r16,8(sp)
   40be4:	df000404 	addi	fp,sp,16
   40be8:	e13ffd15 	stw	r4,-12(fp)
   40bec:	e17ffc15 	stw	r5,-16(fp)
      return pow(__type(__x), __type(__y));
   40bf0:	e13ffd17 	ldw	r4,-12(fp)
   40bf4:	00469540 	call	46954 <__extendsfdf2>
   40bf8:	1021883a 	mov	r16,r2
   40bfc:	1823883a 	mov	r17,r3
   40c00:	e13ffc17 	ldw	r4,-16(fp)
   40c04:	004689c0 	call	4689c <__floatsidf>
   40c08:	1009883a 	mov	r4,r2
   40c0c:	180b883a 	mov	r5,r3
   40c10:	200d883a 	mov	r6,r4
   40c14:	280f883a 	mov	r7,r5
   40c18:	8009883a 	mov	r4,r16
   40c1c:	880b883a 	mov	r5,r17
   40c20:	00415780 	call	41578 <pow>
   40c24:	100d883a 	mov	r6,r2
   40c28:	180f883a 	mov	r7,r3
   40c2c:	3009883a 	mov	r4,r6
   40c30:	380b883a 	mov	r5,r7
    }
   40c34:	2005883a 	mov	r2,r4
   40c38:	2807883a 	mov	r3,r5
   40c3c:	e6fffe04 	addi	sp,fp,-8
   40c40:	dfc00317 	ldw	ra,12(sp)
   40c44:	df000217 	ldw	fp,8(sp)
   40c48:	dc400117 	ldw	r17,4(sp)
   40c4c:	dc000017 	ldw	r16,0(sp)
   40c50:	dec00404 	addi	sp,sp,16
   40c54:	f800283a 	ret

00040c58 <_ZSt3powIifEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
    pow(_Tp __x, _Up __y)
   40c58:	defffa04 	addi	sp,sp,-24
   40c5c:	dfc00515 	stw	ra,20(sp)
   40c60:	df000415 	stw	fp,16(sp)
   40c64:	dc400315 	stw	r17,12(sp)
   40c68:	dc000215 	stw	r16,8(sp)
   40c6c:	df000404 	addi	fp,sp,16
   40c70:	e13ffd15 	stw	r4,-12(fp)
   40c74:	e17ffc15 	stw	r5,-16(fp)
      return pow(__type(__x), __type(__y));
   40c78:	e13ffd17 	ldw	r4,-12(fp)
   40c7c:	004689c0 	call	4689c <__floatsidf>
   40c80:	1021883a 	mov	r16,r2
   40c84:	1823883a 	mov	r17,r3
   40c88:	e13ffc17 	ldw	r4,-16(fp)
   40c8c:	00469540 	call	46954 <__extendsfdf2>
   40c90:	1009883a 	mov	r4,r2
   40c94:	180b883a 	mov	r5,r3
   40c98:	200d883a 	mov	r6,r4
   40c9c:	280f883a 	mov	r7,r5
   40ca0:	8009883a 	mov	r4,r16
   40ca4:	880b883a 	mov	r5,r17
   40ca8:	00415780 	call	41578 <pow>
   40cac:	100d883a 	mov	r6,r2
   40cb0:	180f883a 	mov	r7,r3
   40cb4:	3009883a 	mov	r4,r6
   40cb8:	380b883a 	mov	r5,r7
    }
   40cbc:	2005883a 	mov	r2,r4
   40cc0:	2807883a 	mov	r3,r5
   40cc4:	e6fffe04 	addi	sp,fp,-8
   40cc8:	dfc00317 	ldw	ra,12(sp)
   40ccc:	df000217 	ldw	fp,8(sp)
   40cd0:	dc400117 	ldw	r17,4(sp)
   40cd4:	dc000017 	ldw	r16,0(sp)
   40cd8:	dec00404 	addi	sp,sp,16
   40cdc:	f800283a 	ret

00040ce0 <_Z8printbitj>:
#include "Main.hpp"



void printbit(unsigned n)
{
   40ce0:	defffc04 	addi	sp,sp,-16
   40ce4:	dfc00315 	stw	ra,12(sp)
   40ce8:	df000215 	stw	fp,8(sp)
   40cec:	df000204 	addi	fp,sp,8
   40cf0:	e13ffe15 	stw	r4,-8(fp)
    unsigned i;
    for (i = 1 << 17; i > 0; i = i / 2)
   40cf4:	008000b4 	movhi	r2,2
   40cf8:	e0bfff15 	stw	r2,-4(fp)
   40cfc:	00000c06 	br	40d30 <_Z8printbitj+0x50>
        (n & i) ? printf("1") : printf("0");
   40d00:	e0fffe17 	ldw	r3,-8(fp)
   40d04:	e0bfff17 	ldw	r2,-4(fp)
   40d08:	1884703a 	and	r2,r3,r2
   40d0c:	10000326 	beq	r2,zero,40d1c <_Z8printbitj+0x3c>
   40d10:	01000c44 	movi	r4,49
   40d14:	0046e480 	call	46e48 <putchar>
   40d18:	00000206 	br	40d24 <_Z8printbitj+0x44>
   40d1c:	01000c04 	movi	r4,48
   40d20:	0046e480 	call	46e48 <putchar>
    for (i = 1 << 17; i > 0; i = i / 2)
   40d24:	e0bfff17 	ldw	r2,-4(fp)
   40d28:	1004d07a 	srli	r2,r2,1
   40d2c:	e0bfff15 	stw	r2,-4(fp)
   40d30:	e0bfff17 	ldw	r2,-4(fp)
   40d34:	103ff21e 	bne	r2,zero,40d00 <_Z8printbitj+0x20>
    printf("\n");
   40d38:	01000284 	movi	r4,10
   40d3c:	0046e480 	call	46e48 <putchar>
}
   40d40:	0001883a 	nop
   40d44:	e037883a 	mov	sp,fp
   40d48:	dfc00117 	ldw	ra,4(sp)
   40d4c:	df000017 	ldw	fp,0(sp)
   40d50:	dec00204 	addi	sp,sp,8
   40d54:	f800283a 	ret

00040d58 <_Z7testledv>:



void testled()
{
   40d58:	defffb04 	addi	sp,sp,-20
   40d5c:	dfc00415 	stw	ra,16(sp)
   40d60:	df000315 	stw	fp,12(sp)
   40d64:	df000304 	addi	fp,sp,12
	int count = 1;
   40d68:	00800044 	movi	r2,1
   40d6c:	e0bfff15 	stw	r2,-4(fp)
	int delay;

	printf("Funker");
   40d70:	01000174 	movhi	r4,5
   40d74:	210f1004 	addi	r4,r4,15424
   40d78:	0046e080 	call	46e08 <printf>
	while(1)
	{
		for(int var = 0b1; var <= 0b1111111111111111000; var = pow(2,count))
   40d7c:	00800044 	movi	r2,1
   40d80:	e0bffd15 	stw	r2,-12(fp)
   40d84:	00001506 	br	40ddc <_Z7testledv+0x84>
		{
			//IOWR_ALTERA_AVALON_PIO_DATA(var);
			delay = 0;
   40d88:	e03ffe15 	stw	zero,-8(fp)
			//printbit(var);
			//printf("\n");

			while(delay < 1000000)
   40d8c:	00000306 	br	40d9c <_Z7testledv+0x44>
			{
			delay++;
   40d90:	e0bffe17 	ldw	r2,-8(fp)
   40d94:	10800044 	addi	r2,r2,1
   40d98:	e0bffe15 	stw	r2,-8(fp)
			while(delay < 1000000)
   40d9c:	e0fffe17 	ldw	r3,-8(fp)
   40da0:	008003f4 	movhi	r2,15
   40da4:	10908fc4 	addi	r2,r2,16959
   40da8:	10fff90e 	bge	r2,r3,40d90 <_Z7testledv+0x38>
			}
			count++;
   40dac:	e0bfff17 	ldw	r2,-4(fp)
   40db0:	10800044 	addi	r2,r2,1
   40db4:	e0bfff15 	stw	r2,-4(fp)
		for(int var = 0b1; var <= 0b1111111111111111000; var = pow(2,count))
   40db8:	e17fff17 	ldw	r5,-4(fp)
   40dbc:	01000084 	movi	r4,2
   40dc0:	0040b480 	call	40b48 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
   40dc4:	100d883a 	mov	r6,r2
   40dc8:	180f883a 	mov	r7,r3
   40dcc:	3009883a 	mov	r4,r6
   40dd0:	380b883a 	mov	r5,r7
   40dd4:	004681c0 	call	4681c <__fixdfsi>
   40dd8:	e0bffd15 	stw	r2,-12(fp)
   40ddc:	e0fffd17 	ldw	r3,-12(fp)
   40de0:	00800234 	movhi	r2,8
   40de4:	10bffe04 	addi	r2,r2,-8
   40de8:	10ffe70e 	bge	r2,r3,40d88 <_Z7testledv+0x30>

		}
		printf("Done, next\n");
   40dec:	01000174 	movhi	r4,5
   40df0:	210f1204 	addi	r4,r4,15432
   40df4:	0046f2c0 	call	46f2c <puts>
		count = 0;
   40df8:	e03fff15 	stw	zero,-4(fp)


	}
   40dfc:	003fdf06 	br	40d7c <_Z7testledv+0x24>

00040e00 <_Z9initprintv>:
}


void initprint()
{
   40e00:	defffe04 	addi	sp,sp,-8
   40e04:	dfc00115 	stw	ra,4(sp)
   40e08:	df000015 	stw	fp,0(sp)
   40e0c:	d839883a 	mov	fp,sp
	printf("Hello from Nios II!34\n");
   40e10:	01000174 	movhi	r4,5
   40e14:	210f1504 	addi	r4,r4,15444
   40e18:	0046f2c0 	call	46f2c <puts>
	printf("%d\n",CheckInput());
   40e1c:	00402e00 	call	402e0 <_Z10CheckInputv>
   40e20:	100b883a 	mov	r5,r2
   40e24:	01000174 	movhi	r4,5
   40e28:	210f1b04 	addi	r4,r4,15468
   40e2c:	0046e080 	call	46e08 <printf>
	printbit(CheckInput());
   40e30:	00402e00 	call	402e0 <_Z10CheckInputv>
   40e34:	1009883a 	mov	r4,r2
   40e38:	0040ce00 	call	40ce0 <_Z8printbitj>
	printf("\n");
   40e3c:	01000284 	movi	r4,10
   40e40:	0046e480 	call	46e48 <putchar>
}
   40e44:	0001883a 	nop
   40e48:	e037883a 	mov	sp,fp
   40e4c:	dfc00117 	ldw	ra,4(sp)
   40e50:	df000017 	ldw	fp,0(sp)
   40e54:	dec00204 	addi	sp,sp,8
   40e58:	f800283a 	ret

00040e5c <_Z14combinedOutputii>:

int combinedOutput(int red, int green)
{
   40e5c:	defffd04 	addi	sp,sp,-12
   40e60:	df000215 	stw	fp,8(sp)
   40e64:	df000204 	addi	fp,sp,8
   40e68:	e13fff15 	stw	r4,-4(fp)
   40e6c:	e17ffe15 	stw	r5,-8(fp)

return 0;
   40e70:	0005883a 	mov	r2,zero
}
   40e74:	e037883a 	mov	sp,fp
   40e78:	df000017 	ldw	fp,0(sp)
   40e7c:	dec00104 	addi	sp,sp,4
   40e80:	f800283a 	ret

00040e84 <main>:

int main()
{
   40e84:	defffc04 	addi	sp,sp,-16
   40e88:	dfc00315 	stw	ra,12(sp)
   40e8c:	df000215 	stw	fp,8(sp)
   40e90:	dc000115 	stw	r16,4(sp)
   40e94:	df000204 	addi	fp,sp,8


	int prosentageVale = prosentage(SpectrumValue(false),SpectrumValue(true));
   40e98:	0009883a 	mov	r4,zero
   40e9c:	00404240 	call	40424 <_Z13SpectrumValueb>
   40ea0:	1021883a 	mov	r16,r2
   40ea4:	01000044 	movi	r4,1
   40ea8:	00404240 	call	40424 <_Z13SpectrumValueb>
   40eac:	100b883a 	mov	r5,r2
   40eb0:	8009883a 	mov	r4,r16
   40eb4:	00405fc0 	call	405fc <_Z10prosentageii>
   40eb8:	e0bffe15 	stw	r2,-8(fp)
	prosentageVale = redLedBinaryValues(prosentageVale);
   40ebc:	e13ffe17 	ldw	r4,-8(fp)
   40ec0:	004087c0 	call	4087c <_Z18redLedBinaryValuesi>
   40ec4:	e0bffe15 	stw	r2,-8(fp)

	printf("%d\n",prosentageVale);
   40ec8:	e17ffe17 	ldw	r5,-8(fp)
   40ecc:	01000174 	movhi	r4,5
   40ed0:	210f1b04 	addi	r4,r4,15468
   40ed4:	0046e080 	call	46e08 <printf>
	printbit(prosentageVale);
   40ed8:	e0bffe17 	ldw	r2,-8(fp)
   40edc:	1009883a 	mov	r4,r2
   40ee0:	0040ce00 	call	40ce0 <_Z8printbitj>

return 0;
   40ee4:	0005883a 	mov	r2,zero
}
   40ee8:	e6ffff04 	addi	sp,fp,-4
   40eec:	dfc00217 	ldw	ra,8(sp)
   40ef0:	df000117 	ldw	fp,4(sp)
   40ef4:	dc000017 	ldw	r16,0(sp)
   40ef8:	dec00304 	addi	sp,sp,12
   40efc:	f800283a 	ret

00040f00 <_Z19determinantOfMatrixPA3_f>:
    #include "PolynomSolver.hpp"

// This functions finds the determinant of Matrix
float determinantOfMatrix(float mat[3][3])
{
   40f00:	defff904 	addi	sp,sp,-28
   40f04:	dfc00615 	stw	ra,24(sp)
   40f08:	df000515 	stw	fp,20(sp)
   40f0c:	dc800415 	stw	r18,16(sp)
   40f10:	dc400315 	stw	r17,12(sp)
   40f14:	dc000215 	stw	r16,8(sp)
   40f18:	df000504 	addi	fp,sp,20
   40f1c:	e13ffb15 	stw	r4,-20(fp)
    float ans;
    ans = mat[0][0] * (mat[1][1] * mat[2][2] - mat[2][1] * mat[1][2])
   40f20:	e0bffb17 	ldw	r2,-20(fp)
   40f24:	14000017 	ldw	r16,0(r2)
   40f28:	e0bffb17 	ldw	r2,-20(fp)
   40f2c:	10800304 	addi	r2,r2,12
   40f30:	10c00117 	ldw	r3,4(r2)
   40f34:	e0bffb17 	ldw	r2,-20(fp)
   40f38:	10800604 	addi	r2,r2,24
   40f3c:	11000217 	ldw	r4,8(r2)
   40f40:	200b883a 	mov	r5,r4
   40f44:	1809883a 	mov	r4,r3
   40f48:	0043a480 	call	43a48 <__mulsf3>
   40f4c:	1007883a 	mov	r3,r2
   40f50:	1823883a 	mov	r17,r3
   40f54:	e0bffb17 	ldw	r2,-20(fp)
   40f58:	10800604 	addi	r2,r2,24
   40f5c:	10c00117 	ldw	r3,4(r2)
   40f60:	e0bffb17 	ldw	r2,-20(fp)
   40f64:	10800304 	addi	r2,r2,12
   40f68:	11000217 	ldw	r4,8(r2)
   40f6c:	200b883a 	mov	r5,r4
   40f70:	1809883a 	mov	r4,r3
   40f74:	0043a480 	call	43a48 <__mulsf3>
   40f78:	1007883a 	mov	r3,r2
   40f7c:	1805883a 	mov	r2,r3
   40f80:	100b883a 	mov	r5,r2
   40f84:	8809883a 	mov	r4,r17
   40f88:	0043e800 	call	43e80 <__subsf3>
   40f8c:	1007883a 	mov	r3,r2
   40f90:	1805883a 	mov	r2,r3
   40f94:	100b883a 	mov	r5,r2
   40f98:	8009883a 	mov	r4,r16
   40f9c:	0043a480 	call	43a48 <__mulsf3>
   40fa0:	1007883a 	mov	r3,r2
   40fa4:	1823883a 	mov	r17,r3
          - mat[0][1] * (mat[1][0] * mat[2][2] - mat[1][2] * mat[2][0])
   40fa8:	e0bffb17 	ldw	r2,-20(fp)
   40fac:	14000117 	ldw	r16,4(r2)
   40fb0:	e0bffb17 	ldw	r2,-20(fp)
   40fb4:	10800304 	addi	r2,r2,12
   40fb8:	10c00017 	ldw	r3,0(r2)
   40fbc:	e0bffb17 	ldw	r2,-20(fp)
   40fc0:	10800604 	addi	r2,r2,24
   40fc4:	11000217 	ldw	r4,8(r2)
   40fc8:	200b883a 	mov	r5,r4
   40fcc:	1809883a 	mov	r4,r3
   40fd0:	0043a480 	call	43a48 <__mulsf3>
   40fd4:	1007883a 	mov	r3,r2
   40fd8:	1825883a 	mov	r18,r3
   40fdc:	e0bffb17 	ldw	r2,-20(fp)
   40fe0:	10800304 	addi	r2,r2,12
   40fe4:	10c00217 	ldw	r3,8(r2)
   40fe8:	e0bffb17 	ldw	r2,-20(fp)
   40fec:	10800604 	addi	r2,r2,24
   40ff0:	11000017 	ldw	r4,0(r2)
   40ff4:	200b883a 	mov	r5,r4
   40ff8:	1809883a 	mov	r4,r3
   40ffc:	0043a480 	call	43a48 <__mulsf3>
   41000:	1007883a 	mov	r3,r2
   41004:	1805883a 	mov	r2,r3
   41008:	100b883a 	mov	r5,r2
   4100c:	9009883a 	mov	r4,r18
   41010:	0043e800 	call	43e80 <__subsf3>
   41014:	1007883a 	mov	r3,r2
   41018:	1805883a 	mov	r2,r3
   4101c:	100b883a 	mov	r5,r2
   41020:	8009883a 	mov	r4,r16
   41024:	0043a480 	call	43a48 <__mulsf3>
   41028:	1007883a 	mov	r3,r2
   4102c:	1805883a 	mov	r2,r3
   41030:	100b883a 	mov	r5,r2
   41034:	8809883a 	mov	r4,r17
   41038:	0043e800 	call	43e80 <__subsf3>
   4103c:	1007883a 	mov	r3,r2
   41040:	1823883a 	mov	r17,r3
          + mat[0][2] * (mat[1][0] * mat[2][1] - mat[1][1] * mat[2][0]);
   41044:	e0bffb17 	ldw	r2,-20(fp)
   41048:	14000217 	ldw	r16,8(r2)
   4104c:	e0bffb17 	ldw	r2,-20(fp)
   41050:	10800304 	addi	r2,r2,12
   41054:	10c00017 	ldw	r3,0(r2)
   41058:	e0bffb17 	ldw	r2,-20(fp)
   4105c:	10800604 	addi	r2,r2,24
   41060:	11000117 	ldw	r4,4(r2)
   41064:	200b883a 	mov	r5,r4
   41068:	1809883a 	mov	r4,r3
   4106c:	0043a480 	call	43a48 <__mulsf3>
   41070:	1007883a 	mov	r3,r2
   41074:	1825883a 	mov	r18,r3
   41078:	e0bffb17 	ldw	r2,-20(fp)
   4107c:	10800304 	addi	r2,r2,12
   41080:	10c00117 	ldw	r3,4(r2)
   41084:	e0bffb17 	ldw	r2,-20(fp)
   41088:	10800604 	addi	r2,r2,24
   4108c:	11000017 	ldw	r4,0(r2)
   41090:	200b883a 	mov	r5,r4
   41094:	1809883a 	mov	r4,r3
   41098:	0043a480 	call	43a48 <__mulsf3>
   4109c:	1007883a 	mov	r3,r2
   410a0:	1805883a 	mov	r2,r3
   410a4:	100b883a 	mov	r5,r2
   410a8:	9009883a 	mov	r4,r18
   410ac:	0043e800 	call	43e80 <__subsf3>
   410b0:	1007883a 	mov	r3,r2
   410b4:	1805883a 	mov	r2,r3
   410b8:	100b883a 	mov	r5,r2
   410bc:	8009883a 	mov	r4,r16
   410c0:	0043a480 	call	43a48 <__mulsf3>
   410c4:	1007883a 	mov	r3,r2
   410c8:	1805883a 	mov	r2,r3
    ans = mat[0][0] * (mat[1][1] * mat[2][2] - mat[2][1] * mat[1][2])
   410cc:	100b883a 	mov	r5,r2
   410d0:	8809883a 	mov	r4,r17
   410d4:	0042fec0 	call	42fec <__addsf3>
   410d8:	1007883a 	mov	r3,r2
   410dc:	e0fffc15 	stw	r3,-16(fp)
    return ans;
   410e0:	e0bffc17 	ldw	r2,-16(fp)
   410e4:	1007883a 	mov	r3,r2
}
   410e8:	1805883a 	mov	r2,r3
   410ec:	e6fffd04 	addi	sp,fp,-12
   410f0:	dfc00417 	ldw	ra,16(sp)
   410f4:	df000317 	ldw	fp,12(sp)
   410f8:	dc800217 	ldw	r18,8(sp)
   410fc:	dc400117 	ldw	r17,4(sp)
   41100:	dc000017 	ldw	r16,0(sp)
   41104:	dec00504 	addi	sp,sp,20
   41108:	f800283a 	ret

0004110c <_Z12findSolutionPA4_f>:

// This function finds the solution of system of
// linear equations using cramer's rule
thirdDegreeFormula findSolution(float coeff[3][4])
{
   4110c:	deffd104 	addi	sp,sp,-188
   41110:	dfc02e15 	stw	ra,184(sp)
   41114:	df002d15 	stw	fp,180(sp)
   41118:	df002d04 	addi	fp,sp,180
   4111c:	e13fd415 	stw	r4,-176(fp)
   41120:	e17fd315 	stw	r5,-180(fp)
    // Matrix d using coeff as given in cramer's rule
    float d[3][3] = {
        { coeff[0][0], coeff[0][1], coeff[0][2] },
   41124:	e0ffd317 	ldw	r3,-180(fp)
   41128:	18800017 	ldw	r2,0(r3)
        { coeff[1][0], coeff[1][1], coeff[1][2] },
        { coeff[2][0], coeff[2][1], coeff[2][2] },
    };
   4112c:	e0bff015 	stw	r2,-64(fp)
        { coeff[0][0], coeff[0][1], coeff[0][2] },
   41130:	e0ffd317 	ldw	r3,-180(fp)
   41134:	18800117 	ldw	r2,4(r3)
    };
   41138:	e0bff115 	stw	r2,-60(fp)
        { coeff[0][0], coeff[0][1], coeff[0][2] },
   4113c:	e0ffd317 	ldw	r3,-180(fp)
   41140:	18800217 	ldw	r2,8(r3)
    };
   41144:	e0bff215 	stw	r2,-56(fp)
        { coeff[1][0], coeff[1][1], coeff[1][2] },
   41148:	e0bfd317 	ldw	r2,-180(fp)
   4114c:	10c00404 	addi	r3,r2,16
   41150:	18800017 	ldw	r2,0(r3)
    };
   41154:	e0bff315 	stw	r2,-52(fp)
        { coeff[1][0], coeff[1][1], coeff[1][2] },
   41158:	e0bfd317 	ldw	r2,-180(fp)
   4115c:	10c00404 	addi	r3,r2,16
   41160:	18800117 	ldw	r2,4(r3)
    };
   41164:	e0bff415 	stw	r2,-48(fp)
        { coeff[1][0], coeff[1][1], coeff[1][2] },
   41168:	e0bfd317 	ldw	r2,-180(fp)
   4116c:	10c00404 	addi	r3,r2,16
   41170:	18800217 	ldw	r2,8(r3)
    };
   41174:	e0bff515 	stw	r2,-44(fp)
        { coeff[2][0], coeff[2][1], coeff[2][2] },
   41178:	e0bfd317 	ldw	r2,-180(fp)
   4117c:	10c00804 	addi	r3,r2,32
   41180:	18800017 	ldw	r2,0(r3)
    };
   41184:	e0bff615 	stw	r2,-40(fp)
        { coeff[2][0], coeff[2][1], coeff[2][2] },
   41188:	e0bfd317 	ldw	r2,-180(fp)
   4118c:	10c00804 	addi	r3,r2,32
   41190:	18800117 	ldw	r2,4(r3)
    };
   41194:	e0bff715 	stw	r2,-36(fp)
        { coeff[2][0], coeff[2][1], coeff[2][2] },
   41198:	e0bfd317 	ldw	r2,-180(fp)
   4119c:	10c00804 	addi	r3,r2,32
   411a0:	18800217 	ldw	r2,8(r3)
    };
   411a4:	e0bff815 	stw	r2,-32(fp)
    // Matrix d1 using coeff as given in cramer's rule
    float d1[3][3] = {
        { coeff[0][3], coeff[0][1], coeff[0][2] },
   411a8:	e0ffd317 	ldw	r3,-180(fp)
   411ac:	18800317 	ldw	r2,12(r3)
        { coeff[1][3], coeff[1][1], coeff[1][2] },
        { coeff[2][3], coeff[2][1], coeff[2][2] },
    };
   411b0:	e0bfe715 	stw	r2,-100(fp)
        { coeff[0][3], coeff[0][1], coeff[0][2] },
   411b4:	e0ffd317 	ldw	r3,-180(fp)
   411b8:	18800117 	ldw	r2,4(r3)
    };
   411bc:	e0bfe815 	stw	r2,-96(fp)
        { coeff[0][3], coeff[0][1], coeff[0][2] },
   411c0:	e0ffd317 	ldw	r3,-180(fp)
   411c4:	18800217 	ldw	r2,8(r3)
    };
   411c8:	e0bfe915 	stw	r2,-92(fp)
        { coeff[1][3], coeff[1][1], coeff[1][2] },
   411cc:	e0bfd317 	ldw	r2,-180(fp)
   411d0:	10c00404 	addi	r3,r2,16
   411d4:	18800317 	ldw	r2,12(r3)
    };
   411d8:	e0bfea15 	stw	r2,-88(fp)
        { coeff[1][3], coeff[1][1], coeff[1][2] },
   411dc:	e0bfd317 	ldw	r2,-180(fp)
   411e0:	10c00404 	addi	r3,r2,16
   411e4:	18800117 	ldw	r2,4(r3)
    };
   411e8:	e0bfeb15 	stw	r2,-84(fp)
        { coeff[1][3], coeff[1][1], coeff[1][2] },
   411ec:	e0bfd317 	ldw	r2,-180(fp)
   411f0:	10c00404 	addi	r3,r2,16
   411f4:	18800217 	ldw	r2,8(r3)
    };
   411f8:	e0bfec15 	stw	r2,-80(fp)
        { coeff[2][3], coeff[2][1], coeff[2][2] },
   411fc:	e0bfd317 	ldw	r2,-180(fp)
   41200:	10c00804 	addi	r3,r2,32
   41204:	18800317 	ldw	r2,12(r3)
    };
   41208:	e0bfed15 	stw	r2,-76(fp)
        { coeff[2][3], coeff[2][1], coeff[2][2] },
   4120c:	e0bfd317 	ldw	r2,-180(fp)
   41210:	10c00804 	addi	r3,r2,32
   41214:	18800117 	ldw	r2,4(r3)
    };
   41218:	e0bfee15 	stw	r2,-72(fp)
        { coeff[2][3], coeff[2][1], coeff[2][2] },
   4121c:	e0bfd317 	ldw	r2,-180(fp)
   41220:	10c00804 	addi	r3,r2,32
   41224:	18800217 	ldw	r2,8(r3)
    };
   41228:	e0bfef15 	stw	r2,-68(fp)
    // Matrix d2 using coeff as given in cramer's rule
    float d2[3][3] = {
        { coeff[0][0], coeff[0][3], coeff[0][2] },
   4122c:	e0ffd317 	ldw	r3,-180(fp)
   41230:	18800017 	ldw	r2,0(r3)
        { coeff[1][0], coeff[1][3], coeff[1][2] },
        { coeff[2][0], coeff[2][3], coeff[2][2] },
    };
   41234:	e0bfde15 	stw	r2,-136(fp)
        { coeff[0][0], coeff[0][3], coeff[0][2] },
   41238:	e0ffd317 	ldw	r3,-180(fp)
   4123c:	18800317 	ldw	r2,12(r3)
    };
   41240:	e0bfdf15 	stw	r2,-132(fp)
        { coeff[0][0], coeff[0][3], coeff[0][2] },
   41244:	e0ffd317 	ldw	r3,-180(fp)
   41248:	18800217 	ldw	r2,8(r3)
    };
   4124c:	e0bfe015 	stw	r2,-128(fp)
        { coeff[1][0], coeff[1][3], coeff[1][2] },
   41250:	e0bfd317 	ldw	r2,-180(fp)
   41254:	10c00404 	addi	r3,r2,16
   41258:	18800017 	ldw	r2,0(r3)
    };
   4125c:	e0bfe115 	stw	r2,-124(fp)
        { coeff[1][0], coeff[1][3], coeff[1][2] },
   41260:	e0bfd317 	ldw	r2,-180(fp)
   41264:	10c00404 	addi	r3,r2,16
   41268:	18800317 	ldw	r2,12(r3)
    };
   4126c:	e0bfe215 	stw	r2,-120(fp)
        { coeff[1][0], coeff[1][3], coeff[1][2] },
   41270:	e0bfd317 	ldw	r2,-180(fp)
   41274:	10c00404 	addi	r3,r2,16
   41278:	18800217 	ldw	r2,8(r3)
    };
   4127c:	e0bfe315 	stw	r2,-116(fp)
        { coeff[2][0], coeff[2][3], coeff[2][2] },
   41280:	e0bfd317 	ldw	r2,-180(fp)
   41284:	10c00804 	addi	r3,r2,32
   41288:	18800017 	ldw	r2,0(r3)
    };
   4128c:	e0bfe415 	stw	r2,-112(fp)
        { coeff[2][0], coeff[2][3], coeff[2][2] },
   41290:	e0bfd317 	ldw	r2,-180(fp)
   41294:	10c00804 	addi	r3,r2,32
   41298:	18800317 	ldw	r2,12(r3)
    };
   4129c:	e0bfe515 	stw	r2,-108(fp)
        { coeff[2][0], coeff[2][3], coeff[2][2] },
   412a0:	e0bfd317 	ldw	r2,-180(fp)
   412a4:	10c00804 	addi	r3,r2,32
   412a8:	18800217 	ldw	r2,8(r3)
    };
   412ac:	e0bfe615 	stw	r2,-104(fp)
    // Matrix d3 using coeff as given in cramer's rule
    float d3[3][3] = {
        { coeff[0][0], coeff[0][1], coeff[0][3] },
   412b0:	e0ffd317 	ldw	r3,-180(fp)
   412b4:	18800017 	ldw	r2,0(r3)
        { coeff[1][0], coeff[1][1], coeff[1][3] },
        { coeff[2][0], coeff[2][1], coeff[2][3] },
    };
   412b8:	e0bfd515 	stw	r2,-172(fp)
        { coeff[0][0], coeff[0][1], coeff[0][3] },
   412bc:	e0ffd317 	ldw	r3,-180(fp)
   412c0:	18800117 	ldw	r2,4(r3)
    };
   412c4:	e0bfd615 	stw	r2,-168(fp)
        { coeff[0][0], coeff[0][1], coeff[0][3] },
   412c8:	e0ffd317 	ldw	r3,-180(fp)
   412cc:	18800317 	ldw	r2,12(r3)
    };
   412d0:	e0bfd715 	stw	r2,-164(fp)
        { coeff[1][0], coeff[1][1], coeff[1][3] },
   412d4:	e0bfd317 	ldw	r2,-180(fp)
   412d8:	10c00404 	addi	r3,r2,16
   412dc:	18800017 	ldw	r2,0(r3)
    };
   412e0:	e0bfd815 	stw	r2,-160(fp)
        { coeff[1][0], coeff[1][1], coeff[1][3] },
   412e4:	e0bfd317 	ldw	r2,-180(fp)
   412e8:	10c00404 	addi	r3,r2,16
   412ec:	18800117 	ldw	r2,4(r3)
    };
   412f0:	e0bfd915 	stw	r2,-156(fp)
        { coeff[1][0], coeff[1][1], coeff[1][3] },
   412f4:	e0bfd317 	ldw	r2,-180(fp)
   412f8:	10c00404 	addi	r3,r2,16
   412fc:	18800317 	ldw	r2,12(r3)
    };
   41300:	e0bfda15 	stw	r2,-152(fp)
        { coeff[2][0], coeff[2][1], coeff[2][3] },
   41304:	e0bfd317 	ldw	r2,-180(fp)
   41308:	10c00804 	addi	r3,r2,32
   4130c:	18800017 	ldw	r2,0(r3)
    };
   41310:	e0bfdb15 	stw	r2,-148(fp)
        { coeff[2][0], coeff[2][1], coeff[2][3] },
   41314:	e0bfd317 	ldw	r2,-180(fp)
   41318:	10c00804 	addi	r3,r2,32
   4131c:	18800117 	ldw	r2,4(r3)
    };
   41320:	e0bfdc15 	stw	r2,-144(fp)
        { coeff[2][0], coeff[2][1], coeff[2][3] },
   41324:	e0bfd317 	ldw	r2,-180(fp)
   41328:	10c00804 	addi	r3,r2,32
   4132c:	18800317 	ldw	r2,12(r3)
    };
   41330:	e0bfdd15 	stw	r2,-140(fp)

    // Calculating Determinant of Matrices d, d1, d2, d3
    float D = determinantOfMatrix(d);
   41334:	e0bff004 	addi	r2,fp,-64
   41338:	1009883a 	mov	r4,r2
   4133c:	0040f000 	call	40f00 <_Z19determinantOfMatrixPA3_f>
   41340:	e0bfff15 	stw	r2,-4(fp)
    float D1 = determinantOfMatrix(d1);
   41344:	e0bfe704 	addi	r2,fp,-100
   41348:	1009883a 	mov	r4,r2
   4134c:	0040f000 	call	40f00 <_Z19determinantOfMatrixPA3_f>
   41350:	e0bffe15 	stw	r2,-8(fp)
    float D2 = determinantOfMatrix(d2);
   41354:	e0bfde04 	addi	r2,fp,-136
   41358:	1009883a 	mov	r4,r2
   4135c:	0040f000 	call	40f00 <_Z19determinantOfMatrixPA3_f>
   41360:	e0bffd15 	stw	r2,-12(fp)
    float D3 = determinantOfMatrix(d3);
   41364:	e0bfd504 	addi	r2,fp,-172
   41368:	1009883a 	mov	r4,r2
   4136c:	0040f000 	call	40f00 <_Z19determinantOfMatrixPA3_f>
   41370:	e0bffc15 	stw	r2,-16(fp)
    printf("D is : %lf \n", D);
   41374:	e13fff17 	ldw	r4,-4(fp)
   41378:	00469540 	call	46954 <__extendsfdf2>
   4137c:	100d883a 	mov	r6,r2
   41380:	180f883a 	mov	r7,r3
   41384:	300b883a 	mov	r5,r6
   41388:	380d883a 	mov	r6,r7
   4138c:	01000174 	movhi	r4,5
   41390:	210f1c04 	addi	r4,r4,15472
   41394:	0046e080 	call	46e08 <printf>
    printf("D1 is : %lf \n", D1);
   41398:	e13ffe17 	ldw	r4,-8(fp)
   4139c:	00469540 	call	46954 <__extendsfdf2>
   413a0:	100d883a 	mov	r6,r2
   413a4:	180f883a 	mov	r7,r3
   413a8:	300b883a 	mov	r5,r6
   413ac:	380d883a 	mov	r6,r7
   413b0:	01000174 	movhi	r4,5
   413b4:	210f2004 	addi	r4,r4,15488
   413b8:	0046e080 	call	46e08 <printf>
    printf("D2 is : %lf \n", D2);
   413bc:	e13ffd17 	ldw	r4,-12(fp)
   413c0:	00469540 	call	46954 <__extendsfdf2>
   413c4:	100d883a 	mov	r6,r2
   413c8:	180f883a 	mov	r7,r3
   413cc:	300b883a 	mov	r5,r6
   413d0:	380d883a 	mov	r6,r7
   413d4:	01000174 	movhi	r4,5
   413d8:	210f2404 	addi	r4,r4,15504
   413dc:	0046e080 	call	46e08 <printf>
    printf("D3 is : %lf \n", D3);
   413e0:	e13ffc17 	ldw	r4,-16(fp)
   413e4:	00469540 	call	46954 <__extendsfdf2>
   413e8:	100d883a 	mov	r6,r2
   413ec:	180f883a 	mov	r7,r3
   413f0:	300b883a 	mov	r5,r6
   413f4:	380d883a 	mov	r6,r7
   413f8:	01000174 	movhi	r4,5
   413fc:	210f2804 	addi	r4,r4,15520
   41400:	0046e080 	call	46e08 <printf>


    float x = D1 / D;
   41404:	e17fff17 	ldw	r5,-4(fp)
   41408:	e13ffe17 	ldw	r4,-8(fp)
   4140c:	00434580 	call	43458 <__divsf3>
   41410:	1007883a 	mov	r3,r2
   41414:	e0fffb15 	stw	r3,-20(fp)
    float y = D2 / D;
   41418:	e17fff17 	ldw	r5,-4(fp)
   4141c:	e13ffd17 	ldw	r4,-12(fp)
   41420:	00434580 	call	43458 <__divsf3>
   41424:	1007883a 	mov	r3,r2
   41428:	e0fffa15 	stw	r3,-24(fp)
    float z = D3 / D;
   4142c:	e17fff17 	ldw	r5,-4(fp)
   41430:	e13ffc17 	ldw	r4,-16(fp)
   41434:	00434580 	call	43458 <__divsf3>
   41438:	1007883a 	mov	r3,r2
   4143c:	e0fff915 	stw	r3,-28(fp)

    // Case 1
    if (D != 0) {
   41440:	000b883a 	mov	r5,zero
   41444:	e13fff17 	ldw	r4,-4(fp)
   41448:	004386c0 	call	4386c <__eqsf2>
   4144c:	10001c26 	beq	r2,zero,414c0 <_Z12findSolutionPA4_f+0x3b4>
        // Coeff have a unique solution. Apply Cramer's Rule
 // calculating z using cramer's rule
        printf("Value of x is : %lf\n", x);
   41450:	e13ffb17 	ldw	r4,-20(fp)
   41454:	00469540 	call	46954 <__extendsfdf2>
   41458:	100d883a 	mov	r6,r2
   4145c:	180f883a 	mov	r7,r3
   41460:	300b883a 	mov	r5,r6
   41464:	380d883a 	mov	r6,r7
   41468:	01000174 	movhi	r4,5
   4146c:	210f2c04 	addi	r4,r4,15536
   41470:	0046e080 	call	46e08 <printf>
        printf("Value of y is : %lf\n", y);
   41474:	e13ffa17 	ldw	r4,-24(fp)
   41478:	00469540 	call	46954 <__extendsfdf2>
   4147c:	100d883a 	mov	r6,r2
   41480:	180f883a 	mov	r7,r3
   41484:	300b883a 	mov	r5,r6
   41488:	380d883a 	mov	r6,r7
   4148c:	01000174 	movhi	r4,5
   41490:	210f3204 	addi	r4,r4,15560
   41494:	0046e080 	call	46e08 <printf>
        printf("Value of z is : %lf\n", z);
   41498:	e13ff917 	ldw	r4,-28(fp)
   4149c:	00469540 	call	46954 <__extendsfdf2>
   414a0:	100d883a 	mov	r6,r2
   414a4:	180f883a 	mov	r7,r3
   414a8:	300b883a 	mov	r5,r6
   414ac:	380d883a 	mov	r6,r7
   414b0:	01000174 	movhi	r4,5
   414b4:	210f3804 	addi	r4,r4,15584
   414b8:	0046e080 	call	46e08 <printf>
   414bc:	00001f06 	br	4153c <_Z12findSolutionPA4_f+0x430>
    }
    // Case 2
    else {
        if (D1 == 0 && D2 == 0 && D3 == 0)
   414c0:	000b883a 	mov	r5,zero
   414c4:	e13ffe17 	ldw	r4,-8(fp)
   414c8:	004386c0 	call	4386c <__eqsf2>
   414cc:	10000c1e 	bne	r2,zero,41500 <_Z12findSolutionPA4_f+0x3f4>
   414d0:	000b883a 	mov	r5,zero
   414d4:	e13ffd17 	ldw	r4,-12(fp)
   414d8:	004386c0 	call	4386c <__eqsf2>
   414dc:	1000081e 	bne	r2,zero,41500 <_Z12findSolutionPA4_f+0x3f4>
   414e0:	000b883a 	mov	r5,zero
   414e4:	e13ffc17 	ldw	r4,-16(fp)
   414e8:	004386c0 	call	4386c <__eqsf2>
   414ec:	1000041e 	bne	r2,zero,41500 <_Z12findSolutionPA4_f+0x3f4>
            printf("Infinite solutions\n");
   414f0:	01000174 	movhi	r4,5
   414f4:	210f3e04 	addi	r4,r4,15608
   414f8:	0046f2c0 	call	46f2c <puts>
   414fc:	00000f06 	br	4153c <_Z12findSolutionPA4_f+0x430>
        else if (D1 != 0 || D2 != 0 || D3 != 0)
   41500:	000b883a 	mov	r5,zero
   41504:	e13ffe17 	ldw	r4,-8(fp)
   41508:	004386c0 	call	4386c <__eqsf2>
   4150c:	1000081e 	bne	r2,zero,41530 <_Z12findSolutionPA4_f+0x424>
   41510:	000b883a 	mov	r5,zero
   41514:	e13ffd17 	ldw	r4,-12(fp)
   41518:	004386c0 	call	4386c <__eqsf2>
   4151c:	1000041e 	bne	r2,zero,41530 <_Z12findSolutionPA4_f+0x424>
   41520:	000b883a 	mov	r5,zero
   41524:	e13ffc17 	ldw	r4,-16(fp)
   41528:	004386c0 	call	4386c <__eqsf2>
   4152c:	10000326 	beq	r2,zero,4153c <_Z12findSolutionPA4_f+0x430>
            printf("No solutions\n");
   41530:	01000174 	movhi	r4,5
   41534:	210f4304 	addi	r4,r4,15628
   41538:	0046f2c0 	call	46f2c <puts>
    }

    return {x,y,z};
   4153c:	e0bfd417 	ldw	r2,-176(fp)
   41540:	e0fffb17 	ldw	r3,-20(fp)
   41544:	10c00015 	stw	r3,0(r2)
   41548:	e0bfd417 	ldw	r2,-176(fp)
   4154c:	e0fffa17 	ldw	r3,-24(fp)
   41550:	10c00115 	stw	r3,4(r2)
   41554:	e0bfd417 	ldw	r2,-176(fp)
   41558:	e0fff917 	ldw	r3,-28(fp)
   4155c:	10c00215 	stw	r3,8(r2)
}
   41560:	e0bfd417 	ldw	r2,-176(fp)
   41564:	e037883a 	mov	sp,fp
   41568:	dfc00117 	ldw	ra,4(sp)
   4156c:	df000017 	ldw	fp,0(sp)
   41570:	dec00204 	addi	sp,sp,8
   41574:	f800283a 	ret

00041578 <pow>:
   41578:	defff704 	addi	sp,sp,-36
   4157c:	dd800615 	stw	r22,24(sp)
   41580:	dd000415 	stw	r20,16(sp)
   41584:	dcc00315 	stw	r19,12(sp)
   41588:	dc800215 	stw	r18,8(sp)
   4158c:	dc400115 	stw	r17,4(sp)
   41590:	dc000015 	stw	r16,0(sp)
   41594:	3823883a 	mov	r17,r7
   41598:	3021883a 	mov	r16,r6
   4159c:	dfc00815 	stw	ra,32(sp)
   415a0:	ddc00715 	stw	r23,28(sp)
   415a4:	dd400515 	stw	r21,20(sp)
   415a8:	202d883a 	mov	r22,r4
   415ac:	2825883a 	mov	r18,r5
   415b0:	00418340 	call	41834 <__ieee754_pow>
   415b4:	800d883a 	mov	r6,r16
   415b8:	880f883a 	mov	r7,r17
   415bc:	8009883a 	mov	r4,r16
   415c0:	880b883a 	mov	r5,r17
   415c4:	1027883a 	mov	r19,r2
   415c8:	1829883a 	mov	r20,r3
   415cc:	00467c80 	call	467c8 <__unorddf2>
   415d0:	10005d1e 	bne	r2,zero,41748 <pow+0x1d0>
   415d4:	000d883a 	mov	r6,zero
   415d8:	000f883a 	mov	r7,zero
   415dc:	b009883a 	mov	r4,r22
   415e0:	900b883a 	mov	r5,r18
   415e4:	00455900 	call	45590 <__eqdf2>
   415e8:	10006426 	beq	r2,zero,4177c <pow+0x204>
   415ec:	01600034 	movhi	r5,32768
   415f0:	297fffc4 	addi	r5,r5,-1
   415f4:	a16a703a 	and	r21,r20,r5
   415f8:	01dffc34 	movhi	r7,32752
   415fc:	01bfffc4 	movi	r6,-1
   41600:	39ffffc4 	addi	r7,r7,-1
   41604:	9809883a 	mov	r4,r19
   41608:	a80b883a 	mov	r5,r21
   4160c:	00467c80 	call	467c8 <__unorddf2>
   41610:	1000071e 	bne	r2,zero,41630 <pow+0xb8>
   41614:	01dffc34 	movhi	r7,32752
   41618:	01bfffc4 	movi	r6,-1
   4161c:	39ffffc4 	addi	r7,r7,-1
   41620:	9809883a 	mov	r4,r19
   41624:	a80b883a 	mov	r5,r21
   41628:	00456100 	call	45610 <__gedf2>
   4162c:	0080200e 	bge	zero,r2,416b0 <pow+0x138>
   41630:	05600034 	movhi	r21,32768
   41634:	ad7fffc4 	addi	r21,r21,-1
   41638:	956e703a 	and	r23,r18,r21
   4163c:	01dffc34 	movhi	r7,32752
   41640:	01bfffc4 	movi	r6,-1
   41644:	39ffffc4 	addi	r7,r7,-1
   41648:	b009883a 	mov	r4,r22
   4164c:	b80b883a 	mov	r5,r23
   41650:	00467c80 	call	467c8 <__unorddf2>
   41654:	10003c1e 	bne	r2,zero,41748 <pow+0x1d0>
   41658:	01dffc34 	movhi	r7,32752
   4165c:	01bfffc4 	movi	r6,-1
   41660:	39ffffc4 	addi	r7,r7,-1
   41664:	b009883a 	mov	r4,r22
   41668:	b80b883a 	mov	r5,r23
   4166c:	00456100 	call	45610 <__gedf2>
   41670:	00803516 	blt	zero,r2,41748 <pow+0x1d0>
   41674:	8d6a703a 	and	r21,r17,r21
   41678:	01dffc34 	movhi	r7,32752
   4167c:	01bfffc4 	movi	r6,-1
   41680:	39ffffc4 	addi	r7,r7,-1
   41684:	8009883a 	mov	r4,r16
   41688:	a80b883a 	mov	r5,r21
   4168c:	00467c80 	call	467c8 <__unorddf2>
   41690:	1000071e 	bne	r2,zero,416b0 <pow+0x138>
   41694:	01dffc34 	movhi	r7,32752
   41698:	01bfffc4 	movi	r6,-1
   4169c:	39ffffc4 	addi	r7,r7,-1
   416a0:	8009883a 	mov	r4,r16
   416a4:	a80b883a 	mov	r5,r21
   416a8:	00456100 	call	45610 <__gedf2>
   416ac:	0080570e 	bge	zero,r2,4180c <pow+0x294>
   416b0:	000d883a 	mov	r6,zero
   416b4:	000f883a 	mov	r7,zero
   416b8:	9809883a 	mov	r4,r19
   416bc:	a00b883a 	mov	r5,r20
   416c0:	00455900 	call	45590 <__eqdf2>
   416c4:	1000201e 	bne	r2,zero,41748 <pow+0x1d0>
   416c8:	05600034 	movhi	r21,32768
   416cc:	ad7fffc4 	addi	r21,r21,-1
   416d0:	9564703a 	and	r18,r18,r21
   416d4:	01dffc34 	movhi	r7,32752
   416d8:	01bfffc4 	movi	r6,-1
   416dc:	39ffffc4 	addi	r7,r7,-1
   416e0:	b009883a 	mov	r4,r22
   416e4:	900b883a 	mov	r5,r18
   416e8:	00467c80 	call	467c8 <__unorddf2>
   416ec:	1000161e 	bne	r2,zero,41748 <pow+0x1d0>
   416f0:	01dffc34 	movhi	r7,32752
   416f4:	01bfffc4 	movi	r6,-1
   416f8:	39ffffc4 	addi	r7,r7,-1
   416fc:	b009883a 	mov	r4,r22
   41700:	900b883a 	mov	r5,r18
   41704:	00456100 	call	45610 <__gedf2>
   41708:	00800f16 	blt	zero,r2,41748 <pow+0x1d0>
   4170c:	8d62703a 	and	r17,r17,r21
   41710:	01dffc34 	movhi	r7,32752
   41714:	01bfffc4 	movi	r6,-1
   41718:	39ffffc4 	addi	r7,r7,-1
   4171c:	8009883a 	mov	r4,r16
   41720:	880b883a 	mov	r5,r17
   41724:	00467c80 	call	467c8 <__unorddf2>
   41728:	1000071e 	bne	r2,zero,41748 <pow+0x1d0>
   4172c:	01dffc34 	movhi	r7,32752
   41730:	01bfffc4 	movi	r6,-1
   41734:	39ffffc4 	addi	r7,r7,-1
   41738:	8009883a 	mov	r4,r16
   4173c:	880b883a 	mov	r5,r17
   41740:	00456100 	call	45610 <__gedf2>
   41744:	00802a0e 	bge	zero,r2,417f0 <pow+0x278>
   41748:	9805883a 	mov	r2,r19
   4174c:	a007883a 	mov	r3,r20
   41750:	dfc00817 	ldw	ra,32(sp)
   41754:	ddc00717 	ldw	r23,28(sp)
   41758:	dd800617 	ldw	r22,24(sp)
   4175c:	dd400517 	ldw	r21,20(sp)
   41760:	dd000417 	ldw	r20,16(sp)
   41764:	dcc00317 	ldw	r19,12(sp)
   41768:	dc800217 	ldw	r18,8(sp)
   4176c:	dc400117 	ldw	r17,4(sp)
   41770:	dc000017 	ldw	r16,0(sp)
   41774:	dec00904 	addi	sp,sp,36
   41778:	f800283a 	ret
   4177c:	000d883a 	mov	r6,zero
   41780:	000f883a 	mov	r7,zero
   41784:	8009883a 	mov	r4,r16
   41788:	880b883a 	mov	r5,r17
   4178c:	00455900 	call	45590 <__eqdf2>
   41790:	10001b26 	beq	r2,zero,41800 <pow+0x288>
   41794:	01600034 	movhi	r5,32768
   41798:	297fffc4 	addi	r5,r5,-1
   4179c:	8964703a 	and	r18,r17,r5
   417a0:	01dffc34 	movhi	r7,32752
   417a4:	01bfffc4 	movi	r6,-1
   417a8:	39ffffc4 	addi	r7,r7,-1
   417ac:	8009883a 	mov	r4,r16
   417b0:	900b883a 	mov	r5,r18
   417b4:	00467c80 	call	467c8 <__unorddf2>
   417b8:	103fe31e 	bne	r2,zero,41748 <pow+0x1d0>
   417bc:	01dffc34 	movhi	r7,32752
   417c0:	01bfffc4 	movi	r6,-1
   417c4:	39ffffc4 	addi	r7,r7,-1
   417c8:	8009883a 	mov	r4,r16
   417cc:	900b883a 	mov	r5,r18
   417d0:	00456100 	call	45610 <__gedf2>
   417d4:	00bfdc16 	blt	zero,r2,41748 <pow+0x1d0>
   417d8:	000d883a 	mov	r6,zero
   417dc:	000f883a 	mov	r7,zero
   417e0:	8009883a 	mov	r4,r16
   417e4:	880b883a 	mov	r5,r17
   417e8:	00456f80 	call	456f8 <__ledf2>
   417ec:	103fd60e 	bge	r2,zero,41748 <pow+0x1d0>
   417f0:	0046dcc0 	call	46dcc <__errno>
   417f4:	00c00884 	movi	r3,34
   417f8:	10c00015 	stw	r3,0(r2)
   417fc:	003fd206 	br	41748 <pow+0x1d0>
   41800:	0027883a 	mov	r19,zero
   41804:	050ffc34 	movhi	r20,16368
   41808:	003fcf06 	br	41748 <pow+0x1d0>
   4180c:	980d883a 	mov	r6,r19
   41810:	a00f883a 	mov	r7,r20
   41814:	9809883a 	mov	r4,r19
   41818:	a00b883a 	mov	r5,r20
   4181c:	00467c80 	call	467c8 <__unorddf2>
   41820:	103ff326 	beq	r2,zero,417f0 <pow+0x278>
   41824:	0046dcc0 	call	46dcc <__errno>
   41828:	00c00844 	movi	r3,33
   4182c:	10c00015 	stw	r3,0(r2)
   41830:	003fc506 	br	41748 <pow+0x1d0>

00041834 <__ieee754_pow>:
   41834:	00a00034 	movhi	r2,32768
   41838:	deffeb04 	addi	sp,sp,-84
   4183c:	10bfffc4 	addi	r2,r2,-1
   41840:	dc000b15 	stw	r16,44(sp)
   41844:	3021883a 	mov	r16,r6
   41848:	388c703a 	and	r6,r7,r2
   4184c:	dd401015 	stw	r21,64(sp)
   41850:	dc400c15 	stw	r17,48(sp)
   41854:	dfc01415 	stw	ra,80(sp)
   41858:	df001315 	stw	fp,76(sp)
   4185c:	ddc01215 	stw	r23,72(sp)
   41860:	dd801115 	stw	r22,68(sp)
   41864:	dd000f15 	stw	r20,60(sp)
   41868:	dcc00e15 	stw	r19,56(sp)
   4186c:	dc800d15 	stw	r18,52(sp)
   41870:	3406b03a 	or	r3,r6,r16
   41874:	3823883a 	mov	r17,r7
   41878:	282b883a 	mov	r21,r5
   4187c:	1800191e 	bne	r3,zero,418e4 <__ieee754_pow+0xb0>
   41880:	2880023c 	xorhi	r2,r5,8
   41884:	2006d7fa 	srli	r3,r4,31
   41888:	1004907a 	slli	r2,r2,1
   4188c:	017ffc34 	movhi	r5,65520
   41890:	200c907a 	slli	r6,r4,1
   41894:	1884b03a 	or	r2,r3,r2
   41898:	2880202e 	bgeu	r5,r2,4191c <__ieee754_pow+0xe8>
   4189c:	800d883a 	mov	r6,r16
   418a0:	880f883a 	mov	r7,r17
   418a4:	a80b883a 	mov	r5,r21
   418a8:	00444380 	call	44438 <__adddf3>
   418ac:	102d883a 	mov	r22,r2
   418b0:	b005883a 	mov	r2,r22
   418b4:	dfc01417 	ldw	ra,80(sp)
   418b8:	df001317 	ldw	fp,76(sp)
   418bc:	ddc01217 	ldw	r23,72(sp)
   418c0:	dd801117 	ldw	r22,68(sp)
   418c4:	dd401017 	ldw	r21,64(sp)
   418c8:	dd000f17 	ldw	r20,60(sp)
   418cc:	dcc00e17 	ldw	r19,56(sp)
   418d0:	dc800d17 	ldw	r18,52(sp)
   418d4:	dc400c17 	ldw	r17,48(sp)
   418d8:	dc000b17 	ldw	r16,44(sp)
   418dc:	dec01504 	addi	sp,sp,84
   418e0:	f800283a 	ret
   418e4:	28a6703a 	and	r19,r5,r2
   418e8:	009ffc34 	movhi	r2,32752
   418ec:	14c00f0e 	bge	r2,r19,4192c <__ieee754_pow+0xf8>
   418f0:	00b00434 	movhi	r2,49168
   418f4:	a885883a 	add	r2,r21,r2
   418f8:	1104b03a 	or	r2,r2,r4
   418fc:	103fe71e 	bne	r2,zero,4189c <__ieee754_pow+0x68>
   41900:	8880023c 	xorhi	r2,r17,8
   41904:	8006d7fa 	srli	r3,r16,31
   41908:	1004907a 	slli	r2,r2,1
   4190c:	017ffc34 	movhi	r5,65520
   41910:	800c907a 	slli	r6,r16,1
   41914:	1884b03a 	or	r2,r3,r2
   41918:	28bfe036 	bltu	r5,r2,4189c <__ieee754_pow+0x68>
   4191c:	11402726 	beq	r2,r5,419bc <__ieee754_pow+0x188>
   41920:	002d883a 	mov	r22,zero
   41924:	00cffc34 	movhi	r3,16368
   41928:	003fe106 	br	418b0 <__ieee754_pow+0x7c>
   4192c:	98802526 	beq	r19,r2,419c4 <__ieee754_pow+0x190>
   41930:	009ffc34 	movhi	r2,32752
   41934:	11bfee16 	blt	r2,r6,418f0 <__ieee754_pow+0xbc>
   41938:	30802426 	beq	r6,r2,419cc <__ieee754_pow+0x198>
   4193c:	a8006e16 	blt	r21,zero,41af8 <__ieee754_pow+0x2c4>
   41940:	0025883a 	mov	r18,zero
   41944:	80002326 	beq	r16,zero,419d4 <__ieee754_pow+0x1a0>
   41948:	00e00034 	movhi	r3,32768
   4194c:	18ffffc4 	addi	r3,r3,-1
   41950:	202d883a 	mov	r22,r4
   41954:	a8c6703a 	and	r3,r21,r3
   41958:	20003a26 	beq	r4,zero,41a44 <__ieee754_pow+0x210>
   4195c:	a828d7fa 	srli	r20,r21,31
   41960:	a53fffc4 	addi	r20,r20,-1
   41964:	9504b03a 	or	r2,r18,r20
   41968:	10008026 	beq	r2,zero,41b6c <__ieee754_pow+0x338>
   4196c:	00907834 	movhi	r2,16864
   41970:	1180810e 	bge	r2,r6,41b78 <__ieee754_pow+0x344>
   41974:	0090fc34 	movhi	r2,17392
   41978:	11834f0e 	bge	r2,r6,426b8 <__ieee754_pow+0xe84>
   4197c:	008ffc34 	movhi	r2,16368
   41980:	9880480e 	bge	r19,r2,41aa4 <__ieee754_pow+0x270>
   41984:	88004816 	blt	r17,zero,41aa8 <__ieee754_pow+0x274>
   41988:	0009883a 	mov	r4,zero
   4198c:	dfc01417 	ldw	ra,80(sp)
   41990:	df001317 	ldw	fp,76(sp)
   41994:	ddc01217 	ldw	r23,72(sp)
   41998:	dd801117 	ldw	r22,68(sp)
   4199c:	dd401017 	ldw	r21,64(sp)
   419a0:	dd000f17 	ldw	r20,60(sp)
   419a4:	dcc00e17 	ldw	r19,56(sp)
   419a8:	dc800d17 	ldw	r18,52(sp)
   419ac:	dc400c17 	ldw	r17,48(sp)
   419b0:	dc000b17 	ldw	r16,44(sp)
   419b4:	dec01504 	addi	sp,sp,84
   419b8:	0042c301 	jmpi	42c30 <__math_uflow>
   419bc:	303fd826 	beq	r6,zero,41920 <__ieee754_pow+0xec>
   419c0:	003fb606 	br	4189c <__ieee754_pow+0x68>
   419c4:	203fb51e 	bne	r4,zero,4189c <__ieee754_pow+0x68>
   419c8:	003fd906 	br	41930 <__ieee754_pow+0xfc>
   419cc:	803fdb26 	beq	r16,zero,4193c <__ieee754_pow+0x108>
   419d0:	003fc706 	br	418f0 <__ieee754_pow+0xbc>
   419d4:	009ffc34 	movhi	r2,32752
   419d8:	30805a26 	beq	r6,r2,41b44 <__ieee754_pow+0x310>
   419dc:	008ffc34 	movhi	r2,16368
   419e0:	30831026 	beq	r6,r2,42624 <__ieee754_pow+0xdf0>
   419e4:	00900034 	movhi	r2,16384
   419e8:	8883a626 	beq	r17,r2,42884 <__ieee754_pow+0x1050>
   419ec:	008ff834 	movhi	r2,16352
   419f0:	88bfd51e 	bne	r17,r2,41948 <__ieee754_pow+0x114>
   419f4:	a83fd416 	blt	r21,zero,41948 <__ieee754_pow+0x114>
   419f8:	a80b883a 	mov	r5,r21
   419fc:	dfc01417 	ldw	ra,80(sp)
   41a00:	df001317 	ldw	fp,76(sp)
   41a04:	ddc01217 	ldw	r23,72(sp)
   41a08:	dd801117 	ldw	r22,68(sp)
   41a0c:	dd401017 	ldw	r21,64(sp)
   41a10:	dd000f17 	ldw	r20,60(sp)
   41a14:	dcc00e17 	ldw	r19,56(sp)
   41a18:	dc800d17 	ldw	r18,52(sp)
   41a1c:	dc400c17 	ldw	r17,48(sp)
   41a20:	dc000b17 	ldw	r16,44(sp)
   41a24:	dec01504 	addi	sp,sp,84
   41a28:	004293c1 	jmpi	4293c <__ieee754_sqrt>
   41a2c:	20004f1e 	bne	r4,zero,41b6c <__ieee754_pow+0x338>
   41a30:	00e00034 	movhi	r3,32768
   41a34:	18ffffc4 	addi	r3,r3,-1
   41a38:	002d883a 	mov	r22,zero
   41a3c:	a8c6703a 	and	r3,r21,r3
   41a40:	0025883a 	mov	r18,zero
   41a44:	98000526 	beq	r19,zero,41a5c <__ieee754_pow+0x228>
   41a48:	00900034 	movhi	r2,16384
   41a4c:	10bfffc4 	addi	r2,r2,-1
   41a50:	a884703a 	and	r2,r21,r2
   41a54:	014ffc34 	movhi	r5,16368
   41a58:	117fc01e 	bne	r2,r5,4195c <__ieee754_pow+0x128>
   41a5c:	88001f16 	blt	r17,zero,41adc <__ieee754_pow+0x2a8>
   41a60:	a83f930e 	bge	r21,zero,418b0 <__ieee754_pow+0x7c>
   41a64:	00b00434 	movhi	r2,49168
   41a68:	9885883a 	add	r2,r19,r2
   41a6c:	1484b03a 	or	r2,r2,r18
   41a70:	10038a1e 	bne	r2,zero,4289c <__ieee754_pow+0x1068>
   41a74:	b00d883a 	mov	r6,r22
   41a78:	180f883a 	mov	r7,r3
   41a7c:	3009883a 	mov	r4,r6
   41a80:	380b883a 	mov	r5,r7
   41a84:	0045ef40 	call	45ef4 <__subdf3>
   41a88:	100d883a 	mov	r6,r2
   41a8c:	180f883a 	mov	r7,r3
   41a90:	1009883a 	mov	r4,r2
   41a94:	180b883a 	mov	r5,r3
   41a98:	0044d440 	call	44d44 <__divdf3>
   41a9c:	102d883a 	mov	r22,r2
   41aa0:	003f8306 	br	418b0 <__ieee754_pow+0x7c>
   41aa4:	047fb80e 	bge	zero,r17,41988 <__ieee754_pow+0x154>
   41aa8:	0009883a 	mov	r4,zero
   41aac:	dfc01417 	ldw	ra,80(sp)
   41ab0:	df001317 	ldw	fp,76(sp)
   41ab4:	ddc01217 	ldw	r23,72(sp)
   41ab8:	dd801117 	ldw	r22,68(sp)
   41abc:	dd401017 	ldw	r21,64(sp)
   41ac0:	dd000f17 	ldw	r20,60(sp)
   41ac4:	dcc00e17 	ldw	r19,56(sp)
   41ac8:	dc800d17 	ldw	r18,52(sp)
   41acc:	dc400c17 	ldw	r17,48(sp)
   41ad0:	dc000b17 	ldw	r16,44(sp)
   41ad4:	dec01504 	addi	sp,sp,84
   41ad8:	0042c481 	jmpi	42c48 <__math_oflow>
   41adc:	180f883a 	mov	r7,r3
   41ae0:	000d883a 	mov	r6,zero
   41ae4:	0009883a 	mov	r4,zero
   41ae8:	014ffc34 	movhi	r5,16368
   41aec:	0044d440 	call	44d44 <__divdf3>
   41af0:	102d883a 	mov	r22,r2
   41af4:	003fda06 	br	41a60 <__ieee754_pow+0x22c>
   41af8:	0090d034 	movhi	r2,17216
   41afc:	30800e0e 	bge	r6,r2,41b38 <__ieee754_pow+0x304>
   41b00:	008ffc34 	movhi	r2,16368
   41b04:	30800916 	blt	r6,r2,41b2c <__ieee754_pow+0x2f8>
   41b08:	3005d53a 	srai	r2,r6,20
   41b0c:	10bf0044 	addi	r2,r2,-1023
   41b10:	10c00550 	cmplti	r3,r2,21
   41b14:	18034c1e 	bne	r3,zero,42848 <__ieee754_pow+0x1014>
   41b18:	00c00d04 	movi	r3,52
   41b1c:	1885c83a 	sub	r2,r3,r2
   41b20:	8086d83a 	srl	r3,r16,r2
   41b24:	1884983a 	sll	r2,r3,r2
   41b28:	14037926 	beq	r2,r16,42910 <__ieee754_pow+0x10dc>
   41b2c:	0025883a 	mov	r18,zero
   41b30:	803faa26 	beq	r16,zero,419dc <__ieee754_pow+0x1a8>
   41b34:	003f8406 	br	41948 <__ieee754_pow+0x114>
   41b38:	04800084 	movi	r18,2
   41b3c:	803f821e 	bne	r16,zero,41948 <__ieee754_pow+0x114>
   41b40:	003fa406 	br	419d4 <__ieee754_pow+0x1a0>
   41b44:	00b00434 	movhi	r2,49168
   41b48:	9885883a 	add	r2,r19,r2
   41b4c:	1104b03a 	or	r2,r2,r4
   41b50:	103f7326 	beq	r2,zero,41920 <__ieee754_pow+0xec>
   41b54:	008ffc34 	movhi	r2,16368
   41b58:	002d883a 	mov	r22,zero
   41b5c:	98833716 	blt	r19,r2,4283c <__ieee754_pow+0x1008>
   41b60:	88033416 	blt	r17,zero,42834 <__ieee754_pow+0x1000>
   41b64:	8807883a 	mov	r3,r17
   41b68:	003f5106 	br	418b0 <__ieee754_pow+0x7c>
   41b6c:	200d883a 	mov	r6,r4
   41b70:	a80f883a 	mov	r7,r21
   41b74:	003fc106 	br	41a7c <__ieee754_pow+0x248>
   41b78:	ad5ffc2c 	andhi	r21,r21,32752
   41b7c:	a802cc1e 	bne	r21,zero,426b0 <__ieee754_pow+0xe7c>
   41b80:	180b883a 	mov	r5,r3
   41b84:	000d883a 	mov	r6,zero
   41b88:	01d0d034 	movhi	r7,17216
   41b8c:	00457e00 	call	457e0 <__muldf3>
   41b90:	102d883a 	mov	r22,r2
   41b94:	1827883a 	mov	r19,r3
   41b98:	017ff2c4 	movi	r5,-53
   41b9c:	9809d53a 	srai	r4,r19,20
   41ba0:	00800434 	movhi	r2,16
   41ba4:	10bfffc4 	addi	r2,r2,-1
   41ba8:	00c00134 	movhi	r3,4
   41bac:	213f0044 	addi	r4,r4,-1023
   41bb0:	9884703a 	and	r2,r19,r2
   41bb4:	18e62384 	addi	r3,r3,-26482
   41bb8:	2159883a 	add	r12,r4,r5
   41bbc:	170ffc34 	orhi	fp,r2,16368
   41bc0:	1880060e 	bge	r3,r2,41bdc <__ieee754_pow+0x3a8>
   41bc4:	00c00334 	movhi	r3,12
   41bc8:	18ed9e44 	addi	r3,r3,-18823
   41bcc:	1883370e 	bge	r3,r2,428ac <__ieee754_pow+0x1078>
   41bd0:	00bffc34 	movhi	r2,65520
   41bd4:	63000044 	addi	r12,r12,1
   41bd8:	e0b9883a 	add	fp,fp,r2
   41bdc:	d8000015 	stw	zero,0(sp)
   41be0:	d8000115 	stw	zero,4(sp)
   41be4:	d8000a15 	stw	zero,40(sp)
   41be8:	001f883a 	mov	r15,zero
   41bec:	002f883a 	mov	r23,zero
   41bf0:	034ffc34 	movhi	r13,16368
   41bf4:	680f883a 	mov	r7,r13
   41bf8:	b009883a 	mov	r4,r22
   41bfc:	e00b883a 	mov	r5,fp
   41c00:	000d883a 	mov	r6,zero
   41c04:	dbc00915 	stw	r15,36(sp)
   41c08:	db000815 	stw	r12,32(sp)
   41c0c:	db400215 	stw	r13,8(sp)
   41c10:	0045ef40 	call	45ef4 <__subdf3>
   41c14:	db400217 	ldw	r13,8(sp)
   41c18:	b009883a 	mov	r4,r22
   41c1c:	e00b883a 	mov	r5,fp
   41c20:	680f883a 	mov	r7,r13
   41c24:	000d883a 	mov	r6,zero
   41c28:	db400615 	stw	r13,24(sp)
   41c2c:	d8800315 	stw	r2,12(sp)
   41c30:	d8c00215 	stw	r3,8(sp)
   41c34:	00444380 	call	44438 <__adddf3>
   41c38:	100d883a 	mov	r6,r2
   41c3c:	180f883a 	mov	r7,r3
   41c40:	0009883a 	mov	r4,zero
   41c44:	014ffc34 	movhi	r5,16368
   41c48:	0044d440 	call	44d44 <__divdf3>
   41c4c:	dac00217 	ldw	r11,8(sp)
   41c50:	da400317 	ldw	r9,12(sp)
   41c54:	100d883a 	mov	r6,r2
   41c58:	580b883a 	mov	r5,r11
   41c5c:	4809883a 	mov	r4,r9
   41c60:	180f883a 	mov	r7,r3
   41c64:	d8800515 	stw	r2,20(sp)
   41c68:	d8c00415 	stw	r3,16(sp)
   41c6c:	00457e00 	call	457e0 <__muldf3>
   41c70:	e009d07a 	srai	r4,fp,1
   41c74:	01400234 	movhi	r5,8
   41c78:	000d883a 	mov	r6,zero
   41c7c:	21080034 	orhi	r4,r4,8192
   41c80:	2149883a 	add	r4,r4,r5
   41c84:	25ef883a 	add	r23,r4,r23
   41c88:	b80f883a 	mov	r7,r23
   41c8c:	0009883a 	mov	r4,zero
   41c90:	180b883a 	mov	r5,r3
   41c94:	1827883a 	mov	r19,r3
   41c98:	102b883a 	mov	r21,r2
   41c9c:	00457e00 	call	457e0 <__muldf3>
   41ca0:	da400317 	ldw	r9,12(sp)
   41ca4:	dac00217 	ldw	r11,8(sp)
   41ca8:	100d883a 	mov	r6,r2
   41cac:	4809883a 	mov	r4,r9
   41cb0:	580b883a 	mov	r5,r11
   41cb4:	180f883a 	mov	r7,r3
   41cb8:	0045ef40 	call	45ef4 <__subdf3>
   41cbc:	db400617 	ldw	r13,24(sp)
   41cc0:	b80b883a 	mov	r5,r23
   41cc4:	000d883a 	mov	r6,zero
   41cc8:	680f883a 	mov	r7,r13
   41ccc:	0009883a 	mov	r4,zero
   41cd0:	182f883a 	mov	r23,r3
   41cd4:	d8800215 	stw	r2,8(sp)
   41cd8:	0045ef40 	call	45ef4 <__subdf3>
   41cdc:	b009883a 	mov	r4,r22
   41ce0:	e00b883a 	mov	r5,fp
   41ce4:	100d883a 	mov	r6,r2
   41ce8:	180f883a 	mov	r7,r3
   41cec:	0045ef40 	call	45ef4 <__subdf3>
   41cf0:	980f883a 	mov	r7,r19
   41cf4:	000d883a 	mov	r6,zero
   41cf8:	1009883a 	mov	r4,r2
   41cfc:	180b883a 	mov	r5,r3
   41d00:	00457e00 	call	457e0 <__muldf3>
   41d04:	dac00217 	ldw	r11,8(sp)
   41d08:	b80b883a 	mov	r5,r23
   41d0c:	100d883a 	mov	r6,r2
   41d10:	5809883a 	mov	r4,r11
   41d14:	180f883a 	mov	r7,r3
   41d18:	0045ef40 	call	45ef4 <__subdf3>
   41d1c:	da000417 	ldw	r8,16(sp)
   41d20:	da800517 	ldw	r10,20(sp)
   41d24:	1009883a 	mov	r4,r2
   41d28:	400f883a 	mov	r7,r8
   41d2c:	500d883a 	mov	r6,r10
   41d30:	180b883a 	mov	r5,r3
   41d34:	00457e00 	call	457e0 <__muldf3>
   41d38:	a80d883a 	mov	r6,r21
   41d3c:	980f883a 	mov	r7,r19
   41d40:	a809883a 	mov	r4,r21
   41d44:	980b883a 	mov	r5,r19
   41d48:	d8800415 	stw	r2,16(sp)
   41d4c:	d8c00315 	stw	r3,12(sp)
   41d50:	00457e00 	call	457e0 <__muldf3>
   41d54:	01929174 	movhi	r6,19013
   41d58:	01cff2b4 	movhi	r7,16330
   41d5c:	3193bbc4 	addi	r6,r6,20207
   41d60:	39df8a04 	addi	r7,r7,32296
   41d64:	1009883a 	mov	r4,r2
   41d68:	180b883a 	mov	r5,r3
   41d6c:	102f883a 	mov	r23,r2
   41d70:	182d883a 	mov	r22,r3
   41d74:	00457e00 	call	457e0 <__muldf3>
   41d78:	01a4f2b4 	movhi	r6,37834
   41d7c:	01cff3b4 	movhi	r7,16334
   41d80:	31b6d944 	addi	r6,r6,-9371
   41d84:	39e19284 	addi	r7,r7,-31158
   41d88:	1009883a 	mov	r4,r2
   41d8c:	180b883a 	mov	r5,r3
   41d90:	00444380 	call	44438 <__adddf3>
   41d94:	b80d883a 	mov	r6,r23
   41d98:	b00f883a 	mov	r7,r22
   41d9c:	1009883a 	mov	r4,r2
   41da0:	180b883a 	mov	r5,r3
   41da4:	00457e00 	call	457e0 <__muldf3>
   41da8:	01aa4774 	movhi	r6,43293
   41dac:	01cff474 	movhi	r7,16337
   41db0:	31904044 	addi	r6,r6,16641
   41db4:	39dd1804 	addi	r7,r7,29792
   41db8:	1009883a 	mov	r4,r2
   41dbc:	180b883a 	mov	r5,r3
   41dc0:	00444380 	call	44438 <__adddf3>
   41dc4:	b80d883a 	mov	r6,r23
   41dc8:	b00f883a 	mov	r7,r22
   41dcc:	1009883a 	mov	r4,r2
   41dd0:	180b883a 	mov	r5,r3
   41dd4:	00457e00 	call	457e0 <__muldf3>
   41dd8:	019463f4 	movhi	r6,20879
   41ddc:	01cff574 	movhi	r7,16341
   41de0:	31899344 	addi	r6,r6,9805
   41de4:	39d55544 	addi	r7,r7,21845
   41de8:	1009883a 	mov	r4,r2
   41dec:	180b883a 	mov	r5,r3
   41df0:	00444380 	call	44438 <__adddf3>
   41df4:	b80d883a 	mov	r6,r23
   41df8:	b00f883a 	mov	r7,r22
   41dfc:	1009883a 	mov	r4,r2
   41e00:	180b883a 	mov	r5,r3
   41e04:	00457e00 	call	457e0 <__muldf3>
   41e08:	01b6dc34 	movhi	r6,56176
   41e0c:	01cff6f4 	movhi	r7,16347
   41e10:	31aaffc4 	addi	r6,r6,-21505
   41e14:	39db6d84 	addi	r7,r7,28086
   41e18:	1009883a 	mov	r4,r2
   41e1c:	180b883a 	mov	r5,r3
   41e20:	00444380 	call	44438 <__adddf3>
   41e24:	b80d883a 	mov	r6,r23
   41e28:	b00f883a 	mov	r7,r22
   41e2c:	1009883a 	mov	r4,r2
   41e30:	180b883a 	mov	r5,r3
   41e34:	00457e00 	call	457e0 <__muldf3>
   41e38:	018cccf4 	movhi	r6,13107
   41e3c:	01cff8f4 	movhi	r7,16355
   41e40:	318cc0c4 	addi	r6,r6,13059
   41e44:	39ccccc4 	addi	r7,r7,13107
   41e48:	1009883a 	mov	r4,r2
   41e4c:	180b883a 	mov	r5,r3
   41e50:	00444380 	call	44438 <__adddf3>
   41e54:	b80d883a 	mov	r6,r23
   41e58:	b00f883a 	mov	r7,r22
   41e5c:	b809883a 	mov	r4,r23
   41e60:	b00b883a 	mov	r5,r22
   41e64:	1839883a 	mov	fp,r3
   41e68:	d8800215 	stw	r2,8(sp)
   41e6c:	00457e00 	call	457e0 <__muldf3>
   41e70:	dac00217 	ldw	r11,8(sp)
   41e74:	e00b883a 	mov	r5,fp
   41e78:	100d883a 	mov	r6,r2
   41e7c:	5809883a 	mov	r4,r11
   41e80:	180f883a 	mov	r7,r3
   41e84:	00457e00 	call	457e0 <__muldf3>
   41e88:	980f883a 	mov	r7,r19
   41e8c:	a809883a 	mov	r4,r21
   41e90:	980b883a 	mov	r5,r19
   41e94:	000d883a 	mov	r6,zero
   41e98:	102f883a 	mov	r23,r2
   41e9c:	182d883a 	mov	r22,r3
   41ea0:	00444380 	call	44438 <__adddf3>
   41ea4:	da800417 	ldw	r10,16(sp)
   41ea8:	da400317 	ldw	r9,12(sp)
   41eac:	1009883a 	mov	r4,r2
   41eb0:	500d883a 	mov	r6,r10
   41eb4:	480f883a 	mov	r7,r9
   41eb8:	180b883a 	mov	r5,r3
   41ebc:	da800715 	stw	r10,28(sp)
   41ec0:	da400615 	stw	r9,24(sp)
   41ec4:	00457e00 	call	457e0 <__muldf3>
   41ec8:	b80d883a 	mov	r6,r23
   41ecc:	b00f883a 	mov	r7,r22
   41ed0:	1009883a 	mov	r4,r2
   41ed4:	180b883a 	mov	r5,r3
   41ed8:	00444380 	call	44438 <__adddf3>
   41edc:	980f883a 	mov	r7,r19
   41ee0:	980b883a 	mov	r5,r19
   41ee4:	000d883a 	mov	r6,zero
   41ee8:	0009883a 	mov	r4,zero
   41eec:	d8800315 	stw	r2,12(sp)
   41ef0:	d8c00215 	stw	r3,8(sp)
   41ef4:	00457e00 	call	457e0 <__muldf3>
   41ef8:	000d883a 	mov	r6,zero
   41efc:	01d00234 	movhi	r7,16392
   41f00:	1009883a 	mov	r4,r2
   41f04:	180b883a 	mov	r5,r3
   41f08:	d8800515 	stw	r2,20(sp)
   41f0c:	d8c00415 	stw	r3,16(sp)
   41f10:	00444380 	call	44438 <__adddf3>
   41f14:	da000317 	ldw	r8,12(sp)
   41f18:	dac00217 	ldw	r11,8(sp)
   41f1c:	1009883a 	mov	r4,r2
   41f20:	400d883a 	mov	r6,r8
   41f24:	580f883a 	mov	r7,r11
   41f28:	180b883a 	mov	r5,r3
   41f2c:	00444380 	call	44438 <__adddf3>
   41f30:	980b883a 	mov	r5,r19
   41f34:	000d883a 	mov	r6,zero
   41f38:	180f883a 	mov	r7,r3
   41f3c:	0009883a 	mov	r4,zero
   41f40:	182d883a 	mov	r22,r3
   41f44:	00457e00 	call	457e0 <__muldf3>
   41f48:	b00b883a 	mov	r5,r22
   41f4c:	000d883a 	mov	r6,zero
   41f50:	01d00234 	movhi	r7,16392
   41f54:	0009883a 	mov	r4,zero
   41f58:	1039883a 	mov	fp,r2
   41f5c:	182f883a 	mov	r23,r3
   41f60:	0045ef40 	call	45ef4 <__subdf3>
   41f64:	db800517 	ldw	r14,20(sp)
   41f68:	db400417 	ldw	r13,16(sp)
   41f6c:	1009883a 	mov	r4,r2
   41f70:	700d883a 	mov	r6,r14
   41f74:	680f883a 	mov	r7,r13
   41f78:	180b883a 	mov	r5,r3
   41f7c:	0045ef40 	call	45ef4 <__subdf3>
   41f80:	da000317 	ldw	r8,12(sp)
   41f84:	dac00217 	ldw	r11,8(sp)
   41f88:	100d883a 	mov	r6,r2
   41f8c:	4009883a 	mov	r4,r8
   41f90:	580b883a 	mov	r5,r11
   41f94:	180f883a 	mov	r7,r3
   41f98:	0045ef40 	call	45ef4 <__subdf3>
   41f9c:	a80d883a 	mov	r6,r21
   41fa0:	980f883a 	mov	r7,r19
   41fa4:	1009883a 	mov	r4,r2
   41fa8:	180b883a 	mov	r5,r3
   41fac:	00457e00 	call	457e0 <__muldf3>
   41fb0:	da800717 	ldw	r10,28(sp)
   41fb4:	da400617 	ldw	r9,24(sp)
   41fb8:	b00f883a 	mov	r7,r22
   41fbc:	5009883a 	mov	r4,r10
   41fc0:	480b883a 	mov	r5,r9
   41fc4:	000d883a 	mov	r6,zero
   41fc8:	102b883a 	mov	r21,r2
   41fcc:	1827883a 	mov	r19,r3
   41fd0:	00457e00 	call	457e0 <__muldf3>
   41fd4:	a809883a 	mov	r4,r21
   41fd8:	980b883a 	mov	r5,r19
   41fdc:	100d883a 	mov	r6,r2
   41fe0:	180f883a 	mov	r7,r3
   41fe4:	00444380 	call	44438 <__adddf3>
   41fe8:	e009883a 	mov	r4,fp
   41fec:	b80b883a 	mov	r5,r23
   41ff0:	100d883a 	mov	r6,r2
   41ff4:	180f883a 	mov	r7,r3
   41ff8:	102d883a 	mov	r22,r2
   41ffc:	182b883a 	mov	r21,r3
   42000:	00444380 	call	44438 <__adddf3>
   42004:	01cffbf4 	movhi	r7,16367
   42008:	01b80034 	movhi	r6,57344
   4200c:	39f1c244 	addi	r7,r7,-14583
   42010:	0009883a 	mov	r4,zero
   42014:	180b883a 	mov	r5,r3
   42018:	1827883a 	mov	r19,r3
   4201c:	00457e00 	call	457e0 <__muldf3>
   42020:	e00d883a 	mov	r6,fp
   42024:	b80f883a 	mov	r7,r23
   42028:	980b883a 	mov	r5,r19
   4202c:	0009883a 	mov	r4,zero
   42030:	1039883a 	mov	fp,r2
   42034:	182f883a 	mov	r23,r3
   42038:	0045ef40 	call	45ef4 <__subdf3>
   4203c:	b009883a 	mov	r4,r22
   42040:	a80b883a 	mov	r5,r21
   42044:	100d883a 	mov	r6,r2
   42048:	180f883a 	mov	r7,r3
   4204c:	0045ef40 	call	45ef4 <__subdf3>
   42050:	01b70eb4 	movhi	r6,56378
   42054:	01cffbf4 	movhi	r7,16367
   42058:	3180ff44 	addi	r6,r6,1021
   4205c:	39f1c244 	addi	r7,r7,-14583
   42060:	1009883a 	mov	r4,r2
   42064:	180b883a 	mov	r5,r3
   42068:	00457e00 	call	457e0 <__muldf3>
   4206c:	018516f4 	movhi	r6,5211
   42070:	01ef8fb4 	movhi	r7,48702
   42074:	980b883a 	mov	r5,r19
   42078:	31807d44 	addi	r6,r6,501
   4207c:	39cbf804 	addi	r7,r7,12256
   42080:	0009883a 	mov	r4,zero
   42084:	102d883a 	mov	r22,r2
   42088:	182b883a 	mov	r21,r3
   4208c:	00457e00 	call	457e0 <__muldf3>
   42090:	b009883a 	mov	r4,r22
   42094:	a80b883a 	mov	r5,r21
   42098:	100d883a 	mov	r6,r2
   4209c:	180f883a 	mov	r7,r3
   420a0:	00444380 	call	44438 <__adddf3>
   420a4:	dbc00917 	ldw	r15,36(sp)
   420a8:	d9800a17 	ldw	r6,40(sp)
   420ac:	180b883a 	mov	r5,r3
   420b0:	780f883a 	mov	r7,r15
   420b4:	1009883a 	mov	r4,r2
   420b8:	00444380 	call	44438 <__adddf3>
   420bc:	db000817 	ldw	r12,32(sp)
   420c0:	102d883a 	mov	r22,r2
   420c4:	182b883a 	mov	r21,r3
   420c8:	6009883a 	mov	r4,r12
   420cc:	004689c0 	call	4689c <__floatsidf>
   420d0:	b00d883a 	mov	r6,r22
   420d4:	a80f883a 	mov	r7,r21
   420d8:	e009883a 	mov	r4,fp
   420dc:	b80b883a 	mov	r5,r23
   420e0:	d8800315 	stw	r2,12(sp)
   420e4:	d8c00215 	stw	r3,8(sp)
   420e8:	00444380 	call	44438 <__adddf3>
   420ec:	d9800017 	ldw	r6,0(sp)
   420f0:	d9c00117 	ldw	r7,4(sp)
   420f4:	1009883a 	mov	r4,r2
   420f8:	180b883a 	mov	r5,r3
   420fc:	00444380 	call	44438 <__adddf3>
   42100:	da800317 	ldw	r10,12(sp)
   42104:	da400217 	ldw	r9,8(sp)
   42108:	1009883a 	mov	r4,r2
   4210c:	500d883a 	mov	r6,r10
   42110:	480f883a 	mov	r7,r9
   42114:	180b883a 	mov	r5,r3
   42118:	00444380 	call	44438 <__adddf3>
   4211c:	da800317 	ldw	r10,12(sp)
   42120:	da400217 	ldw	r9,8(sp)
   42124:	0009883a 	mov	r4,zero
   42128:	500d883a 	mov	r6,r10
   4212c:	480f883a 	mov	r7,r9
   42130:	180b883a 	mov	r5,r3
   42134:	1827883a 	mov	r19,r3
   42138:	0045ef40 	call	45ef4 <__subdf3>
   4213c:	d9800017 	ldw	r6,0(sp)
   42140:	d9c00117 	ldw	r7,4(sp)
   42144:	1009883a 	mov	r4,r2
   42148:	180b883a 	mov	r5,r3
   4214c:	0045ef40 	call	45ef4 <__subdf3>
   42150:	e00d883a 	mov	r6,fp
   42154:	b80f883a 	mov	r7,r23
   42158:	1009883a 	mov	r4,r2
   4215c:	180b883a 	mov	r5,r3
   42160:	0045ef40 	call	45ef4 <__subdf3>
   42164:	b009883a 	mov	r4,r22
   42168:	100d883a 	mov	r6,r2
   4216c:	180f883a 	mov	r7,r3
   42170:	a80b883a 	mov	r5,r21
   42174:	94bfffc4 	addi	r18,r18,-1
   42178:	0045ef40 	call	45ef4 <__subdf3>
   4217c:	9524b03a 	or	r18,r18,r20
   42180:	102f883a 	mov	r23,r2
   42184:	182d883a 	mov	r22,r3
   42188:	9001471e 	bne	r18,zero,426a8 <__ieee754_pow+0xe74>
   4218c:	052ffc34 	movhi	r20,49136
   42190:	880f883a 	mov	r7,r17
   42194:	8009883a 	mov	r4,r16
   42198:	880b883a 	mov	r5,r17
   4219c:	000d883a 	mov	r6,zero
   421a0:	0045ef40 	call	45ef4 <__subdf3>
   421a4:	980f883a 	mov	r7,r19
   421a8:	000d883a 	mov	r6,zero
   421ac:	1009883a 	mov	r4,r2
   421b0:	180b883a 	mov	r5,r3
   421b4:	00457e00 	call	457e0 <__muldf3>
   421b8:	800d883a 	mov	r6,r16
   421bc:	880f883a 	mov	r7,r17
   421c0:	b809883a 	mov	r4,r23
   421c4:	b00b883a 	mov	r5,r22
   421c8:	102b883a 	mov	r21,r2
   421cc:	1825883a 	mov	r18,r3
   421d0:	00457e00 	call	457e0 <__muldf3>
   421d4:	a809883a 	mov	r4,r21
   421d8:	900b883a 	mov	r5,r18
   421dc:	100d883a 	mov	r6,r2
   421e0:	180f883a 	mov	r7,r3
   421e4:	00444380 	call	44438 <__adddf3>
   421e8:	880f883a 	mov	r7,r17
   421ec:	980b883a 	mov	r5,r19
   421f0:	000d883a 	mov	r6,zero
   421f4:	0009883a 	mov	r4,zero
   421f8:	1027883a 	mov	r19,r2
   421fc:	182b883a 	mov	r21,r3
   42200:	00457e00 	call	457e0 <__muldf3>
   42204:	a80b883a 	mov	r5,r21
   42208:	100d883a 	mov	r6,r2
   4220c:	180f883a 	mov	r7,r3
   42210:	9809883a 	mov	r4,r19
   42214:	1023883a 	mov	r17,r2
   42218:	1825883a 	mov	r18,r3
   4221c:	00444380 	call	44438 <__adddf3>
   42220:	01502434 	movhi	r5,16528
   42224:	1821883a 	mov	r16,r3
   42228:	8817883a 	mov	r11,r17
   4222c:	902f883a 	mov	r23,r18
   42230:	102d883a 	mov	r22,r2
   42234:	1839883a 	mov	fp,r3
   42238:	1940fe16 	blt	r3,r5,42634 <__ieee754_pow+0xe00>
   4223c:	1947c83a 	sub	r3,r3,r5
   42240:	1d86b03a 	or	r3,r3,r22
   42244:	1801ab1e 	bne	r3,zero,428f4 <__ieee754_pow+0x10c0>
   42248:	01994b34 	movhi	r6,25900
   4224c:	01cf25f4 	movhi	r7,15511
   42250:	31a0bf84 	addi	r6,r6,-32002
   42254:	39c551c4 	addi	r7,r7,5447
   42258:	9809883a 	mov	r4,r19
   4225c:	a80b883a 	mov	r5,r21
   42260:	00444380 	call	44438 <__adddf3>
   42264:	880d883a 	mov	r6,r17
   42268:	900f883a 	mov	r7,r18
   4226c:	b009883a 	mov	r4,r22
   42270:	800b883a 	mov	r5,r16
   42274:	1039883a 	mov	fp,r2
   42278:	182f883a 	mov	r23,r3
   4227c:	0045ef40 	call	45ef4 <__subdf3>
   42280:	100d883a 	mov	r6,r2
   42284:	180f883a 	mov	r7,r3
   42288:	e009883a 	mov	r4,fp
   4228c:	b80b883a 	mov	r5,r23
   42290:	00456100 	call	45610 <__gedf2>
   42294:	00819716 	blt	zero,r2,428f4 <__ieee754_pow+0x10c0>
   42298:	8009d53a 	srai	r4,r16,20
   4229c:	2101ffcc 	andi	r4,r4,2047
   422a0:	213f0084 	addi	r4,r4,-1022
   422a4:	00800434 	movhi	r2,16
   422a8:	1105d83a 	sra	r2,r2,r4
   422ac:	00c00434 	movhi	r3,16
   422b0:	18ffffc4 	addi	r3,r3,-1
   422b4:	1405883a 	add	r2,r2,r16
   422b8:	1009d53a 	srai	r4,r2,20
   422bc:	10ec703a 	and	r22,r2,r3
   422c0:	01fffc34 	movhi	r7,65520
   422c4:	20c1ffcc 	andi	r3,r4,2047
   422c8:	18ff0044 	addi	r3,r3,-1023
   422cc:	01000504 	movi	r4,20
   422d0:	38cfd83a 	sra	r7,r7,r3
   422d4:	b5800434 	orhi	r22,r22,16
   422d8:	20c7c83a 	sub	r3,r4,r3
   422dc:	b0c7d83a 	sra	r3,r22,r3
   422e0:	388e703a 	and	r7,r7,r2
   422e4:	d8c00215 	stw	r3,8(sp)
   422e8:	8000020e 	bge	r16,zero,422f4 <__ieee754_pow+0xac0>
   422ec:	00c5c83a 	sub	r2,zero,r3
   422f0:	d8800215 	stw	r2,8(sp)
   422f4:	000d883a 	mov	r6,zero
   422f8:	8809883a 	mov	r4,r17
   422fc:	900b883a 	mov	r5,r18
   42300:	0045ef40 	call	45ef4 <__subdf3>
   42304:	100d883a 	mov	r6,r2
   42308:	180f883a 	mov	r7,r3
   4230c:	9809883a 	mov	r4,r19
   42310:	a80b883a 	mov	r5,r21
   42314:	182f883a 	mov	r23,r3
   42318:	d8800015 	stw	r2,0(sp)
   4231c:	00444380 	call	44438 <__adddf3>
   42320:	d8800217 	ldw	r2,8(sp)
   42324:	dac00017 	ldw	r11,0(sp)
   42328:	1839883a 	mov	fp,r3
   4232c:	1004953a 	slli	r2,r2,20
   42330:	d8800115 	stw	r2,4(sp)
   42334:	01cff9b4 	movhi	r7,16358
   42338:	e00b883a 	mov	r5,fp
   4233c:	000d883a 	mov	r6,zero
   42340:	39cb90c4 	addi	r7,r7,11843
   42344:	0009883a 	mov	r4,zero
   42348:	dac00015 	stw	r11,0(sp)
   4234c:	00457e00 	call	457e0 <__muldf3>
   42350:	dac00017 	ldw	r11,0(sp)
   42354:	b80f883a 	mov	r7,r23
   42358:	e00b883a 	mov	r5,fp
   4235c:	580d883a 	mov	r6,r11
   42360:	0009883a 	mov	r4,zero
   42364:	182f883a 	mov	r23,r3
   42368:	102d883a 	mov	r22,r2
   4236c:	0045ef40 	call	45ef4 <__subdf3>
   42370:	9809883a 	mov	r4,r19
   42374:	a80b883a 	mov	r5,r21
   42378:	100d883a 	mov	r6,r2
   4237c:	180f883a 	mov	r7,r3
   42380:	0045ef40 	call	45ef4 <__subdf3>
   42384:	01bfbeb4 	movhi	r6,65274
   42388:	01cff9b4 	movhi	r7,16358
   4238c:	318e7bc4 	addi	r6,r6,14831
   42390:	39cb9084 	addi	r7,r7,11842
   42394:	1009883a 	mov	r4,r2
   42398:	180b883a 	mov	r5,r3
   4239c:	00457e00 	call	457e0 <__muldf3>
   423a0:	01832a34 	movhi	r6,3240
   423a4:	01ef8834 	movhi	r7,48672
   423a8:	e00b883a 	mov	r5,fp
   423ac:	319b0e44 	addi	r6,r6,27705
   423b0:	39d71844 	addi	r7,r7,23649
   423b4:	0009883a 	mov	r4,zero
   423b8:	1023883a 	mov	r17,r2
   423bc:	1821883a 	mov	r16,r3
   423c0:	00457e00 	call	457e0 <__muldf3>
   423c4:	8809883a 	mov	r4,r17
   423c8:	800b883a 	mov	r5,r16
   423cc:	100d883a 	mov	r6,r2
   423d0:	180f883a 	mov	r7,r3
   423d4:	00444380 	call	44438 <__adddf3>
   423d8:	b80b883a 	mov	r5,r23
   423dc:	100d883a 	mov	r6,r2
   423e0:	180f883a 	mov	r7,r3
   423e4:	b009883a 	mov	r4,r22
   423e8:	1027883a 	mov	r19,r2
   423ec:	1825883a 	mov	r18,r3
   423f0:	00444380 	call	44438 <__adddf3>
   423f4:	b80f883a 	mov	r7,r23
   423f8:	b00d883a 	mov	r6,r22
   423fc:	1009883a 	mov	r4,r2
   42400:	180b883a 	mov	r5,r3
   42404:	1023883a 	mov	r17,r2
   42408:	1821883a 	mov	r16,r3
   4240c:	0045ef40 	call	45ef4 <__subdf3>
   42410:	9809883a 	mov	r4,r19
   42414:	900b883a 	mov	r5,r18
   42418:	100d883a 	mov	r6,r2
   4241c:	180f883a 	mov	r7,r3
   42420:	0045ef40 	call	45ef4 <__subdf3>
   42424:	880d883a 	mov	r6,r17
   42428:	800f883a 	mov	r7,r16
   4242c:	8809883a 	mov	r4,r17
   42430:	800b883a 	mov	r5,r16
   42434:	1039883a 	mov	fp,r2
   42438:	182b883a 	mov	r21,r3
   4243c:	00457e00 	call	457e0 <__muldf3>
   42440:	019caff4 	movhi	r6,29375
   42444:	01cf99b4 	movhi	r7,15974
   42448:	31a93404 	addi	r6,r6,-23344
   4244c:	39cdda44 	addi	r7,r7,14185
   42450:	1009883a 	mov	r4,r2
   42454:	180b883a 	mov	r5,r3
   42458:	1027883a 	mov	r19,r2
   4245c:	1825883a 	mov	r18,r3
   42460:	00457e00 	call	457e0 <__muldf3>
   42464:	01b174b4 	movhi	r6,50642
   42468:	01cfaf34 	movhi	r7,16060
   4246c:	319afc44 	addi	r6,r6,27633
   42470:	39ef5044 	addi	r7,r7,-17087
   42474:	1009883a 	mov	r4,r2
   42478:	180b883a 	mov	r5,r3
   4247c:	0045ef40 	call	45ef4 <__subdf3>
   42480:	980d883a 	mov	r6,r19
   42484:	900f883a 	mov	r7,r18
   42488:	1009883a 	mov	r4,r2
   4248c:	180b883a 	mov	r5,r3
   42490:	00457e00 	call	457e0 <__muldf3>
   42494:	01abc9b4 	movhi	r6,44838
   42498:	01cfc474 	movhi	r7,16145
   4249c:	31b78b04 	addi	r6,r6,-8660
   424a0:	39d59a84 	addi	r7,r7,22122
   424a4:	1009883a 	mov	r4,r2
   424a8:	180b883a 	mov	r5,r3
   424ac:	00444380 	call	44438 <__adddf3>
   424b0:	980d883a 	mov	r6,r19
   424b4:	900f883a 	mov	r7,r18
   424b8:	1009883a 	mov	r4,r2
   424bc:	180b883a 	mov	r5,r3
   424c0:	00457e00 	call	457e0 <__muldf3>
   424c4:	0185aff4 	movhi	r6,5823
   424c8:	01cfd9f4 	movhi	r7,16231
   424cc:	31af64c4 	addi	r6,r6,-17005
   424d0:	39f05b04 	addi	r7,r7,-16020
   424d4:	1009883a 	mov	r4,r2
   424d8:	180b883a 	mov	r5,r3
   424dc:	0045ef40 	call	45ef4 <__subdf3>
   424e0:	980d883a 	mov	r6,r19
   424e4:	900f883a 	mov	r7,r18
   424e8:	1009883a 	mov	r4,r2
   424ec:	180b883a 	mov	r5,r3
   424f0:	00457e00 	call	457e0 <__muldf3>
   424f4:	01955574 	movhi	r6,21845
   424f8:	01cff174 	movhi	r7,16325
   424fc:	31954f84 	addi	r6,r6,21822
   42500:	39d55544 	addi	r7,r7,21845
   42504:	1009883a 	mov	r4,r2
   42508:	180b883a 	mov	r5,r3
   4250c:	00444380 	call	44438 <__adddf3>
   42510:	980d883a 	mov	r6,r19
   42514:	900f883a 	mov	r7,r18
   42518:	1009883a 	mov	r4,r2
   4251c:	180b883a 	mov	r5,r3
   42520:	00457e00 	call	457e0 <__muldf3>
   42524:	100d883a 	mov	r6,r2
   42528:	180f883a 	mov	r7,r3
   4252c:	8809883a 	mov	r4,r17
   42530:	800b883a 	mov	r5,r16
   42534:	0045ef40 	call	45ef4 <__subdf3>
   42538:	100d883a 	mov	r6,r2
   4253c:	180f883a 	mov	r7,r3
   42540:	8809883a 	mov	r4,r17
   42544:	800b883a 	mov	r5,r16
   42548:	1027883a 	mov	r19,r2
   4254c:	1825883a 	mov	r18,r3
   42550:	00457e00 	call	457e0 <__muldf3>
   42554:	9809883a 	mov	r4,r19
   42558:	900b883a 	mov	r5,r18
   4255c:	000d883a 	mov	r6,zero
   42560:	01d00034 	movhi	r7,16384
   42564:	182f883a 	mov	r23,r3
   42568:	d8800015 	stw	r2,0(sp)
   4256c:	0045ef40 	call	45ef4 <__subdf3>
   42570:	da400017 	ldw	r9,0(sp)
   42574:	100d883a 	mov	r6,r2
   42578:	180f883a 	mov	r7,r3
   4257c:	4809883a 	mov	r4,r9
   42580:	b80b883a 	mov	r5,r23
   42584:	0044d440 	call	44d44 <__divdf3>
   42588:	e00d883a 	mov	r6,fp
   4258c:	a80f883a 	mov	r7,r21
   42590:	8809883a 	mov	r4,r17
   42594:	800b883a 	mov	r5,r16
   42598:	1027883a 	mov	r19,r2
   4259c:	1825883a 	mov	r18,r3
   425a0:	00457e00 	call	457e0 <__muldf3>
   425a4:	e00d883a 	mov	r6,fp
   425a8:	a80f883a 	mov	r7,r21
   425ac:	1009883a 	mov	r4,r2
   425b0:	180b883a 	mov	r5,r3
   425b4:	00444380 	call	44438 <__adddf3>
   425b8:	100d883a 	mov	r6,r2
   425bc:	180f883a 	mov	r7,r3
   425c0:	9809883a 	mov	r4,r19
   425c4:	900b883a 	mov	r5,r18
   425c8:	0045ef40 	call	45ef4 <__subdf3>
   425cc:	880d883a 	mov	r6,r17
   425d0:	800f883a 	mov	r7,r16
   425d4:	1009883a 	mov	r4,r2
   425d8:	180b883a 	mov	r5,r3
   425dc:	0045ef40 	call	45ef4 <__subdf3>
   425e0:	100d883a 	mov	r6,r2
   425e4:	0009883a 	mov	r4,zero
   425e8:	014ffc34 	movhi	r5,16368
   425ec:	180f883a 	mov	r7,r3
   425f0:	0045ef40 	call	45ef4 <__subdf3>
   425f4:	180b883a 	mov	r5,r3
   425f8:	d8c00117 	ldw	r3,4(sp)
   425fc:	1009883a 	mov	r4,r2
   42600:	194d883a 	add	r6,r3,r5
   42604:	3007d53a 	srai	r3,r6,20
   42608:	00c0b50e 	bge	zero,r3,428e0 <__ieee754_pow+0x10ac>
   4260c:	300b883a 	mov	r5,r6
   42610:	000d883a 	mov	r6,zero
   42614:	a00f883a 	mov	r7,r20
   42618:	00457e00 	call	457e0 <__muldf3>
   4261c:	102d883a 	mov	r22,r2
   42620:	003ca306 	br	418b0 <__ieee754_pow+0x7c>
   42624:	88009016 	blt	r17,zero,42868 <__ieee754_pow+0x1034>
   42628:	202d883a 	mov	r22,r4
   4262c:	a807883a 	mov	r3,r21
   42630:	003c9f06 	br	418b0 <__ieee754_pow+0x7c>
   42634:	01200034 	movhi	r4,32768
   42638:	213fffc4 	addi	r4,r4,-1
   4263c:	00902474 	movhi	r2,16529
   42640:	1908703a 	and	r4,r3,r4
   42644:	10b2ffc4 	addi	r2,r2,-13313
   42648:	1100750e 	bge	r2,r4,42820 <__ieee754_pow+0xfec>
   4264c:	008fdbf4 	movhi	r2,16239
   42650:	108d0004 	addi	r2,r2,13312
   42654:	1885883a 	add	r2,r3,r2
   42658:	1584b03a 	or	r2,r2,r22
   4265c:	10000b1e 	bne	r2,zero,4268c <__ieee754_pow+0xe58>
   42660:	880d883a 	mov	r6,r17
   42664:	900f883a 	mov	r7,r18
   42668:	b009883a 	mov	r4,r22
   4266c:	180b883a 	mov	r5,r3
   42670:	0045ef40 	call	45ef4 <__subdf3>
   42674:	980d883a 	mov	r6,r19
   42678:	a80f883a 	mov	r7,r21
   4267c:	1009883a 	mov	r4,r2
   42680:	180b883a 	mov	r5,r3
   42684:	00456100 	call	45610 <__gedf2>
   42688:	103f0316 	blt	r2,zero,42298 <__ieee754_pow+0xa64>
   4268c:	0009883a 	mov	r4,zero
   42690:	000d883a 	mov	r6,zero
   42694:	000f883a 	mov	r7,zero
   42698:	a00b883a 	mov	r5,r20
   4269c:	00456f80 	call	456f8 <__ledf2>
   426a0:	1008803a 	cmplt	r4,r2,zero
   426a4:	003cb906 	br	4198c <__ieee754_pow+0x158>
   426a8:	050ffc34 	movhi	r20,16368
   426ac:	003eb806 	br	42190 <__ieee754_pow+0x95c>
   426b0:	000b883a 	mov	r5,zero
   426b4:	003d3906 	br	41b9c <__ieee754_pow+0x368>
   426b8:	008ffc34 	movhi	r2,16368
   426bc:	10bfff84 	addi	r2,r2,-2
   426c0:	14fcb00e 	bge	r2,r19,41984 <__ieee754_pow+0x150>
   426c4:	008ffc34 	movhi	r2,16368
   426c8:	14fcf616 	blt	r2,r19,41aa4 <__ieee754_pow+0x270>
   426cc:	000d883a 	mov	r6,zero
   426d0:	01cffc34 	movhi	r7,16368
   426d4:	180b883a 	mov	r5,r3
   426d8:	0045ef40 	call	45ef4 <__subdf3>
   426dc:	01cffdf4 	movhi	r7,16375
   426e0:	01980034 	movhi	r6,24576
   426e4:	39c551c4 	addi	r7,r7,5447
   426e8:	1009883a 	mov	r4,r2
   426ec:	180b883a 	mov	r5,r3
   426f0:	102b883a 	mov	r21,r2
   426f4:	1827883a 	mov	r19,r3
   426f8:	00457e00 	call	457e0 <__muldf3>
   426fc:	01be17b4 	movhi	r6,63582
   42700:	01cf9574 	movhi	r7,15957
   42704:	a809883a 	mov	r4,r21
   42708:	980b883a 	mov	r5,r19
   4270c:	31b7d104 	addi	r6,r6,-8380
   42710:	39eb82c4 	addi	r7,r7,-20981
   42714:	1039883a 	mov	fp,r2
   42718:	182f883a 	mov	r23,r3
   4271c:	00457e00 	call	457e0 <__muldf3>
   42720:	a809883a 	mov	r4,r21
   42724:	980b883a 	mov	r5,r19
   42728:	000d883a 	mov	r6,zero
   4272c:	01cff434 	movhi	r7,16336
   42730:	182d883a 	mov	r22,r3
   42734:	d8800215 	stw	r2,8(sp)
   42738:	00457e00 	call	457e0 <__muldf3>
   4273c:	01155574 	movhi	r4,21845
   42740:	014ff574 	movhi	r5,16341
   42744:	100d883a 	mov	r6,r2
   42748:	180f883a 	mov	r7,r3
   4274c:	21155544 	addi	r4,r4,21845
   42750:	29555544 	addi	r5,r5,21845
   42754:	0045ef40 	call	45ef4 <__subdf3>
   42758:	a80d883a 	mov	r6,r21
   4275c:	980f883a 	mov	r7,r19
   42760:	1009883a 	mov	r4,r2
   42764:	180b883a 	mov	r5,r3
   42768:	00457e00 	call	457e0 <__muldf3>
   4276c:	100d883a 	mov	r6,r2
   42770:	180f883a 	mov	r7,r3
   42774:	0009883a 	mov	r4,zero
   42778:	014ff834 	movhi	r5,16352
   4277c:	0045ef40 	call	45ef4 <__subdf3>
   42780:	a80d883a 	mov	r6,r21
   42784:	980f883a 	mov	r7,r19
   42788:	a809883a 	mov	r4,r21
   4278c:	980b883a 	mov	r5,r19
   42790:	d8800115 	stw	r2,4(sp)
   42794:	d8c00015 	stw	r3,0(sp)
   42798:	00457e00 	call	457e0 <__muldf3>
   4279c:	da800117 	ldw	r10,4(sp)
   427a0:	da400017 	ldw	r9,0(sp)
   427a4:	100d883a 	mov	r6,r2
   427a8:	5009883a 	mov	r4,r10
   427ac:	480b883a 	mov	r5,r9
   427b0:	180f883a 	mov	r7,r3
   427b4:	00457e00 	call	457e0 <__muldf3>
   427b8:	01994b34 	movhi	r6,25900
   427bc:	01cffdf4 	movhi	r7,16375
   427c0:	31a0bf84 	addi	r6,r6,-32002
   427c4:	39c551c4 	addi	r7,r7,5447
   427c8:	1009883a 	mov	r4,r2
   427cc:	180b883a 	mov	r5,r3
   427d0:	00457e00 	call	457e0 <__muldf3>
   427d4:	da000217 	ldw	r8,8(sp)
   427d8:	b00b883a 	mov	r5,r22
   427dc:	100d883a 	mov	r6,r2
   427e0:	4009883a 	mov	r4,r8
   427e4:	180f883a 	mov	r7,r3
   427e8:	0045ef40 	call	45ef4 <__subdf3>
   427ec:	100d883a 	mov	r6,r2
   427f0:	180f883a 	mov	r7,r3
   427f4:	e009883a 	mov	r4,fp
   427f8:	b80b883a 	mov	r5,r23
   427fc:	102d883a 	mov	r22,r2
   42800:	182b883a 	mov	r21,r3
   42804:	00444380 	call	44438 <__adddf3>
   42808:	1827883a 	mov	r19,r3
   4280c:	e00d883a 	mov	r6,fp
   42810:	b80f883a 	mov	r7,r23
   42814:	0009883a 	mov	r4,zero
   42818:	180b883a 	mov	r5,r3
   4281c:	003e5006 	br	42160 <__ieee754_pow+0x92c>
   42820:	008ff834 	movhi	r2,16352
   42824:	11004316 	blt	r2,r4,42934 <__ieee754_pow+0x1100>
   42828:	d8000115 	stw	zero,4(sp)
   4282c:	d8000215 	stw	zero,8(sp)
   42830:	003ec006 	br	42334 <__ieee754_pow+0xb00>
   42834:	0007883a 	mov	r3,zero
   42838:	003c1d06 	br	418b0 <__ieee754_pow+0x7c>
   4283c:	883ffd0e 	bge	r17,zero,42834 <__ieee754_pow+0x1000>
   42840:	88e0003c 	xorhi	r3,r17,32768
   42844:	003c1a06 	br	418b0 <__ieee754_pow+0x7c>
   42848:	803c781e 	bne	r16,zero,41a2c <__ieee754_pow+0x1f8>
   4284c:	00c00504 	movi	r3,20
   42850:	1885c83a 	sub	r2,r3,r2
   42854:	3087d83a 	sra	r3,r6,r2
   42858:	1884983a 	sll	r2,r3,r2
   4285c:	11803126 	beq	r2,r6,42924 <__ieee754_pow+0x10f0>
   42860:	0025883a 	mov	r18,zero
   42864:	003c5d06 	br	419dc <__ieee754_pow+0x1a8>
   42868:	200d883a 	mov	r6,r4
   4286c:	a80f883a 	mov	r7,r21
   42870:	0009883a 	mov	r4,zero
   42874:	014ffc34 	movhi	r5,16368
   42878:	0044d440 	call	44d44 <__divdf3>
   4287c:	102d883a 	mov	r22,r2
   42880:	003c0b06 	br	418b0 <__ieee754_pow+0x7c>
   42884:	200d883a 	mov	r6,r4
   42888:	a80f883a 	mov	r7,r21
   4288c:	a80b883a 	mov	r5,r21
   42890:	00457e00 	call	457e0 <__muldf3>
   42894:	102d883a 	mov	r22,r2
   42898:	003c0506 	br	418b0 <__ieee754_pow+0x7c>
   4289c:	94800058 	cmpnei	r18,r18,1
   428a0:	903c031e 	bne	r18,zero,418b0 <__ieee754_pow+0x7c>
   428a4:	18e0003c 	xorhi	r3,r3,32768
   428a8:	003c0106 	br	418b0 <__ieee754_pow+0x7c>
   428ac:	008ff8f4 	movhi	r2,16355
   428b0:	10ae00c4 	addi	r2,r2,-18429
   428b4:	00d0f434 	movhi	r3,17360
   428b8:	03cf9374 	movhi	r15,15949
   428bc:	01100034 	movhi	r4,16384
   428c0:	d8800115 	stw	r2,4(sp)
   428c4:	18b40184 	addi	r2,r3,-12282
   428c8:	d9000015 	stw	r4,0(sp)
   428cc:	d8800a15 	stw	r2,40(sp)
   428d0:	7bff7ac4 	addi	r15,r15,-533
   428d4:	05c00134 	movhi	r23,4
   428d8:	034ffe34 	movhi	r13,16376
   428dc:	003cc506 	br	41bf4 <__ieee754_pow+0x3c0>
   428e0:	d9800217 	ldw	r6,8(sp)
   428e4:	0042e380 	call	42e38 <scalbn>
   428e8:	1009883a 	mov	r4,r2
   428ec:	180b883a 	mov	r5,r3
   428f0:	003f4706 	br	42610 <__ieee754_pow+0xddc>
   428f4:	0009883a 	mov	r4,zero
   428f8:	000d883a 	mov	r6,zero
   428fc:	000f883a 	mov	r7,zero
   42900:	a00b883a 	mov	r5,r20
   42904:	00456f80 	call	456f8 <__ledf2>
   42908:	1008803a 	cmplt	r4,r2,zero
   4290c:	003c6706 	br	41aac <__ieee754_pow+0x278>
   42910:	18c0004c 	andi	r3,r3,1
   42914:	04800084 	movi	r18,2
   42918:	90e5c83a 	sub	r18,r18,r3
   4291c:	803c2f26 	beq	r16,zero,419dc <__ieee754_pow+0x1a8>
   42920:	003c0906 	br	41948 <__ieee754_pow+0x114>
   42924:	18c0004c 	andi	r3,r3,1
   42928:	04800084 	movi	r18,2
   4292c:	90e5c83a 	sub	r18,r18,r3
   42930:	003c2a06 	br	419dc <__ieee754_pow+0x1a8>
   42934:	2009d53a 	srai	r4,r4,20
   42938:	003e5906 	br	422a0 <__ieee754_pow+0xa6c>

0004293c <__ieee754_sqrt>:
   4293c:	defffd04 	addi	sp,sp,-12
   42940:	dc400115 	stw	r17,4(sp)
   42944:	dc000015 	stw	r16,0(sp)
   42948:	dfc00215 	stw	ra,8(sp)
   4294c:	28dffc2c 	andhi	r3,r5,32752
   42950:	009ffc34 	movhi	r2,32752
   42954:	2821883a 	mov	r16,r5
   42958:	2023883a 	mov	r17,r4
   4295c:	18807326 	beq	r3,r2,42b2c <__ieee754_sqrt+0x1f0>
   42960:	2011883a 	mov	r8,r4
   42964:	01403a0e 	bge	zero,r5,42a50 <__ieee754_sqrt+0x114>
   42968:	2807d53a 	srai	r3,r5,20
   4296c:	18004526 	beq	r3,zero,42a84 <__ieee754_sqrt+0x148>
   42970:	00800434 	movhi	r2,16
   42974:	193f0044 	addi	r4,r3,-1023
   42978:	10bfffc4 	addi	r2,r2,-1
   4297c:	8086703a 	and	r3,r16,r2
   42980:	2080004c 	andi	r2,r4,1
   42984:	18c00434 	orhi	r3,r3,16
   42988:	10000426 	beq	r2,zero,4299c <__ieee754_sqrt+0x60>
   4298c:	4004d7fa 	srli	r2,r8,31
   42990:	18c7883a 	add	r3,r3,r3
   42994:	4211883a 	add	r8,r8,r8
   42998:	1887883a 	add	r3,r3,r2
   4299c:	4004d7fa 	srli	r2,r8,31
   429a0:	18c7883a 	add	r3,r3,r3
   429a4:	2021d07a 	srai	r16,r4,1
   429a8:	1887883a 	add	r3,r3,r2
   429ac:	4209883a 	add	r4,r8,r8
   429b0:	0017883a 	mov	r11,zero
   429b4:	02000584 	movi	r8,22
   429b8:	000b883a 	mov	r5,zero
   429bc:	00800834 	movhi	r2,32
   429c0:	288d883a 	add	r6,r5,r2
   429c4:	200ed7fa 	srli	r7,r4,31
   429c8:	423fffc4 	addi	r8,r8,-1
   429cc:	19800316 	blt	r3,r6,429dc <__ieee754_sqrt+0xa0>
   429d0:	1987c83a 	sub	r3,r3,r6
   429d4:	308b883a 	add	r5,r6,r2
   429d8:	5897883a 	add	r11,r11,r2
   429dc:	18c7883a 	add	r3,r3,r3
   429e0:	1004d07a 	srli	r2,r2,1
   429e4:	19c7883a 	add	r3,r3,r7
   429e8:	2109883a 	add	r4,r4,r4
   429ec:	403ff41e 	bne	r8,zero,429c0 <__ieee754_sqrt+0x84>
   429f0:	0013883a 	mov	r9,zero
   429f4:	00800804 	movi	r2,32
   429f8:	01e00034 	movhi	r7,32768
   429fc:	00000806 	br	42a20 <__ieee754_sqrt+0xe4>
   42a00:	19403126 	beq	r3,r5,42ac8 <__ieee754_sqrt+0x18c>
   42a04:	200cd7fa 	srli	r6,r4,31
   42a08:	18c7883a 	add	r3,r3,r3
   42a0c:	10bfffc4 	addi	r2,r2,-1
   42a10:	380ed07a 	srli	r7,r7,1
   42a14:	30c7883a 	add	r3,r6,r3
   42a18:	2109883a 	add	r4,r4,r4
   42a1c:	10003026 	beq	r2,zero,42ae0 <__ieee754_sqrt+0x1a4>
   42a20:	3a0d883a 	add	r6,r7,r8
   42a24:	28fff60e 	bge	r5,r3,42a00 <__ieee754_sqrt+0xc4>
   42a28:	31d1883a 	add	r8,r6,r7
   42a2c:	30002316 	blt	r6,zero,42abc <__ieee754_sqrt+0x180>
   42a30:	2815883a 	mov	r10,r5
   42a34:	1947c83a 	sub	r3,r3,r5
   42a38:	2180012e 	bgeu	r4,r6,42a40 <__ieee754_sqrt+0x104>
   42a3c:	18ffffc4 	addi	r3,r3,-1
   42a40:	2189c83a 	sub	r4,r4,r6
   42a44:	49d3883a 	add	r9,r9,r7
   42a48:	500b883a 	mov	r5,r10
   42a4c:	003fed06 	br	42a04 <__ieee754_sqrt+0xc8>
   42a50:	00a00034 	movhi	r2,32768
   42a54:	10bfffc4 	addi	r2,r2,-1
   42a58:	2884703a 	and	r2,r5,r2
   42a5c:	1104b03a 	or	r2,r2,r4
   42a60:	10004426 	beq	r2,zero,42b74 <__ieee754_sqrt+0x238>
   42a64:	28003a1e 	bne	r5,zero,42b50 <__ieee754_sqrt+0x214>
   42a68:	0007883a 	mov	r3,zero
   42a6c:	4020d2fa 	srli	r16,r8,11
   42a70:	18fffac4 	addi	r3,r3,-21
   42a74:	4010957a 	slli	r8,r8,21
   42a78:	803ffc26 	beq	r16,zero,42a6c <__ieee754_sqrt+0x130>
   42a7c:	8080042c 	andhi	r2,r16,16
   42a80:	1000411e 	bne	r2,zero,42b88 <__ieee754_sqrt+0x24c>
   42a84:	0005883a 	mov	r2,zero
   42a88:	8421883a 	add	r16,r16,r16
   42a8c:	8140042c 	andhi	r5,r16,16
   42a90:	1009883a 	mov	r4,r2
   42a94:	10800044 	addi	r2,r2,1
   42a98:	283ffb26 	beq	r5,zero,42a88 <__ieee754_sqrt+0x14c>
   42a9c:	400b883a 	mov	r5,r8
   42aa0:	4090983a 	sll	r8,r8,r2
   42aa4:	01800804 	movi	r6,32
   42aa8:	308dc83a 	sub	r6,r6,r2
   42aac:	2984d83a 	srl	r2,r5,r6
   42ab0:	1907c83a 	sub	r3,r3,r4
   42ab4:	80a0b03a 	or	r16,r16,r2
   42ab8:	003fad06 	br	42970 <__ieee754_sqrt+0x34>
   42abc:	403fdc16 	blt	r8,zero,42a30 <__ieee754_sqrt+0xf4>
   42ac0:	2a800044 	addi	r10,r5,1
   42ac4:	003fdb06 	br	42a34 <__ieee754_sqrt+0xf8>
   42ac8:	21bfce36 	bltu	r4,r6,42a04 <__ieee754_sqrt+0xc8>
   42acc:	31d1883a 	add	r8,r6,r7
   42ad0:	303ffa16 	blt	r6,zero,42abc <__ieee754_sqrt+0x180>
   42ad4:	1815883a 	mov	r10,r3
   42ad8:	0007883a 	mov	r3,zero
   42adc:	003fd806 	br	42a40 <__ieee754_sqrt+0x104>
   42ae0:	1906b03a 	or	r3,r3,r4
   42ae4:	18000326 	beq	r3,zero,42af4 <__ieee754_sqrt+0x1b8>
   42ae8:	48ffffd8 	cmpnei	r3,r9,-1
   42aec:	18002426 	beq	r3,zero,42b80 <__ieee754_sqrt+0x244>
   42af0:	4a400044 	addi	r9,r9,1
   42af4:	4804d07a 	srli	r2,r9,1
   42af8:	5809d07a 	srai	r4,r11,1
   42afc:	00cff834 	movhi	r3,16352
   42b00:	5ac0004c 	andi	r11,r11,1
   42b04:	20c9883a 	add	r4,r4,r3
   42b08:	58000126 	beq	r11,zero,42b10 <__ieee754_sqrt+0x1d4>
   42b0c:	10a00034 	orhi	r2,r2,32768
   42b10:	8006953a 	slli	r3,r16,20
   42b14:	1907883a 	add	r3,r3,r4
   42b18:	dfc00217 	ldw	ra,8(sp)
   42b1c:	dc400117 	ldw	r17,4(sp)
   42b20:	dc000017 	ldw	r16,0(sp)
   42b24:	dec00304 	addi	sp,sp,12
   42b28:	f800283a 	ret
   42b2c:	200d883a 	mov	r6,r4
   42b30:	280f883a 	mov	r7,r5
   42b34:	00457e00 	call	457e0 <__muldf3>
   42b38:	880d883a 	mov	r6,r17
   42b3c:	800f883a 	mov	r7,r16
   42b40:	1009883a 	mov	r4,r2
   42b44:	180b883a 	mov	r5,r3
   42b48:	00444380 	call	44438 <__adddf3>
   42b4c:	003ff206 	br	42b18 <__ieee754_sqrt+0x1dc>
   42b50:	200d883a 	mov	r6,r4
   42b54:	280f883a 	mov	r7,r5
   42b58:	0045ef40 	call	45ef4 <__subdf3>
   42b5c:	100d883a 	mov	r6,r2
   42b60:	180f883a 	mov	r7,r3
   42b64:	1009883a 	mov	r4,r2
   42b68:	180b883a 	mov	r5,r3
   42b6c:	0044d440 	call	44d44 <__divdf3>
   42b70:	003fe906 	br	42b18 <__ieee754_sqrt+0x1dc>
   42b74:	2005883a 	mov	r2,r4
   42b78:	2807883a 	mov	r3,r5
   42b7c:	003fe606 	br	42b18 <__ieee754_sqrt+0x1dc>
   42b80:	5ac00044 	addi	r11,r11,1
   42b84:	003fdc06 	br	42af8 <__ieee754_sqrt+0x1bc>
   42b88:	400b883a 	mov	r5,r8
   42b8c:	01800804 	movi	r6,32
   42b90:	013fffc4 	movi	r4,-1
   42b94:	003fc506 	br	42aac <__ieee754_sqrt+0x170>

00042b98 <with_errno>:
   42b98:	defffc04 	addi	sp,sp,-16
   42b9c:	dc800215 	stw	r18,8(sp)
   42ba0:	dc400115 	stw	r17,4(sp)
   42ba4:	dc000015 	stw	r16,0(sp)
   42ba8:	dfc00315 	stw	ra,12(sp)
   42bac:	2023883a 	mov	r17,r4
   42bb0:	2821883a 	mov	r16,r5
   42bb4:	3025883a 	mov	r18,r6
   42bb8:	0046dcc0 	call	46dcc <__errno>
   42bbc:	14800015 	stw	r18,0(r2)
   42bc0:	8007883a 	mov	r3,r16
   42bc4:	8805883a 	mov	r2,r17
   42bc8:	dfc00317 	ldw	ra,12(sp)
   42bcc:	dc800217 	ldw	r18,8(sp)
   42bd0:	dc400117 	ldw	r17,4(sp)
   42bd4:	dc000017 	ldw	r16,0(sp)
   42bd8:	dec00404 	addi	sp,sp,16
   42bdc:	f800283a 	ret

00042be0 <xflow>:
   42be0:	defffd04 	addi	sp,sp,-12
   42be4:	2005883a 	mov	r2,r4
   42be8:	dfc00215 	stw	ra,8(sp)
   42bec:	2809883a 	mov	r4,r5
   42bf0:	300b883a 	mov	r5,r6
   42bf4:	10000c26 	beq	r2,zero,42c28 <xflow+0x48>
   42bf8:	30a0003c 	xorhi	r2,r6,32768
   42bfc:	d9000015 	stw	r4,0(sp)
   42c00:	d8800115 	stw	r2,4(sp)
   42c04:	d9800017 	ldw	r6,0(sp)
   42c08:	d9c00117 	ldw	r7,4(sp)
   42c0c:	00457e00 	call	457e0 <__muldf3>
   42c10:	01800884 	movi	r6,34
   42c14:	1009883a 	mov	r4,r2
   42c18:	180b883a 	mov	r5,r3
   42c1c:	dfc00217 	ldw	ra,8(sp)
   42c20:	dec00304 	addi	sp,sp,12
   42c24:	0042b981 	jmpi	42b98 <with_errno>
   42c28:	3005883a 	mov	r2,r6
   42c2c:	003ff306 	br	42bfc <xflow+0x1c>

00042c30 <__math_uflow>:
   42c30:	000b883a 	mov	r5,zero
   42c34:	01840034 	movhi	r6,4096
   42c38:	0042be01 	jmpi	42be0 <xflow>

00042c3c <__math_may_uflow>:
   42c3c:	000b883a 	mov	r5,zero
   42c40:	01879634 	movhi	r6,7768
   42c44:	0042be01 	jmpi	42be0 <xflow>

00042c48 <__math_oflow>:
   42c48:	000b883a 	mov	r5,zero
   42c4c:	019c0034 	movhi	r6,28672
   42c50:	0042be01 	jmpi	42be0 <xflow>

00042c54 <__math_divzero>:
   42c54:	defffd04 	addi	sp,sp,-12
   42c58:	dfc00215 	stw	ra,8(sp)
   42c5c:	20000e1e 	bne	r4,zero,42c98 <__math_divzero+0x44>
   42c60:	008ffc34 	movhi	r2,16368
   42c64:	d8000015 	stw	zero,0(sp)
   42c68:	d8800115 	stw	r2,4(sp)
   42c6c:	d9000017 	ldw	r4,0(sp)
   42c70:	d9400117 	ldw	r5,4(sp)
   42c74:	000d883a 	mov	r6,zero
   42c78:	000f883a 	mov	r7,zero
   42c7c:	0044d440 	call	44d44 <__divdf3>
   42c80:	01800884 	movi	r6,34
   42c84:	1009883a 	mov	r4,r2
   42c88:	180b883a 	mov	r5,r3
   42c8c:	dfc00217 	ldw	ra,8(sp)
   42c90:	dec00304 	addi	sp,sp,12
   42c94:	0042b981 	jmpi	42b98 <with_errno>
   42c98:	00affc34 	movhi	r2,49136
   42c9c:	003ff106 	br	42c64 <__math_divzero+0x10>

00042ca0 <__math_invalid>:
   42ca0:	defffd04 	addi	sp,sp,-12
   42ca4:	200d883a 	mov	r6,r4
   42ca8:	280f883a 	mov	r7,r5
   42cac:	dfc00215 	stw	ra,8(sp)
   42cb0:	dc400115 	stw	r17,4(sp)
   42cb4:	dc000015 	stw	r16,0(sp)
   42cb8:	2023883a 	mov	r17,r4
   42cbc:	2821883a 	mov	r16,r5
   42cc0:	0045ef40 	call	45ef4 <__subdf3>
   42cc4:	100d883a 	mov	r6,r2
   42cc8:	180f883a 	mov	r7,r3
   42ccc:	1009883a 	mov	r4,r2
   42cd0:	180b883a 	mov	r5,r3
   42cd4:	0044d440 	call	44d44 <__divdf3>
   42cd8:	880d883a 	mov	r6,r17
   42cdc:	800f883a 	mov	r7,r16
   42ce0:	8809883a 	mov	r4,r17
   42ce4:	800b883a 	mov	r5,r16
   42ce8:	1023883a 	mov	r17,r2
   42cec:	1821883a 	mov	r16,r3
   42cf0:	00467c80 	call	467c8 <__unorddf2>
   42cf4:	1000081e 	bne	r2,zero,42d18 <__math_invalid+0x78>
   42cf8:	01800844 	movi	r6,33
   42cfc:	8809883a 	mov	r4,r17
   42d00:	800b883a 	mov	r5,r16
   42d04:	dfc00217 	ldw	ra,8(sp)
   42d08:	dc400117 	ldw	r17,4(sp)
   42d0c:	dc000017 	ldw	r16,0(sp)
   42d10:	dec00304 	addi	sp,sp,12
   42d14:	0042b981 	jmpi	42b98 <with_errno>
   42d18:	8805883a 	mov	r2,r17
   42d1c:	8007883a 	mov	r3,r16
   42d20:	dfc00217 	ldw	ra,8(sp)
   42d24:	dc400117 	ldw	r17,4(sp)
   42d28:	dc000017 	ldw	r16,0(sp)
   42d2c:	dec00304 	addi	sp,sp,12
   42d30:	f800283a 	ret

00042d34 <__math_check_uflow>:
   42d34:	defffd04 	addi	sp,sp,-12
   42d38:	000d883a 	mov	r6,zero
   42d3c:	000f883a 	mov	r7,zero
   42d40:	dc400115 	stw	r17,4(sp)
   42d44:	dc000015 	stw	r16,0(sp)
   42d48:	dfc00215 	stw	ra,8(sp)
   42d4c:	2023883a 	mov	r17,r4
   42d50:	2821883a 	mov	r16,r5
   42d54:	00455900 	call	45590 <__eqdf2>
   42d58:	10000726 	beq	r2,zero,42d78 <__math_check_uflow+0x44>
   42d5c:	8805883a 	mov	r2,r17
   42d60:	8007883a 	mov	r3,r16
   42d64:	dfc00217 	ldw	ra,8(sp)
   42d68:	dc400117 	ldw	r17,4(sp)
   42d6c:	dc000017 	ldw	r16,0(sp)
   42d70:	dec00304 	addi	sp,sp,12
   42d74:	f800283a 	ret
   42d78:	01800884 	movi	r6,34
   42d7c:	8809883a 	mov	r4,r17
   42d80:	800b883a 	mov	r5,r16
   42d84:	dfc00217 	ldw	ra,8(sp)
   42d88:	dc400117 	ldw	r17,4(sp)
   42d8c:	dc000017 	ldw	r16,0(sp)
   42d90:	dec00304 	addi	sp,sp,12
   42d94:	0042b981 	jmpi	42b98 <with_errno>

00042d98 <__math_check_oflow>:
   42d98:	00a00034 	movhi	r2,32768
   42d9c:	defffc04 	addi	sp,sp,-16
   42da0:	10bfffc4 	addi	r2,r2,-1
   42da4:	dc000015 	stw	r16,0(sp)
   42da8:	01dffc34 	movhi	r7,32752
   42dac:	28a0703a 	and	r16,r5,r2
   42db0:	dc400115 	stw	r17,4(sp)
   42db4:	01bfffc4 	movi	r6,-1
   42db8:	2823883a 	mov	r17,r5
   42dbc:	39ffffc4 	addi	r7,r7,-1
   42dc0:	800b883a 	mov	r5,r16
   42dc4:	dc800215 	stw	r18,8(sp)
   42dc8:	dfc00315 	stw	ra,12(sp)
   42dcc:	2025883a 	mov	r18,r4
   42dd0:	00467c80 	call	467c8 <__unorddf2>
   42dd4:	1000071e 	bne	r2,zero,42df4 <__math_check_oflow+0x5c>
   42dd8:	01dffc34 	movhi	r7,32752
   42ddc:	01bfffc4 	movi	r6,-1
   42de0:	39ffffc4 	addi	r7,r7,-1
   42de4:	9009883a 	mov	r4,r18
   42de8:	800b883a 	mov	r5,r16
   42dec:	00456f80 	call	456f8 <__ledf2>
   42df0:	00800816 	blt	zero,r2,42e14 <__math_check_oflow+0x7c>
   42df4:	9005883a 	mov	r2,r18
   42df8:	8807883a 	mov	r3,r17
   42dfc:	dfc00317 	ldw	ra,12(sp)
   42e00:	dc800217 	ldw	r18,8(sp)
   42e04:	dc400117 	ldw	r17,4(sp)
   42e08:	dc000017 	ldw	r16,0(sp)
   42e0c:	dec00404 	addi	sp,sp,16
   42e10:	f800283a 	ret
   42e14:	01800884 	movi	r6,34
   42e18:	9009883a 	mov	r4,r18
   42e1c:	880b883a 	mov	r5,r17
   42e20:	dfc00317 	ldw	ra,12(sp)
   42e24:	dc800217 	ldw	r18,8(sp)
   42e28:	dc400117 	ldw	r17,4(sp)
   42e2c:	dc000017 	ldw	r16,0(sp)
   42e30:	dec00404 	addi	sp,sp,16
   42e34:	0042b981 	jmpi	42b98 <with_errno>

00042e38 <scalbn>:
   42e38:	2807d53a 	srai	r3,r5,20
   42e3c:	defffe04 	addi	sp,sp,-8
   42e40:	dc000015 	stw	r16,0(sp)
   42e44:	dfc00115 	stw	ra,4(sp)
   42e48:	18c1ffcc 	andi	r3,r3,2047
   42e4c:	280f883a 	mov	r7,r5
   42e50:	2005883a 	mov	r2,r4
   42e54:	3021883a 	mov	r16,r6
   42e58:	1800251e 	bne	r3,zero,42ef0 <scalbn+0xb8>
   42e5c:	00e00034 	movhi	r3,32768
   42e60:	18ffffc4 	addi	r3,r3,-1
   42e64:	28c6703a 	and	r3,r5,r3
   42e68:	1906b03a 	or	r3,r3,r4
   42e6c:	18003926 	beq	r3,zero,42f54 <scalbn+0x11c>
   42e70:	000d883a 	mov	r6,zero
   42e74:	01d0d434 	movhi	r7,17232
   42e78:	00457e00 	call	457e0 <__muldf3>
   42e7c:	01bffff4 	movhi	r6,65535
   42e80:	318f2c04 	addi	r6,r6,15536
   42e84:	1009883a 	mov	r4,r2
   42e88:	180f883a 	mov	r7,r3
   42e8c:	81804a16 	blt	r16,r6,42fb8 <scalbn+0x180>
   42e90:	1807d53a 	srai	r3,r3,20
   42e94:	3811883a 	mov	r8,r7
   42e98:	18c1ffcc 	andi	r3,r3,2047
   42e9c:	18fff284 	addi	r3,r3,-54
   42ea0:	80cd883a 	add	r6,r16,r3
   42ea4:	30c1ffd0 	cmplti	r3,r6,2047
   42ea8:	18001a26 	beq	r3,zero,42f14 <scalbn+0xdc>
   42eac:	01803916 	blt	zero,r6,42f94 <scalbn+0x15c>
   42eb0:	30fff2c8 	cmpgei	r3,r6,-53
   42eb4:	18002c26 	beq	r3,zero,42f68 <scalbn+0x130>
   42eb8:	30c00d84 	addi	r3,r6,54
   42ebc:	1806953a 	slli	r3,r3,20
   42ec0:	01200434 	movhi	r4,32784
   42ec4:	213fffc4 	addi	r4,r4,-1
   42ec8:	410a703a 	and	r5,r8,r4
   42ecc:	000d883a 	mov	r6,zero
   42ed0:	01cf2434 	movhi	r7,15504
   42ed4:	1009883a 	mov	r4,r2
   42ed8:	194ab03a 	or	r5,r3,r5
   42edc:	00457e00 	call	457e0 <__muldf3>
   42ee0:	dfc00117 	ldw	ra,4(sp)
   42ee4:	dc000017 	ldw	r16,0(sp)
   42ee8:	dec00204 	addi	sp,sp,8
   42eec:	f800283a 	ret
   42ef0:	1981ffd8 	cmpnei	r6,r3,2047
   42ef4:	2811883a 	mov	r8,r5
   42ef8:	303fe91e 	bne	r6,zero,42ea0 <scalbn+0x68>
   42efc:	200d883a 	mov	r6,r4
   42f00:	00444380 	call	44438 <__adddf3>
   42f04:	dfc00117 	ldw	ra,4(sp)
   42f08:	dc000017 	ldw	r16,0(sp)
   42f0c:	dec00204 	addi	sp,sp,8
   42f10:	f800283a 	ret
   42f14:	01220034 	movhi	r4,34816
   42f18:	015f8e34 	movhi	r5,32312
   42f1c:	211d6704 	addi	r4,r4,30108
   42f20:	29790f04 	addi	r5,r5,-7108
   42f24:	3800020e 	bge	r7,zero,42f30 <scalbn+0xf8>
   42f28:	017f8e34 	movhi	r5,65080
   42f2c:	29790f04 	addi	r5,r5,-7108
   42f30:	01a20034 	movhi	r6,34816
   42f34:	01df8e34 	movhi	r7,32312
   42f38:	319d6704 	addi	r6,r6,30108
   42f3c:	39f90f04 	addi	r7,r7,-7108
   42f40:	00457e00 	call	457e0 <__muldf3>
   42f44:	dfc00117 	ldw	ra,4(sp)
   42f48:	dc000017 	ldw	r16,0(sp)
   42f4c:	dec00204 	addi	sp,sp,8
   42f50:	f800283a 	ret
   42f54:	2807883a 	mov	r3,r5
   42f58:	dfc00117 	ldw	ra,4(sp)
   42f5c:	dc000017 	ldw	r16,0(sp)
   42f60:	dec00204 	addi	sp,sp,8
   42f64:	f800283a 	ret
   42f68:	0130be74 	movhi	r4,49913
   42f6c:	01406974 	movhi	r5,421
   42f70:	213cd644 	addi	r4,r4,-3239
   42f74:	295b87c4 	addi	r5,r5,28191
   42f78:	38001916 	blt	r7,zero,42fe0 <scalbn+0x1a8>
   42f7c:	01b0be74 	movhi	r6,49913
   42f80:	01c06974 	movhi	r7,421
   42f84:	31bcd644 	addi	r6,r6,-3239
   42f88:	39db87c4 	addi	r7,r7,28191
   42f8c:	00457e00 	call	457e0 <__muldf3>
   42f90:	003fec06 	br	42f44 <scalbn+0x10c>
   42f94:	300c953a 	slli	r6,r6,20
   42f98:	00e00434 	movhi	r3,32784
   42f9c:	18ffffc4 	addi	r3,r3,-1
   42fa0:	40d0703a 	and	r8,r8,r3
   42fa4:	4186b03a 	or	r3,r8,r6
   42fa8:	dfc00117 	ldw	ra,4(sp)
   42fac:	dc000017 	ldw	r16,0(sp)
   42fb0:	dec00204 	addi	sp,sp,8
   42fb4:	f800283a 	ret
   42fb8:	01b0be74 	movhi	r6,49913
   42fbc:	01c06974 	movhi	r7,421
   42fc0:	31bcd644 	addi	r6,r6,-3239
   42fc4:	39db87c4 	addi	r7,r7,28191
   42fc8:	180b883a 	mov	r5,r3
   42fcc:	00457e00 	call	457e0 <__muldf3>
   42fd0:	dfc00117 	ldw	ra,4(sp)
   42fd4:	dc000017 	ldw	r16,0(sp)
   42fd8:	dec00204 	addi	sp,sp,8
   42fdc:	f800283a 	ret
   42fe0:	01606974 	movhi	r5,33189
   42fe4:	295b87c4 	addi	r5,r5,28191
   42fe8:	003fe406 	br	42f7c <scalbn+0x144>

00042fec <__addsf3>:
   42fec:	defffc04 	addi	sp,sp,-16
   42ff0:	2806d5fa 	srli	r3,r5,23
   42ff4:	dc000015 	stw	r16,0(sp)
   42ff8:	2020d5fa 	srli	r16,r4,23
   42ffc:	200cd7fa 	srli	r6,r4,31
   43000:	00802034 	movhi	r2,128
   43004:	2812d7fa 	srli	r9,r5,31
   43008:	10bfffc4 	addi	r2,r2,-1
   4300c:	1114703a 	and	r10,r2,r4
   43010:	1b003fcc 	andi	r12,r3,255
   43014:	dc400115 	stw	r17,4(sp)
   43018:	84003fcc 	andi	r16,r16,255
   4301c:	115a703a 	and	r13,r2,r5
   43020:	dfc00315 	stw	ra,12(sp)
   43024:	dc800215 	stw	r18,8(sp)
   43028:	500e90fa 	slli	r7,r10,3
   4302c:	681090fa 	slli	r8,r13,3
   43030:	5007883a 	mov	r3,r10
   43034:	3023883a 	mov	r17,r6
   43038:	8317c83a 	sub	r11,r16,r12
   4303c:	32403926 	beq	r6,r9,43124 <__addsf3+0x138>
   43040:	02c02e0e 	bge	zero,r11,430fc <__addsf3+0x110>
   43044:	60004c26 	beq	r12,zero,43178 <__addsf3+0x18c>
   43048:	80803fe0 	cmpeqi	r2,r16,255
   4304c:	1000801e 	bne	r2,zero,43250 <__addsf3+0x264>
   43050:	42010034 	orhi	r8,r8,1024
   43054:	58800710 	cmplti	r2,r11,28
   43058:	10009e1e 	bne	r2,zero,432d4 <__addsf3+0x2e8>
   4305c:	00c00044 	movi	r3,1
   43060:	38c7c83a 	sub	r3,r7,r3
   43064:	1881002c 	andhi	r2,r3,1024
   43068:	10006826 	beq	r2,zero,4320c <__addsf3+0x220>
   4306c:	04810034 	movhi	r18,1024
   43070:	94bfffc4 	addi	r18,r18,-1
   43074:	1ca4703a 	and	r18,r3,r18
   43078:	9009883a 	mov	r4,r18
   4307c:	0046bc80 	call	46bc8 <__clzsi2>
   43080:	10bffec4 	addi	r2,r2,-5
   43084:	90a4983a 	sll	r18,r18,r2
   43088:	1400880e 	bge	r2,r16,432ac <__addsf3+0x2c0>
   4308c:	00ff0034 	movhi	r3,64512
   43090:	18ffffc4 	addi	r3,r3,-1
   43094:	80a1c83a 	sub	r16,r16,r2
   43098:	90c6703a 	and	r3,r18,r3
   4309c:	188001cc 	andi	r2,r3,7
   430a0:	10000426 	beq	r2,zero,430b4 <__addsf3+0xc8>
   430a4:	188003cc 	andi	r2,r3,15
   430a8:	10800120 	cmpeqi	r2,r2,4
   430ac:	1000011e 	bne	r2,zero,430b4 <__addsf3+0xc8>
   430b0:	18c00104 	addi	r3,r3,4
   430b4:	1881002c 	andhi	r2,r3,1024
   430b8:	10005626 	beq	r2,zero,43214 <__addsf3+0x228>
   430bc:	84000044 	addi	r16,r16,1
   430c0:	80803fe0 	cmpeqi	r2,r16,255
   430c4:	1000461e 	bne	r2,zero,431e0 <__addsf3+0x1f4>
   430c8:	180691ba 	slli	r3,r3,6
   430cc:	1806d27a 	srli	r3,r3,9
   430d0:	80803fcc 	andi	r2,r16,255
   430d4:	100495fa 	slli	r2,r2,23
   430d8:	882297fa 	slli	r17,r17,31
   430dc:	10c4b03a 	or	r2,r2,r3
   430e0:	1444b03a 	or	r2,r2,r17
   430e4:	dfc00317 	ldw	ra,12(sp)
   430e8:	dc800217 	ldw	r18,8(sp)
   430ec:	dc400117 	ldw	r17,4(sp)
   430f0:	dc000017 	ldw	r16,0(sp)
   430f4:	dec00404 	addi	sp,sp,16
   430f8:	f800283a 	ret
   430fc:	58002526 	beq	r11,zero,43194 <__addsf3+0x1a8>
   43100:	6417c83a 	sub	r11,r12,r16
   43104:	8000821e 	bne	r16,zero,43310 <__addsf3+0x324>
   43108:	38006426 	beq	r7,zero,4329c <__addsf3+0x2b0>
   4310c:	58bfffc4 	addi	r2,r11,-1
   43110:	1000c226 	beq	r2,zero,4341c <__addsf3+0x430>
   43114:	5ac03fe0 	cmpeqi	r11,r11,255
   43118:	58004b1e 	bne	r11,zero,43248 <__addsf3+0x25c>
   4311c:	1017883a 	mov	r11,r2
   43120:	00007e06 	br	4331c <__addsf3+0x330>
   43124:	02c0510e 	bge	zero,r11,4326c <__addsf3+0x280>
   43128:	60002626 	beq	r12,zero,431c4 <__addsf3+0x1d8>
   4312c:	80803fe0 	cmpeqi	r2,r16,255
   43130:	1000471e 	bne	r2,zero,43250 <__addsf3+0x264>
   43134:	42010034 	orhi	r8,r8,1024
   43138:	58800710 	cmplti	r2,r11,28
   4313c:	10007e1e 	bne	r2,zero,43338 <__addsf3+0x34c>
   43140:	00c00044 	movi	r3,1
   43144:	19c7883a 	add	r3,r3,r7
   43148:	1881002c 	andhi	r2,r3,1024
   4314c:	10002f26 	beq	r2,zero,4320c <__addsf3+0x220>
   43150:	84000044 	addi	r16,r16,1
   43154:	80803fe0 	cmpeqi	r2,r16,255
   43158:	1000211e 	bne	r2,zero,431e0 <__addsf3+0x1f4>
   4315c:	1804d07a 	srli	r2,r3,1
   43160:	011f8034 	movhi	r4,32256
   43164:	213fffc4 	addi	r4,r4,-1
   43168:	18c0004c 	andi	r3,r3,1
   4316c:	1104703a 	and	r2,r2,r4
   43170:	10c6b03a 	or	r3,r2,r3
   43174:	003fc906 	br	4309c <__addsf3+0xb0>
   43178:	40004a26 	beq	r8,zero,432a4 <__addsf3+0x2b8>
   4317c:	58bfffc4 	addi	r2,r11,-1
   43180:	10009326 	beq	r2,zero,433d0 <__addsf3+0x3e4>
   43184:	5ac03fe0 	cmpeqi	r11,r11,255
   43188:	5800311e 	bne	r11,zero,43250 <__addsf3+0x264>
   4318c:	1017883a 	mov	r11,r2
   43190:	003fb006 	br	43054 <__addsf3+0x68>
   43194:	81800044 	addi	r6,r16,1
   43198:	31803f8c 	andi	r6,r6,254
   4319c:	3000541e 	bne	r6,zero,432f0 <__addsf3+0x304>
   431a0:	80007e1e 	bne	r16,zero,4339c <__addsf3+0x3b0>
   431a4:	3800a326 	beq	r7,zero,43434 <__addsf3+0x448>
   431a8:	40009326 	beq	r8,zero,433f8 <__addsf3+0x40c>
   431ac:	3a07c83a 	sub	r3,r7,r8
   431b0:	1881002c 	andhi	r2,r3,1024
   431b4:	1000a626 	beq	r2,zero,43450 <__addsf3+0x464>
   431b8:	41c7c83a 	sub	r3,r8,r7
   431bc:	4823883a 	mov	r17,r9
   431c0:	003fb606 	br	4309c <__addsf3+0xb0>
   431c4:	40003726 	beq	r8,zero,432a4 <__addsf3+0x2b8>
   431c8:	58bfffc4 	addi	r2,r11,-1
   431cc:	10007b26 	beq	r2,zero,433bc <__addsf3+0x3d0>
   431d0:	5ac03fe0 	cmpeqi	r11,r11,255
   431d4:	58001e1e 	bne	r11,zero,43250 <__addsf3+0x264>
   431d8:	1017883a 	mov	r11,r2
   431dc:	003fd606 	br	43138 <__addsf3+0x14c>
   431e0:	043fffc4 	movi	r16,-1
   431e4:	0007883a 	mov	r3,zero
   431e8:	003fb906 	br	430d0 <__addsf3+0xe4>
   431ec:	80800044 	addi	r2,r16,1
   431f0:	11803f8c 	andi	r6,r2,254
   431f4:	30005726 	beq	r6,zero,43354 <__addsf3+0x368>
   431f8:	10c03fe0 	cmpeqi	r3,r2,255
   431fc:	183ff81e 	bne	r3,zero,431e0 <__addsf3+0x1f4>
   43200:	3a07883a 	add	r3,r7,r8
   43204:	1806d07a 	srli	r3,r3,1
   43208:	1021883a 	mov	r16,r2
   4320c:	188001cc 	andi	r2,r3,7
   43210:	103fa41e 	bne	r2,zero,430a4 <__addsf3+0xb8>
   43214:	1814d0fa 	srli	r10,r3,3
   43218:	80803fe0 	cmpeqi	r2,r16,255
   4321c:	10000c1e 	bne	r2,zero,43250 <__addsf3+0x264>
   43220:	00c02034 	movhi	r3,128
   43224:	18ffffc4 	addi	r3,r3,-1
   43228:	50c6703a 	and	r3,r10,r3
   4322c:	003fa806 	br	430d0 <__addsf3+0xe4>
   43230:	38000626 	beq	r7,zero,4324c <__addsf3+0x260>
   43234:	40000626 	beq	r8,zero,43250 <__addsf3+0x264>
   43238:	2100102c 	andhi	r4,r4,64
   4323c:	20000426 	beq	r4,zero,43250 <__addsf3+0x264>
   43240:	2940102c 	andhi	r5,r5,64
   43244:	2800021e 	bne	r5,zero,43250 <__addsf3+0x264>
   43248:	4823883a 	mov	r17,r9
   4324c:	6815883a 	mov	r10,r13
   43250:	503fe326 	beq	r10,zero,431e0 <__addsf3+0x1f4>
   43254:	00802034 	movhi	r2,128
   43258:	50c01034 	orhi	r3,r10,64
   4325c:	10bfffc4 	addi	r2,r2,-1
   43260:	1886703a 	and	r3,r3,r2
   43264:	043fffc4 	movi	r16,-1
   43268:	003f9906 	br	430d0 <__addsf3+0xe4>
   4326c:	583fdf26 	beq	r11,zero,431ec <__addsf3+0x200>
   43270:	6417c83a 	sub	r11,r12,r16
   43274:	80004226 	beq	r16,zero,43380 <__addsf3+0x394>
   43278:	60803fe0 	cmpeqi	r2,r12,255
   4327c:	103ff31e 	bne	r2,zero,4324c <__addsf3+0x260>
   43280:	39c10034 	orhi	r7,r7,1024
   43284:	58800710 	cmplti	r2,r11,28
   43288:	10005d1e 	bne	r2,zero,43400 <__addsf3+0x414>
   4328c:	00800044 	movi	r2,1
   43290:	1207883a 	add	r3,r2,r8
   43294:	6021883a 	mov	r16,r12
   43298:	003fab06 	br	43148 <__addsf3+0x15c>
   4329c:	4823883a 	mov	r17,r9
   432a0:	6815883a 	mov	r10,r13
   432a4:	5821883a 	mov	r16,r11
   432a8:	003fdb06 	br	43218 <__addsf3+0x22c>
   432ac:	1405c83a 	sub	r2,r2,r16
   432b0:	10800044 	addi	r2,r2,1
   432b4:	00c00804 	movi	r3,32
   432b8:	1887c83a 	sub	r3,r3,r2
   432bc:	90c6983a 	sll	r3,r18,r3
   432c0:	90a4d83a 	srl	r18,r18,r2
   432c4:	0021883a 	mov	r16,zero
   432c8:	1806c03a 	cmpne	r3,r3,zero
   432cc:	1c86b03a 	or	r3,r3,r18
   432d0:	003f7206 	br	4309c <__addsf3+0xb0>
   432d4:	00c00804 	movi	r3,32
   432d8:	1ac7c83a 	sub	r3,r3,r11
   432dc:	40c6983a 	sll	r3,r8,r3
   432e0:	42d6d83a 	srl	r11,r8,r11
   432e4:	1806c03a 	cmpne	r3,r3,zero
   432e8:	1ac6b03a 	or	r3,r3,r11
   432ec:	003f5c06 	br	43060 <__addsf3+0x74>
   432f0:	3a25c83a 	sub	r18,r7,r8
   432f4:	9081002c 	andhi	r2,r18,1024
   432f8:	10002d1e 	bne	r2,zero,433b0 <__addsf3+0x3c4>
   432fc:	903f5e1e 	bne	r18,zero,43078 <__addsf3+0x8c>
   43300:	0023883a 	mov	r17,zero
   43304:	0021883a 	mov	r16,zero
   43308:	0007883a 	mov	r3,zero
   4330c:	003f7006 	br	430d0 <__addsf3+0xe4>
   43310:	60803fe0 	cmpeqi	r2,r12,255
   43314:	103fcc1e 	bne	r2,zero,43248 <__addsf3+0x25c>
   43318:	39c10034 	orhi	r7,r7,1024
   4331c:	58800710 	cmplti	r2,r11,28
   43320:	10002e1e 	bne	r2,zero,433dc <__addsf3+0x3f0>
   43324:	00800044 	movi	r2,1
   43328:	4087c83a 	sub	r3,r8,r2
   4332c:	4823883a 	mov	r17,r9
   43330:	6021883a 	mov	r16,r12
   43334:	003f4b06 	br	43064 <__addsf3+0x78>
   43338:	00c00804 	movi	r3,32
   4333c:	1ac7c83a 	sub	r3,r3,r11
   43340:	40c6983a 	sll	r3,r8,r3
   43344:	42d6d83a 	srl	r11,r8,r11
   43348:	1806c03a 	cmpne	r3,r3,zero
   4334c:	1ac6b03a 	or	r3,r3,r11
   43350:	003f7c06 	br	43144 <__addsf3+0x158>
   43354:	803fb61e 	bne	r16,zero,43230 <__addsf3+0x244>
   43358:	38003a26 	beq	r7,zero,43444 <__addsf3+0x458>
   4335c:	40002626 	beq	r8,zero,433f8 <__addsf3+0x40c>
   43360:	3a07883a 	add	r3,r7,r8
   43364:	1881002c 	andhi	r2,r3,1024
   43368:	103fa826 	beq	r2,zero,4320c <__addsf3+0x220>
   4336c:	00bf0034 	movhi	r2,64512
   43370:	10bfffc4 	addi	r2,r2,-1
   43374:	1886703a 	and	r3,r3,r2
   43378:	04000044 	movi	r16,1
   4337c:	003fa306 	br	4320c <__addsf3+0x220>
   43380:	383fc726 	beq	r7,zero,432a0 <__addsf3+0x2b4>
   43384:	58bfffc4 	addi	r2,r11,-1
   43388:	10000c26 	beq	r2,zero,433bc <__addsf3+0x3d0>
   4338c:	5ac03fe0 	cmpeqi	r11,r11,255
   43390:	583fae1e 	bne	r11,zero,4324c <__addsf3+0x260>
   43394:	1017883a 	mov	r11,r2
   43398:	003fba06 	br	43284 <__addsf3+0x298>
   4339c:	383fa51e 	bne	r7,zero,43234 <__addsf3+0x248>
   433a0:	403fa91e 	bne	r8,zero,43248 <__addsf3+0x25c>
   433a4:	0023883a 	mov	r17,zero
   433a8:	1007883a 	mov	r3,r2
   433ac:	003fad06 	br	43264 <__addsf3+0x278>
   433b0:	41e5c83a 	sub	r18,r8,r7
   433b4:	4823883a 	mov	r17,r9
   433b8:	003f2f06 	br	43078 <__addsf3+0x8c>
   433bc:	3a07883a 	add	r3,r7,r8
   433c0:	1881002c 	andhi	r2,r3,1024
   433c4:	10001926 	beq	r2,zero,4342c <__addsf3+0x440>
   433c8:	04000084 	movi	r16,2
   433cc:	003f6306 	br	4315c <__addsf3+0x170>
   433d0:	3a07c83a 	sub	r3,r7,r8
   433d4:	04000044 	movi	r16,1
   433d8:	003f2206 	br	43064 <__addsf3+0x78>
   433dc:	00800804 	movi	r2,32
   433e0:	12c5c83a 	sub	r2,r2,r11
   433e4:	3884983a 	sll	r2,r7,r2
   433e8:	3ad6d83a 	srl	r11,r7,r11
   433ec:	1004c03a 	cmpne	r2,r2,zero
   433f0:	12c4b03a 	or	r2,r2,r11
   433f4:	003fcc06 	br	43328 <__addsf3+0x33c>
   433f8:	0021883a 	mov	r16,zero
   433fc:	003f3406 	br	430d0 <__addsf3+0xe4>
   43400:	00800804 	movi	r2,32
   43404:	12c5c83a 	sub	r2,r2,r11
   43408:	3884983a 	sll	r2,r7,r2
   4340c:	3ad6d83a 	srl	r11,r7,r11
   43410:	1004c03a 	cmpne	r2,r2,zero
   43414:	12c4b03a 	or	r2,r2,r11
   43418:	003f9d06 	br	43290 <__addsf3+0x2a4>
   4341c:	41c7c83a 	sub	r3,r8,r7
   43420:	4823883a 	mov	r17,r9
   43424:	04000044 	movi	r16,1
   43428:	003f0e06 	br	43064 <__addsf3+0x78>
   4342c:	04000044 	movi	r16,1
   43430:	003f7606 	br	4320c <__addsf3+0x220>
   43434:	403fb226 	beq	r8,zero,43300 <__addsf3+0x314>
   43438:	4823883a 	mov	r17,r9
   4343c:	6807883a 	mov	r3,r13
   43440:	003f2306 	br	430d0 <__addsf3+0xe4>
   43444:	6807883a 	mov	r3,r13
   43448:	0021883a 	mov	r16,zero
   4344c:	003f2006 	br	430d0 <__addsf3+0xe4>
   43450:	183fab26 	beq	r3,zero,43300 <__addsf3+0x314>
   43454:	003f6d06 	br	4320c <__addsf3+0x220>

00043458 <__divsf3>:
   43458:	defff604 	addi	sp,sp,-40
   4345c:	2006d5fa 	srli	r3,r4,23
   43460:	dd400615 	stw	r21,24(sp)
   43464:	202ad7fa 	srli	r21,r4,31
   43468:	00802034 	movhi	r2,128
   4346c:	dc400215 	stw	r17,8(sp)
   43470:	dc000115 	stw	r16,4(sp)
   43474:	10bfffc4 	addi	r2,r2,-1
   43478:	dfc00915 	stw	ra,36(sp)
   4347c:	ddc00815 	stw	r23,32(sp)
   43480:	dd800715 	stw	r22,28(sp)
   43484:	dd000515 	stw	r20,20(sp)
   43488:	dcc00415 	stw	r19,16(sp)
   4348c:	dc800315 	stw	r18,12(sp)
   43490:	18c03fcc 	andi	r3,r3,255
   43494:	1120703a 	and	r16,r2,r4
   43498:	a823883a 	mov	r17,r21
   4349c:	18007e26 	beq	r3,zero,43698 <__divsf3+0x240>
   434a0:	18803fe0 	cmpeqi	r2,r3,255
   434a4:	1000811e 	bne	r2,zero,436ac <__divsf3+0x254>
   434a8:	800490fa 	slli	r2,r16,3
   434ac:	1cffe044 	addi	r19,r3,-127
   434b0:	0029883a 	mov	r20,zero
   434b4:	14010034 	orhi	r16,r2,1024
   434b8:	002d883a 	mov	r22,zero
   434bc:	2804d5fa 	srli	r2,r5,23
   434c0:	01002034 	movhi	r4,128
   434c4:	213fffc4 	addi	r4,r4,-1
   434c8:	10803fcc 	andi	r2,r2,255
   434cc:	282ed7fa 	srli	r23,r5,31
   434d0:	2164703a 	and	r18,r4,r5
   434d4:	10005426 	beq	r2,zero,43628 <__divsf3+0x1d0>
   434d8:	11003fe0 	cmpeqi	r4,r2,255
   434dc:	20004e1e 	bne	r4,zero,43618 <__divsf3+0x1c0>
   434e0:	900890fa 	slli	r4,r18,3
   434e4:	10bfe044 	addi	r2,r2,-127
   434e8:	000b883a 	mov	r5,zero
   434ec:	24810034 	orhi	r18,r4,1024
   434f0:	bd6af03a 	xor	r21,r23,r21
   434f4:	a1000428 	cmpgeui	r4,r20,16
   434f8:	a80d883a 	mov	r6,r21
   434fc:	98a7c83a 	sub	r19,r19,r2
   43500:	2000be1e 	bne	r4,zero,437fc <__divsf3+0x3a4>
   43504:	a00490ba 	slli	r2,r20,2
   43508:	01000134 	movhi	r4,4
   4350c:	1109883a 	add	r4,r2,r4
   43510:	208d4617 	ldw	r2,13592(r4)
   43514:	1000683a 	jmp	r2
   43518:	000437fc 	xorhi	zero,zero,4319
   4351c:	0004372c 	andhi	zero,zero,4316
   43520:	0004373c 	xorhi	zero,zero,4316
   43524:	0004355c 	xori	zero,zero,4309
   43528:	0004373c 	xorhi	zero,zero,4316
   4352c:	000437a8 	cmpgeui	zero,zero,4318
   43530:	0004373c 	xorhi	zero,zero,4316
   43534:	0004355c 	xori	zero,zero,4309
   43538:	0004372c 	andhi	zero,zero,4316
   4353c:	0004372c 	andhi	zero,zero,4316
   43540:	000437a8 	cmpgeui	zero,zero,4318
   43544:	0004355c 	xori	zero,zero,4309
   43548:	00043568 	cmpgeui	zero,zero,4309
   4354c:	00043568 	cmpgeui	zero,zero,4309
   43550:	00043568 	cmpgeui	zero,zero,4309
   43554:	000437c0 	call	437c <__reset-0x3bc84>
   43558:	0025883a 	mov	r18,zero
   4355c:	b823883a 	mov	r17,r23
   43560:	9021883a 	mov	r16,r18
   43564:	282d883a 	mov	r22,r5
   43568:	b08000a0 	cmpeqi	r2,r22,2
   4356c:	10008b1e 	bne	r2,zero,4379c <__divsf3+0x344>
   43570:	b08000e0 	cmpeqi	r2,r22,3
   43574:	10009c1e 	bne	r2,zero,437e8 <__divsf3+0x390>
   43578:	b5800060 	cmpeqi	r22,r22,1
   4357c:	b000141e 	bne	r22,zero,435d0 <__divsf3+0x178>
   43580:	98c01fc4 	addi	r3,r19,127
   43584:	00c0710e 	bge	zero,r3,4374c <__divsf3+0x2f4>
   43588:	808001cc 	andi	r2,r16,7
   4358c:	10000426 	beq	r2,zero,435a0 <__divsf3+0x148>
   43590:	808003cc 	andi	r2,r16,15
   43594:	10800120 	cmpeqi	r2,r2,4
   43598:	1000011e 	bne	r2,zero,435a0 <__divsf3+0x148>
   4359c:	84000104 	addi	r16,r16,4
   435a0:	8082002c 	andhi	r2,r16,2048
   435a4:	10000426 	beq	r2,zero,435b8 <__divsf3+0x160>
   435a8:	00be0034 	movhi	r2,63488
   435ac:	10bfffc4 	addi	r2,r2,-1
   435b0:	80a0703a 	and	r16,r16,r2
   435b4:	98c02004 	addi	r3,r19,128
   435b8:	18803fc8 	cmpgei	r2,r3,255
   435bc:	1000771e 	bne	r2,zero,4379c <__divsf3+0x344>
   435c0:	800891ba 	slli	r4,r16,6
   435c4:	2008d27a 	srli	r4,r4,9
   435c8:	00000306 	br	435d8 <__divsf3+0x180>
   435cc:	1823883a 	mov	r17,r3
   435d0:	0007883a 	mov	r3,zero
   435d4:	0009883a 	mov	r4,zero
   435d8:	18803fcc 	andi	r2,r3,255
   435dc:	100495fa 	slli	r2,r2,23
   435e0:	882297fa 	slli	r17,r17,31
   435e4:	1104b03a 	or	r2,r2,r4
   435e8:	1444b03a 	or	r2,r2,r17
   435ec:	dfc00917 	ldw	ra,36(sp)
   435f0:	ddc00817 	ldw	r23,32(sp)
   435f4:	dd800717 	ldw	r22,28(sp)
   435f8:	dd400617 	ldw	r21,24(sp)
   435fc:	dd000517 	ldw	r20,20(sp)
   43600:	dcc00417 	ldw	r19,16(sp)
   43604:	dc800317 	ldw	r18,12(sp)
   43608:	dc400217 	ldw	r17,8(sp)
   4360c:	dc000117 	ldw	r16,4(sp)
   43610:	dec00a04 	addi	sp,sp,40
   43614:	f800283a 	ret
   43618:	9000401e 	bne	r18,zero,4371c <__divsf3+0x2c4>
   4361c:	9cffc044 	addi	r19,r19,-255
   43620:	01400084 	movi	r5,2
   43624:	00000206 	br	43630 <__divsf3+0x1d8>
   43628:	9000341e 	bne	r18,zero,436fc <__divsf3+0x2a4>
   4362c:	01400044 	movi	r5,1
   43630:	2d04b03a 	or	r2,r5,r20
   43634:	bd46f03a 	xor	r3,r23,r21
   43638:	11000428 	cmpgeui	r4,r2,16
   4363c:	180d883a 	mov	r6,r3
   43640:	20003a1e 	bne	r4,zero,4372c <__divsf3+0x2d4>
   43644:	100490ba 	slli	r2,r2,2
   43648:	01000134 	movhi	r4,4
   4364c:	1109883a 	add	r4,r2,r4
   43650:	208d9617 	ldw	r2,13912(r4)
   43654:	1000683a 	jmp	r2
   43658:	0004372c 	andhi	zero,zero,4316
   4365c:	0004372c 	andhi	zero,zero,4316
   43660:	000435cc 	andi	zero,zero,4311
   43664:	00043558 	cmpnei	zero,zero,4309
   43668:	000435cc 	andi	zero,zero,4311
   4366c:	000437a8 	cmpgeui	zero,zero,4318
   43670:	000435cc 	andi	zero,zero,4311
   43674:	00043558 	cmpnei	zero,zero,4309
   43678:	0004372c 	andhi	zero,zero,4316
   4367c:	0004372c 	andhi	zero,zero,4316
   43680:	000437a8 	cmpgeui	zero,zero,4318
   43684:	00043558 	cmpnei	zero,zero,4309
   43688:	00043568 	cmpgeui	zero,zero,4309
   4368c:	00043568 	cmpgeui	zero,zero,4309
   43690:	00043568 	cmpgeui	zero,zero,4309
   43694:	000437bc 	xorhi	zero,zero,4318
   43698:	80000d1e 	bne	r16,zero,436d0 <__divsf3+0x278>
   4369c:	05000104 	movi	r20,4
   436a0:	0027883a 	mov	r19,zero
   436a4:	05800044 	movi	r22,1
   436a8:	003f8406 	br	434bc <__divsf3+0x64>
   436ac:	8000041e 	bne	r16,zero,436c0 <__divsf3+0x268>
   436b0:	05000204 	movi	r20,8
   436b4:	04c03fc4 	movi	r19,255
   436b8:	05800084 	movi	r22,2
   436bc:	003f7f06 	br	434bc <__divsf3+0x64>
   436c0:	05000304 	movi	r20,12
   436c4:	04c03fc4 	movi	r19,255
   436c8:	058000c4 	movi	r22,3
   436cc:	003f7b06 	br	434bc <__divsf3+0x64>
   436d0:	8009883a 	mov	r4,r16
   436d4:	d9400015 	stw	r5,0(sp)
   436d8:	0046bc80 	call	46bc8 <__clzsi2>
   436dc:	10fffec4 	addi	r3,r2,-5
   436e0:	80e0983a 	sll	r16,r16,r3
   436e4:	00ffe284 	movi	r3,-118
   436e8:	d9400017 	ldw	r5,0(sp)
   436ec:	18a7c83a 	sub	r19,r3,r2
   436f0:	0029883a 	mov	r20,zero
   436f4:	002d883a 	mov	r22,zero
   436f8:	003f7006 	br	434bc <__divsf3+0x64>
   436fc:	9009883a 	mov	r4,r18
   43700:	0046bc80 	call	46bc8 <__clzsi2>
   43704:	10fffec4 	addi	r3,r2,-5
   43708:	90e4983a 	sll	r18,r18,r3
   4370c:	00ffe284 	movi	r3,-118
   43710:	1885c83a 	sub	r2,r3,r2
   43714:	000b883a 	mov	r5,zero
   43718:	003f7506 	br	434f0 <__divsf3+0x98>
   4371c:	a50000d4 	ori	r20,r20,3
   43720:	00803fc4 	movi	r2,255
   43724:	014000c4 	movi	r5,3
   43728:	003f7106 	br	434f0 <__divsf3+0x98>
   4372c:	3023883a 	mov	r17,r6
   43730:	00ffffc4 	movi	r3,-1
   43734:	0009883a 	mov	r4,zero
   43738:	003fa706 	br	435d8 <__divsf3+0x180>
   4373c:	a823883a 	mov	r17,r21
   43740:	0007883a 	mov	r3,zero
   43744:	0009883a 	mov	r4,zero
   43748:	003fa306 	br	435d8 <__divsf3+0x180>
   4374c:	00800044 	movi	r2,1
   43750:	10c5c83a 	sub	r2,r2,r3
   43754:	10c00708 	cmpgei	r3,r2,28
   43758:	183f9d1e 	bne	r3,zero,435d0 <__divsf3+0x178>
   4375c:	98c02784 	addi	r3,r19,158
   43760:	80c6983a 	sll	r3,r16,r3
   43764:	8084d83a 	srl	r2,r16,r2
   43768:	1806c03a 	cmpne	r3,r3,zero
   4376c:	10c4b03a 	or	r2,r2,r3
   43770:	10c001cc 	andi	r3,r2,7
   43774:	18000426 	beq	r3,zero,43788 <__divsf3+0x330>
   43778:	10c003cc 	andi	r3,r2,15
   4377c:	18c00120 	cmpeqi	r3,r3,4
   43780:	1800011e 	bne	r3,zero,43788 <__divsf3+0x330>
   43784:	10800104 	addi	r2,r2,4
   43788:	10c1002c 	andhi	r3,r2,1024
   4378c:	18003426 	beq	r3,zero,43860 <__divsf3+0x408>
   43790:	00c00044 	movi	r3,1
   43794:	0009883a 	mov	r4,zero
   43798:	003f8f06 	br	435d8 <__divsf3+0x180>
   4379c:	00ffffc4 	movi	r3,-1
   437a0:	0009883a 	mov	r4,zero
   437a4:	003f8c06 	br	435d8 <__divsf3+0x180>
   437a8:	01002034 	movhi	r4,128
   437ac:	0023883a 	mov	r17,zero
   437b0:	213fffc4 	addi	r4,r4,-1
   437b4:	00ffffc4 	movi	r3,-1
   437b8:	003f8706 	br	435d8 <__divsf3+0x180>
   437bc:	0025883a 	mov	r18,zero
   437c0:	8080102c 	andhi	r2,r16,64
   437c4:	10000826 	beq	r2,zero,437e8 <__divsf3+0x390>
   437c8:	9080102c 	andhi	r2,r18,64
   437cc:	1000061e 	bne	r2,zero,437e8 <__divsf3+0x390>
   437d0:	00802034 	movhi	r2,128
   437d4:	91001034 	orhi	r4,r18,64
   437d8:	10bfffc4 	addi	r2,r2,-1
   437dc:	2088703a 	and	r4,r4,r2
   437e0:	b823883a 	mov	r17,r23
   437e4:	003ff306 	br	437b4 <__divsf3+0x35c>
   437e8:	00802034 	movhi	r2,128
   437ec:	81001034 	orhi	r4,r16,64
   437f0:	10bfffc4 	addi	r2,r2,-1
   437f4:	2088703a 	and	r4,r4,r2
   437f8:	003fee06 	br	437b4 <__divsf3+0x35c>
   437fc:	8004917a 	slli	r2,r16,5
   43800:	9008917a 	slli	r4,r18,5
   43804:	1100122e 	bgeu	r2,r4,43850 <__divsf3+0x3f8>
   43808:	9cffffc4 	addi	r19,r19,-1
   4380c:	014006c4 	movi	r5,27
   43810:	0007883a 	mov	r3,zero
   43814:	100d883a 	mov	r6,r2
   43818:	297fffc4 	addi	r5,r5,-1
   4381c:	1085883a 	add	r2,r2,r2
   43820:	18c7883a 	add	r3,r3,r3
   43824:	30000116 	blt	r6,zero,4382c <__divsf3+0x3d4>
   43828:	11000236 	bltu	r2,r4,43834 <__divsf3+0x3dc>
   4382c:	1105c83a 	sub	r2,r2,r4
   43830:	18c00054 	ori	r3,r3,1
   43834:	283ff71e 	bne	r5,zero,43814 <__divsf3+0x3bc>
   43838:	1004c03a 	cmpne	r2,r2,zero
   4383c:	10e0b03a 	or	r16,r2,r3
   43840:	98c01fc4 	addi	r3,r19,127
   43844:	a823883a 	mov	r17,r21
   43848:	00ff4f16 	blt	zero,r3,43588 <__divsf3+0x130>
   4384c:	003fbf06 	br	4374c <__divsf3+0x2f4>
   43850:	1105c83a 	sub	r2,r2,r4
   43854:	01400684 	movi	r5,26
   43858:	00c00044 	movi	r3,1
   4385c:	003fed06 	br	43814 <__divsf3+0x3bc>
   43860:	100491ba 	slli	r2,r2,6
   43864:	1008d27a 	srli	r4,r2,9
   43868:	003f5b06 	br	435d8 <__divsf3+0x180>

0004386c <__eqsf2>:
   4386c:	200cd5fa 	srli	r6,r4,23
   43870:	2806d5fa 	srli	r3,r5,23
   43874:	00802034 	movhi	r2,128
   43878:	31803fcc 	andi	r6,r6,255
   4387c:	10bfffc4 	addi	r2,r2,-1
   43880:	31c03fd8 	cmpnei	r7,r6,255
   43884:	2010d7fa 	srli	r8,r4,31
   43888:	2812d7fa 	srli	r9,r5,31
   4388c:	1108703a 	and	r4,r2,r4
   43890:	18c03fcc 	andi	r3,r3,255
   43894:	1144703a 	and	r2,r2,r5
   43898:	38000626 	beq	r7,zero,438b4 <__eqsf2+0x48>
   4389c:	19403fe0 	cmpeqi	r5,r3,255
   438a0:	2800021e 	bne	r5,zero,438ac <__eqsf2+0x40>
   438a4:	30c0011e 	bne	r6,r3,438ac <__eqsf2+0x40>
   438a8:	20800626 	beq	r4,r2,438c4 <__eqsf2+0x58>
   438ac:	00800044 	movi	r2,1
   438b0:	f800283a 	ret
   438b4:	203ffd1e 	bne	r4,zero,438ac <__eqsf2+0x40>
   438b8:	18c03fd8 	cmpnei	r3,r3,255
   438bc:	183ffb1e 	bne	r3,zero,438ac <__eqsf2+0x40>
   438c0:	103ffa1e 	bne	r2,zero,438ac <__eqsf2+0x40>
   438c4:	42400326 	beq	r8,r9,438d4 <__eqsf2+0x68>
   438c8:	303ff81e 	bne	r6,zero,438ac <__eqsf2+0x40>
   438cc:	2004c03a 	cmpne	r2,r4,zero
   438d0:	f800283a 	ret
   438d4:	0005883a 	mov	r2,zero
   438d8:	f800283a 	ret

000438dc <__gesf2>:
   438dc:	200cd5fa 	srli	r6,r4,23
   438e0:	280ed5fa 	srli	r7,r5,23
   438e4:	00c02034 	movhi	r3,128
   438e8:	31803fcc 	andi	r6,r6,255
   438ec:	18ffffc4 	addi	r3,r3,-1
   438f0:	32003fd8 	cmpnei	r8,r6,255
   438f4:	2012d7fa 	srli	r9,r4,31
   438f8:	2804d7fa 	srli	r2,r5,31
   438fc:	1908703a 	and	r4,r3,r4
   43900:	1946703a 	and	r3,r3,r5
   43904:	39403fcc 	andi	r5,r7,255
   43908:	40000826 	beq	r8,zero,4392c <__gesf2+0x50>
   4390c:	29c03fd8 	cmpnei	r7,r5,255
   43910:	38000926 	beq	r7,zero,43938 <__gesf2+0x5c>
   43914:	3000121e 	bne	r6,zero,43960 <__gesf2+0x84>
   43918:	28000e1e 	bne	r5,zero,43954 <__gesf2+0x78>
   4391c:	18000d1e 	bne	r3,zero,43954 <__gesf2+0x78>
   43920:	2000081e 	bne	r4,zero,43944 <__gesf2+0x68>
   43924:	0005883a 	mov	r2,zero
   43928:	f800283a 	ret
   4392c:	2000171e 	bne	r4,zero,4398c <__gesf2+0xb0>
   43930:	29c03fe0 	cmpeqi	r7,r5,255
   43934:	38000a26 	beq	r7,zero,43960 <__gesf2+0x84>
   43938:	1800141e 	bne	r3,zero,4398c <__gesf2+0xb0>
   4393c:	30000526 	beq	r6,zero,43954 <__gesf2+0x78>
   43940:	48800a26 	beq	r9,r2,4396c <__gesf2+0x90>
   43944:	00800044 	movi	r2,1
   43948:	48000426 	beq	r9,zero,4395c <__gesf2+0x80>
   4394c:	00bfffc4 	movi	r2,-1
   43950:	f800283a 	ret
   43954:	203ffa1e 	bne	r4,zero,43940 <__gesf2+0x64>
   43958:	103ffc26 	beq	r2,zero,4394c <__gesf2+0x70>
   4395c:	f800283a 	ret
   43960:	283ff71e 	bne	r5,zero,43940 <__gesf2+0x64>
   43964:	183ff61e 	bne	r3,zero,43940 <__gesf2+0x64>
   43968:	003ff606 	br	43944 <__gesf2+0x68>
   4396c:	29800416 	blt	r5,r6,43980 <__gesf2+0xa4>
   43970:	317ff916 	blt	r6,r5,43958 <__gesf2+0x7c>
   43974:	19000236 	bltu	r3,r4,43980 <__gesf2+0xa4>
   43978:	20ffea2e 	bgeu	r4,r3,43924 <__gesf2+0x48>
   4397c:	003ff606 	br	43958 <__gesf2+0x7c>
   43980:	103ff21e 	bne	r2,zero,4394c <__gesf2+0x70>
   43984:	00800044 	movi	r2,1
   43988:	f800283a 	ret
   4398c:	00bfff84 	movi	r2,-2
   43990:	f800283a 	ret

00043994 <__lesf2>:
   43994:	200cd5fa 	srli	r6,r4,23
   43998:	280ed5fa 	srli	r7,r5,23
   4399c:	00c02034 	movhi	r3,128
   439a0:	31803fcc 	andi	r6,r6,255
   439a4:	18ffffc4 	addi	r3,r3,-1
   439a8:	32003fd8 	cmpnei	r8,r6,255
   439ac:	2012d7fa 	srli	r9,r4,31
   439b0:	2804d7fa 	srli	r2,r5,31
   439b4:	1908703a 	and	r4,r3,r4
   439b8:	1946703a 	and	r3,r3,r5
   439bc:	39403fcc 	andi	r5,r7,255
   439c0:	40000826 	beq	r8,zero,439e4 <__lesf2+0x50>
   439c4:	29c03fd8 	cmpnei	r7,r5,255
   439c8:	38000926 	beq	r7,zero,439f0 <__lesf2+0x5c>
   439cc:	3000181e 	bne	r6,zero,43a30 <__lesf2+0x9c>
   439d0:	2800091e 	bne	r5,zero,439f8 <__lesf2+0x64>
   439d4:	1800081e 	bne	r3,zero,439f8 <__lesf2+0x64>
   439d8:	2000091e 	bne	r4,zero,43a00 <__lesf2+0x6c>
   439dc:	0005883a 	mov	r2,zero
   439e0:	f800283a 	ret
   439e4:	20000a1e 	bne	r4,zero,43a10 <__lesf2+0x7c>
   439e8:	29c03fe0 	cmpeqi	r7,r5,255
   439ec:	38001026 	beq	r7,zero,43a30 <__lesf2+0x9c>
   439f0:	1800071e 	bne	r3,zero,43a10 <__lesf2+0x7c>
   439f4:	3000011e 	bne	r6,zero,439fc <__lesf2+0x68>
   439f8:	20000b26 	beq	r4,zero,43a28 <__lesf2+0x94>
   439fc:	48800626 	beq	r9,r2,43a18 <__lesf2+0x84>
   43a00:	00800044 	movi	r2,1
   43a04:	48000926 	beq	r9,zero,43a2c <__lesf2+0x98>
   43a08:	00bfffc4 	movi	r2,-1
   43a0c:	f800283a 	ret
   43a10:	00800084 	movi	r2,2
   43a14:	f800283a 	ret
   43a18:	29800816 	blt	r5,r6,43a3c <__lesf2+0xa8>
   43a1c:	31400216 	blt	r6,r5,43a28 <__lesf2+0x94>
   43a20:	19000636 	bltu	r3,r4,43a3c <__lesf2+0xa8>
   43a24:	20ffed2e 	bgeu	r4,r3,439dc <__lesf2+0x48>
   43a28:	103ff726 	beq	r2,zero,43a08 <__lesf2+0x74>
   43a2c:	f800283a 	ret
   43a30:	283ff21e 	bne	r5,zero,439fc <__lesf2+0x68>
   43a34:	183ff11e 	bne	r3,zero,439fc <__lesf2+0x68>
   43a38:	003ff106 	br	43a00 <__lesf2+0x6c>
   43a3c:	103ff21e 	bne	r2,zero,43a08 <__lesf2+0x74>
   43a40:	00800044 	movi	r2,1
   43a44:	f800283a 	ret

00043a48 <__mulsf3>:
   43a48:	2004d5fa 	srli	r2,r4,23
   43a4c:	defff604 	addi	sp,sp,-40
   43a50:	dc000115 	stw	r16,4(sp)
   43a54:	04002034 	movhi	r16,128
   43a58:	dd400615 	stw	r21,24(sp)
   43a5c:	843fffc4 	addi	r16,r16,-1
   43a60:	dfc00915 	stw	ra,36(sp)
   43a64:	ddc00815 	stw	r23,32(sp)
   43a68:	dd800715 	stw	r22,28(sp)
   43a6c:	dd000515 	stw	r20,20(sp)
   43a70:	dcc00415 	stw	r19,16(sp)
   43a74:	dc800315 	stw	r18,12(sp)
   43a78:	dc400215 	stw	r17,8(sp)
   43a7c:	10803fcc 	andi	r2,r2,255
   43a80:	202ad7fa 	srli	r21,r4,31
   43a84:	8120703a 	and	r16,r16,r4
   43a88:	10009d26 	beq	r2,zero,43d00 <__mulsf3+0x2b8>
   43a8c:	10c03fe0 	cmpeqi	r3,r2,255
   43a90:	1800a01e 	bne	r3,zero,43d14 <__mulsf3+0x2cc>
   43a94:	802090fa 	slli	r16,r16,3
   43a98:	14bfe044 	addi	r18,r2,-127
   43a9c:	0023883a 	mov	r17,zero
   43aa0:	84010034 	orhi	r16,r16,1024
   43aa4:	002d883a 	mov	r22,zero
   43aa8:	2804d5fa 	srli	r2,r5,23
   43aac:	2828d7fa 	srli	r20,r5,31
   43ab0:	04c02034 	movhi	r19,128
   43ab4:	9cffffc4 	addi	r19,r19,-1
   43ab8:	10803fcc 	andi	r2,r2,255
   43abc:	9966703a 	and	r19,r19,r5
   43ac0:	a02f883a 	mov	r23,r20
   43ac4:	10008526 	beq	r2,zero,43cdc <__mulsf3+0x294>
   43ac8:	10c03fe0 	cmpeqi	r3,r2,255
   43acc:	1800231e 	bne	r3,zero,43b5c <__mulsf3+0x114>
   43ad0:	982690fa 	slli	r19,r19,3
   43ad4:	10bfe044 	addi	r2,r2,-127
   43ad8:	1485883a 	add	r2,r2,r18
   43adc:	88c002c8 	cmpgei	r3,r17,11
   43ae0:	9cc10034 	orhi	r19,r19,1024
   43ae4:	000b883a 	mov	r5,zero
   43ae8:	ad08f03a 	xor	r4,r21,r20
   43aec:	14800044 	addi	r18,r2,1
   43af0:	18002226 	beq	r3,zero,43b7c <__mulsf3+0x134>
   43af4:	8c4002d8 	cmpnei	r17,r17,11
   43af8:	a82f883a 	mov	r23,r21
   43afc:	a009883a 	mov	r4,r20
   43b00:	88003a1e 	bne	r17,zero,43bec <__mulsf3+0x1a4>
   43b04:	288000e0 	cmpeqi	r2,r5,3
   43b08:	1000bc1e 	bne	r2,zero,43dfc <__mulsf3+0x3b4>
   43b0c:	29400060 	cmpeqi	r5,r5,1
   43b10:	28005f26 	beq	r5,zero,43c90 <__mulsf3+0x248>
   43b14:	0007883a 	mov	r3,zero
   43b18:	0021883a 	mov	r16,zero
   43b1c:	18803fcc 	andi	r2,r3,255
   43b20:	100495fa 	slli	r2,r2,23
   43b24:	200897fa 	slli	r4,r4,31
   43b28:	1404b03a 	or	r2,r2,r16
   43b2c:	1104b03a 	or	r2,r2,r4
   43b30:	dfc00917 	ldw	ra,36(sp)
   43b34:	ddc00817 	ldw	r23,32(sp)
   43b38:	dd800717 	ldw	r22,28(sp)
   43b3c:	dd400617 	ldw	r21,24(sp)
   43b40:	dd000517 	ldw	r20,20(sp)
   43b44:	dcc00417 	ldw	r19,16(sp)
   43b48:	dc800317 	ldw	r18,12(sp)
   43b4c:	dc400217 	ldw	r17,8(sp)
   43b50:	dc000117 	ldw	r16,4(sp)
   43b54:	dec00a04 	addi	sp,sp,40
   43b58:	f800283a 	ret
   43b5c:	90803fc4 	addi	r2,r18,255
   43b60:	9800101e 	bne	r19,zero,43ba4 <__mulsf3+0x15c>
   43b64:	8c400094 	ori	r17,r17,2
   43b68:	88c002c8 	cmpgei	r3,r17,11
   43b6c:	ad08f03a 	xor	r4,r21,r20
   43b70:	94804004 	addi	r18,r18,256
   43b74:	1800a61e 	bne	r3,zero,43e10 <__mulsf3+0x3c8>
   43b78:	01400084 	movi	r5,2
   43b7c:	88c000c8 	cmpgei	r3,r17,3
   43b80:	18000e1e 	bne	r3,zero,43bbc <__mulsf3+0x174>
   43b84:	8c7fffc4 	addi	r17,r17,-1
   43b88:	8c4000a8 	cmpgeui	r17,r17,2
   43b8c:	8800221e 	bne	r17,zero,43c18 <__mulsf3+0x1d0>
   43b90:	288000a0 	cmpeqi	r2,r5,2
   43b94:	103fdd26 	beq	r2,zero,43b0c <__mulsf3+0xc4>
   43b98:	00ffffc4 	movi	r3,-1
   43b9c:	0021883a 	mov	r16,zero
   43ba0:	003fde06 	br	43b1c <__mulsf3+0xd4>
   43ba4:	8c4000d4 	ori	r17,r17,3
   43ba8:	88c002c8 	cmpgei	r3,r17,11
   43bac:	ad08f03a 	xor	r4,r21,r20
   43bb0:	94804004 	addi	r18,r18,256
   43bb4:	1800b01e 	bne	r3,zero,43e78 <__mulsf3+0x430>
   43bb8:	014000c4 	movi	r5,3
   43bbc:	00c00044 	movi	r3,1
   43bc0:	1c46983a 	sll	r3,r3,r17
   43bc4:	19814c0c 	andi	r6,r3,1328
   43bc8:	3000071e 	bne	r6,zero,43be8 <__mulsf3+0x1a0>
   43bcc:	1980900c 	andi	r6,r3,576
   43bd0:	30000c1e 	bne	r6,zero,43c04 <__mulsf3+0x1bc>
   43bd4:	18c0220c 	andi	r3,r3,136
   43bd8:	18000f26 	beq	r3,zero,43c18 <__mulsf3+0x1d0>
   43bdc:	9821883a 	mov	r16,r19
   43be0:	282d883a 	mov	r22,r5
   43be4:	00000106 	br	43bec <__mulsf3+0x1a4>
   43be8:	202f883a 	mov	r23,r4
   43bec:	b08000a0 	cmpeqi	r2,r22,2
   43bf0:	b809883a 	mov	r4,r23
   43bf4:	103fe81e 	bne	r2,zero,43b98 <__mulsf3+0x150>
   43bf8:	8027883a 	mov	r19,r16
   43bfc:	b00b883a 	mov	r5,r22
   43c00:	003fc006 	br	43b04 <__mulsf3+0xbc>
   43c04:	04002034 	movhi	r16,128
   43c08:	0009883a 	mov	r4,zero
   43c0c:	843fffc4 	addi	r16,r16,-1
   43c10:	00ffffc4 	movi	r3,-1
   43c14:	003fc106 	br	43b1c <__mulsf3+0xd4>
   43c18:	800ad43a 	srli	r5,r16,16
   43c1c:	980cd43a 	srli	r6,r19,16
   43c20:	843fffcc 	andi	r16,r16,65535
   43c24:	99ffffcc 	andi	r7,r19,65535
   43c28:	81d1383a 	mul	r8,r16,r7
   43c2c:	3421383a 	mul	r16,r6,r16
   43c30:	29cf383a 	mul	r7,r5,r7
   43c34:	4006d43a 	srli	r3,r8,16
   43c38:	298d383a 	mul	r6,r5,r6
   43c3c:	81e1883a 	add	r16,r16,r7
   43c40:	1c07883a 	add	r3,r3,r16
   43c44:	19c0022e 	bgeu	r3,r7,43c50 <__mulsf3+0x208>
   43c48:	01400074 	movhi	r5,1
   43c4c:	314d883a 	add	r6,r6,r5
   43c50:	180a943a 	slli	r5,r3,16
   43c54:	1826d43a 	srli	r19,r3,16
   43c58:	423fffcc 	andi	r8,r8,65535
   43c5c:	2a07883a 	add	r3,r5,r8
   43c60:	180a91ba 	slli	r5,r3,6
   43c64:	99a7883a 	add	r19,r19,r6
   43c68:	982691ba 	slli	r19,r19,6
   43c6c:	1806d6ba 	srli	r3,r3,26
   43c70:	280ac03a 	cmpne	r5,r5,zero
   43c74:	9982002c 	andhi	r6,r19,2048
   43c78:	28c6b03a 	or	r3,r5,r3
   43c7c:	98e6b03a 	or	r19,r19,r3
   43c80:	30005826 	beq	r6,zero,43de4 <__mulsf3+0x39c>
   43c84:	9804d07a 	srli	r2,r19,1
   43c88:	9cc0004c 	andi	r19,r19,1
   43c8c:	14e6b03a 	or	r19,r2,r19
   43c90:	90c01fc4 	addi	r3,r18,127
   43c94:	00c03f0e 	bge	zero,r3,43d94 <__mulsf3+0x34c>
   43c98:	988001cc 	andi	r2,r19,7
   43c9c:	10000426 	beq	r2,zero,43cb0 <__mulsf3+0x268>
   43ca0:	988003cc 	andi	r2,r19,15
   43ca4:	10800120 	cmpeqi	r2,r2,4
   43ca8:	1000011e 	bne	r2,zero,43cb0 <__mulsf3+0x268>
   43cac:	9cc00104 	addi	r19,r19,4
   43cb0:	9882002c 	andhi	r2,r19,2048
   43cb4:	10000426 	beq	r2,zero,43cc8 <__mulsf3+0x280>
   43cb8:	00be0034 	movhi	r2,63488
   43cbc:	10bfffc4 	addi	r2,r2,-1
   43cc0:	98a6703a 	and	r19,r19,r2
   43cc4:	90c02004 	addi	r3,r18,128
   43cc8:	18803fc8 	cmpgei	r2,r3,255
   43ccc:	103fb21e 	bne	r2,zero,43b98 <__mulsf3+0x150>
   43cd0:	982091ba 	slli	r16,r19,6
   43cd4:	8020d27a 	srli	r16,r16,9
   43cd8:	003f9006 	br	43b1c <__mulsf3+0xd4>
   43cdc:	9800211e 	bne	r19,zero,43d64 <__mulsf3+0x31c>
   43ce0:	8c400054 	ori	r17,r17,1
   43ce4:	9005883a 	mov	r2,r18
   43ce8:	88c002c8 	cmpgei	r3,r17,11
   43cec:	01400044 	movi	r5,1
   43cf0:	ad08f03a 	xor	r4,r21,r20
   43cf4:	14800044 	addi	r18,r2,1
   43cf8:	183f7e1e 	bne	r3,zero,43af4 <__mulsf3+0xac>
   43cfc:	003f9f06 	br	43b7c <__mulsf3+0x134>
   43d00:	80000d1e 	bne	r16,zero,43d38 <__mulsf3+0x2f0>
   43d04:	04400104 	movi	r17,4
   43d08:	0025883a 	mov	r18,zero
   43d0c:	05800044 	movi	r22,1
   43d10:	003f6506 	br	43aa8 <__mulsf3+0x60>
   43d14:	8000041e 	bne	r16,zero,43d28 <__mulsf3+0x2e0>
   43d18:	04400204 	movi	r17,8
   43d1c:	04803fc4 	movi	r18,255
   43d20:	05800084 	movi	r22,2
   43d24:	003f6006 	br	43aa8 <__mulsf3+0x60>
   43d28:	04400304 	movi	r17,12
   43d2c:	04803fc4 	movi	r18,255
   43d30:	058000c4 	movi	r22,3
   43d34:	003f5c06 	br	43aa8 <__mulsf3+0x60>
   43d38:	8009883a 	mov	r4,r16
   43d3c:	d9400015 	stw	r5,0(sp)
   43d40:	0046bc80 	call	46bc8 <__clzsi2>
   43d44:	10fffec4 	addi	r3,r2,-5
   43d48:	04bfe284 	movi	r18,-118
   43d4c:	80e0983a 	sll	r16,r16,r3
   43d50:	d9400017 	ldw	r5,0(sp)
   43d54:	90a5c83a 	sub	r18,r18,r2
   43d58:	0023883a 	mov	r17,zero
   43d5c:	002d883a 	mov	r22,zero
   43d60:	003f5106 	br	43aa8 <__mulsf3+0x60>
   43d64:	9809883a 	mov	r4,r19
   43d68:	0046bc80 	call	46bc8 <__clzsi2>
   43d6c:	10fffec4 	addi	r3,r2,-5
   43d70:	9085c83a 	sub	r2,r18,r2
   43d74:	98e6983a 	sll	r19,r19,r3
   43d78:	10bfe284 	addi	r2,r2,-118
   43d7c:	88c002c8 	cmpgei	r3,r17,11
   43d80:	000b883a 	mov	r5,zero
   43d84:	ad08f03a 	xor	r4,r21,r20
   43d88:	14800044 	addi	r18,r2,1
   43d8c:	183f591e 	bne	r3,zero,43af4 <__mulsf3+0xac>
   43d90:	003f7a06 	br	43b7c <__mulsf3+0x134>
   43d94:	01800044 	movi	r6,1
   43d98:	30c7c83a 	sub	r3,r6,r3
   43d9c:	18800708 	cmpgei	r2,r3,28
   43da0:	103f5c1e 	bne	r2,zero,43b14 <__mulsf3+0xcc>
   43da4:	94802784 	addi	r18,r18,158
   43da8:	9ca4983a 	sll	r18,r19,r18
   43dac:	98c6d83a 	srl	r3,r19,r3
   43db0:	9024c03a 	cmpne	r18,r18,zero
   43db4:	1c86b03a 	or	r3,r3,r18
   43db8:	188001cc 	andi	r2,r3,7
   43dbc:	10000426 	beq	r2,zero,43dd0 <__mulsf3+0x388>
   43dc0:	188003cc 	andi	r2,r3,15
   43dc4:	10800120 	cmpeqi	r2,r2,4
   43dc8:	1000011e 	bne	r2,zero,43dd0 <__mulsf3+0x388>
   43dcc:	18c00104 	addi	r3,r3,4
   43dd0:	1881002c 	andhi	r2,r3,1024
   43dd4:	10000526 	beq	r2,zero,43dec <__mulsf3+0x3a4>
   43dd8:	00c00044 	movi	r3,1
   43ddc:	0021883a 	mov	r16,zero
   43de0:	003f4e06 	br	43b1c <__mulsf3+0xd4>
   43de4:	1025883a 	mov	r18,r2
   43de8:	003fa906 	br	43c90 <__mulsf3+0x248>
   43dec:	182091ba 	slli	r16,r3,6
   43df0:	0007883a 	mov	r3,zero
   43df4:	8020d27a 	srli	r16,r16,9
   43df8:	003f4806 	br	43b1c <__mulsf3+0xd4>
   43dfc:	00802034 	movhi	r2,128
   43e00:	9c001034 	orhi	r16,r19,64
   43e04:	10bfffc4 	addi	r2,r2,-1
   43e08:	80a0703a 	and	r16,r16,r2
   43e0c:	003f8006 	br	43c10 <__mulsf3+0x1c8>
   43e10:	00c00084 	movi	r3,2
   43e14:	888003e0 	cmpeqi	r2,r17,15
   43e18:	10000a26 	beq	r2,zero,43e44 <__mulsf3+0x3fc>
   43e1c:	8080102c 	andhi	r2,r16,64
   43e20:	10000d26 	beq	r2,zero,43e58 <__mulsf3+0x410>
   43e24:	9880102c 	andhi	r2,r19,64
   43e28:	10000b1e 	bne	r2,zero,43e58 <__mulsf3+0x410>
   43e2c:	00802034 	movhi	r2,128
   43e30:	9c001034 	orhi	r16,r19,64
   43e34:	10bfffc4 	addi	r2,r2,-1
   43e38:	80a0703a 	and	r16,r16,r2
   43e3c:	a009883a 	mov	r4,r20
   43e40:	003f7306 	br	43c10 <__mulsf3+0x1c8>
   43e44:	8c4002e0 	cmpeqi	r17,r17,11
   43e48:	88000926 	beq	r17,zero,43e70 <__mulsf3+0x428>
   43e4c:	9821883a 	mov	r16,r19
   43e50:	182d883a 	mov	r22,r3
   43e54:	003f6506 	br	43bec <__mulsf3+0x1a4>
   43e58:	00802034 	movhi	r2,128
   43e5c:	84001034 	orhi	r16,r16,64
   43e60:	10bfffc4 	addi	r2,r2,-1
   43e64:	80a0703a 	and	r16,r16,r2
   43e68:	a809883a 	mov	r4,r21
   43e6c:	003f6806 	br	43c10 <__mulsf3+0x1c8>
   43e70:	a82f883a 	mov	r23,r21
   43e74:	003f5d06 	br	43bec <__mulsf3+0x1a4>
   43e78:	00c000c4 	movi	r3,3
   43e7c:	003fe506 	br	43e14 <__mulsf3+0x3cc>

00043e80 <__subsf3>:
   43e80:	280ed5fa 	srli	r7,r5,23
   43e84:	2006d5fa 	srli	r3,r4,23
   43e88:	2004d7fa 	srli	r2,r4,31
   43e8c:	01802034 	movhi	r6,128
   43e90:	defffc04 	addi	sp,sp,-16
   43e94:	31bfffc4 	addi	r6,r6,-1
   43e98:	3a403fcc 	andi	r9,r7,255
   43e9c:	3108703a 	and	r4,r6,r4
   43ea0:	dc800215 	stw	r18,8(sp)
   43ea4:	314c703a 	and	r6,r6,r5
   43ea8:	1c803fcc 	andi	r18,r3,255
   43eac:	dc400115 	stw	r17,4(sp)
   43eb0:	dfc00315 	stw	ra,12(sp)
   43eb4:	dc000015 	stw	r16,0(sp)
   43eb8:	49c03fd8 	cmpnei	r7,r9,255
   43ebc:	1023883a 	mov	r17,r2
   43ec0:	200690fa 	slli	r3,r4,3
   43ec4:	280ad7fa 	srli	r5,r5,31
   43ec8:	301090fa 	slli	r8,r6,3
   43ecc:	2017883a 	mov	r11,r4
   43ed0:	10803fcc 	andi	r2,r2,255
   43ed4:	9255c83a 	sub	r10,r18,r9
   43ed8:	38003f26 	beq	r7,zero,43fd8 <__subsf3+0x158>
   43edc:	29c0005c 	xori	r7,r5,1
   43ee0:	11c04526 	beq	r2,r7,43ff8 <__subsf3+0x178>
   43ee4:	0280310e 	bge	zero,r10,43fac <__subsf3+0x12c>
   43ee8:	48003f1e 	bne	r9,zero,43fe8 <__subsf3+0x168>
   43eec:	40009526 	beq	r8,zero,44144 <__subsf3+0x2c4>
   43ef0:	50bfffc4 	addi	r2,r10,-1
   43ef4:	1000de26 	beq	r2,zero,44270 <__subsf3+0x3f0>
   43ef8:	52803fe0 	cmpeqi	r10,r10,255
   43efc:	50007d1e 	bne	r10,zero,440f4 <__subsf3+0x274>
   43f00:	1015883a 	mov	r10,r2
   43f04:	50800710 	cmplti	r2,r10,28
   43f08:	10009a1e 	bne	r2,zero,44174 <__subsf3+0x2f4>
   43f0c:	01000044 	movi	r4,1
   43f10:	1909c83a 	sub	r4,r3,r4
   43f14:	2081002c 	andhi	r2,r4,1024
   43f18:	10006a26 	beq	r2,zero,440c4 <__subsf3+0x244>
   43f1c:	04010034 	movhi	r16,1024
   43f20:	843fffc4 	addi	r16,r16,-1
   43f24:	2420703a 	and	r16,r4,r16
   43f28:	8009883a 	mov	r4,r16
   43f2c:	0046bc80 	call	46bc8 <__clzsi2>
   43f30:	10bffec4 	addi	r2,r2,-5
   43f34:	80a0983a 	sll	r16,r16,r2
   43f38:	1480840e 	bge	r2,r18,4414c <__subsf3+0x2cc>
   43f3c:	013f0034 	movhi	r4,64512
   43f40:	213fffc4 	addi	r4,r4,-1
   43f44:	90a5c83a 	sub	r18,r18,r2
   43f48:	8108703a 	and	r4,r16,r4
   43f4c:	208001cc 	andi	r2,r4,7
   43f50:	10000426 	beq	r2,zero,43f64 <__subsf3+0xe4>
   43f54:	208003cc 	andi	r2,r4,15
   43f58:	10800120 	cmpeqi	r2,r2,4
   43f5c:	1000011e 	bne	r2,zero,43f64 <__subsf3+0xe4>
   43f60:	21000104 	addi	r4,r4,4
   43f64:	2081002c 	andhi	r2,r4,1024
   43f68:	10005826 	beq	r2,zero,440cc <__subsf3+0x24c>
   43f6c:	90c00044 	addi	r3,r18,1
   43f70:	18803fe0 	cmpeqi	r2,r3,255
   43f74:	1000481e 	bne	r2,zero,44098 <__subsf3+0x218>
   43f78:	200891ba 	slli	r4,r4,6
   43f7c:	2008d27a 	srli	r4,r4,9
   43f80:	18803fcc 	andi	r2,r3,255
   43f84:	100495fa 	slli	r2,r2,23
   43f88:	880697fa 	slli	r3,r17,31
   43f8c:	1104b03a 	or	r2,r2,r4
   43f90:	10c4b03a 	or	r2,r2,r3
   43f94:	dfc00317 	ldw	ra,12(sp)
   43f98:	dc800217 	ldw	r18,8(sp)
   43f9c:	dc400117 	ldw	r17,4(sp)
   43fa0:	dc000017 	ldw	r16,0(sp)
   43fa4:	dec00404 	addi	sp,sp,16
   43fa8:	f800283a 	ret
   43fac:	50002726 	beq	r10,zero,4404c <__subsf3+0x1cc>
   43fb0:	4c95c83a 	sub	r10,r9,r18
   43fb4:	3823883a 	mov	r17,r7
   43fb8:	9000751e 	bne	r18,zero,44190 <__subsf3+0x310>
   43fbc:	18006026 	beq	r3,zero,44140 <__subsf3+0x2c0>
   43fc0:	50bfffc4 	addi	r2,r10,-1
   43fc4:	1000cb26 	beq	r2,zero,442f4 <__subsf3+0x474>
   43fc8:	52803fe0 	cmpeqi	r10,r10,255
   43fcc:	5000481e 	bne	r10,zero,440f0 <__subsf3+0x270>
   43fd0:	1015883a 	mov	r10,r2
   43fd4:	00007106 	br	4419c <__subsf3+0x31c>
   43fd8:	403fc026 	beq	r8,zero,43edc <__subsf3+0x5c>
   43fdc:	29c03fcc 	andi	r7,r5,255
   43fe0:	11404b26 	beq	r2,r5,44110 <__subsf3+0x290>
   43fe4:	02bff10e 	bge	zero,r10,43fac <__subsf3+0x12c>
   43fe8:	90803fe0 	cmpeqi	r2,r18,255
   43fec:	1000411e 	bne	r2,zero,440f4 <__subsf3+0x274>
   43ff0:	42010034 	orhi	r8,r8,1024
   43ff4:	003fc306 	br	43f04 <__subsf3+0x84>
   43ff8:	0280450e 	bge	zero,r10,44110 <__subsf3+0x290>
   43ffc:	48001f26 	beq	r9,zero,4407c <__subsf3+0x1fc>
   44000:	90803fe0 	cmpeqi	r2,r18,255
   44004:	10003b1e 	bne	r2,zero,440f4 <__subsf3+0x274>
   44008:	42010034 	orhi	r8,r8,1024
   4400c:	50800710 	cmplti	r2,r10,28
   44010:	1000701e 	bne	r2,zero,441d4 <__subsf3+0x354>
   44014:	01000044 	movi	r4,1
   44018:	20c9883a 	add	r4,r4,r3
   4401c:	2081002c 	andhi	r2,r4,1024
   44020:	10002826 	beq	r2,zero,440c4 <__subsf3+0x244>
   44024:	94800044 	addi	r18,r18,1
   44028:	90803fe0 	cmpeqi	r2,r18,255
   4402c:	10001a1e 	bne	r2,zero,44098 <__subsf3+0x218>
   44030:	2004d07a 	srli	r2,r4,1
   44034:	00df8034 	movhi	r3,32256
   44038:	18ffffc4 	addi	r3,r3,-1
   4403c:	2100004c 	andi	r4,r4,1
   44040:	10c4703a 	and	r2,r2,r3
   44044:	1108b03a 	or	r4,r2,r4
   44048:	003fc006 	br	43f4c <__subsf3+0xcc>
   4404c:	90800044 	addi	r2,r18,1
   44050:	10803f8c 	andi	r2,r2,254
   44054:	1000571e 	bne	r2,zero,441b4 <__subsf3+0x334>
   44058:	90007a1e 	bne	r18,zero,44244 <__subsf3+0x3c4>
   4405c:	1800a126 	beq	r3,zero,442e4 <__subsf3+0x464>
   44060:	40008d26 	beq	r8,zero,44298 <__subsf3+0x418>
   44064:	1a09c83a 	sub	r4,r3,r8
   44068:	2081002c 	andhi	r2,r4,1024
   4406c:	1000a726 	beq	r2,zero,4430c <__subsf3+0x48c>
   44070:	40c9c83a 	sub	r4,r8,r3
   44074:	3823883a 	mov	r17,r7
   44078:	003fb406 	br	43f4c <__subsf3+0xcc>
   4407c:	40003126 	beq	r8,zero,44144 <__subsf3+0x2c4>
   44080:	50bfffc4 	addi	r2,r10,-1
   44084:	10007526 	beq	r2,zero,4425c <__subsf3+0x3dc>
   44088:	52803fe0 	cmpeqi	r10,r10,255
   4408c:	5000191e 	bne	r10,zero,440f4 <__subsf3+0x274>
   44090:	1015883a 	mov	r10,r2
   44094:	003fdd06 	br	4400c <__subsf3+0x18c>
   44098:	00ffffc4 	movi	r3,-1
   4409c:	0009883a 	mov	r4,zero
   440a0:	003fb706 	br	43f80 <__subsf3+0x100>
   440a4:	90800044 	addi	r2,r18,1
   440a8:	11403f8c 	andi	r5,r2,254
   440ac:	28005026 	beq	r5,zero,441f0 <__subsf3+0x370>
   440b0:	11003fe0 	cmpeqi	r4,r2,255
   440b4:	203ff81e 	bne	r4,zero,44098 <__subsf3+0x218>
   440b8:	1a09883a 	add	r4,r3,r8
   440bc:	2008d07a 	srli	r4,r4,1
   440c0:	1025883a 	mov	r18,r2
   440c4:	208001cc 	andi	r2,r4,7
   440c8:	103fa21e 	bne	r2,zero,43f54 <__subsf3+0xd4>
   440cc:	2016d0fa 	srli	r11,r4,3
   440d0:	90803fe0 	cmpeqi	r2,r18,255
   440d4:	1000071e 	bne	r2,zero,440f4 <__subsf3+0x274>
   440d8:	01002034 	movhi	r4,128
   440dc:	213fffc4 	addi	r4,r4,-1
   440e0:	5908703a 	and	r4,r11,r4
   440e4:	9007883a 	mov	r3,r18
   440e8:	003fa506 	br	43f80 <__subsf3+0x100>
   440ec:	18006c1e 	bne	r3,zero,442a0 <__subsf3+0x420>
   440f0:	3017883a 	mov	r11,r6
   440f4:	583fe826 	beq	r11,zero,44098 <__subsf3+0x218>
   440f8:	00802034 	movhi	r2,128
   440fc:	59001034 	orhi	r4,r11,64
   44100:	10bfffc4 	addi	r2,r2,-1
   44104:	2088703a 	and	r4,r4,r2
   44108:	00ffffc4 	movi	r3,-1
   4410c:	003f9c06 	br	43f80 <__subsf3+0x100>
   44110:	503fe426 	beq	r10,zero,440a4 <__subsf3+0x224>
   44114:	4c95c83a 	sub	r10,r9,r18
   44118:	90004026 	beq	r18,zero,4421c <__subsf3+0x39c>
   4411c:	48803fe0 	cmpeqi	r2,r9,255
   44120:	103ff31e 	bne	r2,zero,440f0 <__subsf3+0x270>
   44124:	18c10034 	orhi	r3,r3,1024
   44128:	50800710 	cmplti	r2,r10,28
   4412c:	1000641e 	bne	r2,zero,442c0 <__subsf3+0x440>
   44130:	01000044 	movi	r4,1
   44134:	2209883a 	add	r4,r4,r8
   44138:	4825883a 	mov	r18,r9
   4413c:	003fb706 	br	4401c <__subsf3+0x19c>
   44140:	3017883a 	mov	r11,r6
   44144:	5025883a 	mov	r18,r10
   44148:	003fe106 	br	440d0 <__subsf3+0x250>
   4414c:	1485c83a 	sub	r2,r2,r18
   44150:	10800044 	addi	r2,r2,1
   44154:	01000804 	movi	r4,32
   44158:	2089c83a 	sub	r4,r4,r2
   4415c:	8108983a 	sll	r4,r16,r4
   44160:	80a0d83a 	srl	r16,r16,r2
   44164:	0025883a 	mov	r18,zero
   44168:	2008c03a 	cmpne	r4,r4,zero
   4416c:	2408b03a 	or	r4,r4,r16
   44170:	003f7606 	br	43f4c <__subsf3+0xcc>
   44174:	01000804 	movi	r4,32
   44178:	2289c83a 	sub	r4,r4,r10
   4417c:	4108983a 	sll	r4,r8,r4
   44180:	4294d83a 	srl	r10,r8,r10
   44184:	2008c03a 	cmpne	r4,r4,zero
   44188:	2288b03a 	or	r4,r4,r10
   4418c:	003f6006 	br	43f10 <__subsf3+0x90>
   44190:	48803fe0 	cmpeqi	r2,r9,255
   44194:	103fd61e 	bne	r2,zero,440f0 <__subsf3+0x270>
   44198:	18c10034 	orhi	r3,r3,1024
   4419c:	50800710 	cmplti	r2,r10,28
   441a0:	1000361e 	bne	r2,zero,4427c <__subsf3+0x3fc>
   441a4:	01000044 	movi	r4,1
   441a8:	4109c83a 	sub	r4,r8,r4
   441ac:	4825883a 	mov	r18,r9
   441b0:	003f5806 	br	43f14 <__subsf3+0x94>
   441b4:	1a21c83a 	sub	r16,r3,r8
   441b8:	8081002c 	andhi	r2,r16,1024
   441bc:	10001e1e 	bne	r2,zero,44238 <__subsf3+0x3b8>
   441c0:	803f591e 	bne	r16,zero,43f28 <__subsf3+0xa8>
   441c4:	0023883a 	mov	r17,zero
   441c8:	0007883a 	mov	r3,zero
   441cc:	0009883a 	mov	r4,zero
   441d0:	003f6b06 	br	43f80 <__subsf3+0x100>
   441d4:	01000804 	movi	r4,32
   441d8:	2289c83a 	sub	r4,r4,r10
   441dc:	4108983a 	sll	r4,r8,r4
   441e0:	4294d83a 	srl	r10,r8,r10
   441e4:	2008c03a 	cmpne	r4,r4,zero
   441e8:	2288b03a 	or	r4,r4,r10
   441ec:	003f8a06 	br	44018 <__subsf3+0x198>
   441f0:	903fbe1e 	bne	r18,zero,440ec <__subsf3+0x26c>
   441f4:	18004226 	beq	r3,zero,44300 <__subsf3+0x480>
   441f8:	40002726 	beq	r8,zero,44298 <__subsf3+0x418>
   441fc:	1a09883a 	add	r4,r3,r8
   44200:	2081002c 	andhi	r2,r4,1024
   44204:	103faf26 	beq	r2,zero,440c4 <__subsf3+0x244>
   44208:	00bf0034 	movhi	r2,64512
   4420c:	10bfffc4 	addi	r2,r2,-1
   44210:	2088703a 	and	r4,r4,r2
   44214:	04800044 	movi	r18,1
   44218:	003faa06 	br	440c4 <__subsf3+0x244>
   4421c:	183fc826 	beq	r3,zero,44140 <__subsf3+0x2c0>
   44220:	50bfffc4 	addi	r2,r10,-1
   44224:	10000d26 	beq	r2,zero,4425c <__subsf3+0x3dc>
   44228:	52803fe0 	cmpeqi	r10,r10,255
   4422c:	503fb01e 	bne	r10,zero,440f0 <__subsf3+0x270>
   44230:	1015883a 	mov	r10,r2
   44234:	003fbc06 	br	44128 <__subsf3+0x2a8>
   44238:	40e1c83a 	sub	r16,r8,r3
   4423c:	3823883a 	mov	r17,r7
   44240:	003f3906 	br	43f28 <__subsf3+0xa8>
   44244:	1800161e 	bne	r3,zero,442a0 <__subsf3+0x420>
   44248:	40001a1e 	bne	r8,zero,442b4 <__subsf3+0x434>
   4424c:	01002034 	movhi	r4,128
   44250:	0023883a 	mov	r17,zero
   44254:	213fffc4 	addi	r4,r4,-1
   44258:	003fab06 	br	44108 <__subsf3+0x288>
   4425c:	1a09883a 	add	r4,r3,r8
   44260:	2081002c 	andhi	r2,r4,1024
   44264:	10001d26 	beq	r2,zero,442dc <__subsf3+0x45c>
   44268:	04800084 	movi	r18,2
   4426c:	003f7006 	br	44030 <__subsf3+0x1b0>
   44270:	1a09c83a 	sub	r4,r3,r8
   44274:	04800044 	movi	r18,1
   44278:	003f2606 	br	43f14 <__subsf3+0x94>
   4427c:	01000804 	movi	r4,32
   44280:	2289c83a 	sub	r4,r4,r10
   44284:	1908983a 	sll	r4,r3,r4
   44288:	1a94d83a 	srl	r10,r3,r10
   4428c:	2008c03a 	cmpne	r4,r4,zero
   44290:	2288b03a 	or	r4,r4,r10
   44294:	003fc406 	br	441a8 <__subsf3+0x328>
   44298:	0007883a 	mov	r3,zero
   4429c:	003f3806 	br	43f80 <__subsf3+0x100>
   442a0:	403f9426 	beq	r8,zero,440f4 <__subsf3+0x274>
   442a4:	2100102c 	andhi	r4,r4,64
   442a8:	203f9226 	beq	r4,zero,440f4 <__subsf3+0x274>
   442ac:	3080102c 	andhi	r2,r6,64
   442b0:	103f901e 	bne	r2,zero,440f4 <__subsf3+0x274>
   442b4:	3823883a 	mov	r17,r7
   442b8:	3017883a 	mov	r11,r6
   442bc:	003f8d06 	br	440f4 <__subsf3+0x274>
   442c0:	01000804 	movi	r4,32
   442c4:	2289c83a 	sub	r4,r4,r10
   442c8:	1908983a 	sll	r4,r3,r4
   442cc:	1a94d83a 	srl	r10,r3,r10
   442d0:	2008c03a 	cmpne	r4,r4,zero
   442d4:	2288b03a 	or	r4,r4,r10
   442d8:	003f9606 	br	44134 <__subsf3+0x2b4>
   442dc:	04800044 	movi	r18,1
   442e0:	003f7806 	br	440c4 <__subsf3+0x244>
   442e4:	403fb726 	beq	r8,zero,441c4 <__subsf3+0x344>
   442e8:	3823883a 	mov	r17,r7
   442ec:	3009883a 	mov	r4,r6
   442f0:	003f2306 	br	43f80 <__subsf3+0x100>
   442f4:	40c9c83a 	sub	r4,r8,r3
   442f8:	04800044 	movi	r18,1
   442fc:	003f0506 	br	43f14 <__subsf3+0x94>
   44300:	3009883a 	mov	r4,r6
   44304:	0007883a 	mov	r3,zero
   44308:	003f1d06 	br	43f80 <__subsf3+0x100>
   4430c:	203fad26 	beq	r4,zero,441c4 <__subsf3+0x344>
   44310:	003f6c06 	br	440c4 <__subsf3+0x244>

00044314 <__floatsisf>:
   44314:	defffd04 	addi	sp,sp,-12
   44318:	dfc00215 	stw	ra,8(sp)
   4431c:	dc400115 	stw	r17,4(sp)
   44320:	dc000015 	stw	r16,0(sp)
   44324:	20001226 	beq	r4,zero,44370 <__floatsisf+0x5c>
   44328:	2022d7fa 	srli	r17,r4,31
   4432c:	2021883a 	mov	r16,r4
   44330:	20003816 	blt	r4,zero,44414 <__floatsisf+0x100>
   44334:	8009883a 	mov	r4,r16
   44338:	0046bc80 	call	46bc8 <__clzsi2>
   4433c:	100d883a 	mov	r6,r2
   44340:	00802784 	movi	r2,158
   44344:	1185c83a 	sub	r2,r2,r6
   44348:	10c025c8 	cmpgei	r3,r2,151
   4434c:	1800151e 	bne	r3,zero,443a4 <__floatsisf+0x90>
   44350:	30c00218 	cmpnei	r3,r6,8
   44354:	18003126 	beq	r3,zero,4441c <__floatsisf+0x108>
   44358:	30fffe04 	addi	r3,r6,-8
   4435c:	80c6983a 	sll	r3,r16,r3
   44360:	01002034 	movhi	r4,128
   44364:	213fffc4 	addi	r4,r4,-1
   44368:	1906703a 	and	r3,r3,r4
   4436c:	00000306 	br	4437c <__floatsisf+0x68>
   44370:	0023883a 	mov	r17,zero
   44374:	0005883a 	mov	r2,zero
   44378:	0007883a 	mov	r3,zero
   4437c:	10803fcc 	andi	r2,r2,255
   44380:	100495fa 	slli	r2,r2,23
   44384:	882297fa 	slli	r17,r17,31
   44388:	10c4b03a 	or	r2,r2,r3
   4438c:	1444b03a 	or	r2,r2,r17
   44390:	dfc00217 	ldw	ra,8(sp)
   44394:	dc400117 	ldw	r17,4(sp)
   44398:	dc000017 	ldw	r16,0(sp)
   4439c:	dec00304 	addi	sp,sp,12
   443a0:	f800283a 	ret
   443a4:	10c02690 	cmplti	r3,r2,154
   443a8:	1800071e 	bne	r3,zero,443c8 <__floatsisf+0xb4>
   443ac:	30c006c4 	addi	r3,r6,27
   443b0:	01000144 	movi	r4,5
   443b4:	80c6983a 	sll	r3,r16,r3
   443b8:	2189c83a 	sub	r4,r4,r6
   443bc:	8108d83a 	srl	r4,r16,r4
   443c0:	1806c03a 	cmpne	r3,r3,zero
   443c4:	20e0b03a 	or	r16,r4,r3
   443c8:	30c00188 	cmpgei	r3,r6,6
   443cc:	1800171e 	bne	r3,zero,4442c <__floatsisf+0x118>
   443d0:	00ff0034 	movhi	r3,64512
   443d4:	18ffffc4 	addi	r3,r3,-1
   443d8:	814001cc 	andi	r5,r16,7
   443dc:	80c8703a 	and	r4,r16,r3
   443e0:	28000926 	beq	r5,zero,44408 <__floatsisf+0xf4>
   443e4:	840003cc 	andi	r16,r16,15
   443e8:	84000120 	cmpeqi	r16,r16,4
   443ec:	8000061e 	bne	r16,zero,44408 <__floatsisf+0xf4>
   443f0:	21000104 	addi	r4,r4,4
   443f4:	2141002c 	andhi	r5,r4,1024
   443f8:	28000326 	beq	r5,zero,44408 <__floatsisf+0xf4>
   443fc:	20c8703a 	and	r4,r4,r3
   44400:	00c027c4 	movi	r3,159
   44404:	1985c83a 	sub	r2,r3,r6
   44408:	200691ba 	slli	r3,r4,6
   4440c:	1806d27a 	srli	r3,r3,9
   44410:	003fda06 	br	4437c <__floatsisf+0x68>
   44414:	0121c83a 	sub	r16,zero,r4
   44418:	003fc606 	br	44334 <__floatsisf+0x20>
   4441c:	00c02034 	movhi	r3,128
   44420:	18ffffc4 	addi	r3,r3,-1
   44424:	80c6703a 	and	r3,r16,r3
   44428:	003fd406 	br	4437c <__floatsisf+0x68>
   4442c:	30fffec4 	addi	r3,r6,-5
   44430:	80e0983a 	sll	r16,r16,r3
   44434:	003fe606 	br	443d0 <__floatsisf+0xbc>

00044438 <__adddf3>:
   44438:	00c00434 	movhi	r3,16
   4443c:	18ffffc4 	addi	r3,r3,-1
   44440:	defffb04 	addi	sp,sp,-20
   44444:	28d4703a 	and	r10,r5,r3
   44448:	38d2703a 	and	r9,r7,r3
   4444c:	3804d53a 	srli	r2,r7,20
   44450:	501490fa 	slli	r10,r10,3
   44454:	2016d77a 	srli	r11,r4,29
   44458:	481290fa 	slli	r9,r9,3
   4445c:	3010d77a 	srli	r8,r6,29
   44460:	dc800215 	stw	r18,8(sp)
   44464:	380ed7fa 	srli	r7,r7,31
   44468:	2824d53a 	srli	r18,r5,20
   4446c:	280ad7fa 	srli	r5,r5,31
   44470:	dc000015 	stw	r16,0(sp)
   44474:	dfc00415 	stw	ra,16(sp)
   44478:	dcc00315 	stw	r19,12(sp)
   4447c:	dc400115 	stw	r17,4(sp)
   44480:	201a90fa 	slli	r13,r4,3
   44484:	301890fa 	slli	r12,r6,3
   44488:	9481ffcc 	andi	r18,r18,2047
   4448c:	2821883a 	mov	r16,r5
   44490:	5a96b03a 	or	r11,r11,r10
   44494:	1081ffcc 	andi	r2,r2,2047
   44498:	4250b03a 	or	r8,r8,r9
   4449c:	29c06226 	beq	r5,r7,44628 <__adddf3+0x1f0>
   444a0:	908bc83a 	sub	r5,r18,r2
   444a4:	0140550e 	bge	zero,r5,445fc <__adddf3+0x1c4>
   444a8:	10007426 	beq	r2,zero,4467c <__adddf3+0x244>
   444ac:	9081ffd8 	cmpnei	r2,r18,2047
   444b0:	1000b926 	beq	r2,zero,44798 <__adddf3+0x360>
   444b4:	42002034 	orhi	r8,r8,128
   444b8:	28800e48 	cmpgei	r2,r5,57
   444bc:	1000eb1e 	bne	r2,zero,4486c <__adddf3+0x434>
   444c0:	28800808 	cmpgei	r2,r5,32
   444c4:	10012a1e 	bne	r2,zero,44970 <__adddf3+0x538>
   444c8:	00800804 	movi	r2,32
   444cc:	1145c83a 	sub	r2,r2,r5
   444d0:	40a2983a 	sll	r17,r8,r2
   444d4:	6146d83a 	srl	r3,r12,r5
   444d8:	6084983a 	sll	r2,r12,r2
   444dc:	4150d83a 	srl	r8,r8,r5
   444e0:	88e2b03a 	or	r17,r17,r3
   444e4:	1004c03a 	cmpne	r2,r2,zero
   444e8:	88a2b03a 	or	r17,r17,r2
   444ec:	5a17c83a 	sub	r11,r11,r8
   444f0:	6c63c83a 	sub	r17,r13,r17
   444f4:	6c47803a 	cmpltu	r3,r13,r17
   444f8:	58c7c83a 	sub	r3,r11,r3
   444fc:	1880202c 	andhi	r2,r3,128
   44500:	10008926 	beq	r2,zero,44728 <__adddf3+0x2f0>
   44504:	04c02034 	movhi	r19,128
   44508:	9cffffc4 	addi	r19,r19,-1
   4450c:	1ce6703a 	and	r19,r3,r19
   44510:	9800af26 	beq	r19,zero,447d0 <__adddf3+0x398>
   44514:	9809883a 	mov	r4,r19
   44518:	0046bc80 	call	46bc8 <__clzsi2>
   4451c:	113ffe04 	addi	r4,r2,-8
   44520:	00c00804 	movi	r3,32
   44524:	1907c83a 	sub	r3,r3,r4
   44528:	88c6d83a 	srl	r3,r17,r3
   4452c:	9926983a 	sll	r19,r19,r4
   44530:	8922983a 	sll	r17,r17,r4
   44534:	1cc6b03a 	or	r3,r3,r19
   44538:	2480ae16 	blt	r4,r18,447f4 <__adddf3+0x3bc>
   4453c:	2489c83a 	sub	r4,r4,r18
   44540:	21400044 	addi	r5,r4,1
   44544:	28800808 	cmpgei	r2,r5,32
   44548:	10006b1e 	bne	r2,zero,446f8 <__adddf3+0x2c0>
   4454c:	00800804 	movi	r2,32
   44550:	1145c83a 	sub	r2,r2,r5
   44554:	8948d83a 	srl	r4,r17,r5
   44558:	88a2983a 	sll	r17,r17,r2
   4455c:	1884983a 	sll	r2,r3,r2
   44560:	1946d83a 	srl	r3,r3,r5
   44564:	8822c03a 	cmpne	r17,r17,zero
   44568:	1104b03a 	or	r2,r2,r4
   4456c:	1462b03a 	or	r17,r2,r17
   44570:	0025883a 	mov	r18,zero
   44574:	888001cc 	andi	r2,r17,7
   44578:	10000726 	beq	r2,zero,44598 <__adddf3+0x160>
   4457c:	888003cc 	andi	r2,r17,15
   44580:	10800120 	cmpeqi	r2,r2,4
   44584:	1000041e 	bne	r2,zero,44598 <__adddf3+0x160>
   44588:	88800104 	addi	r2,r17,4
   4458c:	1463803a 	cmpltu	r17,r2,r17
   44590:	1c47883a 	add	r3,r3,r17
   44594:	1023883a 	mov	r17,r2
   44598:	1880202c 	andhi	r2,r3,128
   4459c:	10006426 	beq	r2,zero,44730 <__adddf3+0x2f8>
   445a0:	91400044 	addi	r5,r18,1
   445a4:	2881ffe0 	cmpeqi	r2,r5,2047
   445a8:	2941ffcc 	andi	r5,r5,2047
   445ac:	1000761e 	bne	r2,zero,44788 <__adddf3+0x350>
   445b0:	013fe034 	movhi	r4,65408
   445b4:	213fffc4 	addi	r4,r4,-1
   445b8:	1908703a 	and	r4,r3,r4
   445bc:	2004977a 	slli	r2,r4,29
   445c0:	2008927a 	slli	r4,r4,9
   445c4:	8822d0fa 	srli	r17,r17,3
   445c8:	2008d33a 	srli	r4,r4,12
   445cc:	1444b03a 	or	r2,r2,r17
   445d0:	2806953a 	slli	r3,r5,20
   445d4:	802097fa 	slli	r16,r16,31
   445d8:	1906b03a 	or	r3,r3,r4
   445dc:	1c06b03a 	or	r3,r3,r16
   445e0:	dfc00417 	ldw	ra,16(sp)
   445e4:	dcc00317 	ldw	r19,12(sp)
   445e8:	dc800217 	ldw	r18,8(sp)
   445ec:	dc400117 	ldw	r17,4(sp)
   445f0:	dc000017 	ldw	r16,0(sp)
   445f4:	dec00504 	addi	sp,sp,20
   445f8:	f800283a 	ret
   445fc:	28002726 	beq	r5,zero,4469c <__adddf3+0x264>
   44600:	148bc83a 	sub	r5,r2,r18
   44604:	9000ab1e 	bne	r18,zero,448b4 <__adddf3+0x47c>
   44608:	5b46b03a 	or	r3,r11,r13
   4460c:	18011026 	beq	r3,zero,44a50 <__adddf3+0x618>
   44610:	28ffffc4 	addi	r3,r5,-1
   44614:	18016826 	beq	r3,zero,44bb8 <__adddf3+0x780>
   44618:	2941ffd8 	cmpnei	r5,r5,2047
   4461c:	28013526 	beq	r5,zero,44af4 <__adddf3+0x6bc>
   44620:	180b883a 	mov	r5,r3
   44624:	0000a606 	br	448c0 <__adddf3+0x488>
   44628:	908bc83a 	sub	r5,r18,r2
   4462c:	0140760e 	bge	zero,r5,44808 <__adddf3+0x3d0>
   44630:	10002926 	beq	r2,zero,446d8 <__adddf3+0x2a0>
   44634:	9081ffd8 	cmpnei	r2,r18,2047
   44638:	10005726 	beq	r2,zero,44798 <__adddf3+0x360>
   4463c:	42002034 	orhi	r8,r8,128
   44640:	28800e48 	cmpgei	r2,r5,57
   44644:	1000461e 	bne	r2,zero,44760 <__adddf3+0x328>
   44648:	28800808 	cmpgei	r2,r5,32
   4464c:	1000e326 	beq	r2,zero,449dc <__adddf3+0x5a4>
   44650:	28bff804 	addi	r2,r5,-32
   44654:	28c00820 	cmpeqi	r3,r5,32
   44658:	4084d83a 	srl	r2,r8,r2
   4465c:	1800041e 	bne	r3,zero,44670 <__adddf3+0x238>
   44660:	00c01004 	movi	r3,64
   44664:	1947c83a 	sub	r3,r3,r5
   44668:	40c6983a 	sll	r3,r8,r3
   4466c:	60d8b03a 	or	r12,r12,r3
   44670:	6022c03a 	cmpne	r17,r12,zero
   44674:	88a2b03a 	or	r17,r17,r2
   44678:	00003b06 	br	44768 <__adddf3+0x330>
   4467c:	4304b03a 	or	r2,r8,r12
   44680:	1000a926 	beq	r2,zero,44928 <__adddf3+0x4f0>
   44684:	28bfffc4 	addi	r2,r5,-1
   44688:	10010d26 	beq	r2,zero,44ac0 <__adddf3+0x688>
   4468c:	2941ffd8 	cmpnei	r5,r5,2047
   44690:	28010426 	beq	r5,zero,44aa4 <__adddf3+0x66c>
   44694:	100b883a 	mov	r5,r2
   44698:	003f8706 	br	444b8 <__adddf3+0x80>
   4469c:	90800044 	addi	r2,r18,1
   446a0:	1081ff8c 	andi	r2,r2,2046
   446a4:	1000951e 	bne	r2,zero,448fc <__adddf3+0x4c4>
   446a8:	5b52b03a 	or	r9,r11,r13
   446ac:	4304b03a 	or	r2,r8,r12
   446b0:	9000ef1e 	bne	r18,zero,44a70 <__adddf3+0x638>
   446b4:	48014726 	beq	r9,zero,44bd4 <__adddf3+0x79c>
   446b8:	10014f1e 	bne	r2,zero,44bf8 <__adddf3+0x7c0>
   446bc:	580c977a 	slli	r6,r11,29
   446c0:	00880034 	movhi	r2,8192
   446c4:	10bfffc4 	addi	r2,r2,-1
   446c8:	2084703a 	and	r2,r4,r2
   446cc:	5806d0fa 	srli	r3,r11,3
   446d0:	1184b03a 	or	r2,r2,r6
   446d4:	00001d06 	br	4474c <__adddf3+0x314>
   446d8:	4304b03a 	or	r2,r8,r12
   446dc:	1000fe26 	beq	r2,zero,44ad8 <__adddf3+0x6a0>
   446e0:	28bfffc4 	addi	r2,r5,-1
   446e4:	1000e726 	beq	r2,zero,44a84 <__adddf3+0x64c>
   446e8:	2941ffd8 	cmpnei	r5,r5,2047
   446ec:	2800ed26 	beq	r5,zero,44aa4 <__adddf3+0x66c>
   446f0:	100b883a 	mov	r5,r2
   446f4:	003fd206 	br	44640 <__adddf3+0x208>
   446f8:	213ff844 	addi	r4,r4,-31
   446fc:	28800820 	cmpeqi	r2,r5,32
   44700:	1908d83a 	srl	r4,r3,r4
   44704:	1000041e 	bne	r2,zero,44718 <__adddf3+0x2e0>
   44708:	00801004 	movi	r2,64
   4470c:	1145c83a 	sub	r2,r2,r5
   44710:	1886983a 	sll	r3,r3,r2
   44714:	88e2b03a 	or	r17,r17,r3
   44718:	8822c03a 	cmpne	r17,r17,zero
   4471c:	8922b03a 	or	r17,r17,r4
   44720:	0007883a 	mov	r3,zero
   44724:	0025883a 	mov	r18,zero
   44728:	888001cc 	andi	r2,r17,7
   4472c:	103f931e 	bne	r2,zero,4457c <__adddf3+0x144>
   44730:	1808977a 	slli	r4,r3,29
   44734:	8804d0fa 	srli	r2,r17,3
   44738:	1806d0fa 	srli	r3,r3,3
   4473c:	900b883a 	mov	r5,r18
   44740:	1104b03a 	or	r2,r2,r4
   44744:	2901ffe0 	cmpeqi	r4,r5,2047
   44748:	2000191e 	bne	r4,zero,447b0 <__adddf3+0x378>
   4474c:	01000434 	movhi	r4,16
   44750:	213fffc4 	addi	r4,r4,-1
   44754:	1908703a 	and	r4,r3,r4
   44758:	2941ffcc 	andi	r5,r5,2047
   4475c:	003f9c06 	br	445d0 <__adddf3+0x198>
   44760:	4322b03a 	or	r17,r8,r12
   44764:	8822c03a 	cmpne	r17,r17,zero
   44768:	8b63883a 	add	r17,r17,r13
   4476c:	8b47803a 	cmpltu	r3,r17,r13
   44770:	1ac7883a 	add	r3,r3,r11
   44774:	1880202c 	andhi	r2,r3,128
   44778:	103feb26 	beq	r2,zero,44728 <__adddf3+0x2f0>
   4477c:	94800044 	addi	r18,r18,1
   44780:	9081ffe0 	cmpeqi	r2,r18,2047
   44784:	10007026 	beq	r2,zero,44948 <__adddf3+0x510>
   44788:	0141ffc4 	movi	r5,2047
   4478c:	0009883a 	mov	r4,zero
   44790:	0005883a 	mov	r2,zero
   44794:	003f8e06 	br	445d0 <__adddf3+0x198>
   44798:	580a977a 	slli	r5,r11,29
   4479c:	00880034 	movhi	r2,8192
   447a0:	10bfffc4 	addi	r2,r2,-1
   447a4:	5806d0fa 	srli	r3,r11,3
   447a8:	2084703a 	and	r2,r4,r2
   447ac:	1144b03a 	or	r2,r2,r5
   447b0:	10c8b03a 	or	r4,r2,r3
   447b4:	20015f26 	beq	r4,zero,44d34 <__adddf3+0x8fc>
   447b8:	01400434 	movhi	r5,16
   447bc:	297fffc4 	addi	r5,r5,-1
   447c0:	19000234 	orhi	r4,r3,8
   447c4:	2148703a 	and	r4,r4,r5
   447c8:	0141ffc4 	movi	r5,2047
   447cc:	003f8006 	br	445d0 <__adddf3+0x198>
   447d0:	8809883a 	mov	r4,r17
   447d4:	0046bc80 	call	46bc8 <__clzsi2>
   447d8:	11000604 	addi	r4,r2,24
   447dc:	20c00808 	cmpgei	r3,r4,32
   447e0:	183f4f26 	beq	r3,zero,44520 <__adddf3+0xe8>
   447e4:	10fffe04 	addi	r3,r2,-8
   447e8:	88c6983a 	sll	r3,r17,r3
   447ec:	0023883a 	mov	r17,zero
   447f0:	24bf520e 	bge	r4,r18,4453c <__adddf3+0x104>
   447f4:	00bfe034 	movhi	r2,65408
   447f8:	10bfffc4 	addi	r2,r2,-1
   447fc:	9125c83a 	sub	r18,r18,r4
   44800:	1886703a 	and	r3,r3,r2
   44804:	003f5b06 	br	44574 <__adddf3+0x13c>
   44808:	28001b26 	beq	r5,zero,44878 <__adddf3+0x440>
   4480c:	148bc83a 	sub	r5,r2,r18
   44810:	90006a26 	beq	r18,zero,449bc <__adddf3+0x584>
   44814:	10c1ffd8 	cmpnei	r3,r2,2047
   44818:	1800be26 	beq	r3,zero,44b14 <__adddf3+0x6dc>
   4481c:	5ac02034 	orhi	r11,r11,128
   44820:	28c00e48 	cmpgei	r3,r5,57
   44824:	1800c21e 	bne	r3,zero,44b30 <__adddf3+0x6f8>
   44828:	28c00808 	cmpgei	r3,r5,32
   4482c:	18012e1e 	bne	r3,zero,44ce8 <__adddf3+0x8b0>
   44830:	00c00804 	movi	r3,32
   44834:	1947c83a 	sub	r3,r3,r5
   44838:	58e2983a 	sll	r17,r11,r3
   4483c:	6948d83a 	srl	r4,r13,r5
   44840:	68c6983a 	sll	r3,r13,r3
   44844:	594ad83a 	srl	r5,r11,r5
   44848:	8922b03a 	or	r17,r17,r4
   4484c:	1806c03a 	cmpne	r3,r3,zero
   44850:	88e2b03a 	or	r17,r17,r3
   44854:	4151883a 	add	r8,r8,r5
   44858:	8b23883a 	add	r17,r17,r12
   4485c:	8b07803a 	cmpltu	r3,r17,r12
   44860:	1a07883a 	add	r3,r3,r8
   44864:	1025883a 	mov	r18,r2
   44868:	003fc206 	br	44774 <__adddf3+0x33c>
   4486c:	4322b03a 	or	r17,r8,r12
   44870:	8822c03a 	cmpne	r17,r17,zero
   44874:	003f1e06 	br	444f0 <__adddf3+0xb8>
   44878:	92400044 	addi	r9,r18,1
   4487c:	4881ff8c 	andi	r2,r9,2046
   44880:	1000611e 	bne	r2,zero,44a08 <__adddf3+0x5d0>
   44884:	5b44b03a 	or	r2,r11,r13
   44888:	9000b71e 	bne	r18,zero,44b68 <__adddf3+0x730>
   4488c:	1000ff26 	beq	r2,zero,44c8c <__adddf3+0x854>
   44890:	4304b03a 	or	r2,r8,r12
   44894:	1001041e 	bne	r2,zero,44ca8 <__adddf3+0x870>
   44898:	5804977a 	slli	r2,r11,29
   4489c:	00c80034 	movhi	r3,8192
   448a0:	18ffffc4 	addi	r3,r3,-1
   448a4:	20c8703a 	and	r4,r4,r3
   448a8:	1104b03a 	or	r2,r2,r4
   448ac:	5806d0fa 	srli	r3,r11,3
   448b0:	003fa606 	br	4474c <__adddf3+0x314>
   448b4:	10c1ffd8 	cmpnei	r3,r2,2047
   448b8:	18008e26 	beq	r3,zero,44af4 <__adddf3+0x6bc>
   448bc:	5ac02034 	orhi	r11,r11,128
   448c0:	28c00e48 	cmpgei	r3,r5,57
   448c4:	1800351e 	bne	r3,zero,4499c <__adddf3+0x564>
   448c8:	28c00808 	cmpgei	r3,r5,32
   448cc:	18009b1e 	bne	r3,zero,44b3c <__adddf3+0x704>
   448d0:	00c00804 	movi	r3,32
   448d4:	1947c83a 	sub	r3,r3,r5
   448d8:	58e2983a 	sll	r17,r11,r3
   448dc:	6948d83a 	srl	r4,r13,r5
   448e0:	68c6983a 	sll	r3,r13,r3
   448e4:	594ad83a 	srl	r5,r11,r5
   448e8:	8922b03a 	or	r17,r17,r4
   448ec:	1806c03a 	cmpne	r3,r3,zero
   448f0:	88e2b03a 	or	r17,r17,r3
   448f4:	4151c83a 	sub	r8,r8,r5
   448f8:	00002a06 	br	449a4 <__adddf3+0x56c>
   448fc:	6b23c83a 	sub	r17,r13,r12
   44900:	6c45803a 	cmpltu	r2,r13,r17
   44904:	5a27c83a 	sub	r19,r11,r8
   44908:	98a7c83a 	sub	r19,r19,r2
   4490c:	9880202c 	andhi	r2,r19,128
   44910:	1000491e 	bne	r2,zero,44a38 <__adddf3+0x600>
   44914:	8cc4b03a 	or	r2,r17,r19
   44918:	103efd1e 	bne	r2,zero,44510 <__adddf3+0xd8>
   4491c:	0007883a 	mov	r3,zero
   44920:	0021883a 	mov	r16,zero
   44924:	003f8906 	br	4474c <__adddf3+0x314>
   44928:	580c977a 	slli	r6,r11,29
   4492c:	00880034 	movhi	r2,8192
   44930:	10bfffc4 	addi	r2,r2,-1
   44934:	2084703a 	and	r2,r4,r2
   44938:	5806d0fa 	srli	r3,r11,3
   4493c:	1184b03a 	or	r2,r2,r6
   44940:	003f8006 	br	44744 <__adddf3+0x30c>
   44944:	04800084 	movi	r18,2
   44948:	00bfe034 	movhi	r2,65408
   4494c:	10bfffc4 	addi	r2,r2,-1
   44950:	8808d07a 	srli	r4,r17,1
   44954:	1884703a 	and	r2,r3,r2
   44958:	100a97fa 	slli	r5,r2,31
   4495c:	8c40004c 	andi	r17,r17,1
   44960:	2448b03a 	or	r4,r4,r17
   44964:	1006d07a 	srli	r3,r2,1
   44968:	2922b03a 	or	r17,r5,r4
   4496c:	003f0106 	br	44574 <__adddf3+0x13c>
   44970:	28bff804 	addi	r2,r5,-32
   44974:	28c00820 	cmpeqi	r3,r5,32
   44978:	4084d83a 	srl	r2,r8,r2
   4497c:	1800041e 	bne	r3,zero,44990 <__adddf3+0x558>
   44980:	00c01004 	movi	r3,64
   44984:	1947c83a 	sub	r3,r3,r5
   44988:	40c6983a 	sll	r3,r8,r3
   4498c:	60d8b03a 	or	r12,r12,r3
   44990:	6022c03a 	cmpne	r17,r12,zero
   44994:	88a2b03a 	or	r17,r17,r2
   44998:	003ed506 	br	444f0 <__adddf3+0xb8>
   4499c:	5b62b03a 	or	r17,r11,r13
   449a0:	8822c03a 	cmpne	r17,r17,zero
   449a4:	6463c83a 	sub	r17,r12,r17
   449a8:	6447803a 	cmpltu	r3,r12,r17
   449ac:	40c7c83a 	sub	r3,r8,r3
   449b0:	3821883a 	mov	r16,r7
   449b4:	1025883a 	mov	r18,r2
   449b8:	003ed006 	br	444fc <__adddf3+0xc4>
   449bc:	5b46b03a 	or	r3,r11,r13
   449c0:	18009926 	beq	r3,zero,44c28 <__adddf3+0x7f0>
   449c4:	28ffffc4 	addi	r3,r5,-1
   449c8:	1800d226 	beq	r3,zero,44d14 <__adddf3+0x8dc>
   449cc:	2941ffd8 	cmpnei	r5,r5,2047
   449d0:	28005026 	beq	r5,zero,44b14 <__adddf3+0x6dc>
   449d4:	180b883a 	mov	r5,r3
   449d8:	003f9106 	br	44820 <__adddf3+0x3e8>
   449dc:	00800804 	movi	r2,32
   449e0:	1145c83a 	sub	r2,r2,r5
   449e4:	40a2983a 	sll	r17,r8,r2
   449e8:	6146d83a 	srl	r3,r12,r5
   449ec:	6084983a 	sll	r2,r12,r2
   449f0:	4150d83a 	srl	r8,r8,r5
   449f4:	88e2b03a 	or	r17,r17,r3
   449f8:	1004c03a 	cmpne	r2,r2,zero
   449fc:	88a2b03a 	or	r17,r17,r2
   44a00:	5a17883a 	add	r11,r11,r8
   44a04:	003f5806 	br	44768 <__adddf3+0x330>
   44a08:	4881ffe0 	cmpeqi	r2,r9,2047
   44a0c:	103f5e1e 	bne	r2,zero,44788 <__adddf3+0x350>
   44a10:	6b05883a 	add	r2,r13,r12
   44a14:	135b803a 	cmpltu	r13,r2,r13
   44a18:	5a07883a 	add	r3,r11,r8
   44a1c:	1b47883a 	add	r3,r3,r13
   44a20:	182297fa 	slli	r17,r3,31
   44a24:	1004d07a 	srli	r2,r2,1
   44a28:	1806d07a 	srli	r3,r3,1
   44a2c:	4825883a 	mov	r18,r9
   44a30:	88a2b03a 	or	r17,r17,r2
   44a34:	003f3c06 	br	44728 <__adddf3+0x2f0>
   44a38:	6363c83a 	sub	r17,r12,r13
   44a3c:	42d1c83a 	sub	r8,r8,r11
   44a40:	6445803a 	cmpltu	r2,r12,r17
   44a44:	40a7c83a 	sub	r19,r8,r2
   44a48:	3821883a 	mov	r16,r7
   44a4c:	003eb006 	br	44510 <__adddf3+0xd8>
   44a50:	4008977a 	slli	r4,r8,29
   44a54:	00880034 	movhi	r2,8192
   44a58:	10bfffc4 	addi	r2,r2,-1
   44a5c:	3084703a 	and	r2,r6,r2
   44a60:	4006d0fa 	srli	r3,r8,3
   44a64:	1104b03a 	or	r2,r2,r4
   44a68:	3821883a 	mov	r16,r7
   44a6c:	003f3506 	br	44744 <__adddf3+0x30c>
   44a70:	4800741e 	bne	r9,zero,44c44 <__adddf3+0x80c>
   44a74:	10001f1e 	bne	r2,zero,44af4 <__adddf3+0x6bc>
   44a78:	0021883a 	mov	r16,zero
   44a7c:	00bfffc4 	movi	r2,-1
   44a80:	003f4d06 	br	447b8 <__adddf3+0x380>
   44a84:	6b23883a 	add	r17,r13,r12
   44a88:	5a11883a 	add	r8,r11,r8
   44a8c:	8b47803a 	cmpltu	r3,r17,r13
   44a90:	40c7883a 	add	r3,r8,r3
   44a94:	1880202c 	andhi	r2,r3,128
   44a98:	103faa1e 	bne	r2,zero,44944 <__adddf3+0x50c>
   44a9c:	04800044 	movi	r18,1
   44aa0:	003f2106 	br	44728 <__adddf3+0x2f0>
   44aa4:	5804977a 	slli	r2,r11,29
   44aa8:	00c80034 	movhi	r3,8192
   44aac:	18ffffc4 	addi	r3,r3,-1
   44ab0:	20c8703a 	and	r4,r4,r3
   44ab4:	1104b03a 	or	r2,r2,r4
   44ab8:	5806d0fa 	srli	r3,r11,3
   44abc:	003f3c06 	br	447b0 <__adddf3+0x378>
   44ac0:	6b23c83a 	sub	r17,r13,r12
   44ac4:	5a11c83a 	sub	r8,r11,r8
   44ac8:	6c47803a 	cmpltu	r3,r13,r17
   44acc:	40c7c83a 	sub	r3,r8,r3
   44ad0:	04800044 	movi	r18,1
   44ad4:	003e8906 	br	444fc <__adddf3+0xc4>
   44ad8:	5804977a 	slli	r2,r11,29
   44adc:	00c80034 	movhi	r3,8192
   44ae0:	18ffffc4 	addi	r3,r3,-1
   44ae4:	20c8703a 	and	r4,r4,r3
   44ae8:	1104b03a 	or	r2,r2,r4
   44aec:	5806d0fa 	srli	r3,r11,3
   44af0:	003f1406 	br	44744 <__adddf3+0x30c>
   44af4:	4008977a 	slli	r4,r8,29
   44af8:	00880034 	movhi	r2,8192
   44afc:	10bfffc4 	addi	r2,r2,-1
   44b00:	3084703a 	and	r2,r6,r2
   44b04:	4006d0fa 	srli	r3,r8,3
   44b08:	1104b03a 	or	r2,r2,r4
   44b0c:	3821883a 	mov	r16,r7
   44b10:	003f2706 	br	447b0 <__adddf3+0x378>
   44b14:	4008977a 	slli	r4,r8,29
   44b18:	00880034 	movhi	r2,8192
   44b1c:	10bfffc4 	addi	r2,r2,-1
   44b20:	3084703a 	and	r2,r6,r2
   44b24:	4006d0fa 	srli	r3,r8,3
   44b28:	1104b03a 	or	r2,r2,r4
   44b2c:	003f2006 	br	447b0 <__adddf3+0x378>
   44b30:	5b62b03a 	or	r17,r11,r13
   44b34:	8822c03a 	cmpne	r17,r17,zero
   44b38:	003f4706 	br	44858 <__adddf3+0x420>
   44b3c:	28fff804 	addi	r3,r5,-32
   44b40:	29000820 	cmpeqi	r4,r5,32
   44b44:	58c6d83a 	srl	r3,r11,r3
   44b48:	2000041e 	bne	r4,zero,44b5c <__adddf3+0x724>
   44b4c:	01001004 	movi	r4,64
   44b50:	2149c83a 	sub	r4,r4,r5
   44b54:	5908983a 	sll	r4,r11,r4
   44b58:	691ab03a 	or	r13,r13,r4
   44b5c:	6822c03a 	cmpne	r17,r13,zero
   44b60:	88e2b03a 	or	r17,r17,r3
   44b64:	003f8f06 	br	449a4 <__adddf3+0x56c>
   44b68:	103fea26 	beq	r2,zero,44b14 <__adddf3+0x6dc>
   44b6c:	4304b03a 	or	r2,r8,r12
   44b70:	5812977a 	slli	r9,r11,29
   44b74:	5806d0fa 	srli	r3,r11,3
   44b78:	10005626 	beq	r2,zero,44cd4 <__adddf3+0x89c>
   44b7c:	01480034 	movhi	r5,8192
   44b80:	297fffc4 	addi	r5,r5,-1
   44b84:	2144703a 	and	r2,r4,r5
   44b88:	1900022c 	andhi	r4,r3,8
   44b8c:	1244b03a 	or	r2,r2,r9
   44b90:	203f0726 	beq	r4,zero,447b0 <__adddf3+0x378>
   44b94:	4008d0fa 	srli	r4,r8,3
   44b98:	2240022c 	andhi	r9,r4,8
   44b9c:	483f041e 	bne	r9,zero,447b0 <__adddf3+0x378>
   44ba0:	4004977a 	slli	r2,r8,29
   44ba4:	314a703a 	and	r5,r6,r5
   44ba8:	3821883a 	mov	r16,r7
   44bac:	2884b03a 	or	r2,r5,r2
   44bb0:	2007883a 	mov	r3,r4
   44bb4:	003efe06 	br	447b0 <__adddf3+0x378>
   44bb8:	6363c83a 	sub	r17,r12,r13
   44bbc:	42d1c83a 	sub	r8,r8,r11
   44bc0:	6447803a 	cmpltu	r3,r12,r17
   44bc4:	40c7c83a 	sub	r3,r8,r3
   44bc8:	3821883a 	mov	r16,r7
   44bcc:	04800044 	movi	r18,1
   44bd0:	003e4a06 	br	444fc <__adddf3+0xc4>
   44bd4:	103f5126 	beq	r2,zero,4491c <__adddf3+0x4e4>
   44bd8:	4008977a 	slli	r4,r8,29
   44bdc:	00880034 	movhi	r2,8192
   44be0:	10bfffc4 	addi	r2,r2,-1
   44be4:	3084703a 	and	r2,r6,r2
   44be8:	4006d0fa 	srli	r3,r8,3
   44bec:	1104b03a 	or	r2,r2,r4
   44bf0:	3821883a 	mov	r16,r7
   44bf4:	003ed506 	br	4474c <__adddf3+0x314>
   44bf8:	6b23c83a 	sub	r17,r13,r12
   44bfc:	6c45803a 	cmpltu	r2,r13,r17
   44c00:	5a07c83a 	sub	r3,r11,r8
   44c04:	1887c83a 	sub	r3,r3,r2
   44c08:	1880202c 	andhi	r2,r3,128
   44c0c:	10004626 	beq	r2,zero,44d28 <__adddf3+0x8f0>
   44c10:	6363c83a 	sub	r17,r12,r13
   44c14:	42d1c83a 	sub	r8,r8,r11
   44c18:	6447803a 	cmpltu	r3,r12,r17
   44c1c:	40c7c83a 	sub	r3,r8,r3
   44c20:	3821883a 	mov	r16,r7
   44c24:	003e5306 	br	44574 <__adddf3+0x13c>
   44c28:	4008977a 	slli	r4,r8,29
   44c2c:	00880034 	movhi	r2,8192
   44c30:	10bfffc4 	addi	r2,r2,-1
   44c34:	3084703a 	and	r2,r6,r2
   44c38:	4006d0fa 	srli	r3,r8,3
   44c3c:	1104b03a 	or	r2,r2,r4
   44c40:	003ec006 	br	44744 <__adddf3+0x30c>
   44c44:	5812977a 	slli	r9,r11,29
   44c48:	5806d0fa 	srli	r3,r11,3
   44c4c:	10002126 	beq	r2,zero,44cd4 <__adddf3+0x89c>
   44c50:	01480034 	movhi	r5,8192
   44c54:	297fffc4 	addi	r5,r5,-1
   44c58:	2144703a 	and	r2,r4,r5
   44c5c:	1900022c 	andhi	r4,r3,8
   44c60:	1244b03a 	or	r2,r2,r9
   44c64:	203ed226 	beq	r4,zero,447b0 <__adddf3+0x378>
   44c68:	4008d0fa 	srli	r4,r8,3
   44c6c:	2240022c 	andhi	r9,r4,8
   44c70:	483ecf1e 	bne	r9,zero,447b0 <__adddf3+0x378>
   44c74:	4004977a 	slli	r2,r8,29
   44c78:	314c703a 	and	r6,r6,r5
   44c7c:	3821883a 	mov	r16,r7
   44c80:	3084b03a 	or	r2,r6,r2
   44c84:	2007883a 	mov	r3,r4
   44c88:	003ec906 	br	447b0 <__adddf3+0x378>
   44c8c:	4008977a 	slli	r4,r8,29
   44c90:	00880034 	movhi	r2,8192
   44c94:	10bfffc4 	addi	r2,r2,-1
   44c98:	3084703a 	and	r2,r6,r2
   44c9c:	4006d0fa 	srli	r3,r8,3
   44ca0:	1104b03a 	or	r2,r2,r4
   44ca4:	003ea906 	br	4474c <__adddf3+0x314>
   44ca8:	6b23883a 	add	r17,r13,r12
   44cac:	5a11883a 	add	r8,r11,r8
   44cb0:	8b47803a 	cmpltu	r3,r17,r13
   44cb4:	40c7883a 	add	r3,r8,r3
   44cb8:	1880202c 	andhi	r2,r3,128
   44cbc:	103e9a26 	beq	r2,zero,44728 <__adddf3+0x2f0>
   44cc0:	00bfe034 	movhi	r2,65408
   44cc4:	10bfffc4 	addi	r2,r2,-1
   44cc8:	1886703a 	and	r3,r3,r2
   44ccc:	04800044 	movi	r18,1
   44cd0:	003e9506 	br	44728 <__adddf3+0x2f0>
   44cd4:	00880034 	movhi	r2,8192
   44cd8:	10bfffc4 	addi	r2,r2,-1
   44cdc:	2084703a 	and	r2,r4,r2
   44ce0:	1244b03a 	or	r2,r2,r9
   44ce4:	003eb206 	br	447b0 <__adddf3+0x378>
   44ce8:	28fff804 	addi	r3,r5,-32
   44cec:	29000820 	cmpeqi	r4,r5,32
   44cf0:	58c6d83a 	srl	r3,r11,r3
   44cf4:	2000041e 	bne	r4,zero,44d08 <__adddf3+0x8d0>
   44cf8:	01001004 	movi	r4,64
   44cfc:	2149c83a 	sub	r4,r4,r5
   44d00:	5908983a 	sll	r4,r11,r4
   44d04:	691ab03a 	or	r13,r13,r4
   44d08:	6822c03a 	cmpne	r17,r13,zero
   44d0c:	88e2b03a 	or	r17,r17,r3
   44d10:	003ed106 	br	44858 <__adddf3+0x420>
   44d14:	6b23883a 	add	r17,r13,r12
   44d18:	5a11883a 	add	r8,r11,r8
   44d1c:	8b07803a 	cmpltu	r3,r17,r12
   44d20:	40c7883a 	add	r3,r8,r3
   44d24:	003f5b06 	br	44a94 <__adddf3+0x65c>
   44d28:	88c4b03a 	or	r2,r17,r3
   44d2c:	103efb26 	beq	r2,zero,4491c <__adddf3+0x4e4>
   44d30:	003e7d06 	br	44728 <__adddf3+0x2f0>
   44d34:	0005883a 	mov	r2,zero
   44d38:	0141ffc4 	movi	r5,2047
   44d3c:	0009883a 	mov	r4,zero
   44d40:	003e2306 	br	445d0 <__adddf3+0x198>

00044d44 <__divdf3>:
   44d44:	2806d53a 	srli	r3,r5,20
   44d48:	defff304 	addi	sp,sp,-52
   44d4c:	00800434 	movhi	r2,16
   44d50:	ddc00a15 	stw	r23,40(sp)
   44d54:	dd400815 	stw	r21,32(sp)
   44d58:	dc800515 	stw	r18,20(sp)
   44d5c:	dc000315 	stw	r16,12(sp)
   44d60:	10bfffc4 	addi	r2,r2,-1
   44d64:	dfc00c15 	stw	ra,48(sp)
   44d68:	df000b15 	stw	fp,44(sp)
   44d6c:	dd800915 	stw	r22,36(sp)
   44d70:	dd000715 	stw	r20,28(sp)
   44d74:	dcc00615 	stw	r19,24(sp)
   44d78:	dc400415 	stw	r17,16(sp)
   44d7c:	18c1ffcc 	andi	r3,r3,2047
   44d80:	282ad7fa 	srli	r21,r5,31
   44d84:	302f883a 	mov	r23,r6
   44d88:	2025883a 	mov	r18,r4
   44d8c:	28a0703a 	and	r16,r5,r2
   44d90:	18010e26 	beq	r3,zero,451cc <__divdf3+0x488>
   44d94:	1881ffe0 	cmpeqi	r2,r3,2047
   44d98:	1001221e 	bne	r2,zero,45224 <__divdf3+0x4e0>
   44d9c:	2008d77a 	srli	r4,r4,29
   44da0:	800a90fa 	slli	r5,r16,3
   44da4:	902490fa 	slli	r18,r18,3
   44da8:	1c7f0044 	addi	r17,r3,-1023
   44dac:	2148b03a 	or	r4,r4,r5
   44db0:	24c02034 	orhi	r19,r4,128
   44db4:	002d883a 	mov	r22,zero
   44db8:	0039883a 	mov	fp,zero
   44dbc:	3806d53a 	srli	r3,r7,20
   44dc0:	01000434 	movhi	r4,16
   44dc4:	213fffc4 	addi	r4,r4,-1
   44dc8:	18c1ffcc 	andi	r3,r3,2047
   44dcc:	380cd7fa 	srli	r6,r7,31
   44dd0:	3920703a 	and	r16,r7,r4
   44dd4:	1800e926 	beq	r3,zero,4517c <__divdf3+0x438>
   44dd8:	1881ffe0 	cmpeqi	r2,r3,2047
   44ddc:	1001181e 	bne	r2,zero,45240 <__divdf3+0x4fc>
   44de0:	800890fa 	slli	r4,r16,3
   44de4:	b804d77a 	srli	r2,r23,29
   44de8:	b80e90fa 	slli	r7,r23,3
   44dec:	18ff0044 	addi	r3,r3,-1023
   44df0:	1108b03a 	or	r4,r2,r4
   44df4:	24002034 	orhi	r16,r4,128
   44df8:	88e3c83a 	sub	r17,r17,r3
   44dfc:	0009883a 	mov	r4,zero
   44e00:	b1400428 	cmpgeui	r5,r22,16
   44e04:	a9a8f03a 	xor	r20,r21,r6
   44e08:	2800391e 	bne	r5,zero,44ef0 <__divdf3+0x1ac>
   44e0c:	b00690ba 	slli	r3,r22,2
   44e10:	01400134 	movhi	r5,4
   44e14:	194b883a 	add	r5,r3,r5
   44e18:	28938817 	ldw	r2,20000(r5)
   44e1c:	1000683a 	jmp	r2
   44e20:	00044ef0 	cmpltui	zero,zero,4411
   44e24:	00044ecc 	andi	zero,zero,4411
   44e28:	00044e7c 	xorhi	zero,zero,4409
   44e2c:	00044edc 	xori	zero,zero,4411
   44e30:	00044e7c 	xorhi	zero,zero,4409
   44e34:	000452a4 	muli	zero,zero,4426
   44e38:	00044e7c 	xorhi	zero,zero,4409
   44e3c:	00044edc 	xori	zero,zero,4411
   44e40:	00044ecc 	andi	zero,zero,4411
   44e44:	00044ecc 	andi	zero,zero,4411
   44e48:	000452a4 	muli	zero,zero,4426
   44e4c:	00044edc 	xori	zero,zero,4411
   44e50:	00044e60 	cmpeqi	zero,zero,4409
   44e54:	00044e60 	cmpeqi	zero,zero,4409
   44e58:	00044e60 	cmpeqi	zero,zero,4409
   44e5c:	00045334 	movhi	zero,4428
   44e60:	a829883a 	mov	r20,r21
   44e64:	e08000a0 	cmpeqi	r2,fp,2
   44e68:	1000181e 	bne	r2,zero,44ecc <__divdf3+0x188>
   44e6c:	e08000e0 	cmpeqi	r2,fp,3
   44e70:	1001be1e 	bne	r2,zero,4556c <__divdf3+0x828>
   44e74:	e0800060 	cmpeqi	r2,fp,1
   44e78:	1000ad26 	beq	r2,zero,45130 <__divdf3+0x3ec>
   44e7c:	000b883a 	mov	r5,zero
   44e80:	0009883a 	mov	r4,zero
   44e84:	0025883a 	mov	r18,zero
   44e88:	2806953a 	slli	r3,r5,20
   44e8c:	a02897fa 	slli	r20,r20,31
   44e90:	9005883a 	mov	r2,r18
   44e94:	1906b03a 	or	r3,r3,r4
   44e98:	1d06b03a 	or	r3,r3,r20
   44e9c:	dfc00c17 	ldw	ra,48(sp)
   44ea0:	df000b17 	ldw	fp,44(sp)
   44ea4:	ddc00a17 	ldw	r23,40(sp)
   44ea8:	dd800917 	ldw	r22,36(sp)
   44eac:	dd400817 	ldw	r21,32(sp)
   44eb0:	dd000717 	ldw	r20,28(sp)
   44eb4:	dcc00617 	ldw	r19,24(sp)
   44eb8:	dc800517 	ldw	r18,20(sp)
   44ebc:	dc400417 	ldw	r17,16(sp)
   44ec0:	dc000317 	ldw	r16,12(sp)
   44ec4:	dec00d04 	addi	sp,sp,52
   44ec8:	f800283a 	ret
   44ecc:	0141ffc4 	movi	r5,2047
   44ed0:	0009883a 	mov	r4,zero
   44ed4:	0025883a 	mov	r18,zero
   44ed8:	003feb06 	br	44e88 <__divdf3+0x144>
   44edc:	3029883a 	mov	r20,r6
   44ee0:	8027883a 	mov	r19,r16
   44ee4:	3825883a 	mov	r18,r7
   44ee8:	2039883a 	mov	fp,r4
   44eec:	003fdd06 	br	44e64 <__divdf3+0x120>
   44ef0:	84c12a36 	bltu	r16,r19,4539c <__divdf3+0x658>
   44ef4:	84c12826 	beq	r16,r19,45398 <__divdf3+0x654>
   44ef8:	dc800115 	stw	r18,4(sp)
   44efc:	8c7fffc4 	addi	r17,r17,-1
   44f00:	0025883a 	mov	r18,zero
   44f04:	8020923a 	slli	r16,r16,8
   44f08:	3806d63a 	srli	r3,r7,24
   44f0c:	3804923a 	slli	r2,r7,8
   44f10:	8038d43a 	srli	fp,r16,16
   44f14:	9809883a 	mov	r4,r19
   44f18:	1c20b03a 	or	r16,r3,r16
   44f1c:	e00b883a 	mov	r5,fp
   44f20:	d8800015 	stw	r2,0(sp)
   44f24:	0046d0c0 	call	46d0c <__udivsi3>
   44f28:	e00b883a 	mov	r5,fp
   44f2c:	9809883a 	mov	r4,r19
   44f30:	102b883a 	mov	r21,r2
   44f34:	0046d700 	call	46d70 <__umodsi3>
   44f38:	d8c00117 	ldw	r3,4(sp)
   44f3c:	1004943a 	slli	r2,r2,16
   44f40:	85ffffcc 	andi	r23,r16,65535
   44f44:	1808d43a 	srli	r4,r3,16
   44f48:	bd4b383a 	mul	r5,r23,r21
   44f4c:	2088b03a 	or	r4,r4,r2
   44f50:	2140042e 	bgeu	r4,r5,44f64 <__divdf3+0x220>
   44f54:	2409883a 	add	r4,r4,r16
   44f58:	a8bfffc4 	addi	r2,r21,-1
   44f5c:	2401402e 	bgeu	r4,r16,45460 <__divdf3+0x71c>
   44f60:	102b883a 	mov	r21,r2
   44f64:	216dc83a 	sub	r22,r4,r5
   44f68:	b009883a 	mov	r4,r22
   44f6c:	e00b883a 	mov	r5,fp
   44f70:	0046d0c0 	call	46d0c <__udivsi3>
   44f74:	b009883a 	mov	r4,r22
   44f78:	e00b883a 	mov	r5,fp
   44f7c:	1027883a 	mov	r19,r2
   44f80:	0046d700 	call	46d70 <__umodsi3>
   44f84:	d8c00117 	ldw	r3,4(sp)
   44f88:	1004943a 	slli	r2,r2,16
   44f8c:	bcd5383a 	mul	r10,r23,r19
   44f90:	193fffcc 	andi	r4,r3,65535
   44f94:	2088b03a 	or	r4,r4,r2
   44f98:	2280042e 	bgeu	r4,r10,44fac <__divdf3+0x268>
   44f9c:	2409883a 	add	r4,r4,r16
   44fa0:	98bfffc4 	addi	r2,r19,-1
   44fa4:	24012a2e 	bgeu	r4,r16,45450 <__divdf3+0x70c>
   44fa8:	1027883a 	mov	r19,r2
   44fac:	a804943a 	slli	r2,r21,16
   44fb0:	d8c00017 	ldw	r3,0(sp)
   44fb4:	2289c83a 	sub	r4,r4,r10
   44fb8:	14e6b03a 	or	r19,r2,r19
   44fbc:	98bfffcc 	andi	r2,r19,65535
   44fc0:	180cd43a 	srli	r6,r3,16
   44fc4:	9810d43a 	srli	r8,r19,16
   44fc8:	19ffffcc 	andi	r7,r3,65535
   44fcc:	11d3383a 	mul	r9,r2,r7
   44fd0:	41d7383a 	mul	r11,r8,r7
   44fd4:	308b383a 	mul	r5,r6,r2
   44fd8:	4804d43a 	srli	r2,r9,16
   44fdc:	4191383a 	mul	r8,r8,r6
   44fe0:	2acb883a 	add	r5,r5,r11
   44fe4:	1145883a 	add	r2,r2,r5
   44fe8:	12c0022e 	bgeu	r2,r11,44ff4 <__divdf3+0x2b0>
   44fec:	01400074 	movhi	r5,1
   44ff0:	4151883a 	add	r8,r8,r5
   44ff4:	100ad43a 	srli	r5,r2,16
   44ff8:	102c943a 	slli	r22,r2,16
   44ffc:	4a7fffcc 	andi	r9,r9,65535
   45000:	2a05883a 	add	r2,r5,r8
   45004:	b26d883a 	add	r22,r22,r9
   45008:	20800236 	bltu	r4,r2,45014 <__divdf3+0x2d0>
   4500c:	20800b1e 	bne	r4,r2,4503c <__divdf3+0x2f8>
   45010:	95800a2e 	bgeu	r18,r22,4503c <__divdf3+0x2f8>
   45014:	d8c00017 	ldw	r3,0(sp)
   45018:	90e5883a 	add	r18,r18,r3
   4501c:	90cb803a 	cmpltu	r5,r18,r3
   45020:	2c0b883a 	add	r5,r5,r16
   45024:	2149883a 	add	r4,r4,r5
   45028:	997fffc4 	addi	r5,r19,-1
   4502c:	8101052e 	bgeu	r16,r4,45444 <__divdf3+0x700>
   45030:	20813736 	bltu	r4,r2,45510 <__divdf3+0x7cc>
   45034:	11013526 	beq	r2,r4,4550c <__divdf3+0x7c8>
   45038:	2827883a 	mov	r19,r5
   4503c:	95adc83a 	sub	r22,r18,r22
   45040:	2089c83a 	sub	r4,r4,r2
   45044:	95a5803a 	cmpltu	r18,r18,r22
   45048:	24a5c83a 	sub	r18,r4,r18
   4504c:	84811e26 	beq	r16,r18,454c8 <__divdf3+0x784>
   45050:	9009883a 	mov	r4,r18
   45054:	e00b883a 	mov	r5,fp
   45058:	d9c00215 	stw	r7,8(sp)
   4505c:	d9800115 	stw	r6,4(sp)
   45060:	0046d0c0 	call	46d0c <__udivsi3>
   45064:	9009883a 	mov	r4,r18
   45068:	e00b883a 	mov	r5,fp
   4506c:	1025883a 	mov	r18,r2
   45070:	0046d700 	call	46d70 <__umodsi3>
   45074:	1004943a 	slli	r2,r2,16
   45078:	b008d43a 	srli	r4,r22,16
   4507c:	bc8b383a 	mul	r5,r23,r18
   45080:	d9800117 	ldw	r6,4(sp)
   45084:	2088b03a 	or	r4,r4,r2
   45088:	d9c00217 	ldw	r7,8(sp)
   4508c:	2140e636 	bltu	r4,r5,45428 <__divdf3+0x6e4>
   45090:	216bc83a 	sub	r21,r4,r5
   45094:	a809883a 	mov	r4,r21
   45098:	e00b883a 	mov	r5,fp
   4509c:	d9c00215 	stw	r7,8(sp)
   450a0:	d9800115 	stw	r6,4(sp)
   450a4:	0046d0c0 	call	46d0c <__udivsi3>
   450a8:	a809883a 	mov	r4,r21
   450ac:	e00b883a 	mov	r5,fp
   450b0:	102b883a 	mov	r21,r2
   450b4:	0046d700 	call	46d70 <__umodsi3>
   450b8:	1004943a 	slli	r2,r2,16
   450bc:	bd6f383a 	mul	r23,r23,r21
   450c0:	b5bfffcc 	andi	r22,r22,65535
   450c4:	b0acb03a 	or	r22,r22,r2
   450c8:	d9800117 	ldw	r6,4(sp)
   450cc:	d9c00217 	ldw	r7,8(sp)
   450d0:	b5c0ce36 	bltu	r22,r23,4540c <__divdf3+0x6c8>
   450d4:	9024943a 	slli	r18,r18,16
   450d8:	b5edc83a 	sub	r22,r22,r23
   450dc:	9564b03a 	or	r18,r18,r21
   450e0:	90bfffcc 	andi	r2,r18,65535
   450e4:	9010d43a 	srli	r8,r18,16
   450e8:	388b383a 	mul	r5,r7,r2
   450ec:	3089383a 	mul	r4,r6,r2
   450f0:	41cf383a 	mul	r7,r8,r7
   450f4:	2804d43a 	srli	r2,r5,16
   450f8:	320d383a 	mul	r6,r6,r8
   450fc:	21c9883a 	add	r4,r4,r7
   45100:	1105883a 	add	r2,r2,r4
   45104:	11c0022e 	bgeu	r2,r7,45110 <__divdf3+0x3cc>
   45108:	01000074 	movhi	r4,1
   4510c:	310d883a 	add	r6,r6,r4
   45110:	1008d43a 	srli	r4,r2,16
   45114:	1004943a 	slli	r2,r2,16
   45118:	297fffcc 	andi	r5,r5,65535
   4511c:	2189883a 	add	r4,r4,r6
   45120:	1145883a 	add	r2,r2,r5
   45124:	b1009536 	bltu	r22,r4,4537c <__divdf3+0x638>
   45128:	b1009326 	beq	r22,r4,45378 <__divdf3+0x634>
   4512c:	94800054 	ori	r18,r18,1
   45130:	8940ffc4 	addi	r5,r17,1023
   45134:	0140620e 	bge	zero,r5,452c0 <__divdf3+0x57c>
   45138:	908001cc 	andi	r2,r18,7
   4513c:	1000e81e 	bne	r2,zero,454e0 <__divdf3+0x79c>
   45140:	9006d0fa 	srli	r3,r18,3
   45144:	9880402c 	andhi	r2,r19,256
   45148:	10000426 	beq	r2,zero,4515c <__divdf3+0x418>
   4514c:	00bfc034 	movhi	r2,65280
   45150:	10bfffc4 	addi	r2,r2,-1
   45154:	98a6703a 	and	r19,r19,r2
   45158:	89410004 	addi	r5,r17,1024
   4515c:	2881ffc8 	cmpgei	r2,r5,2047
   45160:	103f5a1e 	bne	r2,zero,44ecc <__divdf3+0x188>
   45164:	9824977a 	slli	r18,r19,29
   45168:	9808927a 	slli	r4,r19,9
   4516c:	2941ffcc 	andi	r5,r5,2047
   45170:	90e4b03a 	or	r18,r18,r3
   45174:	2008d33a 	srli	r4,r4,12
   45178:	003f4306 	br	44e88 <__divdf3+0x144>
   4517c:	85ceb03a 	or	r7,r16,r23
   45180:	38004426 	beq	r7,zero,45294 <__divdf3+0x550>
   45184:	d9800015 	stw	r6,0(sp)
   45188:	80009526 	beq	r16,zero,453e0 <__divdf3+0x69c>
   4518c:	8009883a 	mov	r4,r16
   45190:	0046bc80 	call	46bc8 <__clzsi2>
   45194:	d9800017 	ldw	r6,0(sp)
   45198:	1007883a 	mov	r3,r2
   4519c:	113ffd44 	addi	r4,r2,-11
   451a0:	00800744 	movi	r2,29
   451a4:	19fffe04 	addi	r7,r3,-8
   451a8:	1105c83a 	sub	r2,r2,r4
   451ac:	b884d83a 	srl	r2,r23,r2
   451b0:	81c8983a 	sll	r4,r16,r7
   451b4:	b9ce983a 	sll	r7,r23,r7
   451b8:	1120b03a 	or	r16,r2,r4
   451bc:	1c47883a 	add	r3,r3,r17
   451c0:	1c40fcc4 	addi	r17,r3,1011
   451c4:	0009883a 	mov	r4,zero
   451c8:	003f0d06 	br	44e00 <__divdf3+0xbc>
   451cc:	8126b03a 	or	r19,r16,r4
   451d0:	2023883a 	mov	r17,r4
   451d4:	98002a26 	beq	r19,zero,45280 <__divdf3+0x53c>
   451d8:	d9c00015 	stw	r7,0(sp)
   451dc:	80007626 	beq	r16,zero,453b8 <__divdf3+0x674>
   451e0:	8009883a 	mov	r4,r16
   451e4:	0046bc80 	call	46bc8 <__clzsi2>
   451e8:	d9c00017 	ldw	r7,0(sp)
   451ec:	100d883a 	mov	r6,r2
   451f0:	10fffd44 	addi	r3,r2,-11
   451f4:	01000744 	movi	r4,29
   451f8:	34bffe04 	addi	r18,r6,-8
   451fc:	20c9c83a 	sub	r4,r4,r3
   45200:	848a983a 	sll	r5,r16,r18
   45204:	8908d83a 	srl	r4,r17,r4
   45208:	8ca4983a 	sll	r18,r17,r18
   4520c:	2166b03a 	or	r19,r4,r5
   45210:	00ff0344 	movi	r3,-1011
   45214:	19a3c83a 	sub	r17,r3,r6
   45218:	002d883a 	mov	r22,zero
   4521c:	0039883a 	mov	fp,zero
   45220:	003ee606 	br	44dbc <__divdf3+0x78>
   45224:	8126b03a 	or	r19,r16,r4
   45228:	9800101e 	bne	r19,zero,4526c <__divdf3+0x528>
   4522c:	0025883a 	mov	r18,zero
   45230:	05800204 	movi	r22,8
   45234:	0441ffc4 	movi	r17,2047
   45238:	07000084 	movi	fp,2
   4523c:	003edf06 	br	44dbc <__divdf3+0x78>
   45240:	85ceb03a 	or	r7,r16,r23
   45244:	8c7e0044 	addi	r17,r17,-2047
   45248:	3800041e 	bne	r7,zero,4525c <__divdf3+0x518>
   4524c:	b5800094 	ori	r22,r22,2
   45250:	0021883a 	mov	r16,zero
   45254:	01000084 	movi	r4,2
   45258:	003ee906 	br	44e00 <__divdf3+0xbc>
   4525c:	b58000d4 	ori	r22,r22,3
   45260:	b80f883a 	mov	r7,r23
   45264:	010000c4 	movi	r4,3
   45268:	003ee506 	br	44e00 <__divdf3+0xbc>
   4526c:	8027883a 	mov	r19,r16
   45270:	05800304 	movi	r22,12
   45274:	0441ffc4 	movi	r17,2047
   45278:	070000c4 	movi	fp,3
   4527c:	003ecf06 	br	44dbc <__divdf3+0x78>
   45280:	0025883a 	mov	r18,zero
   45284:	05800104 	movi	r22,4
   45288:	0023883a 	mov	r17,zero
   4528c:	07000044 	movi	fp,1
   45290:	003eca06 	br	44dbc <__divdf3+0x78>
   45294:	b5800054 	ori	r22,r22,1
   45298:	0021883a 	mov	r16,zero
   4529c:	01000044 	movi	r4,1
   452a0:	003ed706 	br	44e00 <__divdf3+0xbc>
   452a4:	01000434 	movhi	r4,16
   452a8:	0029883a 	mov	r20,zero
   452ac:	213fffc4 	addi	r4,r4,-1
   452b0:	04bfffc4 	movi	r18,-1
   452b4:	0141ffc4 	movi	r5,2047
   452b8:	003ef306 	br	44e88 <__divdf3+0x144>
   452bc:	04bfffc4 	movi	r18,-1
   452c0:	00800044 	movi	r2,1
   452c4:	1145c83a 	sub	r2,r2,r5
   452c8:	10c00e48 	cmpgei	r3,r2,57
   452cc:	183eeb1e 	bne	r3,zero,44e7c <__divdf3+0x138>
   452d0:	10c00808 	cmpgei	r3,r2,32
   452d4:	1800661e 	bne	r3,zero,45470 <__divdf3+0x72c>
   452d8:	88c10784 	addi	r3,r17,1054
   452dc:	98ca983a 	sll	r5,r19,r3
   452e0:	908cd83a 	srl	r6,r18,r2
   452e4:	90c6983a 	sll	r3,r18,r3
   452e8:	9888d83a 	srl	r4,r19,r2
   452ec:	298ab03a 	or	r5,r5,r6
   452f0:	1806c03a 	cmpne	r3,r3,zero
   452f4:	28cab03a 	or	r5,r5,r3
   452f8:	288001cc 	andi	r2,r5,7
   452fc:	10000726 	beq	r2,zero,4531c <__divdf3+0x5d8>
   45300:	288003cc 	andi	r2,r5,15
   45304:	10800120 	cmpeqi	r2,r2,4
   45308:	1000041e 	bne	r2,zero,4531c <__divdf3+0x5d8>
   4530c:	28800104 	addi	r2,r5,4
   45310:	114b803a 	cmpltu	r5,r2,r5
   45314:	2149883a 	add	r4,r4,r5
   45318:	100b883a 	mov	r5,r2
   4531c:	2080202c 	andhi	r2,r4,128
   45320:	10008e26 	beq	r2,zero,4555c <__divdf3+0x818>
   45324:	01400044 	movi	r5,1
   45328:	0009883a 	mov	r4,zero
   4532c:	0025883a 	mov	r18,zero
   45330:	003ed506 	br	44e88 <__divdf3+0x144>
   45334:	9880022c 	andhi	r2,r19,8
   45338:	10000926 	beq	r2,zero,45360 <__divdf3+0x61c>
   4533c:	8080022c 	andhi	r2,r16,8
   45340:	1000071e 	bne	r2,zero,45360 <__divdf3+0x61c>
   45344:	00800434 	movhi	r2,16
   45348:	81000234 	orhi	r4,r16,8
   4534c:	10bfffc4 	addi	r2,r2,-1
   45350:	2088703a 	and	r4,r4,r2
   45354:	3029883a 	mov	r20,r6
   45358:	3825883a 	mov	r18,r7
   4535c:	003fd506 	br	452b4 <__divdf3+0x570>
   45360:	00800434 	movhi	r2,16
   45364:	99000234 	orhi	r4,r19,8
   45368:	10bfffc4 	addi	r2,r2,-1
   4536c:	2088703a 	and	r4,r4,r2
   45370:	a829883a 	mov	r20,r21
   45374:	003fcf06 	br	452b4 <__divdf3+0x570>
   45378:	103f6d26 	beq	r2,zero,45130 <__divdf3+0x3ec>
   4537c:	85ad883a 	add	r22,r16,r22
   45380:	917fffc4 	addi	r5,r18,-1
   45384:	b4004b36 	bltu	r22,r16,454b4 <__divdf3+0x770>
   45388:	b1006836 	bltu	r22,r4,4552c <__divdf3+0x7e8>
   4538c:	b1007c26 	beq	r22,r4,45580 <__divdf3+0x83c>
   45390:	2825883a 	mov	r18,r5
   45394:	003f6506 	br	4512c <__divdf3+0x3e8>
   45398:	91fed736 	bltu	r18,r7,44ef8 <__divdf3+0x1b4>
   4539c:	982a97fa 	slli	r21,r19,31
   453a0:	9004d07a 	srli	r2,r18,1
   453a4:	9826d07a 	srli	r19,r19,1
   453a8:	902497fa 	slli	r18,r18,31
   453ac:	a884b03a 	or	r2,r21,r2
   453b0:	d8800115 	stw	r2,4(sp)
   453b4:	003ed306 	br	44f04 <__divdf3+0x1c0>
   453b8:	0046bc80 	call	46bc8 <__clzsi2>
   453bc:	10c00544 	addi	r3,r2,21
   453c0:	19000748 	cmpgei	r4,r3,29
   453c4:	d9c00017 	ldw	r7,0(sp)
   453c8:	11800804 	addi	r6,r2,32
   453cc:	203f8926 	beq	r4,zero,451f4 <__divdf3+0x4b0>
   453d0:	10bffe04 	addi	r2,r2,-8
   453d4:	90a6983a 	sll	r19,r18,r2
   453d8:	0025883a 	mov	r18,zero
   453dc:	003f8c06 	br	45210 <__divdf3+0x4cc>
   453e0:	b809883a 	mov	r4,r23
   453e4:	0046bc80 	call	46bc8 <__clzsi2>
   453e8:	11000544 	addi	r4,r2,21
   453ec:	21400748 	cmpgei	r5,r4,29
   453f0:	d9800017 	ldw	r6,0(sp)
   453f4:	10c00804 	addi	r3,r2,32
   453f8:	283f6926 	beq	r5,zero,451a0 <__divdf3+0x45c>
   453fc:	10bffe04 	addi	r2,r2,-8
   45400:	b8a0983a 	sll	r16,r23,r2
   45404:	000f883a 	mov	r7,zero
   45408:	003f6c06 	br	451bc <__divdf3+0x478>
   4540c:	b42d883a 	add	r22,r22,r16
   45410:	a8bfffc4 	addi	r2,r21,-1
   45414:	b4003936 	bltu	r22,r16,454fc <__divdf3+0x7b8>
   45418:	b5c0382e 	bgeu	r22,r23,454fc <__divdf3+0x7b8>
   4541c:	ad7fff84 	addi	r21,r21,-2
   45420:	b42d883a 	add	r22,r22,r16
   45424:	003f2b06 	br	450d4 <__divdf3+0x390>
   45428:	2409883a 	add	r4,r4,r16
   4542c:	90bfffc4 	addi	r2,r18,-1
   45430:	24003436 	bltu	r4,r16,45504 <__divdf3+0x7c0>
   45434:	2140332e 	bgeu	r4,r5,45504 <__divdf3+0x7c0>
   45438:	94bfff84 	addi	r18,r18,-2
   4543c:	2409883a 	add	r4,r4,r16
   45440:	003f1306 	br	45090 <__divdf3+0x34c>
   45444:	813efc1e 	bne	r16,r4,45038 <__divdf3+0x2f4>
   45448:	90fefb36 	bltu	r18,r3,45038 <__divdf3+0x2f4>
   4544c:	003ef806 	br	45030 <__divdf3+0x2ec>
   45450:	22bed52e 	bgeu	r4,r10,44fa8 <__divdf3+0x264>
   45454:	9cffff84 	addi	r19,r19,-2
   45458:	2409883a 	add	r4,r4,r16
   4545c:	003ed306 	br	44fac <__divdf3+0x268>
   45460:	217ebf2e 	bgeu	r4,r5,44f60 <__divdf3+0x21c>
   45464:	ad7fff84 	addi	r21,r21,-2
   45468:	2409883a 	add	r4,r4,r16
   4546c:	003ebd06 	br	44f64 <__divdf3+0x220>
   45470:	013ff844 	movi	r4,-31
   45474:	2149c83a 	sub	r4,r4,r5
   45478:	10800820 	cmpeqi	r2,r2,32
   4547c:	9908d83a 	srl	r4,r19,r4
   45480:	1000031e 	bne	r2,zero,45490 <__divdf3+0x74c>
   45484:	88c10f84 	addi	r3,r17,1086
   45488:	98c6983a 	sll	r3,r19,r3
   4548c:	90e4b03a 	or	r18,r18,r3
   45490:	900ac03a 	cmpne	r5,r18,zero
   45494:	290ab03a 	or	r5,r5,r4
   45498:	288001cc 	andi	r2,r5,7
   4549c:	10002b1e 	bne	r2,zero,4554c <__divdf3+0x808>
   454a0:	0009883a 	mov	r4,zero
   454a4:	2806d0fa 	srli	r3,r5,3
   454a8:	000b883a 	mov	r5,zero
   454ac:	18a4b03a 	or	r18,r3,r2
   454b0:	003e7506 	br	44e88 <__divdf3+0x144>
   454b4:	2825883a 	mov	r18,r5
   454b8:	b13f1c1e 	bne	r22,r4,4512c <__divdf3+0x3e8>
   454bc:	d8c00017 	ldw	r3,0(sp)
   454c0:	18bf1a1e 	bne	r3,r2,4512c <__divdf3+0x3e8>
   454c4:	003f1a06 	br	45130 <__divdf3+0x3ec>
   454c8:	8940ffc4 	addi	r5,r17,1023
   454cc:	017f7b0e 	bge	zero,r5,452bc <__divdf3+0x578>
   454d0:	0007883a 	mov	r3,zero
   454d4:	00800044 	movi	r2,1
   454d8:	98a7883a 	add	r19,r19,r2
   454dc:	003f1906 	br	45144 <__divdf3+0x400>
   454e0:	908003cc 	andi	r2,r18,15
   454e4:	10800118 	cmpnei	r2,r2,4
   454e8:	103f1526 	beq	r2,zero,45140 <__divdf3+0x3fc>
   454ec:	90800104 	addi	r2,r18,4
   454f0:	1006d0fa 	srli	r3,r2,3
   454f4:	1485803a 	cmpltu	r2,r2,r18
   454f8:	003ff706 	br	454d8 <__divdf3+0x794>
   454fc:	102b883a 	mov	r21,r2
   45500:	003ef406 	br	450d4 <__divdf3+0x390>
   45504:	1025883a 	mov	r18,r2
   45508:	003ee106 	br	45090 <__divdf3+0x34c>
   4550c:	95beca2e 	bgeu	r18,r22,45038 <__divdf3+0x2f4>
   45510:	d8c00017 	ldw	r3,0(sp)
   45514:	9cffff84 	addi	r19,r19,-2
   45518:	90e5883a 	add	r18,r18,r3
   4551c:	90cb803a 	cmpltu	r5,r18,r3
   45520:	2c0b883a 	add	r5,r5,r16
   45524:	2149883a 	add	r4,r4,r5
   45528:	003ec406 	br	4503c <__divdf3+0x2f8>
   4552c:	d8c00017 	ldw	r3,0(sp)
   45530:	94bfff84 	addi	r18,r18,-2
   45534:	18cb883a 	add	r5,r3,r3
   45538:	28c7803a 	cmpltu	r3,r5,r3
   4553c:	1c21883a 	add	r16,r3,r16
   45540:	b42d883a 	add	r22,r22,r16
   45544:	d9400015 	stw	r5,0(sp)
   45548:	003fdb06 	br	454b8 <__divdf3+0x774>
   4554c:	288003cc 	andi	r2,r5,15
   45550:	10800118 	cmpnei	r2,r2,4
   45554:	0009883a 	mov	r4,zero
   45558:	103f6c1e 	bne	r2,zero,4530c <__divdf3+0x5c8>
   4555c:	2006927a 	slli	r3,r4,9
   45560:	2004977a 	slli	r2,r4,29
   45564:	1808d33a 	srli	r4,r3,12
   45568:	003fce06 	br	454a4 <__divdf3+0x760>
   4556c:	00800434 	movhi	r2,16
   45570:	99000234 	orhi	r4,r19,8
   45574:	10bfffc4 	addi	r2,r2,-1
   45578:	2088703a 	and	r4,r4,r2
   4557c:	003f4d06 	br	452b4 <__divdf3+0x570>
   45580:	d8c00017 	ldw	r3,0(sp)
   45584:	18bfe936 	bltu	r3,r2,4552c <__divdf3+0x7e8>
   45588:	2825883a 	mov	r18,r5
   4558c:	003fcb06 	br	454bc <__divdf3+0x778>

00045590 <__eqdf2>:
   45590:	2810d53a 	srli	r8,r5,20
   45594:	3806d53a 	srli	r3,r7,20
   45598:	00800434 	movhi	r2,16
   4559c:	4201ffcc 	andi	r8,r8,2047
   455a0:	10bfffc4 	addi	r2,r2,-1
   455a4:	4241ffd8 	cmpnei	r9,r8,2047
   455a8:	2814d7fa 	srli	r10,r5,31
   455ac:	3816d7fa 	srli	r11,r7,31
   455b0:	288a703a 	and	r5,r5,r2
   455b4:	388e703a 	and	r7,r7,r2
   455b8:	1881ffcc 	andi	r2,r3,2047
   455bc:	48000626 	beq	r9,zero,455d8 <__eqdf2+0x48>
   455c0:	10c1ffe0 	cmpeqi	r3,r2,2047
   455c4:	1800021e 	bne	r3,zero,455d0 <__eqdf2+0x40>
   455c8:	4080011e 	bne	r8,r2,455d0 <__eqdf2+0x40>
   455cc:	29c00826 	beq	r5,r7,455f0 <__eqdf2+0x60>
   455d0:	00800044 	movi	r2,1
   455d4:	f800283a 	ret
   455d8:	2906b03a 	or	r3,r5,r4
   455dc:	183ffc1e 	bne	r3,zero,455d0 <__eqdf2+0x40>
   455e0:	1081ffd8 	cmpnei	r2,r2,2047
   455e4:	103ffa1e 	bne	r2,zero,455d0 <__eqdf2+0x40>
   455e8:	398eb03a 	or	r7,r7,r6
   455ec:	383ff81e 	bne	r7,zero,455d0 <__eqdf2+0x40>
   455f0:	21bff71e 	bne	r4,r6,455d0 <__eqdf2+0x40>
   455f4:	52c00426 	beq	r10,r11,45608 <__eqdf2+0x78>
   455f8:	403ff51e 	bne	r8,zero,455d0 <__eqdf2+0x40>
   455fc:	290ab03a 	or	r5,r5,r4
   45600:	2804c03a 	cmpne	r2,r5,zero
   45604:	f800283a 	ret
   45608:	0005883a 	mov	r2,zero
   4560c:	f800283a 	ret

00045610 <__gedf2>:
   45610:	2810d53a 	srli	r8,r5,20
   45614:	3812d53a 	srli	r9,r7,20
   45618:	00c00434 	movhi	r3,16
   4561c:	4201ffcc 	andi	r8,r8,2047
   45620:	18ffffc4 	addi	r3,r3,-1
   45624:	4281ffd8 	cmpnei	r10,r8,2047
   45628:	2816d7fa 	srli	r11,r5,31
   4562c:	3804d7fa 	srli	r2,r7,31
   45630:	28ca703a 	and	r5,r5,r3
   45634:	38ce703a 	and	r7,r7,r3
   45638:	48c1ffcc 	andi	r3,r9,2047
   4563c:	50000a26 	beq	r10,zero,45668 <__gedf2+0x58>
   45640:	1a41ffd8 	cmpnei	r9,r3,2047
   45644:	48000c26 	beq	r9,zero,45678 <__gedf2+0x68>
   45648:	4000171e 	bne	r8,zero,456a8 <__gedf2+0x98>
   4564c:	2912b03a 	or	r9,r5,r4
   45650:	1800121e 	bne	r3,zero,4569c <__gedf2+0x8c>
   45654:	3994b03a 	or	r10,r7,r6
   45658:	5000101e 	bne	r10,zero,4569c <__gedf2+0x8c>
   4565c:	48000a1e 	bne	r9,zero,45688 <__gedf2+0x78>
   45660:	0005883a 	mov	r2,zero
   45664:	f800283a 	ret
   45668:	2912b03a 	or	r9,r5,r4
   4566c:	48001d1e 	bne	r9,zero,456e4 <__gedf2+0xd4>
   45670:	1a41ffe0 	cmpeqi	r9,r3,2047
   45674:	48000c26 	beq	r9,zero,456a8 <__gedf2+0x98>
   45678:	3992b03a 	or	r9,r7,r6
   4567c:	4800191e 	bne	r9,zero,456e4 <__gedf2+0xd4>
   45680:	40000526 	beq	r8,zero,45698 <__gedf2+0x88>
   45684:	58800c26 	beq	r11,r2,456b8 <__gedf2+0xa8>
   45688:	00800044 	movi	r2,1
   4568c:	58000526 	beq	r11,zero,456a4 <__gedf2+0x94>
   45690:	00bfffc4 	movi	r2,-1
   45694:	f800283a 	ret
   45698:	2912b03a 	or	r9,r5,r4
   4569c:	483ff91e 	bne	r9,zero,45684 <__gedf2+0x74>
   456a0:	103ffb26 	beq	r2,zero,45690 <__gedf2+0x80>
   456a4:	f800283a 	ret
   456a8:	183ff61e 	bne	r3,zero,45684 <__gedf2+0x74>
   456ac:	3992b03a 	or	r9,r7,r6
   456b0:	483ff41e 	bne	r9,zero,45684 <__gedf2+0x74>
   456b4:	003ff406 	br	45688 <__gedf2+0x78>
   456b8:	1a000716 	blt	r3,r8,456d8 <__gedf2+0xc8>
   456bc:	40fff816 	blt	r8,r3,456a0 <__gedf2+0x90>
   456c0:	397ff136 	bltu	r7,r5,45688 <__gedf2+0x78>
   456c4:	29c00926 	beq	r5,r7,456ec <__gedf2+0xdc>
   456c8:	29ffe52e 	bgeu	r5,r7,45660 <__gedf2+0x50>
   456cc:	583ff026 	beq	r11,zero,45690 <__gedf2+0x80>
   456d0:	5805883a 	mov	r2,r11
   456d4:	f800283a 	ret
   456d8:	103fed1e 	bne	r2,zero,45690 <__gedf2+0x80>
   456dc:	00800044 	movi	r2,1
   456e0:	f800283a 	ret
   456e4:	00bfff84 	movi	r2,-2
   456e8:	f800283a 	ret
   456ec:	313fe636 	bltu	r6,r4,45688 <__gedf2+0x78>
   456f0:	21bfdb2e 	bgeu	r4,r6,45660 <__gedf2+0x50>
   456f4:	003ff506 	br	456cc <__gedf2+0xbc>

000456f8 <__ledf2>:
   456f8:	2810d53a 	srli	r8,r5,20
   456fc:	3812d53a 	srli	r9,r7,20
   45700:	00c00434 	movhi	r3,16
   45704:	4201ffcc 	andi	r8,r8,2047
   45708:	18ffffc4 	addi	r3,r3,-1
   4570c:	4281ffd8 	cmpnei	r10,r8,2047
   45710:	2816d7fa 	srli	r11,r5,31
   45714:	3804d7fa 	srli	r2,r7,31
   45718:	28ca703a 	and	r5,r5,r3
   4571c:	38ce703a 	and	r7,r7,r3
   45720:	48c1ffcc 	andi	r3,r9,2047
   45724:	50000a26 	beq	r10,zero,45750 <__ledf2+0x58>
   45728:	1a41ffd8 	cmpnei	r9,r3,2047
   4572c:	48000c26 	beq	r9,zero,45760 <__ledf2+0x68>
   45730:	4000191e 	bne	r8,zero,45798 <__ledf2+0xa0>
   45734:	2912b03a 	or	r9,r5,r4
   45738:	18000d1e 	bne	r3,zero,45770 <__ledf2+0x78>
   4573c:	3994b03a 	or	r10,r7,r6
   45740:	50000b1e 	bne	r10,zero,45770 <__ledf2+0x78>
   45744:	48000c1e 	bne	r9,zero,45778 <__ledf2+0x80>
   45748:	0005883a 	mov	r2,zero
   4574c:	f800283a 	ret
   45750:	2912b03a 	or	r9,r5,r4
   45754:	48000c1e 	bne	r9,zero,45788 <__ledf2+0x90>
   45758:	1a41ffe0 	cmpeqi	r9,r3,2047
   4575c:	48000e26 	beq	r9,zero,45798 <__ledf2+0xa0>
   45760:	3992b03a 	or	r9,r7,r6
   45764:	4800081e 	bne	r9,zero,45788 <__ledf2+0x90>
   45768:	4000021e 	bne	r8,zero,45774 <__ledf2+0x7c>
   4576c:	2912b03a 	or	r9,r5,r4
   45770:	48000726 	beq	r9,zero,45790 <__ledf2+0x98>
   45774:	58800c26 	beq	r11,r2,457a8 <__ledf2+0xb0>
   45778:	00800044 	movi	r2,1
   4577c:	58000526 	beq	r11,zero,45794 <__ledf2+0x9c>
   45780:	00bfffc4 	movi	r2,-1
   45784:	f800283a 	ret
   45788:	00800084 	movi	r2,2
   4578c:	f800283a 	ret
   45790:	103ffb26 	beq	r2,zero,45780 <__ledf2+0x88>
   45794:	f800283a 	ret
   45798:	183ff61e 	bne	r3,zero,45774 <__ledf2+0x7c>
   4579c:	3992b03a 	or	r9,r7,r6
   457a0:	483ff41e 	bne	r9,zero,45774 <__ledf2+0x7c>
   457a4:	003ff406 	br	45778 <__ledf2+0x80>
   457a8:	1a00030e 	bge	r3,r8,457b8 <__ledf2+0xc0>
   457ac:	103ff41e 	bne	r2,zero,45780 <__ledf2+0x88>
   457b0:	00800044 	movi	r2,1
   457b4:	f800283a 	ret
   457b8:	40fff516 	blt	r8,r3,45790 <__ledf2+0x98>
   457bc:	397fee36 	bltu	r7,r5,45778 <__ledf2+0x80>
   457c0:	29c00426 	beq	r5,r7,457d4 <__ledf2+0xdc>
   457c4:	29ffe02e 	bgeu	r5,r7,45748 <__ledf2+0x50>
   457c8:	583fed26 	beq	r11,zero,45780 <__ledf2+0x88>
   457cc:	5805883a 	mov	r2,r11
   457d0:	f800283a 	ret
   457d4:	313fe836 	bltu	r6,r4,45778 <__ledf2+0x80>
   457d8:	21bfdb2e 	bgeu	r4,r6,45748 <__ledf2+0x50>
   457dc:	003ffa06 	br	457c8 <__ledf2+0xd0>

000457e0 <__muldf3>:
   457e0:	2804d53a 	srli	r2,r5,20
   457e4:	defff404 	addi	sp,sp,-48
   457e8:	00c00434 	movhi	r3,16
   457ec:	ddc00915 	stw	r23,36(sp)
   457f0:	dd400715 	stw	r21,28(sp)
   457f4:	dc400315 	stw	r17,12(sp)
   457f8:	dc000215 	stw	r16,8(sp)
   457fc:	18ffffc4 	addi	r3,r3,-1
   45800:	dfc00b15 	stw	ra,44(sp)
   45804:	df000a15 	stw	fp,40(sp)
   45808:	dd800815 	stw	r22,32(sp)
   4580c:	dd000615 	stw	r20,24(sp)
   45810:	dcc00515 	stw	r19,20(sp)
   45814:	dc800415 	stw	r18,16(sp)
   45818:	1081ffcc 	andi	r2,r2,2047
   4581c:	282ed7fa 	srli	r23,r5,31
   45820:	2023883a 	mov	r17,r4
   45824:	3821883a 	mov	r16,r7
   45828:	28ea703a 	and	r21,r5,r3
   4582c:	10010c26 	beq	r2,zero,45c60 <__muldf3+0x480>
   45830:	10c1ffe0 	cmpeqi	r3,r2,2047
   45834:	18011f1e 	bne	r3,zero,45cb4 <__muldf3+0x4d4>
   45838:	a80a90fa 	slli	r5,r21,3
   4583c:	2006d77a 	srli	r3,r4,29
   45840:	202690fa 	slli	r19,r4,3
   45844:	14bf0044 	addi	r18,r2,-1023
   45848:	194ab03a 	or	r5,r3,r5
   4584c:	2d402034 	orhi	r21,r5,128
   45850:	0023883a 	mov	r17,zero
   45854:	0039883a 	mov	fp,zero
   45858:	8004d53a 	srli	r2,r16,20
   4585c:	8028d7fa 	srli	r20,r16,31
   45860:	00c00434 	movhi	r3,16
   45864:	18ffffc4 	addi	r3,r3,-1
   45868:	1081ffcc 	andi	r2,r2,2047
   4586c:	302d883a 	mov	r22,r6
   45870:	80e0703a 	and	r16,r16,r3
   45874:	a00b883a 	mov	r5,r20
   45878:	1000e026 	beq	r2,zero,45bfc <__muldf3+0x41c>
   4587c:	10c1ffe0 	cmpeqi	r3,r2,2047
   45880:	1800281e 	bne	r3,zero,45924 <__muldf3+0x144>
   45884:	3006d77a 	srli	r3,r6,29
   45888:	800890fa 	slli	r4,r16,3
   4588c:	10bf0044 	addi	r2,r2,-1023
   45890:	1485883a 	add	r2,r2,r18
   45894:	1920b03a 	or	r16,r3,r4
   45898:	88c002c8 	cmpgei	r3,r17,11
   4589c:	302c90fa 	slli	r22,r6,3
   458a0:	84002034 	orhi	r16,r16,128
   458a4:	000f883a 	mov	r7,zero
   458a8:	bd0cf03a 	xor	r6,r23,r20
   458ac:	14800044 	addi	r18,r2,1
   458b0:	18002726 	beq	r3,zero,45950 <__muldf3+0x170>
   458b4:	8c4002d8 	cmpnei	r17,r17,11
   458b8:	b80b883a 	mov	r5,r23
   458bc:	a00d883a 	mov	r6,r20
   458c0:	8800411e 	bne	r17,zero,459c8 <__muldf3+0x1e8>
   458c4:	388000e0 	cmpeqi	r2,r7,3
   458c8:	10015d1e 	bne	r2,zero,45e40 <__muldf3+0x660>
   458cc:	39c00060 	cmpeqi	r7,r7,1
   458d0:	3800b026 	beq	r7,zero,45b94 <__muldf3+0x3b4>
   458d4:	0009883a 	mov	r4,zero
   458d8:	0005883a 	mov	r2,zero
   458dc:	0027883a 	mov	r19,zero
   458e0:	2006953a 	slli	r3,r4,20
   458e4:	300c97fa 	slli	r6,r6,31
   458e8:	1886b03a 	or	r3,r3,r2
   458ec:	1986b03a 	or	r3,r3,r6
   458f0:	9805883a 	mov	r2,r19
   458f4:	dfc00b17 	ldw	ra,44(sp)
   458f8:	df000a17 	ldw	fp,40(sp)
   458fc:	ddc00917 	ldw	r23,36(sp)
   45900:	dd800817 	ldw	r22,32(sp)
   45904:	dd400717 	ldw	r21,28(sp)
   45908:	dd000617 	ldw	r20,24(sp)
   4590c:	dcc00517 	ldw	r19,20(sp)
   45910:	dc800417 	ldw	r18,16(sp)
   45914:	dc400317 	ldw	r17,12(sp)
   45918:	dc000217 	ldw	r16,8(sp)
   4591c:	dec00c04 	addi	sp,sp,48
   45920:	f800283a 	ret
   45924:	8186b03a 	or	r3,r16,r6
   45928:	9081ffc4 	addi	r2,r18,2047
   4592c:	1800131e 	bne	r3,zero,4597c <__muldf3+0x19c>
   45930:	8c400094 	ori	r17,r17,2
   45934:	890002c8 	cmpgei	r4,r17,11
   45938:	002d883a 	mov	r22,zero
   4593c:	bd0cf03a 	xor	r6,r23,r20
   45940:	94820004 	addi	r18,r18,2048
   45944:	20014c1e 	bne	r4,zero,45e78 <__muldf3+0x698>
   45948:	0021883a 	mov	r16,zero
   4594c:	01c00084 	movi	r7,2
   45950:	88c000c8 	cmpgei	r3,r17,3
   45954:	18000f1e 	bne	r3,zero,45994 <__muldf3+0x1b4>
   45958:	8c7fffc4 	addi	r17,r17,-1
   4595c:	8c4000a8 	cmpgeui	r17,r17,2
   45960:	8800261e 	bne	r17,zero,459fc <__muldf3+0x21c>
   45964:	388000a0 	cmpeqi	r2,r7,2
   45968:	103fd826 	beq	r2,zero,458cc <__muldf3+0xec>
   4596c:	0101ffc4 	movi	r4,2047
   45970:	0005883a 	mov	r2,zero
   45974:	0027883a 	mov	r19,zero
   45978:	003fd906 	br	458e0 <__muldf3+0x100>
   4597c:	8c4000d4 	ori	r17,r17,3
   45980:	88c002c8 	cmpgei	r3,r17,11
   45984:	bd0cf03a 	xor	r6,r23,r20
   45988:	94820004 	addi	r18,r18,2048
   4598c:	1801561e 	bne	r3,zero,45ee8 <__muldf3+0x708>
   45990:	01c000c4 	movi	r7,3
   45994:	00c00044 	movi	r3,1
   45998:	1c46983a 	sll	r3,r3,r17
   4599c:	19014c0c 	andi	r4,r3,1328
   459a0:	2000081e 	bne	r4,zero,459c4 <__muldf3+0x1e4>
   459a4:	1900900c 	andi	r4,r3,576
   459a8:	20000e1e 	bne	r4,zero,459e4 <__muldf3+0x204>
   459ac:	18c0220c 	andi	r3,r3,136
   459b0:	18001226 	beq	r3,zero,459fc <__muldf3+0x21c>
   459b4:	802b883a 	mov	r21,r16
   459b8:	b027883a 	mov	r19,r22
   459bc:	3839883a 	mov	fp,r7
   459c0:	00000106 	br	459c8 <__muldf3+0x1e8>
   459c4:	300b883a 	mov	r5,r6
   459c8:	e08000a0 	cmpeqi	r2,fp,2
   459cc:	280d883a 	mov	r6,r5
   459d0:	103fe61e 	bne	r2,zero,4596c <__muldf3+0x18c>
   459d4:	a821883a 	mov	r16,r21
   459d8:	e00f883a 	mov	r7,fp
   459dc:	982d883a 	mov	r22,r19
   459e0:	003fb806 	br	458c4 <__muldf3+0xe4>
   459e4:	00800434 	movhi	r2,16
   459e8:	000d883a 	mov	r6,zero
   459ec:	10bfffc4 	addi	r2,r2,-1
   459f0:	04ffffc4 	movi	r19,-1
   459f4:	0101ffc4 	movi	r4,2047
   459f8:	003fb906 	br	458e0 <__muldf3+0x100>
   459fc:	9816d43a 	srli	r11,r19,16
   45a00:	b014d43a 	srli	r10,r22,16
   45a04:	9cffffcc 	andi	r19,r19,65535
   45a08:	b5bfffcc 	andi	r22,r22,65535
   45a0c:	b4c9383a 	mul	r4,r22,r19
   45a10:	5d8f383a 	mul	r7,r11,r22
   45a14:	54cb383a 	mul	r5,r10,r19
   45a18:	2006d43a 	srli	r3,r4,16
   45a1c:	5a93383a 	mul	r9,r11,r10
   45a20:	29cb883a 	add	r5,r5,r7
   45a24:	1947883a 	add	r3,r3,r5
   45a28:	19c0022e 	bgeu	r3,r7,45a34 <__muldf3+0x254>
   45a2c:	01400074 	movhi	r5,1
   45a30:	4953883a 	add	r9,r9,r5
   45a34:	8018d43a 	srli	r12,r16,16
   45a38:	843fffcc 	andi	r16,r16,65535
   45a3c:	84db383a 	mul	r13,r16,r19
   45a40:	5c1d383a 	mul	r14,r11,r16
   45a44:	64e7383a 	mul	r19,r12,r19
   45a48:	6810d43a 	srli	r8,r13,16
   45a4c:	180e943a 	slli	r7,r3,16
   45a50:	9ba7883a 	add	r19,r19,r14
   45a54:	217fffcc 	andi	r5,r4,65535
   45a58:	44d1883a 	add	r8,r8,r19
   45a5c:	1808d43a 	srli	r4,r3,16
   45a60:	5b1f383a 	mul	r15,r11,r12
   45a64:	394f883a 	add	r7,r7,r5
   45a68:	4380022e 	bgeu	r8,r14,45a74 <__muldf3+0x294>
   45a6c:	00c00074 	movhi	r3,1
   45a70:	78df883a 	add	r15,r15,r3
   45a74:	a81cd43a 	srli	r14,r21,16
   45a78:	a97fffcc 	andi	r5,r21,65535
   45a7c:	b163383a 	mul	r17,r22,r5
   45a80:	5167383a 	mul	r19,r10,r5
   45a84:	75ad383a 	mul	r22,r14,r22
   45a88:	4016943a 	slli	r11,r8,16
   45a8c:	8806d43a 	srli	r3,r17,16
   45a90:	4010d43a 	srli	r8,r8,16
   45a94:	9da7883a 	add	r19,r19,r22
   45a98:	6b7fffcc 	andi	r13,r13,65535
   45a9c:	5b57883a 	add	r11,r11,r13
   45aa0:	1cc7883a 	add	r3,r3,r19
   45aa4:	43d1883a 	add	r8,r8,r15
   45aa8:	53a7383a 	mul	r19,r10,r14
   45aac:	22c9883a 	add	r4,r4,r11
   45ab0:	1d80022e 	bgeu	r3,r22,45abc <__muldf3+0x2dc>
   45ab4:	02800074 	movhi	r10,1
   45ab8:	9aa7883a 	add	r19,r19,r10
   45abc:	815b383a 	mul	r13,r16,r5
   45ac0:	616b383a 	mul	r21,r12,r5
   45ac4:	7421383a 	mul	r16,r14,r16
   45ac8:	6814d43a 	srli	r10,r13,16
   45acc:	181ed43a 	srli	r15,r3,16
   45ad0:	180a943a 	slli	r5,r3,16
   45ad4:	ac2b883a 	add	r21,r21,r16
   45ad8:	88ffffcc 	andi	r3,r17,65535
   45adc:	5555883a 	add	r10,r10,r21
   45ae0:	6399383a 	mul	r12,r12,r14
   45ae4:	7cdf883a 	add	r15,r15,r19
   45ae8:	28cb883a 	add	r5,r5,r3
   45aec:	5400022e 	bgeu	r10,r16,45af8 <__muldf3+0x318>
   45af0:	00c00074 	movhi	r3,1
   45af4:	60d9883a 	add	r12,r12,r3
   45af8:	5006943a 	slli	r3,r10,16
   45afc:	6b7fffcc 	andi	r13,r13,65535
   45b00:	2249883a 	add	r4,r4,r9
   45b04:	1b47883a 	add	r3,r3,r13
   45b08:	22d7803a 	cmpltu	r11,r4,r11
   45b0c:	1a07883a 	add	r3,r3,r8
   45b10:	2149883a 	add	r4,r4,r5
   45b14:	1add883a 	add	r14,r3,r11
   45b18:	214b803a 	cmpltu	r5,r4,r5
   45b1c:	73d3883a 	add	r9,r14,r15
   45b20:	5014d43a 	srli	r10,r10,16
   45b24:	495b883a 	add	r13,r9,r5
   45b28:	1a21803a 	cmpltu	r16,r3,r8
   45b2c:	72dd803a 	cmpltu	r14,r14,r11
   45b30:	694b803a 	cmpltu	r5,r13,r5
   45b34:	83a0b03a 	or	r16,r16,r14
   45b38:	4bd3803a 	cmpltu	r9,r9,r15
   45b3c:	4952b03a 	or	r9,r9,r5
   45b40:	82a1883a 	add	r16,r16,r10
   45b44:	202c927a 	slli	r22,r4,9
   45b48:	8261883a 	add	r16,r16,r9
   45b4c:	8321883a 	add	r16,r16,r12
   45b50:	8020927a 	slli	r16,r16,9
   45b54:	2008d5fa 	srli	r4,r4,23
   45b58:	680ad5fa 	srli	r5,r13,23
   45b5c:	6806927a 	slli	r3,r13,9
   45b60:	b1ecb03a 	or	r22,r22,r7
   45b64:	b02cc03a 	cmpne	r22,r22,zero
   45b68:	b12cb03a 	or	r22,r22,r4
   45b6c:	8100402c 	andhi	r4,r16,256
   45b70:	b0ecb03a 	or	r22,r22,r3
   45b74:	8160b03a 	or	r16,r16,r5
   45b78:	20009e26 	beq	r4,zero,45df4 <__muldf3+0x614>
   45b7c:	b006d07a 	srli	r3,r22,1
   45b80:	800497fa 	slli	r2,r16,31
   45b84:	b580004c 	andi	r22,r22,1
   45b88:	8020d07a 	srli	r16,r16,1
   45b8c:	1d86b03a 	or	r3,r3,r22
   45b90:	18acb03a 	or	r22,r3,r2
   45b94:	90c0ffc4 	addi	r3,r18,1023
   45b98:	00c0610e 	bge	zero,r3,45d20 <__muldf3+0x540>
   45b9c:	b08001cc 	andi	r2,r22,7
   45ba0:	10000726 	beq	r2,zero,45bc0 <__muldf3+0x3e0>
   45ba4:	b08003cc 	andi	r2,r22,15
   45ba8:	10800120 	cmpeqi	r2,r2,4
   45bac:	1000041e 	bne	r2,zero,45bc0 <__muldf3+0x3e0>
   45bb0:	b0800104 	addi	r2,r22,4
   45bb4:	15ad803a 	cmpltu	r22,r2,r22
   45bb8:	85a1883a 	add	r16,r16,r22
   45bbc:	102d883a 	mov	r22,r2
   45bc0:	8080402c 	andhi	r2,r16,256
   45bc4:	10000426 	beq	r2,zero,45bd8 <__muldf3+0x3f8>
   45bc8:	00bfc034 	movhi	r2,65280
   45bcc:	10bfffc4 	addi	r2,r2,-1
   45bd0:	80a0703a 	and	r16,r16,r2
   45bd4:	90c10004 	addi	r3,r18,1024
   45bd8:	1881ffc8 	cmpgei	r2,r3,2047
   45bdc:	103f631e 	bne	r2,zero,4596c <__muldf3+0x18c>
   45be0:	b02cd0fa 	srli	r22,r22,3
   45be4:	8026977a 	slli	r19,r16,29
   45be8:	8004927a 	slli	r2,r16,9
   45bec:	1901ffcc 	andi	r4,r3,2047
   45bf0:	9da6b03a 	or	r19,r19,r22
   45bf4:	1004d33a 	srli	r2,r2,12
   45bf8:	003f3906 	br	458e0 <__muldf3+0x100>
   45bfc:	8184b03a 	or	r2,r16,r6
   45c00:	10003d26 	beq	r2,zero,45cf8 <__muldf3+0x518>
   45c04:	d9800115 	stw	r6,4(sp)
   45c08:	d9400015 	stw	r5,0(sp)
   45c0c:	80006b26 	beq	r16,zero,45dbc <__muldf3+0x5dc>
   45c10:	8009883a 	mov	r4,r16
   45c14:	0046bc80 	call	46bc8 <__clzsi2>
   45c18:	d9400017 	ldw	r5,0(sp)
   45c1c:	d9800117 	ldw	r6,4(sp)
   45c20:	113ffd44 	addi	r4,r2,-11
   45c24:	00c00744 	movi	r3,29
   45c28:	15bffe04 	addi	r22,r2,-8
   45c2c:	1907c83a 	sub	r3,r3,r4
   45c30:	85a0983a 	sll	r16,r16,r22
   45c34:	30c6d83a 	srl	r3,r6,r3
   45c38:	35ac983a 	sll	r22,r6,r22
   45c3c:	1c20b03a 	or	r16,r3,r16
   45c40:	9085c83a 	sub	r2,r18,r2
   45c44:	10bf0344 	addi	r2,r2,-1011
   45c48:	88c002c8 	cmpgei	r3,r17,11
   45c4c:	000f883a 	mov	r7,zero
   45c50:	bd0cf03a 	xor	r6,r23,r20
   45c54:	14800044 	addi	r18,r2,1
   45c58:	183f161e 	bne	r3,zero,458b4 <__muldf3+0xd4>
   45c5c:	003f3c06 	br	45950 <__muldf3+0x170>
   45c60:	a926b03a 	or	r19,r21,r4
   45c64:	98001f26 	beq	r19,zero,45ce4 <__muldf3+0x504>
   45c68:	d9800015 	stw	r6,0(sp)
   45c6c:	a8004926 	beq	r21,zero,45d94 <__muldf3+0x5b4>
   45c70:	a809883a 	mov	r4,r21
   45c74:	0046bc80 	call	46bc8 <__clzsi2>
   45c78:	d9800017 	ldw	r6,0(sp)
   45c7c:	1007883a 	mov	r3,r2
   45c80:	113ffd44 	addi	r4,r2,-11
   45c84:	00800744 	movi	r2,29
   45c88:	1cfffe04 	addi	r19,r3,-8
   45c8c:	1105c83a 	sub	r2,r2,r4
   45c90:	acca983a 	sll	r5,r21,r19
   45c94:	8884d83a 	srl	r2,r17,r2
   45c98:	8ce6983a 	sll	r19,r17,r19
   45c9c:	116ab03a 	or	r21,r2,r5
   45ca0:	00bf0344 	movi	r2,-1011
   45ca4:	10e5c83a 	sub	r18,r2,r3
   45ca8:	0023883a 	mov	r17,zero
   45cac:	0039883a 	mov	fp,zero
   45cb0:	003ee906 	br	45858 <__muldf3+0x78>
   45cb4:	a926b03a 	or	r19,r21,r4
   45cb8:	9800051e 	bne	r19,zero,45cd0 <__muldf3+0x4f0>
   45cbc:	002b883a 	mov	r21,zero
   45cc0:	04400204 	movi	r17,8
   45cc4:	0481ffc4 	movi	r18,2047
   45cc8:	07000084 	movi	fp,2
   45ccc:	003ee206 	br	45858 <__muldf3+0x78>
   45cd0:	2027883a 	mov	r19,r4
   45cd4:	04400304 	movi	r17,12
   45cd8:	0481ffc4 	movi	r18,2047
   45cdc:	070000c4 	movi	fp,3
   45ce0:	003edd06 	br	45858 <__muldf3+0x78>
   45ce4:	002b883a 	mov	r21,zero
   45ce8:	04400104 	movi	r17,4
   45cec:	0025883a 	mov	r18,zero
   45cf0:	07000044 	movi	fp,1
   45cf4:	003ed806 	br	45858 <__muldf3+0x78>
   45cf8:	8c400054 	ori	r17,r17,1
   45cfc:	9005883a 	mov	r2,r18
   45d00:	88c002c8 	cmpgei	r3,r17,11
   45d04:	0021883a 	mov	r16,zero
   45d08:	002d883a 	mov	r22,zero
   45d0c:	01c00044 	movi	r7,1
   45d10:	bd0cf03a 	xor	r6,r23,r20
   45d14:	14800044 	addi	r18,r2,1
   45d18:	183ee61e 	bne	r3,zero,458b4 <__muldf3+0xd4>
   45d1c:	003f0c06 	br	45950 <__muldf3+0x170>
   45d20:	01000044 	movi	r4,1
   45d24:	20c9c83a 	sub	r4,r4,r3
   45d28:	20800e48 	cmpgei	r2,r4,57
   45d2c:	103ee91e 	bne	r2,zero,458d4 <__muldf3+0xf4>
   45d30:	20800808 	cmpgei	r2,r4,32
   45d34:	1000311e 	bne	r2,zero,45dfc <__muldf3+0x61c>
   45d38:	94810784 	addi	r18,r18,1054
   45d3c:	b104d83a 	srl	r2,r22,r4
   45d40:	84a6983a 	sll	r19,r16,r18
   45d44:	b4a4983a 	sll	r18,r22,r18
   45d48:	8108d83a 	srl	r4,r16,r4
   45d4c:	98a6b03a 	or	r19,r19,r2
   45d50:	9024c03a 	cmpne	r18,r18,zero
   45d54:	9ca6b03a 	or	r19,r19,r18
   45d58:	988001cc 	andi	r2,r19,7
   45d5c:	10000726 	beq	r2,zero,45d7c <__muldf3+0x59c>
   45d60:	988003cc 	andi	r2,r19,15
   45d64:	10800120 	cmpeqi	r2,r2,4
   45d68:	1000041e 	bne	r2,zero,45d7c <__muldf3+0x59c>
   45d6c:	98800104 	addi	r2,r19,4
   45d70:	14e7803a 	cmpltu	r19,r2,r19
   45d74:	24c9883a 	add	r4,r4,r19
   45d78:	1027883a 	mov	r19,r2
   45d7c:	2080202c 	andhi	r2,r4,128
   45d80:	10003926 	beq	r2,zero,45e68 <__muldf3+0x688>
   45d84:	01000044 	movi	r4,1
   45d88:	0005883a 	mov	r2,zero
   45d8c:	0027883a 	mov	r19,zero
   45d90:	003ed306 	br	458e0 <__muldf3+0x100>
   45d94:	0046bc80 	call	46bc8 <__clzsi2>
   45d98:	11000544 	addi	r4,r2,21
   45d9c:	21400748 	cmpgei	r5,r4,29
   45da0:	d9800017 	ldw	r6,0(sp)
   45da4:	10c00804 	addi	r3,r2,32
   45da8:	283fb626 	beq	r5,zero,45c84 <__muldf3+0x4a4>
   45dac:	10bffe04 	addi	r2,r2,-8
   45db0:	88aa983a 	sll	r21,r17,r2
   45db4:	0027883a 	mov	r19,zero
   45db8:	003fb906 	br	45ca0 <__muldf3+0x4c0>
   45dbc:	3009883a 	mov	r4,r6
   45dc0:	0046bc80 	call	46bc8 <__clzsi2>
   45dc4:	11000544 	addi	r4,r2,21
   45dc8:	21c00748 	cmpgei	r7,r4,29
   45dcc:	1007883a 	mov	r3,r2
   45dd0:	d9400017 	ldw	r5,0(sp)
   45dd4:	d9800117 	ldw	r6,4(sp)
   45dd8:	10800804 	addi	r2,r2,32
   45ddc:	383f9126 	beq	r7,zero,45c24 <__muldf3+0x444>
   45de0:	18fffe04 	addi	r3,r3,-8
   45de4:	b0c6983a 	sll	r3,r22,r3
   45de8:	002d883a 	mov	r22,zero
   45dec:	1821883a 	mov	r16,r3
   45df0:	003f9306 	br	45c40 <__muldf3+0x460>
   45df4:	1025883a 	mov	r18,r2
   45df8:	003f6606 	br	45b94 <__muldf3+0x3b4>
   45dfc:	00bff844 	movi	r2,-31
   45e00:	10c7c83a 	sub	r3,r2,r3
   45e04:	21000820 	cmpeqi	r4,r4,32
   45e08:	80c6d83a 	srl	r3,r16,r3
   45e0c:	2000031e 	bne	r4,zero,45e1c <__muldf3+0x63c>
   45e10:	94810f84 	addi	r18,r18,1086
   45e14:	84a4983a 	sll	r18,r16,r18
   45e18:	b4acb03a 	or	r22,r22,r18
   45e1c:	b026c03a 	cmpne	r19,r22,zero
   45e20:	98e6b03a 	or	r19,r19,r3
   45e24:	98c001cc 	andi	r3,r19,7
   45e28:	18000b1e 	bne	r3,zero,45e58 <__muldf3+0x678>
   45e2c:	0005883a 	mov	r2,zero
   45e30:	9826d0fa 	srli	r19,r19,3
   45e34:	0009883a 	mov	r4,zero
   45e38:	98e6b03a 	or	r19,r19,r3
   45e3c:	003ea806 	br	458e0 <__muldf3+0x100>
   45e40:	00c00434 	movhi	r3,16
   45e44:	80800234 	orhi	r2,r16,8
   45e48:	18ffffc4 	addi	r3,r3,-1
   45e4c:	10c4703a 	and	r2,r2,r3
   45e50:	b027883a 	mov	r19,r22
   45e54:	003ee706 	br	459f4 <__muldf3+0x214>
   45e58:	988003cc 	andi	r2,r19,15
   45e5c:	10800118 	cmpnei	r2,r2,4
   45e60:	0009883a 	mov	r4,zero
   45e64:	103fc11e 	bne	r2,zero,45d6c <__muldf3+0x58c>
   45e68:	2004927a 	slli	r2,r4,9
   45e6c:	2006977a 	slli	r3,r4,29
   45e70:	1004d33a 	srli	r2,r2,12
   45e74:	003fee06 	br	45e30 <__muldf3+0x650>
   45e78:	01000084 	movi	r4,2
   45e7c:	888003e0 	cmpeqi	r2,r17,15
   45e80:	10000b26 	beq	r2,zero,45eb0 <__muldf3+0x6d0>
   45e84:	a880022c 	andhi	r2,r21,8
   45e88:	10000f26 	beq	r2,zero,45ec8 <__muldf3+0x6e8>
   45e8c:	1880022c 	andhi	r2,r3,8
   45e90:	10000d1e 	bne	r2,zero,45ec8 <__muldf3+0x6e8>
   45e94:	01000434 	movhi	r4,16
   45e98:	18800234 	orhi	r2,r3,8
   45e9c:	213fffc4 	addi	r4,r4,-1
   45ea0:	1104703a 	and	r2,r2,r4
   45ea4:	a00d883a 	mov	r6,r20
   45ea8:	b027883a 	mov	r19,r22
   45eac:	003ed106 	br	459f4 <__muldf3+0x214>
   45eb0:	8c4002e0 	cmpeqi	r17,r17,11
   45eb4:	88000a26 	beq	r17,zero,45ee0 <__muldf3+0x700>
   45eb8:	182b883a 	mov	r21,r3
   45ebc:	b027883a 	mov	r19,r22
   45ec0:	2039883a 	mov	fp,r4
   45ec4:	003ec006 	br	459c8 <__muldf3+0x1e8>
   45ec8:	00c00434 	movhi	r3,16
   45ecc:	a8800234 	orhi	r2,r21,8
   45ed0:	18ffffc4 	addi	r3,r3,-1
   45ed4:	10c4703a 	and	r2,r2,r3
   45ed8:	b80d883a 	mov	r6,r23
   45edc:	003ec506 	br	459f4 <__muldf3+0x214>
   45ee0:	b80b883a 	mov	r5,r23
   45ee4:	003eb806 	br	459c8 <__muldf3+0x1e8>
   45ee8:	8007883a 	mov	r3,r16
   45eec:	010000c4 	movi	r4,3
   45ef0:	003fe206 	br	45e7c <__muldf3+0x69c>

00045ef4 <__subdf3>:
   45ef4:	00800434 	movhi	r2,16
   45ef8:	3810d53a 	srli	r8,r7,20
   45efc:	10bfffc4 	addi	r2,r2,-1
   45f00:	2896703a 	and	r11,r5,r2
   45f04:	3884703a 	and	r2,r7,r2
   45f08:	2814d7fa 	srli	r10,r5,31
   45f0c:	581690fa 	slli	r11,r11,3
   45f10:	280ad53a 	srli	r5,r5,20
   45f14:	2006d77a 	srli	r3,r4,29
   45f18:	100490fa 	slli	r2,r2,3
   45f1c:	3012d77a 	srli	r9,r6,29
   45f20:	defffb04 	addi	sp,sp,-20
   45f24:	4201ffcc 	andi	r8,r8,2047
   45f28:	dc800215 	stw	r18,8(sp)
   45f2c:	dc000015 	stw	r16,0(sp)
   45f30:	dfc00415 	stw	ra,16(sp)
   45f34:	dcc00315 	stw	r19,12(sp)
   45f38:	dc400115 	stw	r17,4(sp)
   45f3c:	4301ffd8 	cmpnei	r12,r8,2047
   45f40:	5025883a 	mov	r18,r10
   45f44:	201c90fa 	slli	r14,r4,3
   45f48:	380ed7fa 	srli	r7,r7,31
   45f4c:	301a90fa 	slli	r13,r6,3
   45f50:	2c01ffcc 	andi	r16,r5,2047
   45f54:	52803fcc 	andi	r10,r10,255
   45f58:	1ac6b03a 	or	r3,r3,r11
   45f5c:	4892b03a 	or	r9,r9,r2
   45f60:	60006e26 	beq	r12,zero,4611c <__subdf3+0x228>
   45f64:	3ac0005c 	xori	r11,r7,1
   45f68:	52c05726 	beq	r10,r11,460c8 <__subdf3+0x1d4>
   45f6c:	8215c83a 	sub	r10,r16,r8
   45f70:	02806f0e 	bge	zero,r10,46130 <__subdf3+0x23c>
   45f74:	40007a26 	beq	r8,zero,46160 <__subdf3+0x26c>
   45f78:	8081ffd8 	cmpnei	r2,r16,2047
   45f7c:	1000f226 	beq	r2,zero,46348 <__subdf3+0x454>
   45f80:	4a402034 	orhi	r9,r9,128
   45f84:	50800e48 	cmpgei	r2,r10,57
   45f88:	1000fd1e 	bne	r2,zero,46380 <__subdf3+0x48c>
   45f8c:	50800808 	cmpgei	r2,r10,32
   45f90:	10013f1e 	bne	r2,zero,46490 <__subdf3+0x59c>
   45f94:	00800804 	movi	r2,32
   45f98:	1285c83a 	sub	r2,r2,r10
   45f9c:	48a2983a 	sll	r17,r9,r2
   45fa0:	6a88d83a 	srl	r4,r13,r10
   45fa4:	6884983a 	sll	r2,r13,r2
   45fa8:	4a92d83a 	srl	r9,r9,r10
   45fac:	8922b03a 	or	r17,r17,r4
   45fb0:	1004c03a 	cmpne	r2,r2,zero
   45fb4:	88a2b03a 	or	r17,r17,r2
   45fb8:	1a47c83a 	sub	r3,r3,r9
   45fbc:	7463c83a 	sub	r17,r14,r17
   45fc0:	744f803a 	cmpltu	r7,r14,r17
   45fc4:	19cfc83a 	sub	r7,r3,r7
   45fc8:	3880202c 	andhi	r2,r7,128
   45fcc:	1000b426 	beq	r2,zero,462a0 <__subdf3+0x3ac>
   45fd0:	04c02034 	movhi	r19,128
   45fd4:	9cffffc4 	addi	r19,r19,-1
   45fd8:	3ce6703a 	and	r19,r7,r19
   45fdc:	9800cc26 	beq	r19,zero,46310 <__subdf3+0x41c>
   45fe0:	9809883a 	mov	r4,r19
   45fe4:	0046bc80 	call	46bc8 <__clzsi2>
   45fe8:	10fffe04 	addi	r3,r2,-8
   45fec:	01c00804 	movi	r7,32
   45ff0:	38cfc83a 	sub	r7,r7,r3
   45ff4:	89ced83a 	srl	r7,r17,r7
   45ff8:	98e6983a 	sll	r19,r19,r3
   45ffc:	88e2983a 	sll	r17,r17,r3
   46000:	3cceb03a 	or	r7,r7,r19
   46004:	1c00cb16 	blt	r3,r16,46334 <__subdf3+0x440>
   46008:	1c07c83a 	sub	r3,r3,r16
   4600c:	19000044 	addi	r4,r3,1
   46010:	20800808 	cmpgei	r2,r4,32
   46014:	1000961e 	bne	r2,zero,46270 <__subdf3+0x37c>
   46018:	00800804 	movi	r2,32
   4601c:	1105c83a 	sub	r2,r2,r4
   46020:	8906d83a 	srl	r3,r17,r4
   46024:	88a2983a 	sll	r17,r17,r2
   46028:	3884983a 	sll	r2,r7,r2
   4602c:	390ed83a 	srl	r7,r7,r4
   46030:	8822c03a 	cmpne	r17,r17,zero
   46034:	10c4b03a 	or	r2,r2,r3
   46038:	1462b03a 	or	r17,r2,r17
   4603c:	0021883a 	mov	r16,zero
   46040:	888001cc 	andi	r2,r17,7
   46044:	10000726 	beq	r2,zero,46064 <__subdf3+0x170>
   46048:	888003cc 	andi	r2,r17,15
   4604c:	10800120 	cmpeqi	r2,r2,4
   46050:	1000041e 	bne	r2,zero,46064 <__subdf3+0x170>
   46054:	88800104 	addi	r2,r17,4
   46058:	1463803a 	cmpltu	r17,r2,r17
   4605c:	3c4f883a 	add	r7,r7,r17
   46060:	1023883a 	mov	r17,r2
   46064:	3880202c 	andhi	r2,r7,128
   46068:	10008f26 	beq	r2,zero,462a8 <__subdf3+0x3b4>
   4606c:	84000044 	addi	r16,r16,1
   46070:	8081ffe0 	cmpeqi	r2,r16,2047
   46074:	8401ffcc 	andi	r16,r16,2047
   46078:	1000a11e 	bne	r2,zero,46300 <__subdf3+0x40c>
   4607c:	017fe034 	movhi	r5,65408
   46080:	297fffc4 	addi	r5,r5,-1
   46084:	394a703a 	and	r5,r7,r5
   46088:	2804977a 	slli	r2,r5,29
   4608c:	280a927a 	slli	r5,r5,9
   46090:	8822d0fa 	srli	r17,r17,3
   46094:	280ad33a 	srli	r5,r5,12
   46098:	1444b03a 	or	r2,r2,r17
   4609c:	8006953a 	slli	r3,r16,20
   460a0:	902497fa 	slli	r18,r18,31
   460a4:	1946b03a 	or	r3,r3,r5
   460a8:	1c86b03a 	or	r3,r3,r18
   460ac:	dfc00417 	ldw	ra,16(sp)
   460b0:	dcc00317 	ldw	r19,12(sp)
   460b4:	dc800217 	ldw	r18,8(sp)
   460b8:	dc400117 	ldw	r17,4(sp)
   460bc:	dc000017 	ldw	r16,0(sp)
   460c0:	dec00504 	addi	sp,sp,20
   460c4:	f800283a 	ret
   460c8:	8215c83a 	sub	r10,r16,r8
   460cc:	02802f0e 	bge	zero,r10,4618c <__subdf3+0x298>
   460d0:	40005f26 	beq	r8,zero,46250 <__subdf3+0x35c>
   460d4:	8081ffd8 	cmpnei	r2,r16,2047
   460d8:	10009b26 	beq	r2,zero,46348 <__subdf3+0x454>
   460dc:	4a402034 	orhi	r9,r9,128
   460e0:	50800e48 	cmpgei	r2,r10,57
   460e4:	10007c1e 	bne	r2,zero,462d8 <__subdf3+0x3e4>
   460e8:	50800808 	cmpgei	r2,r10,32
   460ec:	1000fd26 	beq	r2,zero,464e4 <__subdf3+0x5f0>
   460f0:	50bff804 	addi	r2,r10,-32
   460f4:	51000820 	cmpeqi	r4,r10,32
   460f8:	4884d83a 	srl	r2,r9,r2
   460fc:	2000041e 	bne	r4,zero,46110 <__subdf3+0x21c>
   46100:	01001004 	movi	r4,64
   46104:	2289c83a 	sub	r4,r4,r10
   46108:	4908983a 	sll	r4,r9,r4
   4610c:	691ab03a 	or	r13,r13,r4
   46110:	6822c03a 	cmpne	r17,r13,zero
   46114:	88a2b03a 	or	r17,r17,r2
   46118:	00007106 	br	462e0 <__subdf3+0x3ec>
   4611c:	4b44b03a 	or	r2,r9,r13
   46120:	10001726 	beq	r2,zero,46180 <__subdf3+0x28c>
   46124:	3ac03fcc 	andi	r11,r7,255
   46128:	51c01726 	beq	r10,r7,46188 <__subdf3+0x294>
   4612c:	82be0044 	addi	r10,r16,-2047
   46130:	50003326 	beq	r10,zero,46200 <__subdf3+0x30c>
   46134:	4415c83a 	sub	r10,r8,r16
   46138:	5825883a 	mov	r18,r11
   4613c:	8000b81e 	bne	r16,zero,46420 <__subdf3+0x52c>
   46140:	1b84b03a 	or	r2,r3,r14
   46144:	1000fe26 	beq	r2,zero,46540 <__subdf3+0x64c>
   46148:	50bfffc4 	addi	r2,r10,-1
   4614c:	10015026 	beq	r2,zero,46690 <__subdf3+0x79c>
   46150:	5281ffd8 	cmpnei	r10,r10,2047
   46154:	50011926 	beq	r10,zero,465bc <__subdf3+0x6c8>
   46158:	1015883a 	mov	r10,r2
   4615c:	0000b206 	br	46428 <__subdf3+0x534>
   46160:	4b44b03a 	or	r2,r9,r13
   46164:	10008926 	beq	r2,zero,4638c <__subdf3+0x498>
   46168:	50bfffc4 	addi	r2,r10,-1
   4616c:	10011a26 	beq	r2,zero,465d8 <__subdf3+0x6e4>
   46170:	5281ffd8 	cmpnei	r10,r10,2047
   46174:	50007426 	beq	r10,zero,46348 <__subdf3+0x454>
   46178:	1015883a 	mov	r10,r2
   4617c:	003f8106 	br	45f84 <__subdf3+0x90>
   46180:	3ac0005c 	xori	r11,r7,1
   46184:	52ff791e 	bne	r10,r11,45f6c <__subdf3+0x78>
   46188:	82be0044 	addi	r10,r16,-2047
   4618c:	50008626 	beq	r10,zero,463a8 <__subdf3+0x4b4>
   46190:	4415c83a 	sub	r10,r8,r16
   46194:	8000d01e 	bne	r16,zero,464d8 <__subdf3+0x5e4>
   46198:	1b84b03a 	or	r2,r3,r14
   4619c:	1000e826 	beq	r2,zero,46540 <__subdf3+0x64c>
   461a0:	50bfffc4 	addi	r2,r10,-1
   461a4:	10015a26 	beq	r2,zero,46710 <__subdf3+0x81c>
   461a8:	5281ffd8 	cmpnei	r10,r10,2047
   461ac:	50010326 	beq	r10,zero,465bc <__subdf3+0x6c8>
   461b0:	1015883a 	mov	r10,r2
   461b4:	50800e48 	cmpgei	r2,r10,57
   461b8:	1001141e 	bne	r2,zero,4660c <__subdf3+0x718>
   461bc:	50800808 	cmpgei	r2,r10,32
   461c0:	1001481e 	bne	r2,zero,466e4 <__subdf3+0x7f0>
   461c4:	00800804 	movi	r2,32
   461c8:	1285c83a 	sub	r2,r2,r10
   461cc:	18a2983a 	sll	r17,r3,r2
   461d0:	7288d83a 	srl	r4,r14,r10
   461d4:	7084983a 	sll	r2,r14,r2
   461d8:	1a94d83a 	srl	r10,r3,r10
   461dc:	8922b03a 	or	r17,r17,r4
   461e0:	1004c03a 	cmpne	r2,r2,zero
   461e4:	88a2b03a 	or	r17,r17,r2
   461e8:	4a93883a 	add	r9,r9,r10
   461ec:	8b63883a 	add	r17,r17,r13
   461f0:	8b4f803a 	cmpltu	r7,r17,r13
   461f4:	3a4f883a 	add	r7,r7,r9
   461f8:	4021883a 	mov	r16,r8
   461fc:	00003b06 	br	462ec <__subdf3+0x3f8>
   46200:	80800044 	addi	r2,r16,1
   46204:	1081ff8c 	andi	r2,r2,2046
   46208:	10007a1e 	bne	r2,zero,463f4 <__subdf3+0x500>
   4620c:	4b4eb03a 	or	r7,r9,r13
   46210:	1b84b03a 	or	r2,r3,r14
   46214:	8000d11e 	bne	r16,zero,4655c <__subdf3+0x668>
   46218:	10011426 	beq	r2,zero,4666c <__subdf3+0x778>
   4621c:	3800f426 	beq	r7,zero,465f0 <__subdf3+0x6fc>
   46220:	7363c83a 	sub	r17,r14,r13
   46224:	7445803a 	cmpltu	r2,r14,r17
   46228:	1a4fc83a 	sub	r7,r3,r9
   4622c:	388fc83a 	sub	r7,r7,r2
   46230:	3880202c 	andhi	r2,r7,128
   46234:	10013e26 	beq	r2,zero,46730 <__subdf3+0x83c>
   46238:	6ba3c83a 	sub	r17,r13,r14
   4623c:	48cfc83a 	sub	r7,r9,r3
   46240:	6c5b803a 	cmpltu	r13,r13,r17
   46244:	3b4fc83a 	sub	r7,r7,r13
   46248:	5825883a 	mov	r18,r11
   4624c:	003f7c06 	br	46040 <__subdf3+0x14c>
   46250:	4b44b03a 	or	r2,r9,r13
   46254:	10004d26 	beq	r2,zero,4638c <__subdf3+0x498>
   46258:	50bfffc4 	addi	r2,r10,-1
   4625c:	1000cf26 	beq	r2,zero,4659c <__subdf3+0x6a8>
   46260:	5281ffd8 	cmpnei	r10,r10,2047
   46264:	50003826 	beq	r10,zero,46348 <__subdf3+0x454>
   46268:	1015883a 	mov	r10,r2
   4626c:	003f9c06 	br	460e0 <__subdf3+0x1ec>
   46270:	18fff844 	addi	r3,r3,-31
   46274:	20800820 	cmpeqi	r2,r4,32
   46278:	38c6d83a 	srl	r3,r7,r3
   4627c:	1000041e 	bne	r2,zero,46290 <__subdf3+0x39c>
   46280:	00801004 	movi	r2,64
   46284:	1105c83a 	sub	r2,r2,r4
   46288:	388e983a 	sll	r7,r7,r2
   4628c:	89e2b03a 	or	r17,r17,r7
   46290:	8822c03a 	cmpne	r17,r17,zero
   46294:	88e2b03a 	or	r17,r17,r3
   46298:	000f883a 	mov	r7,zero
   4629c:	0021883a 	mov	r16,zero
   462a0:	888001cc 	andi	r2,r17,7
   462a4:	103f681e 	bne	r2,zero,46048 <__subdf3+0x154>
   462a8:	3806977a 	slli	r3,r7,29
   462ac:	8804d0fa 	srli	r2,r17,3
   462b0:	380ed0fa 	srli	r7,r7,3
   462b4:	8015883a 	mov	r10,r16
   462b8:	10c4b03a 	or	r2,r2,r3
   462bc:	50c1ffe0 	cmpeqi	r3,r10,2047
   462c0:	18013f1e 	bne	r3,zero,467c0 <__subdf3+0x8cc>
   462c4:	01400434 	movhi	r5,16
   462c8:	297fffc4 	addi	r5,r5,-1
   462cc:	394a703a 	and	r5,r7,r5
   462d0:	5401ffcc 	andi	r16,r10,2047
   462d4:	003f7106 	br	4609c <__subdf3+0x1a8>
   462d8:	4b62b03a 	or	r17,r9,r13
   462dc:	8822c03a 	cmpne	r17,r17,zero
   462e0:	8ba3883a 	add	r17,r17,r14
   462e4:	8b8f803a 	cmpltu	r7,r17,r14
   462e8:	38cf883a 	add	r7,r7,r3
   462ec:	3880202c 	andhi	r2,r7,128
   462f0:	103feb26 	beq	r2,zero,462a0 <__subdf3+0x3ac>
   462f4:	84000044 	addi	r16,r16,1
   462f8:	8081ffe0 	cmpeqi	r2,r16,2047
   462fc:	10005a26 	beq	r2,zero,46468 <__subdf3+0x574>
   46300:	0401ffc4 	movi	r16,2047
   46304:	000b883a 	mov	r5,zero
   46308:	0005883a 	mov	r2,zero
   4630c:	003f6306 	br	4609c <__subdf3+0x1a8>
   46310:	8809883a 	mov	r4,r17
   46314:	0046bc80 	call	46bc8 <__clzsi2>
   46318:	10c00604 	addi	r3,r2,24
   4631c:	19000808 	cmpgei	r4,r3,32
   46320:	203f3226 	beq	r4,zero,45fec <__subdf3+0xf8>
   46324:	11fffe04 	addi	r7,r2,-8
   46328:	89ce983a 	sll	r7,r17,r7
   4632c:	0023883a 	mov	r17,zero
   46330:	1c3f350e 	bge	r3,r16,46008 <__subdf3+0x114>
   46334:	00bfe034 	movhi	r2,65408
   46338:	10bfffc4 	addi	r2,r2,-1
   4633c:	80e1c83a 	sub	r16,r16,r3
   46340:	388e703a 	and	r7,r7,r2
   46344:	003f3e06 	br	46040 <__subdf3+0x14c>
   46348:	180c977a 	slli	r6,r3,29
   4634c:	00880034 	movhi	r2,8192
   46350:	10bfffc4 	addi	r2,r2,-1
   46354:	180ad0fa 	srli	r5,r3,3
   46358:	2084703a 	and	r2,r4,r2
   4635c:	1184b03a 	or	r2,r2,r6
   46360:	1146b03a 	or	r3,r2,r5
   46364:	18011226 	beq	r3,zero,467b0 <__subdf3+0x8bc>
   46368:	00c00434 	movhi	r3,16
   4636c:	29400234 	orhi	r5,r5,8
   46370:	18ffffc4 	addi	r3,r3,-1
   46374:	28ca703a 	and	r5,r5,r3
   46378:	0401ffc4 	movi	r16,2047
   4637c:	003f4706 	br	4609c <__subdf3+0x1a8>
   46380:	4b62b03a 	or	r17,r9,r13
   46384:	8822c03a 	cmpne	r17,r17,zero
   46388:	003f0c06 	br	45fbc <__subdf3+0xc8>
   4638c:	180a977a 	slli	r5,r3,29
   46390:	00880034 	movhi	r2,8192
   46394:	10bfffc4 	addi	r2,r2,-1
   46398:	2084703a 	and	r2,r4,r2
   4639c:	180ed0fa 	srli	r7,r3,3
   463a0:	1144b03a 	or	r2,r2,r5
   463a4:	003fc506 	br	462bc <__subdf3+0x3c8>
   463a8:	80800044 	addi	r2,r16,1
   463ac:	1141ff8c 	andi	r5,r2,2046
   463b0:	2800571e 	bne	r5,zero,46510 <__subdf3+0x61c>
   463b4:	1b84b03a 	or	r2,r3,r14
   463b8:	8000a21e 	bne	r16,zero,46644 <__subdf3+0x750>
   463bc:	1000c226 	beq	r2,zero,466c8 <__subdf3+0x7d4>
   463c0:	4b44b03a 	or	r2,r9,r13
   463c4:	10008a26 	beq	r2,zero,465f0 <__subdf3+0x6fc>
   463c8:	7363883a 	add	r17,r14,r13
   463cc:	1a4f883a 	add	r7,r3,r9
   463d0:	8b9d803a 	cmpltu	r14,r17,r14
   463d4:	3b8f883a 	add	r7,r7,r14
   463d8:	3880202c 	andhi	r2,r7,128
   463dc:	103fb026 	beq	r2,zero,462a0 <__subdf3+0x3ac>
   463e0:	00bfe034 	movhi	r2,65408
   463e4:	10bfffc4 	addi	r2,r2,-1
   463e8:	388e703a 	and	r7,r7,r2
   463ec:	04000044 	movi	r16,1
   463f0:	003fab06 	br	462a0 <__subdf3+0x3ac>
   463f4:	7363c83a 	sub	r17,r14,r13
   463f8:	7445803a 	cmpltu	r2,r14,r17
   463fc:	1a67c83a 	sub	r19,r3,r9
   46400:	98a7c83a 	sub	r19,r19,r2
   46404:	9880202c 	andhi	r2,r19,128
   46408:	10005e1e 	bne	r2,zero,46584 <__subdf3+0x690>
   4640c:	8cc4b03a 	or	r2,r17,r19
   46410:	103ef21e 	bne	r2,zero,45fdc <__subdf3+0xe8>
   46414:	000f883a 	mov	r7,zero
   46418:	0025883a 	mov	r18,zero
   4641c:	003fa906 	br	462c4 <__subdf3+0x3d0>
   46420:	60006626 	beq	r12,zero,465bc <__subdf3+0x6c8>
   46424:	18c02034 	orhi	r3,r3,128
   46428:	50800e48 	cmpgei	r2,r10,57
   4642c:	1000231e 	bne	r2,zero,464bc <__subdf3+0x5c8>
   46430:	50800808 	cmpgei	r2,r10,32
   46434:	1000781e 	bne	r2,zero,46618 <__subdf3+0x724>
   46438:	00800804 	movi	r2,32
   4643c:	1285c83a 	sub	r2,r2,r10
   46440:	18a2983a 	sll	r17,r3,r2
   46444:	7288d83a 	srl	r4,r14,r10
   46448:	7084983a 	sll	r2,r14,r2
   4644c:	1a94d83a 	srl	r10,r3,r10
   46450:	8922b03a 	or	r17,r17,r4
   46454:	1004c03a 	cmpne	r2,r2,zero
   46458:	88a2b03a 	or	r17,r17,r2
   4645c:	4a93c83a 	sub	r9,r9,r10
   46460:	00001806 	br	464c4 <__subdf3+0x5d0>
   46464:	04000084 	movi	r16,2
   46468:	00bfe034 	movhi	r2,65408
   4646c:	10bfffc4 	addi	r2,r2,-1
   46470:	8806d07a 	srli	r3,r17,1
   46474:	3884703a 	and	r2,r7,r2
   46478:	100897fa 	slli	r4,r2,31
   4647c:	8c40004c 	andi	r17,r17,1
   46480:	1c46b03a 	or	r3,r3,r17
   46484:	100ed07a 	srli	r7,r2,1
   46488:	20e2b03a 	or	r17,r4,r3
   4648c:	003eec06 	br	46040 <__subdf3+0x14c>
   46490:	50bff804 	addi	r2,r10,-32
   46494:	51000820 	cmpeqi	r4,r10,32
   46498:	4884d83a 	srl	r2,r9,r2
   4649c:	2000041e 	bne	r4,zero,464b0 <__subdf3+0x5bc>
   464a0:	01001004 	movi	r4,64
   464a4:	2289c83a 	sub	r4,r4,r10
   464a8:	4908983a 	sll	r4,r9,r4
   464ac:	691ab03a 	or	r13,r13,r4
   464b0:	6822c03a 	cmpne	r17,r13,zero
   464b4:	88a2b03a 	or	r17,r17,r2
   464b8:	003ec006 	br	45fbc <__subdf3+0xc8>
   464bc:	1ba2b03a 	or	r17,r3,r14
   464c0:	8822c03a 	cmpne	r17,r17,zero
   464c4:	6c63c83a 	sub	r17,r13,r17
   464c8:	6c4f803a 	cmpltu	r7,r13,r17
   464cc:	49cfc83a 	sub	r7,r9,r7
   464d0:	4021883a 	mov	r16,r8
   464d4:	003ebc06 	br	45fc8 <__subdf3+0xd4>
   464d8:	60003826 	beq	r12,zero,465bc <__subdf3+0x6c8>
   464dc:	18c02034 	orhi	r3,r3,128
   464e0:	003f3406 	br	461b4 <__subdf3+0x2c0>
   464e4:	00800804 	movi	r2,32
   464e8:	1285c83a 	sub	r2,r2,r10
   464ec:	48a2983a 	sll	r17,r9,r2
   464f0:	6a88d83a 	srl	r4,r13,r10
   464f4:	6884983a 	sll	r2,r13,r2
   464f8:	4a92d83a 	srl	r9,r9,r10
   464fc:	8922b03a 	or	r17,r17,r4
   46500:	1004c03a 	cmpne	r2,r2,zero
   46504:	88a2b03a 	or	r17,r17,r2
   46508:	1a47883a 	add	r3,r3,r9
   4650c:	003f7406 	br	462e0 <__subdf3+0x3ec>
   46510:	1101ffe0 	cmpeqi	r4,r2,2047
   46514:	203f7a1e 	bne	r4,zero,46300 <__subdf3+0x40c>
   46518:	735b883a 	add	r13,r14,r13
   4651c:	6b9d803a 	cmpltu	r14,r13,r14
   46520:	1a4f883a 	add	r7,r3,r9
   46524:	3b8f883a 	add	r7,r7,r14
   46528:	382297fa 	slli	r17,r7,31
   4652c:	681ad07a 	srli	r13,r13,1
   46530:	380ed07a 	srli	r7,r7,1
   46534:	1021883a 	mov	r16,r2
   46538:	8b62b03a 	or	r17,r17,r13
   4653c:	003f5806 	br	462a0 <__subdf3+0x3ac>
   46540:	4806977a 	slli	r3,r9,29
   46544:	00880034 	movhi	r2,8192
   46548:	10bfffc4 	addi	r2,r2,-1
   4654c:	3084703a 	and	r2,r6,r2
   46550:	480ed0fa 	srli	r7,r9,3
   46554:	10c4b03a 	or	r2,r2,r3
   46558:	003f5806 	br	462bc <__subdf3+0x3c8>
   4655c:	1000521e 	bne	r2,zero,466a8 <__subdf3+0x7b4>
   46560:	38008726 	beq	r7,zero,46780 <__subdf3+0x88c>
   46564:	4806977a 	slli	r3,r9,29
   46568:	00880034 	movhi	r2,8192
   4656c:	10bfffc4 	addi	r2,r2,-1
   46570:	3084703a 	and	r2,r6,r2
   46574:	480ad0fa 	srli	r5,r9,3
   46578:	10c4b03a 	or	r2,r2,r3
   4657c:	5825883a 	mov	r18,r11
   46580:	003f7706 	br	46360 <__subdf3+0x46c>
   46584:	6ba3c83a 	sub	r17,r13,r14
   46588:	48e7c83a 	sub	r19,r9,r3
   4658c:	6c5b803a 	cmpltu	r13,r13,r17
   46590:	9b67c83a 	sub	r19,r19,r13
   46594:	5825883a 	mov	r18,r11
   46598:	003e9006 	br	45fdc <__subdf3+0xe8>
   4659c:	7363883a 	add	r17,r14,r13
   465a0:	1a4f883a 	add	r7,r3,r9
   465a4:	8b9d803a 	cmpltu	r14,r17,r14
   465a8:	3b8f883a 	add	r7,r7,r14
   465ac:	3880202c 	andhi	r2,r7,128
   465b0:	103fac1e 	bne	r2,zero,46464 <__subdf3+0x570>
   465b4:	04000044 	movi	r16,1
   465b8:	003f3906 	br	462a0 <__subdf3+0x3ac>
   465bc:	4806977a 	slli	r3,r9,29
   465c0:	00880034 	movhi	r2,8192
   465c4:	10bfffc4 	addi	r2,r2,-1
   465c8:	3084703a 	and	r2,r6,r2
   465cc:	480ad0fa 	srli	r5,r9,3
   465d0:	10c4b03a 	or	r2,r2,r3
   465d4:	003f6206 	br	46360 <__subdf3+0x46c>
   465d8:	7363c83a 	sub	r17,r14,r13
   465dc:	1a4fc83a 	sub	r7,r3,r9
   465e0:	745d803a 	cmpltu	r14,r14,r17
   465e4:	3b8fc83a 	sub	r7,r7,r14
   465e8:	04000044 	movi	r16,1
   465ec:	003e7606 	br	45fc8 <__subdf3+0xd4>
   465f0:	180a977a 	slli	r5,r3,29
   465f4:	00880034 	movhi	r2,8192
   465f8:	10bfffc4 	addi	r2,r2,-1
   465fc:	2084703a 	and	r2,r4,r2
   46600:	180ed0fa 	srli	r7,r3,3
   46604:	1144b03a 	or	r2,r2,r5
   46608:	003f2e06 	br	462c4 <__subdf3+0x3d0>
   4660c:	1ba2b03a 	or	r17,r3,r14
   46610:	8822c03a 	cmpne	r17,r17,zero
   46614:	003ef506 	br	461ec <__subdf3+0x2f8>
   46618:	50bff804 	addi	r2,r10,-32
   4661c:	51000820 	cmpeqi	r4,r10,32
   46620:	1884d83a 	srl	r2,r3,r2
   46624:	2000041e 	bne	r4,zero,46638 <__subdf3+0x744>
   46628:	01001004 	movi	r4,64
   4662c:	2289c83a 	sub	r4,r4,r10
   46630:	1906983a 	sll	r3,r3,r4
   46634:	70dcb03a 	or	r14,r14,r3
   46638:	7022c03a 	cmpne	r17,r14,zero
   4663c:	88a2b03a 	or	r17,r17,r2
   46640:	003fa006 	br	464c4 <__subdf3+0x5d0>
   46644:	103fdd26 	beq	r2,zero,465bc <__subdf3+0x6c8>
   46648:	4b5ab03a 	or	r13,r9,r13
   4664c:	180e977a 	slli	r7,r3,29
   46650:	180ad0fa 	srli	r5,r3,3
   46654:	68004f1e 	bne	r13,zero,46794 <__subdf3+0x8a0>
   46658:	00880034 	movhi	r2,8192
   4665c:	10bfffc4 	addi	r2,r2,-1
   46660:	2084703a 	and	r2,r4,r2
   46664:	11c4b03a 	or	r2,r2,r7
   46668:	003f3d06 	br	46360 <__subdf3+0x46c>
   4666c:	38002d26 	beq	r7,zero,46724 <__subdf3+0x830>
   46670:	4806977a 	slli	r3,r9,29
   46674:	00880034 	movhi	r2,8192
   46678:	10bfffc4 	addi	r2,r2,-1
   4667c:	3084703a 	and	r2,r6,r2
   46680:	480ed0fa 	srli	r7,r9,3
   46684:	10c4b03a 	or	r2,r2,r3
   46688:	5825883a 	mov	r18,r11
   4668c:	003f0d06 	br	462c4 <__subdf3+0x3d0>
   46690:	6ba3c83a 	sub	r17,r13,r14
   46694:	48cfc83a 	sub	r7,r9,r3
   46698:	6c5b803a 	cmpltu	r13,r13,r17
   4669c:	3b4fc83a 	sub	r7,r7,r13
   466a0:	04000044 	movi	r16,1
   466a4:	003e4806 	br	45fc8 <__subdf3+0xd4>
   466a8:	1810977a 	slli	r8,r3,29
   466ac:	180ad0fa 	srli	r5,r3,3
   466b0:	3800221e 	bne	r7,zero,4673c <__subdf3+0x848>
   466b4:	00880034 	movhi	r2,8192
   466b8:	10bfffc4 	addi	r2,r2,-1
   466bc:	2084703a 	and	r2,r4,r2
   466c0:	1204b03a 	or	r2,r2,r8
   466c4:	003f2606 	br	46360 <__subdf3+0x46c>
   466c8:	4806977a 	slli	r3,r9,29
   466cc:	00880034 	movhi	r2,8192
   466d0:	10bfffc4 	addi	r2,r2,-1
   466d4:	3084703a 	and	r2,r6,r2
   466d8:	480ed0fa 	srli	r7,r9,3
   466dc:	10c4b03a 	or	r2,r2,r3
   466e0:	003ef806 	br	462c4 <__subdf3+0x3d0>
   466e4:	50bff804 	addi	r2,r10,-32
   466e8:	51000820 	cmpeqi	r4,r10,32
   466ec:	1884d83a 	srl	r2,r3,r2
   466f0:	2000041e 	bne	r4,zero,46704 <__subdf3+0x810>
   466f4:	01001004 	movi	r4,64
   466f8:	2289c83a 	sub	r4,r4,r10
   466fc:	1906983a 	sll	r3,r3,r4
   46700:	70dcb03a 	or	r14,r14,r3
   46704:	7022c03a 	cmpne	r17,r14,zero
   46708:	88a2b03a 	or	r17,r17,r2
   4670c:	003eb706 	br	461ec <__subdf3+0x2f8>
   46710:	7363883a 	add	r17,r14,r13
   46714:	1a4f883a 	add	r7,r3,r9
   46718:	8b5b803a 	cmpltu	r13,r17,r13
   4671c:	3b4f883a 	add	r7,r7,r13
   46720:	003fa206 	br	465ac <__subdf3+0x6b8>
   46724:	0005883a 	mov	r2,zero
   46728:	0025883a 	mov	r18,zero
   4672c:	003ee506 	br	462c4 <__subdf3+0x3d0>
   46730:	89c4b03a 	or	r2,r17,r7
   46734:	103f3726 	beq	r2,zero,46414 <__subdf3+0x520>
   46738:	003ed906 	br	462a0 <__subdf3+0x3ac>
   4673c:	00c80034 	movhi	r3,8192
   46740:	18ffffc4 	addi	r3,r3,-1
   46744:	20c4703a 	and	r2,r4,r3
   46748:	2900022c 	andhi	r4,r5,8
   4674c:	1204b03a 	or	r2,r2,r8
   46750:	20000826 	beq	r4,zero,46774 <__subdf3+0x880>
   46754:	4808d0fa 	srli	r4,r9,3
   46758:	21c0022c 	andhi	r7,r4,8
   4675c:	3800051e 	bne	r7,zero,46774 <__subdf3+0x880>
   46760:	4804977a 	slli	r2,r9,29
   46764:	30c6703a 	and	r3,r6,r3
   46768:	5825883a 	mov	r18,r11
   4676c:	1884b03a 	or	r2,r3,r2
   46770:	200b883a 	mov	r5,r4
   46774:	280a90fa 	slli	r5,r5,3
   46778:	280ad0fa 	srli	r5,r5,3
   4677c:	003ef806 	br	46360 <__subdf3+0x46c>
   46780:	01400434 	movhi	r5,16
   46784:	297fffc4 	addi	r5,r5,-1
   46788:	0025883a 	mov	r18,zero
   4678c:	00bfffc4 	movi	r2,-1
   46790:	003ef506 	br	46368 <__subdf3+0x474>
   46794:	00c80034 	movhi	r3,8192
   46798:	18ffffc4 	addi	r3,r3,-1
   4679c:	20c4703a 	and	r2,r4,r3
   467a0:	2900022c 	andhi	r4,r5,8
   467a4:	11c4b03a 	or	r2,r2,r7
   467a8:	203ff226 	beq	r4,zero,46774 <__subdf3+0x880>
   467ac:	003fe906 	br	46754 <__subdf3+0x860>
   467b0:	0005883a 	mov	r2,zero
   467b4:	0401ffc4 	movi	r16,2047
   467b8:	000b883a 	mov	r5,zero
   467bc:	003e3706 	br	4609c <__subdf3+0x1a8>
   467c0:	380b883a 	mov	r5,r7
   467c4:	003ee606 	br	46360 <__subdf3+0x46c>

000467c8 <__unorddf2>:
   467c8:	2804d53a 	srli	r2,r5,20
   467cc:	3806d53a 	srli	r3,r7,20
   467d0:	02000434 	movhi	r8,16
   467d4:	1081ffcc 	andi	r2,r2,2047
   467d8:	423fffc4 	addi	r8,r8,-1
   467dc:	1081ffd8 	cmpnei	r2,r2,2047
   467e0:	2a0a703a 	and	r5,r5,r8
   467e4:	3a0e703a 	and	r7,r7,r8
   467e8:	18c1ffcc 	andi	r3,r3,2047
   467ec:	10000426 	beq	r2,zero,46800 <__unorddf2+0x38>
   467f0:	18c1ffd8 	cmpnei	r3,r3,2047
   467f4:	18000626 	beq	r3,zero,46810 <__unorddf2+0x48>
   467f8:	0005883a 	mov	r2,zero
   467fc:	f800283a 	ret
   46800:	290ab03a 	or	r5,r5,r4
   46804:	283ffa26 	beq	r5,zero,467f0 <__unorddf2+0x28>
   46808:	00800044 	movi	r2,1
   4680c:	f800283a 	ret
   46810:	398eb03a 	or	r7,r7,r6
   46814:	3804c03a 	cmpne	r2,r7,zero
   46818:	f800283a 	ret

0004681c <__fixdfsi>:
   4681c:	2804d53a 	srli	r2,r5,20
   46820:	00c00434 	movhi	r3,16
   46824:	18ffffc4 	addi	r3,r3,-1
   46828:	1081ffcc 	andi	r2,r2,2047
   4682c:	1180ffd0 	cmplti	r6,r2,1023
   46830:	280ed7fa 	srli	r7,r5,31
   46834:	28ca703a 	and	r5,r5,r3
   46838:	3000061e 	bne	r6,zero,46854 <__fixdfsi+0x38>
   4683c:	10c10790 	cmplti	r3,r2,1054
   46840:	1800061e 	bne	r3,zero,4685c <__fixdfsi+0x40>
   46844:	00a00034 	movhi	r2,32768
   46848:	10bfffc4 	addi	r2,r2,-1
   4684c:	3885883a 	add	r2,r7,r2
   46850:	f800283a 	ret
   46854:	0005883a 	mov	r2,zero
   46858:	f800283a 	ret
   4685c:	00c10cc4 	movi	r3,1075
   46860:	1887c83a 	sub	r3,r3,r2
   46864:	19800808 	cmpgei	r6,r3,32
   46868:	29400434 	orhi	r5,r5,16
   4686c:	3000071e 	bne	r6,zero,4688c <__fixdfsi+0x70>
   46870:	10befb44 	addi	r2,r2,-1043
   46874:	2884983a 	sll	r2,r5,r2
   46878:	20c8d83a 	srl	r4,r4,r3
   4687c:	1104b03a 	or	r2,r2,r4
   46880:	383ff526 	beq	r7,zero,46858 <__fixdfsi+0x3c>
   46884:	0085c83a 	sub	r2,zero,r2
   46888:	f800283a 	ret
   4688c:	00c104c4 	movi	r3,1043
   46890:	1885c83a 	sub	r2,r3,r2
   46894:	2884d83a 	srl	r2,r5,r2
   46898:	003ff906 	br	46880 <__fixdfsi+0x64>

0004689c <__floatsidf>:
   4689c:	defffd04 	addi	sp,sp,-12
   468a0:	dfc00215 	stw	ra,8(sp)
   468a4:	dc400115 	stw	r17,4(sp)
   468a8:	dc000015 	stw	r16,0(sp)
   468ac:	20001326 	beq	r4,zero,468fc <__floatsidf+0x60>
   468b0:	2022d7fa 	srli	r17,r4,31
   468b4:	2021883a 	mov	r16,r4
   468b8:	20002416 	blt	r4,zero,4694c <__floatsidf+0xb0>
   468bc:	8009883a 	mov	r4,r16
   468c0:	0046bc80 	call	46bc8 <__clzsi2>
   468c4:	01010784 	movi	r4,1054
   468c8:	2089c83a 	sub	r4,r4,r2
   468cc:	10c002c8 	cmpgei	r3,r2,11
   468d0:	2101ffcc 	andi	r4,r4,2047
   468d4:	1800161e 	bne	r3,zero,46930 <__floatsidf+0x94>
   468d8:	014002c4 	movi	r5,11
   468dc:	288bc83a 	sub	r5,r5,r2
   468e0:	814ad83a 	srl	r5,r16,r5
   468e4:	00c00434 	movhi	r3,16
   468e8:	10800544 	addi	r2,r2,21
   468ec:	18ffffc4 	addi	r3,r3,-1
   468f0:	8084983a 	sll	r2,r16,r2
   468f4:	28ca703a 	and	r5,r5,r3
   468f8:	00000406 	br	4690c <__floatsidf+0x70>
   468fc:	0023883a 	mov	r17,zero
   46900:	0009883a 	mov	r4,zero
   46904:	000b883a 	mov	r5,zero
   46908:	0005883a 	mov	r2,zero
   4690c:	2008953a 	slli	r4,r4,20
   46910:	880697fa 	slli	r3,r17,31
   46914:	2148b03a 	or	r4,r4,r5
   46918:	20c6b03a 	or	r3,r4,r3
   4691c:	dfc00217 	ldw	ra,8(sp)
   46920:	dc400117 	ldw	r17,4(sp)
   46924:	dc000017 	ldw	r16,0(sp)
   46928:	dec00304 	addi	sp,sp,12
   4692c:	f800283a 	ret
   46930:	10bffd44 	addi	r2,r2,-11
   46934:	808a983a 	sll	r5,r16,r2
   46938:	00800434 	movhi	r2,16
   4693c:	10bfffc4 	addi	r2,r2,-1
   46940:	288a703a 	and	r5,r5,r2
   46944:	0005883a 	mov	r2,zero
   46948:	003ff006 	br	4690c <__floatsidf+0x70>
   4694c:	0121c83a 	sub	r16,zero,r4
   46950:	003fda06 	br	468bc <__floatsidf+0x20>

00046954 <__extendsfdf2>:
   46954:	200ad5fa 	srli	r5,r4,23
   46958:	defffd04 	addi	sp,sp,-12
   4695c:	dc000015 	stw	r16,0(sp)
   46960:	29403fcc 	andi	r5,r5,255
   46964:	04002034 	movhi	r16,128
   46968:	28800044 	addi	r2,r5,1
   4696c:	dc400115 	stw	r17,4(sp)
   46970:	843fffc4 	addi	r16,r16,-1
   46974:	dfc00215 	stw	ra,8(sp)
   46978:	10803f8c 	andi	r2,r2,254
   4697c:	2022d7fa 	srli	r17,r4,31
   46980:	8120703a 	and	r16,r16,r4
   46984:	10000d26 	beq	r2,zero,469bc <__extendsfdf2+0x68>
   46988:	8008d0fa 	srli	r4,r16,3
   4698c:	8020977a 	slli	r16,r16,29
   46990:	2940e004 	addi	r5,r5,896
   46994:	280a953a 	slli	r5,r5,20
   46998:	880697fa 	slli	r3,r17,31
   4699c:	8005883a 	mov	r2,r16
   469a0:	290ab03a 	or	r5,r5,r4
   469a4:	28c6b03a 	or	r3,r5,r3
   469a8:	dfc00217 	ldw	ra,8(sp)
   469ac:	dc400117 	ldw	r17,4(sp)
   469b0:	dc000017 	ldw	r16,0(sp)
   469b4:	dec00304 	addi	sp,sp,12
   469b8:	f800283a 	ret
   469bc:	2800111e 	bne	r5,zero,46a04 <__extendsfdf2+0xb0>
   469c0:	80001926 	beq	r16,zero,46a28 <__extendsfdf2+0xd4>
   469c4:	8009883a 	mov	r4,r16
   469c8:	0046bc80 	call	46bc8 <__clzsi2>
   469cc:	10c002c8 	cmpgei	r3,r2,11
   469d0:	18001b1e 	bne	r3,zero,46a40 <__extendsfdf2+0xec>
   469d4:	010002c4 	movi	r4,11
   469d8:	2089c83a 	sub	r4,r4,r2
   469dc:	10c00544 	addi	r3,r2,21
   469e0:	8108d83a 	srl	r4,r16,r4
   469e4:	80e0983a 	sll	r16,r16,r3
   469e8:	00c00434 	movhi	r3,16
   469ec:	0140e244 	movi	r5,905
   469f0:	18ffffc4 	addi	r3,r3,-1
   469f4:	288bc83a 	sub	r5,r5,r2
   469f8:	20c8703a 	and	r4,r4,r3
   469fc:	2941ffcc 	andi	r5,r5,2047
   46a00:	003fe406 	br	46994 <__extendsfdf2+0x40>
   46a04:	80000b26 	beq	r16,zero,46a34 <__extendsfdf2+0xe0>
   46a08:	8008d0fa 	srli	r4,r16,3
   46a0c:	00800434 	movhi	r2,16
   46a10:	10bfffc4 	addi	r2,r2,-1
   46a14:	21000234 	orhi	r4,r4,8
   46a18:	8020977a 	slli	r16,r16,29
   46a1c:	2088703a 	and	r4,r4,r2
   46a20:	0141ffc4 	movi	r5,2047
   46a24:	003fdb06 	br	46994 <__extendsfdf2+0x40>
   46a28:	000b883a 	mov	r5,zero
   46a2c:	0009883a 	mov	r4,zero
   46a30:	003fd806 	br	46994 <__extendsfdf2+0x40>
   46a34:	0141ffc4 	movi	r5,2047
   46a38:	0009883a 	mov	r4,zero
   46a3c:	003fd506 	br	46994 <__extendsfdf2+0x40>
   46a40:	113ffd44 	addi	r4,r2,-11
   46a44:	8108983a 	sll	r4,r16,r4
   46a48:	0021883a 	mov	r16,zero
   46a4c:	003fe606 	br	469e8 <__extendsfdf2+0x94>

00046a50 <__truncdfsf2>:
   46a50:	2806d53a 	srli	r3,r5,20
   46a54:	00800434 	movhi	r2,16
   46a58:	10bfffc4 	addi	r2,r2,-1
   46a5c:	2884703a 	and	r2,r5,r2
   46a60:	100c90fa 	slli	r6,r2,3
   46a64:	18c1ffcc 	andi	r3,r3,2047
   46a68:	2004d77a 	srli	r2,r4,29
   46a6c:	19c00044 	addi	r7,r3,1
   46a70:	39c1ff8c 	andi	r7,r7,2046
   46a74:	280ad7fa 	srli	r5,r5,31
   46a78:	201090fa 	slli	r8,r4,3
   46a7c:	1184b03a 	or	r2,r2,r6
   46a80:	38000b26 	beq	r7,zero,46ab0 <__truncdfsf2+0x60>
   46a84:	19bf2004 	addi	r6,r3,-896
   46a88:	31c03fc8 	cmpgei	r7,r6,255
   46a8c:	38001226 	beq	r7,zero,46ad8 <__truncdfsf2+0x88>
   46a90:	00ffffc4 	movi	r3,-1
   46a94:	0009883a 	mov	r4,zero
   46a98:	18803fcc 	andi	r2,r3,255
   46a9c:	100495fa 	slli	r2,r2,23
   46aa0:	280a97fa 	slli	r5,r5,31
   46aa4:	1104b03a 	or	r2,r2,r4
   46aa8:	1144b03a 	or	r2,r2,r5
   46aac:	f800283a 	ret
   46ab0:	1210b03a 	or	r8,r2,r8
   46ab4:	1800041e 	bne	r3,zero,46ac8 <__truncdfsf2+0x78>
   46ab8:	40001d1e 	bne	r8,zero,46b30 <__truncdfsf2+0xe0>
   46abc:	0007883a 	mov	r3,zero
   46ac0:	0009883a 	mov	r4,zero
   46ac4:	003ff406 	br	46a98 <__truncdfsf2+0x48>
   46ac8:	403ff126 	beq	r8,zero,46a90 <__truncdfsf2+0x40>
   46acc:	11001034 	orhi	r4,r2,64
   46ad0:	00ffffc4 	movi	r3,-1
   46ad4:	003ff006 	br	46a98 <__truncdfsf2+0x48>
   46ad8:	0180170e 	bge	zero,r6,46b38 <__truncdfsf2+0xe8>
   46adc:	200891ba 	slli	r4,r4,6
   46ae0:	100490fa 	slli	r2,r2,3
   46ae4:	4010d77a 	srli	r8,r8,29
   46ae8:	2008c03a 	cmpne	r4,r4,zero
   46aec:	2088b03a 	or	r4,r4,r2
   46af0:	2208b03a 	or	r4,r4,r8
   46af4:	208001cc 	andi	r2,r4,7
   46af8:	10003126 	beq	r2,zero,46bc0 <__truncdfsf2+0x170>
   46afc:	208003cc 	andi	r2,r4,15
   46b00:	10800118 	cmpnei	r2,r2,4
   46b04:	10000126 	beq	r2,zero,46b0c <__truncdfsf2+0xbc>
   46b08:	21000104 	addi	r4,r4,4
   46b0c:	2081002c 	andhi	r2,r4,1024
   46b10:	10002b26 	beq	r2,zero,46bc0 <__truncdfsf2+0x170>
   46b14:	30c00044 	addi	r3,r6,1
   46b18:	18803fe0 	cmpeqi	r2,r3,255
   46b1c:	103fdc1e 	bne	r2,zero,46a90 <__truncdfsf2+0x40>
   46b20:	200891ba 	slli	r4,r4,6
   46b24:	2008d27a 	srli	r4,r4,9
   46b28:	003fdb06 	br	46a98 <__truncdfsf2+0x48>
   46b2c:	0007883a 	mov	r3,zero
   46b30:	01000144 	movi	r4,5
   46b34:	003ffa06 	br	46b20 <__truncdfsf2+0xd0>
   46b38:	313ffa50 	cmplti	r4,r6,-23
   46b3c:	203ffb1e 	bne	r4,zero,46b2c <__truncdfsf2+0xdc>
   46b40:	01c00784 	movi	r7,30
   46b44:	398fc83a 	sub	r7,r7,r6
   46b48:	39000808 	cmpgei	r4,r7,32
   46b4c:	12402034 	orhi	r9,r2,128
   46b50:	20000c26 	beq	r4,zero,46b84 <__truncdfsf2+0x134>
   46b54:	00bfff84 	movi	r2,-2
   46b58:	118dc83a 	sub	r6,r2,r6
   46b5c:	38800820 	cmpeqi	r2,r7,32
   46b60:	498cd83a 	srl	r6,r9,r6
   46b64:	1000031e 	bne	r2,zero,46b74 <__truncdfsf2+0x124>
   46b68:	18ff2884 	addi	r3,r3,-862
   46b6c:	48c6983a 	sll	r3,r9,r3
   46b70:	40d0b03a 	or	r8,r8,r3
   46b74:	4008c03a 	cmpne	r4,r8,zero
   46b78:	2188b03a 	or	r4,r4,r6
   46b7c:	000d883a 	mov	r6,zero
   46b80:	003fdc06 	br	46af4 <__truncdfsf2+0xa4>
   46b84:	18ff2084 	addi	r3,r3,-894
   46b88:	40c8983a 	sll	r4,r8,r3
   46b8c:	48c6983a 	sll	r3,r9,r3
   46b90:	41c4d83a 	srl	r2,r8,r7
   46b94:	2008c03a 	cmpne	r4,r4,zero
   46b98:	20c8b03a 	or	r4,r4,r3
   46b9c:	1108b03a 	or	r4,r2,r4
   46ba0:	208001cc 	andi	r2,r4,7
   46ba4:	000d883a 	mov	r6,zero
   46ba8:	103fd41e 	bne	r2,zero,46afc <__truncdfsf2+0xac>
   46bac:	2081002c 	andhi	r2,r4,1024
   46bb0:	00c00044 	movi	r3,1
   46bb4:	103fda1e 	bne	r2,zero,46b20 <__truncdfsf2+0xd0>
   46bb8:	0007883a 	mov	r3,zero
   46bbc:	003fd806 	br	46b20 <__truncdfsf2+0xd0>
   46bc0:	3007883a 	mov	r3,r6
   46bc4:	003fd606 	br	46b20 <__truncdfsf2+0xd0>

00046bc8 <__clzsi2>:
   46bc8:	00bfffd4 	movui	r2,65535
   46bcc:	11000a36 	bltu	r2,r4,46bf8 <__clzsi2+0x30>
   46bd0:	20c04028 	cmpgeui	r3,r4,256
   46bd4:	180690fa 	slli	r3,r3,3
   46bd8:	00800804 	movi	r2,32
   46bdc:	10c5c83a 	sub	r2,r2,r3
   46be0:	20c8d83a 	srl	r4,r4,r3
   46be4:	00c00174 	movhi	r3,5
   46be8:	20c7883a 	add	r3,r4,r3
   46bec:	18cf4703 	ldbu	r3,15644(r3)
   46bf0:	10c5c83a 	sub	r2,r2,r3
   46bf4:	f800283a 	ret
   46bf8:	00804034 	movhi	r2,256
   46bfc:	2080032e 	bgeu	r4,r2,46c0c <__clzsi2+0x44>
   46c00:	00800404 	movi	r2,16
   46c04:	00c00404 	movi	r3,16
   46c08:	003ff506 	br	46be0 <__clzsi2+0x18>
   46c0c:	00800204 	movi	r2,8
   46c10:	00c00604 	movi	r3,24
   46c14:	003ff206 	br	46be0 <__clzsi2+0x18>

00046c18 <__divsi3>:
   46c18:	20001a16 	blt	r4,zero,46c84 <__divsi3+0x6c>
   46c1c:	000f883a 	mov	r7,zero
   46c20:	2800020e 	bge	r5,zero,46c2c <__divsi3+0x14>
   46c24:	014bc83a 	sub	r5,zero,r5
   46c28:	39c0005c 	xori	r7,r7,1
   46c2c:	200d883a 	mov	r6,r4
   46c30:	00c00044 	movi	r3,1
   46c34:	2900092e 	bgeu	r5,r4,46c5c <__divsi3+0x44>
   46c38:	00800804 	movi	r2,32
   46c3c:	00c00044 	movi	r3,1
   46c40:	00000106 	br	46c48 <__divsi3+0x30>
   46c44:	10001226 	beq	r2,zero,46c90 <__divsi3+0x78>
   46c48:	294b883a 	add	r5,r5,r5
   46c4c:	10bfffc4 	addi	r2,r2,-1
   46c50:	18c7883a 	add	r3,r3,r3
   46c54:	293ffb36 	bltu	r5,r4,46c44 <__divsi3+0x2c>
   46c58:	18000d26 	beq	r3,zero,46c90 <__divsi3+0x78>
   46c5c:	0005883a 	mov	r2,zero
   46c60:	31400236 	bltu	r6,r5,46c6c <__divsi3+0x54>
   46c64:	314dc83a 	sub	r6,r6,r5
   46c68:	10c4b03a 	or	r2,r2,r3
   46c6c:	1806d07a 	srli	r3,r3,1
   46c70:	280ad07a 	srli	r5,r5,1
   46c74:	183ffa1e 	bne	r3,zero,46c60 <__divsi3+0x48>
   46c78:	38000126 	beq	r7,zero,46c80 <__divsi3+0x68>
   46c7c:	0085c83a 	sub	r2,zero,r2
   46c80:	f800283a 	ret
   46c84:	0109c83a 	sub	r4,zero,r4
   46c88:	01c00044 	movi	r7,1
   46c8c:	003fe406 	br	46c20 <__divsi3+0x8>
   46c90:	0005883a 	mov	r2,zero
   46c94:	003ff806 	br	46c78 <__divsi3+0x60>

00046c98 <__modsi3>:
   46c98:	20001916 	blt	r4,zero,46d00 <__modsi3+0x68>
   46c9c:	000f883a 	mov	r7,zero
   46ca0:	2005883a 	mov	r2,r4
   46ca4:	2800010e 	bge	r5,zero,46cac <__modsi3+0x14>
   46ca8:	014bc83a 	sub	r5,zero,r5
   46cac:	00c00044 	movi	r3,1
   46cb0:	2900092e 	bgeu	r5,r4,46cd8 <__modsi3+0x40>
   46cb4:	01800804 	movi	r6,32
   46cb8:	00c00044 	movi	r3,1
   46cbc:	00000106 	br	46cc4 <__modsi3+0x2c>
   46cc0:	30000d26 	beq	r6,zero,46cf8 <__modsi3+0x60>
   46cc4:	294b883a 	add	r5,r5,r5
   46cc8:	31bfffc4 	addi	r6,r6,-1
   46ccc:	18c7883a 	add	r3,r3,r3
   46cd0:	293ffb36 	bltu	r5,r4,46cc0 <__modsi3+0x28>
   46cd4:	18000826 	beq	r3,zero,46cf8 <__modsi3+0x60>
   46cd8:	1806d07a 	srli	r3,r3,1
   46cdc:	11400136 	bltu	r2,r5,46ce4 <__modsi3+0x4c>
   46ce0:	1145c83a 	sub	r2,r2,r5
   46ce4:	280ad07a 	srli	r5,r5,1
   46ce8:	183ffb1e 	bne	r3,zero,46cd8 <__modsi3+0x40>
   46cec:	38000126 	beq	r7,zero,46cf4 <__modsi3+0x5c>
   46cf0:	0085c83a 	sub	r2,zero,r2
   46cf4:	f800283a 	ret
   46cf8:	2005883a 	mov	r2,r4
   46cfc:	003ffb06 	br	46cec <__modsi3+0x54>
   46d00:	0109c83a 	sub	r4,zero,r4
   46d04:	01c00044 	movi	r7,1
   46d08:	003fe506 	br	46ca0 <__modsi3+0x8>

00046d0c <__udivsi3>:
   46d0c:	200d883a 	mov	r6,r4
   46d10:	2900152e 	bgeu	r5,r4,46d68 <__udivsi3+0x5c>
   46d14:	28001416 	blt	r5,zero,46d68 <__udivsi3+0x5c>
   46d18:	00800804 	movi	r2,32
   46d1c:	00c00044 	movi	r3,1
   46d20:	00000206 	br	46d2c <__udivsi3+0x20>
   46d24:	10000e26 	beq	r2,zero,46d60 <__udivsi3+0x54>
   46d28:	28000516 	blt	r5,zero,46d40 <__udivsi3+0x34>
   46d2c:	294b883a 	add	r5,r5,r5
   46d30:	10bfffc4 	addi	r2,r2,-1
   46d34:	18c7883a 	add	r3,r3,r3
   46d38:	293ffa36 	bltu	r5,r4,46d24 <__udivsi3+0x18>
   46d3c:	18000826 	beq	r3,zero,46d60 <__udivsi3+0x54>
   46d40:	0005883a 	mov	r2,zero
   46d44:	31400236 	bltu	r6,r5,46d50 <__udivsi3+0x44>
   46d48:	314dc83a 	sub	r6,r6,r5
   46d4c:	10c4b03a 	or	r2,r2,r3
   46d50:	1806d07a 	srli	r3,r3,1
   46d54:	280ad07a 	srli	r5,r5,1
   46d58:	183ffa1e 	bne	r3,zero,46d44 <__udivsi3+0x38>
   46d5c:	f800283a 	ret
   46d60:	0005883a 	mov	r2,zero
   46d64:	f800283a 	ret
   46d68:	00c00044 	movi	r3,1
   46d6c:	003ff406 	br	46d40 <__udivsi3+0x34>

00046d70 <__umodsi3>:
   46d70:	2005883a 	mov	r2,r4
   46d74:	2900132e 	bgeu	r5,r4,46dc4 <__umodsi3+0x54>
   46d78:	28001216 	blt	r5,zero,46dc4 <__umodsi3+0x54>
   46d7c:	01800804 	movi	r6,32
   46d80:	00c00044 	movi	r3,1
   46d84:	00000206 	br	46d90 <__umodsi3+0x20>
   46d88:	30000c26 	beq	r6,zero,46dbc <__umodsi3+0x4c>
   46d8c:	28000516 	blt	r5,zero,46da4 <__umodsi3+0x34>
   46d90:	294b883a 	add	r5,r5,r5
   46d94:	31bfffc4 	addi	r6,r6,-1
   46d98:	18c7883a 	add	r3,r3,r3
   46d9c:	293ffa36 	bltu	r5,r4,46d88 <__umodsi3+0x18>
   46da0:	18000626 	beq	r3,zero,46dbc <__umodsi3+0x4c>
   46da4:	1806d07a 	srli	r3,r3,1
   46da8:	11400136 	bltu	r2,r5,46db0 <__umodsi3+0x40>
   46dac:	1145c83a 	sub	r2,r2,r5
   46db0:	280ad07a 	srli	r5,r5,1
   46db4:	183ffb1e 	bne	r3,zero,46da4 <__umodsi3+0x34>
   46db8:	f800283a 	ret
   46dbc:	2005883a 	mov	r2,r4
   46dc0:	f800283a 	ret
   46dc4:	00c00044 	movi	r3,1
   46dc8:	003ff606 	br	46da4 <__umodsi3+0x34>

00046dcc <__errno>:
   46dcc:	00800174 	movhi	r2,5
   46dd0:	1097c217 	ldw	r2,24328(r2)
   46dd4:	f800283a 	ret

00046dd8 <_printf_r>:
   46dd8:	defffd04 	addi	sp,sp,-12
   46ddc:	2805883a 	mov	r2,r5
   46de0:	dfc00015 	stw	ra,0(sp)
   46de4:	d9800115 	stw	r6,4(sp)
   46de8:	d9c00215 	stw	r7,8(sp)
   46dec:	21400217 	ldw	r5,8(r4)
   46df0:	d9c00104 	addi	r7,sp,4
   46df4:	100d883a 	mov	r6,r2
   46df8:	0046fd40 	call	46fd4 <___vfprintf_internal_r>
   46dfc:	dfc00017 	ldw	ra,0(sp)
   46e00:	dec00304 	addi	sp,sp,12
   46e04:	f800283a 	ret

00046e08 <printf>:
   46e08:	defffc04 	addi	sp,sp,-16
   46e0c:	dfc00015 	stw	ra,0(sp)
   46e10:	d9400115 	stw	r5,4(sp)
   46e14:	d9800215 	stw	r6,8(sp)
   46e18:	d9c00315 	stw	r7,12(sp)
   46e1c:	00800174 	movhi	r2,5
   46e20:	1097c217 	ldw	r2,24328(r2)
   46e24:	200b883a 	mov	r5,r4
   46e28:	d9800104 	addi	r6,sp,4
   46e2c:	11000217 	ldw	r4,8(r2)
   46e30:	0048fe40 	call	48fe4 <__vfprintf_internal>
   46e34:	dfc00017 	ldw	ra,0(sp)
   46e38:	dec00404 	addi	sp,sp,16
   46e3c:	f800283a 	ret

00046e40 <_putchar_r>:
   46e40:	21800217 	ldw	r6,8(r4)
   46e44:	004db981 	jmpi	4db98 <_putc_r>

00046e48 <putchar>:
   46e48:	00800174 	movhi	r2,5
   46e4c:	1097c217 	ldw	r2,24328(r2)
   46e50:	200b883a 	mov	r5,r4
   46e54:	11800217 	ldw	r6,8(r2)
   46e58:	1009883a 	mov	r4,r2
   46e5c:	004db981 	jmpi	4db98 <_putc_r>

00046e60 <_puts_r>:
   46e60:	defff504 	addi	sp,sp,-44
   46e64:	dc000815 	stw	r16,32(sp)
   46e68:	2021883a 	mov	r16,r4
   46e6c:	2809883a 	mov	r4,r5
   46e70:	dc400915 	stw	r17,36(sp)
   46e74:	dfc00a15 	stw	ra,40(sp)
   46e78:	2823883a 	mov	r17,r5
   46e7c:	0046f3c0 	call	46f3c <strlen>
   46e80:	11000044 	addi	r4,r2,1
   46e84:	d8800515 	stw	r2,20(sp)
   46e88:	00800044 	movi	r2,1
   46e8c:	00c00174 	movhi	r3,5
   46e90:	d8800715 	stw	r2,28(sp)
   46e94:	d8800404 	addi	r2,sp,16
   46e98:	18cf8704 	addi	r3,r3,15900
   46e9c:	d8800115 	stw	r2,4(sp)
   46ea0:	00800084 	movi	r2,2
   46ea4:	dc400415 	stw	r17,16(sp)
   46ea8:	d8c00615 	stw	r3,24(sp)
   46eac:	d9000315 	stw	r4,12(sp)
   46eb0:	d8800215 	stw	r2,8(sp)
   46eb4:	81400217 	ldw	r5,8(r16)
   46eb8:	80000226 	beq	r16,zero,46ec4 <_puts_r+0x64>
   46ebc:	80800e17 	ldw	r2,56(r16)
   46ec0:	10001326 	beq	r2,zero,46f10 <_puts_r+0xb0>
   46ec4:	2880030b 	ldhu	r2,12(r5)
   46ec8:	10c8000c 	andi	r3,r2,8192
   46ecc:	1800061e 	bne	r3,zero,46ee8 <_puts_r+0x88>
   46ed0:	28c01917 	ldw	r3,100(r5)
   46ed4:	0137ffc4 	movi	r4,-8193
   46ed8:	10880014 	ori	r2,r2,8192
   46edc:	1906703a 	and	r3,r3,r4
   46ee0:	2880030d 	sth	r2,12(r5)
   46ee4:	28c01915 	stw	r3,100(r5)
   46ee8:	d9800104 	addi	r6,sp,4
   46eec:	8009883a 	mov	r4,r16
   46ef0:	004b6240 	call	4b624 <__sfvwrite_r>
   46ef4:	10000b1e 	bne	r2,zero,46f24 <_puts_r+0xc4>
   46ef8:	00800284 	movi	r2,10
   46efc:	dfc00a17 	ldw	ra,40(sp)
   46f00:	dc400917 	ldw	r17,36(sp)
   46f04:	dc000817 	ldw	r16,32(sp)
   46f08:	dec00b04 	addi	sp,sp,44
   46f0c:	f800283a 	ret
   46f10:	8009883a 	mov	r4,r16
   46f14:	d9400015 	stw	r5,0(sp)
   46f18:	004b1c40 	call	4b1c4 <__sinit>
   46f1c:	d9400017 	ldw	r5,0(sp)
   46f20:	003fe806 	br	46ec4 <_puts_r+0x64>
   46f24:	00bfffc4 	movi	r2,-1
   46f28:	003ff406 	br	46efc <_puts_r+0x9c>

00046f2c <puts>:
   46f2c:	00800174 	movhi	r2,5
   46f30:	200b883a 	mov	r5,r4
   46f34:	1117c217 	ldw	r4,24328(r2)
   46f38:	0046e601 	jmpi	46e60 <_puts_r>

00046f3c <strlen>:
   46f3c:	208000cc 	andi	r2,r4,3
   46f40:	10000926 	beq	r2,zero,46f68 <strlen+0x2c>
   46f44:	2005883a 	mov	r2,r4
   46f48:	00000306 	br	46f58 <strlen+0x1c>
   46f4c:	10800044 	addi	r2,r2,1
   46f50:	10c000cc 	andi	r3,r2,3
   46f54:	18000526 	beq	r3,zero,46f6c <strlen+0x30>
   46f58:	10c00007 	ldb	r3,0(r2)
   46f5c:	183ffb1e 	bne	r3,zero,46f4c <strlen+0x10>
   46f60:	1105c83a 	sub	r2,r2,r4
   46f64:	f800283a 	ret
   46f68:	2005883a 	mov	r2,r4
   46f6c:	11400017 	ldw	r5,0(r2)
   46f70:	01ffbff4 	movhi	r7,65279
   46f74:	39ffbfc4 	addi	r7,r7,-257
   46f78:	29c7883a 	add	r3,r5,r7
   46f7c:	01a02074 	movhi	r6,32897
   46f80:	014a303a 	nor	r5,zero,r5
   46f84:	1946703a 	and	r3,r3,r5
   46f88:	31a02004 	addi	r6,r6,-32640
   46f8c:	1986703a 	and	r3,r3,r6
   46f90:	1800071e 	bne	r3,zero,46fb0 <strlen+0x74>
   46f94:	11400117 	ldw	r5,4(r2)
   46f98:	10800104 	addi	r2,r2,4
   46f9c:	29c7883a 	add	r3,r5,r7
   46fa0:	014a303a 	nor	r5,zero,r5
   46fa4:	1946703a 	and	r3,r3,r5
   46fa8:	1986703a 	and	r3,r3,r6
   46fac:	183ff926 	beq	r3,zero,46f94 <strlen+0x58>
   46fb0:	10c00007 	ldb	r3,0(r2)
   46fb4:	183fea26 	beq	r3,zero,46f60 <strlen+0x24>
   46fb8:	10c00047 	ldb	r3,1(r2)
   46fbc:	10800044 	addi	r2,r2,1
   46fc0:	183fe726 	beq	r3,zero,46f60 <strlen+0x24>
   46fc4:	10c00047 	ldb	r3,1(r2)
   46fc8:	10800044 	addi	r2,r2,1
   46fcc:	183ffa1e 	bne	r3,zero,46fb8 <strlen+0x7c>
   46fd0:	003fe306 	br	46f60 <strlen+0x24>

00046fd4 <___vfprintf_internal_r>:
   46fd4:	deffbf04 	addi	sp,sp,-260
   46fd8:	dfc04015 	stw	ra,256(sp)
   46fdc:	dd803d15 	stw	r22,244(sp)
   46fe0:	dcc03a15 	stw	r19,232(sp)
   46fe4:	dc803915 	stw	r18,228(sp)
   46fe8:	2027883a 	mov	r19,r4
   46fec:	2825883a 	mov	r18,r5
   46ff0:	302d883a 	mov	r22,r6
   46ff4:	d9c00615 	stw	r7,24(sp)
   46ff8:	df003f15 	stw	fp,252(sp)
   46ffc:	ddc03e15 	stw	r23,248(sp)
   47000:	dd403c15 	stw	r21,240(sp)
   47004:	dd003b15 	stw	r20,236(sp)
   47008:	dc403815 	stw	r17,224(sp)
   4700c:	dc003715 	stw	r16,220(sp)
   47010:	004bc280 	call	4bc28 <_localeconv_r>
   47014:	10800017 	ldw	r2,0(r2)
   47018:	1009883a 	mov	r4,r2
   4701c:	d8800d15 	stw	r2,52(sp)
   47020:	0046f3c0 	call	46f3c <strlen>
   47024:	d8800b15 	stw	r2,44(sp)
   47028:	98000226 	beq	r19,zero,47034 <___vfprintf_internal_r+0x60>
   4702c:	98800e17 	ldw	r2,56(r19)
   47030:	1001de26 	beq	r2,zero,477ac <___vfprintf_internal_r+0x7d8>
   47034:	9080030b 	ldhu	r2,12(r18)
   47038:	10c8000c 	andi	r3,r2,8192
   4703c:	1800061e 	bne	r3,zero,47058 <___vfprintf_internal_r+0x84>
   47040:	90c01917 	ldw	r3,100(r18)
   47044:	0137ffc4 	movi	r4,-8193
   47048:	10880014 	ori	r2,r2,8192
   4704c:	1906703a 	and	r3,r3,r4
   47050:	9080030d 	sth	r2,12(r18)
   47054:	90c01915 	stw	r3,100(r18)
   47058:	10c0020c 	andi	r3,r2,8
   4705c:	1800fa26 	beq	r3,zero,47448 <___vfprintf_internal_r+0x474>
   47060:	90c00417 	ldw	r3,16(r18)
   47064:	1800f826 	beq	r3,zero,47448 <___vfprintf_internal_r+0x474>
   47068:	1080068c 	andi	r2,r2,26
   4706c:	10800298 	cmpnei	r2,r2,10
   47070:	1000fd26 	beq	r2,zero,47468 <___vfprintf_internal_r+0x494>
   47074:	d8802704 	addi	r2,sp,156
   47078:	b02f883a 	mov	r23,r22
   4707c:	d8801a15 	stw	r2,104(sp)
   47080:	d8001c15 	stw	zero,112(sp)
   47084:	d8001b15 	stw	zero,108(sp)
   47088:	d8000815 	stw	zero,32(sp)
   4708c:	d8000915 	stw	zero,36(sp)
   47090:	d8000a15 	stw	zero,40(sp)
   47094:	d8000c15 	stw	zero,48(sp)
   47098:	d8001015 	stw	zero,64(sp)
   4709c:	d8000515 	stw	zero,20(sp)
   470a0:	102d883a 	mov	r22,r2
   470a4:	b8800007 	ldb	r2,0(r23)
   470a8:	1000d526 	beq	r2,zero,47400 <___vfprintf_internal_r+0x42c>
   470ac:	b821883a 	mov	r16,r23
   470b0:	00000306 	br	470c0 <___vfprintf_internal_r+0xec>
   470b4:	80800047 	ldb	r2,1(r16)
   470b8:	84000044 	addi	r16,r16,1
   470bc:	10012026 	beq	r2,zero,47540 <___vfprintf_internal_r+0x56c>
   470c0:	10800958 	cmpnei	r2,r2,37
   470c4:	103ffb1e 	bne	r2,zero,470b4 <___vfprintf_internal_r+0xe0>
   470c8:	85e3c83a 	sub	r17,r16,r23
   470cc:	85c11e1e 	bne	r16,r23,47548 <___vfprintf_internal_r+0x574>
   470d0:	80800003 	ldbu	r2,0(r16)
   470d4:	10803fcc 	andi	r2,r2,255
   470d8:	1080201c 	xori	r2,r2,128
   470dc:	10bfe004 	addi	r2,r2,-128
   470e0:	1000c726 	beq	r2,zero,47400 <___vfprintf_internal_r+0x42c>
   470e4:	82c00047 	ldb	r11,1(r16)
   470e8:	85c00044 	addi	r23,r16,1
   470ec:	d8001345 	stb	zero,77(sp)
   470f0:	0009883a 	mov	r4,zero
   470f4:	000b883a 	mov	r5,zero
   470f8:	023fffc4 	movi	r8,-1
   470fc:	0021883a 	mov	r16,zero
   47100:	0019883a 	mov	r12,zero
   47104:	bdc00044 	addi	r23,r23,1
   47108:	5839883a 	mov	fp,r11
   4710c:	e0bff804 	addi	r2,fp,-32
   47110:	10c01668 	cmpgeui	r3,r2,89
   47114:	18006a1e 	bne	r3,zero,472c0 <___vfprintf_internal_r+0x2ec>
   47118:	100490ba 	slli	r2,r2,2
   4711c:	00c00134 	movhi	r3,4
   47120:	10c7883a 	add	r3,r2,r3
   47124:	189c4b17 	ldw	r2,28972(r3)
   47128:	1000683a 	jmp	r2
   4712c:	000479cc 	andi	zero,zero,4583
   47130:	000472c0 	call	472c <__reset-0x3b8d4>
   47134:	000472c0 	call	472c <__reset-0x3b8d4>
   47138:	000479c0 	call	479c <__reset-0x3b864>
   4713c:	000472c0 	call	472c <__reset-0x3b8d4>
   47140:	000472c0 	call	472c <__reset-0x3b8d4>
   47144:	000472c0 	call	472c <__reset-0x3b8d4>
   47148:	000472c0 	call	472c <__reset-0x3b8d4>
   4714c:	000472c0 	call	472c <__reset-0x3b8d4>
   47150:	000472c0 	call	472c <__reset-0x3b8d4>
   47154:	00047850 	cmplti	zero,zero,4577
   47158:	000479b0 	cmpltui	zero,zero,4582
   4715c:	000472c0 	call	472c <__reset-0x3b8d4>
   47160:	00047868 	cmpgeui	zero,zero,4577
   47164:	00047874 	movhi	zero,4577
   47168:	000472c0 	call	472c <__reset-0x3b8d4>
   4716c:	000479a4 	muli	zero,zero,4582
   47170:	00047290 	cmplti	zero,zero,4554
   47174:	00047290 	cmplti	zero,zero,4554
   47178:	00047290 	cmplti	zero,zero,4554
   4717c:	00047290 	cmplti	zero,zero,4554
   47180:	00047290 	cmplti	zero,zero,4554
   47184:	00047290 	cmplti	zero,zero,4554
   47188:	00047290 	cmplti	zero,zero,4554
   4718c:	00047290 	cmplti	zero,zero,4554
   47190:	00047290 	cmplti	zero,zero,4554
   47194:	000472c0 	call	472c <__reset-0x3b8d4>
   47198:	000472c0 	call	472c <__reset-0x3b8d4>
   4719c:	000472c0 	call	472c <__reset-0x3b8d4>
   471a0:	000472c0 	call	472c <__reset-0x3b8d4>
   471a4:	000472c0 	call	472c <__reset-0x3b8d4>
   471a8:	000472c0 	call	472c <__reset-0x3b8d4>
   471ac:	000472c0 	call	472c <__reset-0x3b8d4>
   471b0:	000472c0 	call	472c <__reset-0x3b8d4>
   471b4:	000472c0 	call	472c <__reset-0x3b8d4>
   471b8:	000472c0 	call	472c <__reset-0x3b8d4>
   471bc:	000478b8 	rdprs	zero,zero,4578
   471c0:	000475a4 	muli	zero,zero,4566
   471c4:	000472c0 	call	472c <__reset-0x3b8d4>
   471c8:	000475a4 	muli	zero,zero,4566
   471cc:	000472c0 	call	472c <__reset-0x3b8d4>
   471d0:	000472c0 	call	472c <__reset-0x3b8d4>
   471d4:	000472c0 	call	472c <__reset-0x3b8d4>
   471d8:	000472c0 	call	472c <__reset-0x3b8d4>
   471dc:	00047b4c 	andi	zero,zero,4589
   471e0:	000472c0 	call	472c <__reset-0x3b8d4>
   471e4:	000472c0 	call	472c <__reset-0x3b8d4>
   471e8:	000474d8 	cmpnei	zero,zero,4563
   471ec:	000472c0 	call	472c <__reset-0x3b8d4>
   471f0:	000472c0 	call	472c <__reset-0x3b8d4>
   471f4:	000472c0 	call	472c <__reset-0x3b8d4>
   471f8:	000472c0 	call	472c <__reset-0x3b8d4>
   471fc:	000472c0 	call	472c <__reset-0x3b8d4>
   47200:	000474b0 	cmpltui	zero,zero,4562
   47204:	000472c0 	call	472c <__reset-0x3b8d4>
   47208:	000472c0 	call	472c <__reset-0x3b8d4>
   4720c:	00047b8c 	andi	zero,zero,4590
   47210:	000472c0 	call	472c <__reset-0x3b8d4>
   47214:	000472c0 	call	472c <__reset-0x3b8d4>
   47218:	000472c0 	call	472c <__reset-0x3b8d4>
   4721c:	000472c0 	call	472c <__reset-0x3b8d4>
   47220:	000472c0 	call	472c <__reset-0x3b8d4>
   47224:	000472c0 	call	472c <__reset-0x3b8d4>
   47228:	000472c0 	call	472c <__reset-0x3b8d4>
   4722c:	000472c0 	call	472c <__reset-0x3b8d4>
   47230:	000472c0 	call	472c <__reset-0x3b8d4>
   47234:	000472c0 	call	472c <__reset-0x3b8d4>
   47238:	00047b64 	muli	zero,zero,4589
   4723c:	000477b8 	rdprs	zero,zero,4574
   47240:	000475a4 	muli	zero,zero,4566
   47244:	000475a4 	muli	zero,zero,4566
   47248:	000475a4 	muli	zero,zero,4566
   4724c:	00047b58 	cmpnei	zero,zero,4589
   47250:	000477b8 	rdprs	zero,zero,4574
   47254:	000472c0 	call	472c <__reset-0x3b8d4>
   47258:	000472c0 	call	472c <__reset-0x3b8d4>
   4725c:	000479f8 	rdprs	zero,zero,4583
   47260:	000472c0 	call	472c <__reset-0x3b8d4>
   47264:	00047b0c 	andi	zero,zero,4588
   47268:	000474dc 	xori	zero,zero,4563
   4726c:	00047acc 	andi	zero,zero,4587
   47270:	00047ac0 	call	47ac <__reset-0x3b854>
   47274:	000472c0 	call	472c <__reset-0x3b8d4>
   47278:	00047a68 	cmpgeui	zero,zero,4585
   4727c:	000472c0 	call	472c <__reset-0x3b8d4>
   47280:	000474b4 	movhi	zero,4562
   47284:	000472c0 	call	472c <__reset-0x3b8d4>
   47288:	000472c0 	call	472c <__reset-0x3b8d4>
   4728c:	00047a20 	cmpeqi	zero,zero,4584
   47290:	0021883a 	mov	r16,zero
   47294:	e0bff404 	addi	r2,fp,-48
   47298:	bf000007 	ldb	fp,0(r23)
   4729c:	840002a4 	muli	r16,r16,10
   472a0:	bdc00044 	addi	r23,r23,1
   472a4:	1421883a 	add	r16,r2,r16
   472a8:	e0bff404 	addi	r2,fp,-48
   472ac:	10c002b0 	cmpltui	r3,r2,10
   472b0:	183ff91e 	bne	r3,zero,47298 <___vfprintf_internal_r+0x2c4>
   472b4:	e0bff804 	addi	r2,fp,-32
   472b8:	10c01668 	cmpgeui	r3,r2,89
   472bc:	183f9626 	beq	r3,zero,47118 <___vfprintf_internal_r+0x144>
   472c0:	21003fcc 	andi	r4,r4,255
   472c4:	2006541e 	bne	r4,zero,48c18 <___vfprintf_internal_r+0x1c44>
   472c8:	e0004d26 	beq	fp,zero,47400 <___vfprintf_internal_r+0x42c>
   472cc:	df001d05 	stb	fp,116(sp)
   472d0:	d8001345 	stb	zero,77(sp)
   472d4:	05000044 	movi	r20,1
   472d8:	05400044 	movi	r21,1
   472dc:	dc401d04 	addi	r17,sp,116
   472e0:	db000415 	stw	r12,16(sp)
   472e4:	0011883a 	mov	r8,zero
   472e8:	d8000715 	stw	zero,28(sp)
   472ec:	d8800417 	ldw	r2,16(sp)
   472f0:	1380008c 	andi	r14,r2,2
   472f4:	70000126 	beq	r14,zero,472fc <___vfprintf_internal_r+0x328>
   472f8:	a5000084 	addi	r20,r20,2
   472fc:	d8800417 	ldw	r2,16(sp)
   47300:	d8c01c17 	ldw	r3,112(sp)
   47304:	1340210c 	andi	r13,r2,132
   47308:	6800021e 	bne	r13,zero,47314 <___vfprintf_internal_r+0x340>
   4730c:	850fc83a 	sub	r7,r16,r20
   47310:	01c36816 	blt	zero,r7,480b4 <___vfprintf_internal_r+0x10e0>
   47314:	d8801347 	ldb	r2,77(sp)
   47318:	10000c26 	beq	r2,zero,4734c <___vfprintf_internal_r+0x378>
   4731c:	d8801b17 	ldw	r2,108(sp)
   47320:	d9001344 	addi	r4,sp,77
   47324:	18c00044 	addi	r3,r3,1
   47328:	10800044 	addi	r2,r2,1
   4732c:	b1000015 	stw	r4,0(r22)
   47330:	01000044 	movi	r4,1
   47334:	d8801b15 	stw	r2,108(sp)
   47338:	b1000115 	stw	r4,4(r22)
   4733c:	d8c01c15 	stw	r3,112(sp)
   47340:	10800208 	cmpgei	r2,r2,8
   47344:	10039c1e 	bne	r2,zero,481b8 <___vfprintf_internal_r+0x11e4>
   47348:	b5800204 	addi	r22,r22,8
   4734c:	70000c26 	beq	r14,zero,47380 <___vfprintf_internal_r+0x3ac>
   47350:	d8801b17 	ldw	r2,108(sp)
   47354:	d9001384 	addi	r4,sp,78
   47358:	18c00084 	addi	r3,r3,2
   4735c:	10800044 	addi	r2,r2,1
   47360:	b1000015 	stw	r4,0(r22)
   47364:	01000084 	movi	r4,2
   47368:	d8801b15 	stw	r2,108(sp)
   4736c:	b1000115 	stw	r4,4(r22)
   47370:	d8c01c15 	stw	r3,112(sp)
   47374:	10800208 	cmpgei	r2,r2,8
   47378:	10039d1e 	bne	r2,zero,481f0 <___vfprintf_internal_r+0x121c>
   4737c:	b5800204 	addi	r22,r22,8
   47380:	6b402018 	cmpnei	r13,r13,128
   47384:	68025926 	beq	r13,zero,47cec <___vfprintf_internal_r+0xd18>
   47388:	4551c83a 	sub	r8,r8,r21
   4738c:	02029116 	blt	zero,r8,47dd4 <___vfprintf_internal_r+0xe00>
   47390:	d8800417 	ldw	r2,16(sp)
   47394:	1080400c 	andi	r2,r2,256
   47398:	10020e1e 	bne	r2,zero,47bd4 <___vfprintf_internal_r+0xc00>
   4739c:	d8801b17 	ldw	r2,108(sp)
   473a0:	1d47883a 	add	r3,r3,r21
   473a4:	b4400015 	stw	r17,0(r22)
   473a8:	10800044 	addi	r2,r2,1
   473ac:	b5400115 	stw	r21,4(r22)
   473b0:	d8801b15 	stw	r2,108(sp)
   473b4:	d8c01c15 	stw	r3,112(sp)
   473b8:	10800208 	cmpgei	r2,r2,8
   473bc:	1002fa1e 	bne	r2,zero,47fa8 <___vfprintf_internal_r+0xfd4>
   473c0:	b5800204 	addi	r22,r22,8
   473c4:	d8800417 	ldw	r2,16(sp)
   473c8:	1440010c 	andi	r17,r2,4
   473cc:	88000226 	beq	r17,zero,473d8 <___vfprintf_internal_r+0x404>
   473d0:	8523c83a 	sub	r17,r16,r20
   473d4:	0440c616 	blt	zero,r17,476f0 <___vfprintf_internal_r+0x71c>
   473d8:	8500010e 	bge	r16,r20,473e0 <___vfprintf_internal_r+0x40c>
   473dc:	a021883a 	mov	r16,r20
   473e0:	d8800517 	ldw	r2,20(sp)
   473e4:	1405883a 	add	r2,r2,r16
   473e8:	d8800515 	stw	r2,20(sp)
   473ec:	1802c01e 	bne	r3,zero,47ef0 <___vfprintf_internal_r+0xf1c>
   473f0:	b8800007 	ldb	r2,0(r23)
   473f4:	d8001b15 	stw	zero,108(sp)
   473f8:	dd802704 	addi	r22,sp,156
   473fc:	103f2b1e 	bne	r2,zero,470ac <___vfprintf_internal_r+0xd8>
   47400:	d8801c17 	ldw	r2,112(sp)
   47404:	1005ff1e 	bne	r2,zero,48c04 <___vfprintf_internal_r+0x1c30>
   47408:	9080030b 	ldhu	r2,12(r18)
   4740c:	1080100c 	andi	r2,r2,64
   47410:	1006971e 	bne	r2,zero,48e70 <___vfprintf_internal_r+0x1e9c>
   47414:	d8800517 	ldw	r2,20(sp)
   47418:	dfc04017 	ldw	ra,256(sp)
   4741c:	df003f17 	ldw	fp,252(sp)
   47420:	ddc03e17 	ldw	r23,248(sp)
   47424:	dd803d17 	ldw	r22,244(sp)
   47428:	dd403c17 	ldw	r21,240(sp)
   4742c:	dd003b17 	ldw	r20,236(sp)
   47430:	dcc03a17 	ldw	r19,232(sp)
   47434:	dc803917 	ldw	r18,228(sp)
   47438:	dc403817 	ldw	r17,224(sp)
   4743c:	dc003717 	ldw	r16,220(sp)
   47440:	dec04104 	addi	sp,sp,260
   47444:	f800283a 	ret
   47448:	900b883a 	mov	r5,r18
   4744c:	9809883a 	mov	r4,r19
   47450:	00490c00 	call	490c0 <__swsetup_r>
   47454:	1006861e 	bne	r2,zero,48e70 <___vfprintf_internal_r+0x1e9c>
   47458:	9080030b 	ldhu	r2,12(r18)
   4745c:	1080068c 	andi	r2,r2,26
   47460:	10800298 	cmpnei	r2,r2,10
   47464:	103f031e 	bne	r2,zero,47074 <___vfprintf_internal_r+0xa0>
   47468:	9080038f 	ldh	r2,14(r18)
   4746c:	103f0116 	blt	r2,zero,47074 <___vfprintf_internal_r+0xa0>
   47470:	d9c00617 	ldw	r7,24(sp)
   47474:	b00d883a 	mov	r6,r22
   47478:	900b883a 	mov	r5,r18
   4747c:	9809883a 	mov	r4,r19
   47480:	dfc04017 	ldw	ra,256(sp)
   47484:	df003f17 	ldw	fp,252(sp)
   47488:	ddc03e17 	ldw	r23,248(sp)
   4748c:	dd803d17 	ldw	r22,244(sp)
   47490:	dd403c17 	ldw	r21,240(sp)
   47494:	dd003b17 	ldw	r20,236(sp)
   47498:	dcc03a17 	ldw	r19,232(sp)
   4749c:	dc803917 	ldw	r18,228(sp)
   474a0:	dc403817 	ldw	r17,224(sp)
   474a4:	dc003717 	ldw	r16,220(sp)
   474a8:	dec04104 	addi	sp,sp,260
   474ac:	00490001 	jmpi	49000 <__sbprintf>
   474b0:	63000414 	ori	r12,r12,16
   474b4:	6080080c 	andi	r2,r12,32
   474b8:	10008126 	beq	r2,zero,476c0 <___vfprintf_internal_r+0x6ec>
   474bc:	d8c00617 	ldw	r3,24(sp)
   474c0:	00800044 	movi	r2,1
   474c4:	1d000017 	ldw	r20,0(r3)
   474c8:	1d400117 	ldw	r21,4(r3)
   474cc:	18c00204 	addi	r3,r3,8
   474d0:	d8c00615 	stw	r3,24(sp)
   474d4:	00000906 	br	474fc <___vfprintf_internal_r+0x528>
   474d8:	63000414 	ori	r12,r12,16
   474dc:	6080080c 	andi	r2,r12,32
   474e0:	10006b26 	beq	r2,zero,47690 <___vfprintf_internal_r+0x6bc>
   474e4:	d8c00617 	ldw	r3,24(sp)
   474e8:	0005883a 	mov	r2,zero
   474ec:	1d000017 	ldw	r20,0(r3)
   474f0:	1d400117 	ldw	r21,4(r3)
   474f4:	18c00204 	addi	r3,r3,8
   474f8:	d8c00615 	stw	r3,24(sp)
   474fc:	001b883a 	mov	r13,zero
   47500:	db401345 	stb	r13,77(sp)
   47504:	40ffffe0 	cmpeqi	r3,r8,-1
   47508:	1801071e 	bne	r3,zero,47928 <___vfprintf_internal_r+0x954>
   4750c:	047fdfc4 	movi	r17,-129
   47510:	6448703a 	and	r4,r12,r17
   47514:	a546b03a 	or	r3,r20,r21
   47518:	d9000415 	stw	r4,16(sp)
   4751c:	1802e31e 	bne	r3,zero,480ac <___vfprintf_internal_r+0x10d8>
   47520:	40025d1e 	bne	r8,zero,47e98 <___vfprintf_internal_r+0xec4>
   47524:	1003ab1e 	bne	r2,zero,483d4 <___vfprintf_internal_r+0x1400>
   47528:	6540004c 	andi	r21,r12,1
   4752c:	a803e326 	beq	r21,zero,484bc <___vfprintf_internal_r+0x14e8>
   47530:	00800c04 	movi	r2,48
   47534:	d88026c5 	stb	r2,155(sp)
   47538:	dc4026c4 	addi	r17,sp,155
   4753c:	0000ba06 	br	47828 <___vfprintf_internal_r+0x854>
   47540:	85e3c83a 	sub	r17,r16,r23
   47544:	85ffae26 	beq	r16,r23,47400 <___vfprintf_internal_r+0x42c>
   47548:	d8c01c17 	ldw	r3,112(sp)
   4754c:	d8801b17 	ldw	r2,108(sp)
   47550:	b5c00015 	stw	r23,0(r22)
   47554:	1c47883a 	add	r3,r3,r17
   47558:	10800044 	addi	r2,r2,1
   4755c:	d8801b15 	stw	r2,108(sp)
   47560:	b4400115 	stw	r17,4(r22)
   47564:	d8c01c15 	stw	r3,112(sp)
   47568:	10800208 	cmpgei	r2,r2,8
   4756c:	1000061e 	bne	r2,zero,47588 <___vfprintf_internal_r+0x5b4>
   47570:	b5800204 	addi	r22,r22,8
   47574:	d8c00517 	ldw	r3,20(sp)
   47578:	80800003 	ldbu	r2,0(r16)
   4757c:	1c47883a 	add	r3,r3,r17
   47580:	d8c00515 	stw	r3,20(sp)
   47584:	003ed306 	br	470d4 <___vfprintf_internal_r+0x100>
   47588:	d9801a04 	addi	r6,sp,104
   4758c:	900b883a 	mov	r5,r18
   47590:	9809883a 	mov	r4,r19
   47594:	004e5400 	call	4e540 <__sprint_r>
   47598:	103f9b1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   4759c:	dd802704 	addi	r22,sp,156
   475a0:	003ff406 	br	47574 <___vfprintf_internal_r+0x5a0>
   475a4:	21003fcc 	andi	r4,r4,255
   475a8:	2006201e 	bne	r4,zero,48e2c <___vfprintf_internal_r+0x1e58>
   475ac:	d8c00617 	ldw	r3,24(sp)
   475b0:	6080020c 	andi	r2,r12,8
   475b4:	19000204 	addi	r4,r3,8
   475b8:	d9000e15 	stw	r4,56(sp)
   475bc:	1003c11e 	bne	r2,zero,484c4 <___vfprintf_internal_r+0x14f0>
   475c0:	d8800617 	ldw	r2,24(sp)
   475c4:	10c00017 	ldw	r3,0(r2)
   475c8:	10800117 	ldw	r2,4(r2)
   475cc:	d8c00915 	stw	r3,36(sp)
   475d0:	d8800a15 	stw	r2,40(sp)
   475d4:	dd400a17 	ldw	r21,40(sp)
   475d8:	dd000917 	ldw	r20,36(sp)
   475dc:	00a00034 	movhi	r2,32768
   475e0:	10bfffc4 	addi	r2,r2,-1
   475e4:	a8a2703a 	and	r17,r21,r2
   475e8:	01dffc34 	movhi	r7,32752
   475ec:	01bfffc4 	movi	r6,-1
   475f0:	39ffffc4 	addi	r7,r7,-1
   475f4:	a009883a 	mov	r4,r20
   475f8:	880b883a 	mov	r5,r17
   475fc:	da000615 	stw	r8,24(sp)
   47600:	db000415 	stw	r12,16(sp)
   47604:	00467c80 	call	467c8 <__unorddf2>
   47608:	db000417 	ldw	r12,16(sp)
   4760c:	da000617 	ldw	r8,24(sp)
   47610:	10044b1e 	bne	r2,zero,48740 <___vfprintf_internal_r+0x176c>
   47614:	01dffc34 	movhi	r7,32752
   47618:	01bfffc4 	movi	r6,-1
   4761c:	39ffffc4 	addi	r7,r7,-1
   47620:	a009883a 	mov	r4,r20
   47624:	880b883a 	mov	r5,r17
   47628:	00456f80 	call	456f8 <__ledf2>
   4762c:	db000417 	ldw	r12,16(sp)
   47630:	da000617 	ldw	r8,24(sp)
   47634:	0084420e 	bge	zero,r2,48740 <___vfprintf_internal_r+0x176c>
   47638:	000d883a 	mov	r6,zero
   4763c:	000f883a 	mov	r7,zero
   47640:	a009883a 	mov	r4,r20
   47644:	a80b883a 	mov	r5,r21
   47648:	00456f80 	call	456f8 <__ledf2>
   4764c:	db000417 	ldw	r12,16(sp)
   47650:	10055916 	blt	r2,zero,48bb8 <___vfprintf_internal_r+0x1be4>
   47654:	db401343 	ldbu	r13,77(sp)
   47658:	e0801210 	cmplti	r2,fp,72
   4765c:	1005471e 	bne	r2,zero,48b7c <___vfprintf_internal_r+0x1ba8>
   47660:	04400174 	movhi	r17,5
   47664:	8c4f8904 	addi	r17,r17,15908
   47668:	00bfdfc4 	movi	r2,-129
   4766c:	6084703a 	and	r2,r12,r2
   47670:	d8800415 	stw	r2,16(sp)
   47674:	d8800e17 	ldw	r2,56(sp)
   47678:	050000c4 	movi	r20,3
   4767c:	054000c4 	movi	r21,3
   47680:	d8800615 	stw	r2,24(sp)
   47684:	0011883a 	mov	r8,zero
   47688:	d8000715 	stw	zero,28(sp)
   4768c:	00006a06 	br	47838 <___vfprintf_internal_r+0x864>
   47690:	d8c00617 	ldw	r3,24(sp)
   47694:	6080040c 	andi	r2,r12,16
   47698:	1d000017 	ldw	r20,0(r3)
   4769c:	18c00104 	addi	r3,r3,4
   476a0:	1000031e 	bne	r2,zero,476b0 <___vfprintf_internal_r+0x6dc>
   476a4:	6080100c 	andi	r2,r12,64
   476a8:	10000126 	beq	r2,zero,476b0 <___vfprintf_internal_r+0x6dc>
   476ac:	a53fffcc 	andi	r20,r20,65535
   476b0:	002b883a 	mov	r21,zero
   476b4:	d8c00615 	stw	r3,24(sp)
   476b8:	0005883a 	mov	r2,zero
   476bc:	003f8f06 	br	474fc <___vfprintf_internal_r+0x528>
   476c0:	d8c00617 	ldw	r3,24(sp)
   476c4:	6080040c 	andi	r2,r12,16
   476c8:	1d000017 	ldw	r20,0(r3)
   476cc:	18c00104 	addi	r3,r3,4
   476d0:	1000031e 	bne	r2,zero,476e0 <___vfprintf_internal_r+0x70c>
   476d4:	6080100c 	andi	r2,r12,64
   476d8:	10000126 	beq	r2,zero,476e0 <___vfprintf_internal_r+0x70c>
   476dc:	a53fffcc 	andi	r20,r20,65535
   476e0:	002b883a 	mov	r21,zero
   476e4:	d8c00615 	stw	r3,24(sp)
   476e8:	00800044 	movi	r2,1
   476ec:	003f8306 	br	474fc <___vfprintf_internal_r+0x528>
   476f0:	03000174 	movhi	r12,5
   476f4:	89000450 	cmplti	r4,r17,17
   476f8:	d8801b17 	ldw	r2,108(sp)
   476fc:	630f9d04 	addi	r12,r12,15988
   47700:	20001b1e 	bne	r4,zero,47770 <___vfprintf_internal_r+0x79c>
   47704:	05400404 	movi	r21,16
   47708:	6039883a 	mov	fp,r12
   4770c:	00000406 	br	47720 <___vfprintf_internal_r+0x74c>
   47710:	8c7ffc04 	addi	r17,r17,-16
   47714:	89000448 	cmpgei	r4,r17,17
   47718:	b5800204 	addi	r22,r22,8
   4771c:	20001326 	beq	r4,zero,4776c <___vfprintf_internal_r+0x798>
   47720:	10800044 	addi	r2,r2,1
   47724:	18c00404 	addi	r3,r3,16
   47728:	b7000015 	stw	fp,0(r22)
   4772c:	b5400115 	stw	r21,4(r22)
   47730:	d8c01c15 	stw	r3,112(sp)
   47734:	d8801b15 	stw	r2,108(sp)
   47738:	11000208 	cmpgei	r4,r2,8
   4773c:	203ff426 	beq	r4,zero,47710 <___vfprintf_internal_r+0x73c>
   47740:	d9801a04 	addi	r6,sp,104
   47744:	900b883a 	mov	r5,r18
   47748:	9809883a 	mov	r4,r19
   4774c:	004e5400 	call	4e540 <__sprint_r>
   47750:	103f2d1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   47754:	8c7ffc04 	addi	r17,r17,-16
   47758:	89000448 	cmpgei	r4,r17,17
   4775c:	d8c01c17 	ldw	r3,112(sp)
   47760:	d8801b17 	ldw	r2,108(sp)
   47764:	dd802704 	addi	r22,sp,156
   47768:	203fed1e 	bne	r4,zero,47720 <___vfprintf_internal_r+0x74c>
   4776c:	e019883a 	mov	r12,fp
   47770:	10800044 	addi	r2,r2,1
   47774:	1c47883a 	add	r3,r3,r17
   47778:	d8801b15 	stw	r2,108(sp)
   4777c:	b3000015 	stw	r12,0(r22)
   47780:	b4400115 	stw	r17,4(r22)
   47784:	d8c01c15 	stw	r3,112(sp)
   47788:	10800210 	cmplti	r2,r2,8
   4778c:	103f121e 	bne	r2,zero,473d8 <___vfprintf_internal_r+0x404>
   47790:	d9801a04 	addi	r6,sp,104
   47794:	900b883a 	mov	r5,r18
   47798:	9809883a 	mov	r4,r19
   4779c:	004e5400 	call	4e540 <__sprint_r>
   477a0:	103f191e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   477a4:	d8c01c17 	ldw	r3,112(sp)
   477a8:	003f0b06 	br	473d8 <___vfprintf_internal_r+0x404>
   477ac:	9809883a 	mov	r4,r19
   477b0:	004b1c40 	call	4b1c4 <__sinit>
   477b4:	003e1f06 	br	47034 <___vfprintf_internal_r+0x60>
   477b8:	21003fcc 	andi	r4,r4,255
   477bc:	20059d1e 	bne	r4,zero,48e34 <___vfprintf_internal_r+0x1e60>
   477c0:	6080080c 	andi	r2,r12,32
   477c4:	10004126 	beq	r2,zero,478cc <___vfprintf_internal_r+0x8f8>
   477c8:	d8c00617 	ldw	r3,24(sp)
   477cc:	18800117 	ldw	r2,4(r3)
   477d0:	1d000017 	ldw	r20,0(r3)
   477d4:	18c00204 	addi	r3,r3,8
   477d8:	d8c00615 	stw	r3,24(sp)
   477dc:	102b883a 	mov	r21,r2
   477e0:	10004816 	blt	r2,zero,47904 <___vfprintf_internal_r+0x930>
   477e4:	40bfffd8 	cmpnei	r2,r8,-1
   477e8:	db401343 	ldbu	r13,77(sp)
   477ec:	10000626 	beq	r2,zero,47808 <___vfprintf_internal_r+0x834>
   477f0:	047fdfc4 	movi	r17,-129
   477f4:	6446703a 	and	r3,r12,r17
   477f8:	a544b03a 	or	r2,r20,r21
   477fc:	d8c00415 	stw	r3,16(sp)
   47800:	1002f326 	beq	r2,zero,483d0 <___vfprintf_internal_r+0x13fc>
   47804:	db000417 	ldw	r12,16(sp)
   47808:	a8037d1e 	bne	r21,zero,48600 <___vfprintf_internal_r+0x162c>
   4780c:	a08002a8 	cmpgeui	r2,r20,10
   47810:	10037b1e 	bne	r2,zero,48600 <___vfprintf_internal_r+0x162c>
   47814:	a5000c04 	addi	r20,r20,48
   47818:	dd0026c5 	stb	r20,155(sp)
   4781c:	db000415 	stw	r12,16(sp)
   47820:	05400044 	movi	r21,1
   47824:	dc4026c4 	addi	r17,sp,155
   47828:	a829883a 	mov	r20,r21
   4782c:	aa00010e 	bge	r21,r8,47834 <___vfprintf_internal_r+0x860>
   47830:	4029883a 	mov	r20,r8
   47834:	d8000715 	stw	zero,28(sp)
   47838:	6b403fcc 	andi	r13,r13,255
   4783c:	6b40201c 	xori	r13,r13,128
   47840:	6b7fe004 	addi	r13,r13,-128
   47844:	683ea926 	beq	r13,zero,472ec <___vfprintf_internal_r+0x318>
   47848:	a5000044 	addi	r20,r20,1
   4784c:	003ea706 	br	472ec <___vfprintf_internal_r+0x318>
   47850:	d8800617 	ldw	r2,24(sp)
   47854:	14000017 	ldw	r16,0(r2)
   47858:	10800104 	addi	r2,r2,4
   4785c:	8003140e 	bge	r16,zero,484b0 <___vfprintf_internal_r+0x14dc>
   47860:	0421c83a 	sub	r16,zero,r16
   47864:	d8800615 	stw	r2,24(sp)
   47868:	bac00007 	ldb	r11,0(r23)
   4786c:	63000114 	ori	r12,r12,4
   47870:	003e2406 	br	47104 <___vfprintf_internal_r+0x130>
   47874:	bf000007 	ldb	fp,0(r23)
   47878:	b8c00044 	addi	r3,r23,1
   4787c:	e0800aa0 	cmpeqi	r2,fp,42
   47880:	1005c91e 	bne	r2,zero,48fa8 <___vfprintf_internal_r+0x1fd4>
   47884:	e0bff404 	addi	r2,fp,-48
   47888:	118002b0 	cmpltui	r6,r2,10
   4788c:	182f883a 	mov	r23,r3
   47890:	0011883a 	mov	r8,zero
   47894:	303e1d26 	beq	r6,zero,4710c <___vfprintf_internal_r+0x138>
   47898:	bf000007 	ldb	fp,0(r23)
   4789c:	420002a4 	muli	r8,r8,10
   478a0:	bdc00044 	addi	r23,r23,1
   478a4:	4091883a 	add	r8,r8,r2
   478a8:	e0bff404 	addi	r2,fp,-48
   478ac:	10c002b0 	cmpltui	r3,r2,10
   478b0:	183ff91e 	bne	r3,zero,47898 <___vfprintf_internal_r+0x8c4>
   478b4:	003e1506 	br	4710c <___vfprintf_internal_r+0x138>
   478b8:	21003fcc 	andi	r4,r4,255
   478bc:	2005551e 	bne	r4,zero,48e14 <___vfprintf_internal_r+0x1e40>
   478c0:	63000414 	ori	r12,r12,16
   478c4:	6080080c 	andi	r2,r12,32
   478c8:	103fbf1e 	bne	r2,zero,477c8 <___vfprintf_internal_r+0x7f4>
   478cc:	d8c00617 	ldw	r3,24(sp)
   478d0:	6080040c 	andi	r2,r12,16
   478d4:	1d000017 	ldw	r20,0(r3)
   478d8:	18c00104 	addi	r3,r3,4
   478dc:	1002ea1e 	bne	r2,zero,48488 <___vfprintf_internal_r+0x14b4>
   478e0:	6080100c 	andi	r2,r12,64
   478e4:	1002e826 	beq	r2,zero,48488 <___vfprintf_internal_r+0x14b4>
   478e8:	a53fffcc 	andi	r20,r20,65535
   478ec:	a520001c 	xori	r20,r20,32768
   478f0:	a5200004 	addi	r20,r20,-32768
   478f4:	a02bd7fa 	srai	r21,r20,31
   478f8:	d8c00615 	stw	r3,24(sp)
   478fc:	a805883a 	mov	r2,r21
   47900:	103fb80e 	bge	r2,zero,477e4 <___vfprintf_internal_r+0x810>
   47904:	03400b44 	movi	r13,45
   47908:	a004c03a 	cmpne	r2,r20,zero
   4790c:	056bc83a 	sub	r21,zero,r21
   47910:	db401345 	stb	r13,77(sp)
   47914:	40ffffe0 	cmpeqi	r3,r8,-1
   47918:	a8abc83a 	sub	r21,r21,r2
   4791c:	0529c83a 	sub	r20,zero,r20
   47920:	00800044 	movi	r2,1
   47924:	183ef926 	beq	r3,zero,4750c <___vfprintf_internal_r+0x538>
   47928:	10c00060 	cmpeqi	r3,r2,1
   4792c:	183fb61e 	bne	r3,zero,47808 <___vfprintf_internal_r+0x834>
   47930:	108000a0 	cmpeqi	r2,r2,2
   47934:	10015d1e 	bne	r2,zero,47eac <___vfprintf_internal_r+0xed8>
   47938:	dc402704 	addi	r17,sp,156
   4793c:	a006d0fa 	srli	r3,r20,3
   47940:	a808977a 	slli	r4,r21,29
   47944:	a82ad0fa 	srli	r21,r21,3
   47948:	a50001cc 	andi	r20,r20,7
   4794c:	a0800c04 	addi	r2,r20,48
   47950:	20e8b03a 	or	r20,r4,r3
   47954:	88bfffc5 	stb	r2,-1(r17)
   47958:	a546b03a 	or	r3,r20,r21
   4795c:	880b883a 	mov	r5,r17
   47960:	8c7fffc4 	addi	r17,r17,-1
   47964:	183ff51e 	bne	r3,zero,4793c <___vfprintf_internal_r+0x968>
   47968:	60c0004c 	andi	r3,r12,1
   4796c:	18015c26 	beq	r3,zero,47ee0 <___vfprintf_internal_r+0xf0c>
   47970:	10803fcc 	andi	r2,r2,255
   47974:	1080201c 	xori	r2,r2,128
   47978:	10bfe004 	addi	r2,r2,-128
   4797c:	10800c18 	cmpnei	r2,r2,48
   47980:	10015726 	beq	r2,zero,47ee0 <___vfprintf_internal_r+0xf0c>
   47984:	00800c04 	movi	r2,48
   47988:	297fff84 	addi	r5,r5,-2
   4798c:	88bfffc5 	stb	r2,-1(r17)
   47990:	d8802704 	addi	r2,sp,156
   47994:	116bc83a 	sub	r21,r2,r5
   47998:	db000415 	stw	r12,16(sp)
   4799c:	2823883a 	mov	r17,r5
   479a0:	003fa106 	br	47828 <___vfprintf_internal_r+0x854>
   479a4:	bac00007 	ldb	r11,0(r23)
   479a8:	63002014 	ori	r12,r12,128
   479ac:	003dd506 	br	47104 <___vfprintf_internal_r+0x130>
   479b0:	bac00007 	ldb	r11,0(r23)
   479b4:	01000044 	movi	r4,1
   479b8:	01400ac4 	movi	r5,43
   479bc:	003dd106 	br	47104 <___vfprintf_internal_r+0x130>
   479c0:	bac00007 	ldb	r11,0(r23)
   479c4:	63000054 	ori	r12,r12,1
   479c8:	003dce06 	br	47104 <___vfprintf_internal_r+0x130>
   479cc:	28803fcc 	andi	r2,r5,255
   479d0:	1080201c 	xori	r2,r2,128
   479d4:	10bfe004 	addi	r2,r2,-128
   479d8:	bf000003 	ldbu	fp,0(r23)
   479dc:	10000c1e 	bne	r2,zero,47a10 <___vfprintf_internal_r+0xa3c>
   479e0:	e2c03fcc 	andi	r11,fp,255
   479e4:	5ac0201c 	xori	r11,r11,128
   479e8:	01000044 	movi	r4,1
   479ec:	01400804 	movi	r5,32
   479f0:	5affe004 	addi	r11,r11,-128
   479f4:	003dc306 	br	47104 <___vfprintf_internal_r+0x130>
   479f8:	bac00007 	ldb	r11,0(r23)
   479fc:	58801b18 	cmpnei	r2,r11,108
   47a00:	1002a91e 	bne	r2,zero,484a8 <___vfprintf_internal_r+0x14d4>
   47a04:	bf000043 	ldbu	fp,1(r23)
   47a08:	63000814 	ori	r12,r12,32
   47a0c:	bdc00044 	addi	r23,r23,1
   47a10:	e2c03fcc 	andi	r11,fp,255
   47a14:	5ac0201c 	xori	r11,r11,128
   47a18:	5affe004 	addi	r11,r11,-128
   47a1c:	003db906 	br	47104 <___vfprintf_internal_r+0x130>
   47a20:	21003fcc 	andi	r4,r4,255
   47a24:	2005051e 	bne	r4,zero,48e3c <___vfprintf_internal_r+0x1e68>
   47a28:	00800174 	movhi	r2,5
   47a2c:	108f9104 	addi	r2,r2,15940
   47a30:	d8800c15 	stw	r2,48(sp)
   47a34:	6080080c 	andi	r2,r12,32
   47a38:	10005b26 	beq	r2,zero,47ba8 <___vfprintf_internal_r+0xbd4>
   47a3c:	d8800617 	ldw	r2,24(sp)
   47a40:	15000017 	ldw	r20,0(r2)
   47a44:	15400117 	ldw	r21,4(r2)
   47a48:	10800204 	addi	r2,r2,8
   47a4c:	d8800615 	stw	r2,24(sp)
   47a50:	6080004c 	andi	r2,r12,1
   47a54:	10000226 	beq	r2,zero,47a60 <___vfprintf_internal_r+0xa8c>
   47a58:	a544b03a 	or	r2,r20,r21
   47a5c:	10029e1e 	bne	r2,zero,484d8 <___vfprintf_internal_r+0x1504>
   47a60:	00800084 	movi	r2,2
   47a64:	003ea506 	br	474fc <___vfprintf_internal_r+0x528>
   47a68:	d8800617 	ldw	r2,24(sp)
   47a6c:	d8001345 	stb	zero,77(sp)
   47a70:	14400017 	ldw	r17,0(r2)
   47a74:	10c00104 	addi	r3,r2,4
   47a78:	8802bb26 	beq	r17,zero,48568 <___vfprintf_internal_r+0x1594>
   47a7c:	40bfffe0 	cmpeqi	r2,r8,-1
   47a80:	1003c91e 	bne	r2,zero,489a8 <___vfprintf_internal_r+0x19d4>
   47a84:	400d883a 	mov	r6,r8
   47a88:	000b883a 	mov	r5,zero
   47a8c:	8809883a 	mov	r4,r17
   47a90:	d8c00715 	stw	r3,28(sp)
   47a94:	db000615 	stw	r12,24(sp)
   47a98:	da000415 	stw	r8,16(sp)
   47a9c:	004c6640 	call	4c664 <memchr>
   47aa0:	da000417 	ldw	r8,16(sp)
   47aa4:	db000617 	ldw	r12,24(sp)
   47aa8:	d8c00717 	ldw	r3,28(sp)
   47aac:	1004d526 	beq	r2,zero,48e04 <___vfprintf_internal_r+0x1e30>
   47ab0:	146bc83a 	sub	r21,r2,r17
   47ab4:	a829883a 	mov	r20,r21
   47ab8:	d8c00615 	stw	r3,24(sp)
   47abc:	003e0806 	br	472e0 <___vfprintf_internal_r+0x30c>
   47ac0:	bac00007 	ldb	r11,0(r23)
   47ac4:	63000814 	ori	r12,r12,32
   47ac8:	003d8e06 	br	47104 <___vfprintf_internal_r+0x130>
   47acc:	d8c00617 	ldw	r3,24(sp)
   47ad0:	00800c04 	movi	r2,48
   47ad4:	d8801385 	stb	r2,78(sp)
   47ad8:	00801e04 	movi	r2,120
   47adc:	01000174 	movhi	r4,5
   47ae0:	d88013c5 	stb	r2,79(sp)
   47ae4:	18800104 	addi	r2,r3,4
   47ae8:	d8800615 	stw	r2,24(sp)
   47aec:	208f9104 	addi	r2,r4,15940
   47af0:	d8800c15 	stw	r2,48(sp)
   47af4:	1d000017 	ldw	r20,0(r3)
   47af8:	002b883a 	mov	r21,zero
   47afc:	63000094 	ori	r12,r12,2
   47b00:	00800084 	movi	r2,2
   47b04:	07001e04 	movi	fp,120
   47b08:	003e7c06 	br	474fc <___vfprintf_internal_r+0x528>
   47b0c:	21003fcc 	andi	r4,r4,255
   47b10:	2004c41e 	bne	r4,zero,48e24 <___vfprintf_internal_r+0x1e50>
   47b14:	d9000617 	ldw	r4,24(sp)
   47b18:	6080080c 	andi	r2,r12,32
   47b1c:	20c00104 	addi	r3,r4,4
   47b20:	1002731e 	bne	r2,zero,484f0 <___vfprintf_internal_r+0x151c>
   47b24:	6080040c 	andi	r2,r12,16
   47b28:	1002dd1e 	bne	r2,zero,486a0 <___vfprintf_internal_r+0x16cc>
   47b2c:	6300100c 	andi	r12,r12,64
   47b30:	6002db26 	beq	r12,zero,486a0 <___vfprintf_internal_r+0x16cc>
   47b34:	d8800617 	ldw	r2,24(sp)
   47b38:	d8c00615 	stw	r3,24(sp)
   47b3c:	d8c00517 	ldw	r3,20(sp)
   47b40:	10800017 	ldw	r2,0(r2)
   47b44:	10c0000d 	sth	r3,0(r2)
   47b48:	003d5606 	br	470a4 <___vfprintf_internal_r+0xd0>
   47b4c:	bac00007 	ldb	r11,0(r23)
   47b50:	63000214 	ori	r12,r12,8
   47b54:	003d6b06 	br	47104 <___vfprintf_internal_r+0x130>
   47b58:	bac00007 	ldb	r11,0(r23)
   47b5c:	63001014 	ori	r12,r12,64
   47b60:	003d6806 	br	47104 <___vfprintf_internal_r+0x130>
   47b64:	d8c00617 	ldw	r3,24(sp)
   47b68:	d8001345 	stb	zero,77(sp)
   47b6c:	05000044 	movi	r20,1
   47b70:	18800017 	ldw	r2,0(r3)
   47b74:	18c00104 	addi	r3,r3,4
   47b78:	d8c00615 	stw	r3,24(sp)
   47b7c:	d8801d05 	stb	r2,116(sp)
   47b80:	05400044 	movi	r21,1
   47b84:	dc401d04 	addi	r17,sp,116
   47b88:	003dd506 	br	472e0 <___vfprintf_internal_r+0x30c>
   47b8c:	21003fcc 	andi	r4,r4,255
   47b90:	2004a21e 	bne	r4,zero,48e1c <___vfprintf_internal_r+0x1e48>
   47b94:	00800174 	movhi	r2,5
   47b98:	108f8c04 	addi	r2,r2,15920
   47b9c:	d8800c15 	stw	r2,48(sp)
   47ba0:	6080080c 	andi	r2,r12,32
   47ba4:	103fa51e 	bne	r2,zero,47a3c <___vfprintf_internal_r+0xa68>
   47ba8:	d8c00617 	ldw	r3,24(sp)
   47bac:	6080040c 	andi	r2,r12,16
   47bb0:	1d000017 	ldw	r20,0(r3)
   47bb4:	18c00104 	addi	r3,r3,4
   47bb8:	1002301e 	bne	r2,zero,4847c <___vfprintf_internal_r+0x14a8>
   47bbc:	6080100c 	andi	r2,r12,64
   47bc0:	10022e26 	beq	r2,zero,4847c <___vfprintf_internal_r+0x14a8>
   47bc4:	a53fffcc 	andi	r20,r20,65535
   47bc8:	002b883a 	mov	r21,zero
   47bcc:	d8c00615 	stw	r3,24(sp)
   47bd0:	003f9f06 	br	47a50 <___vfprintf_internal_r+0xa7c>
   47bd4:	e2c01990 	cmplti	r11,fp,102
   47bd8:	5800fb1e 	bne	r11,zero,47fc8 <___vfprintf_internal_r+0xff4>
   47bdc:	d9000917 	ldw	r4,36(sp)
   47be0:	d9400a17 	ldw	r5,40(sp)
   47be4:	000d883a 	mov	r6,zero
   47be8:	000f883a 	mov	r7,zero
   47bec:	d8c00e15 	stw	r3,56(sp)
   47bf0:	00455900 	call	45590 <__eqdf2>
   47bf4:	d8c00e17 	ldw	r3,56(sp)
   47bf8:	1001891e 	bne	r2,zero,48220 <___vfprintf_internal_r+0x124c>
   47bfc:	d8801b17 	ldw	r2,108(sp)
   47c00:	01000174 	movhi	r4,5
   47c04:	210f9804 	addi	r4,r4,15968
   47c08:	10800044 	addi	r2,r2,1
   47c0c:	18c00044 	addi	r3,r3,1
   47c10:	b1000015 	stw	r4,0(r22)
   47c14:	01000044 	movi	r4,1
   47c18:	d8801b15 	stw	r2,108(sp)
   47c1c:	b1000115 	stw	r4,4(r22)
   47c20:	d8c01c15 	stw	r3,112(sp)
   47c24:	10800208 	cmpgei	r2,r2,8
   47c28:	10034d1e 	bne	r2,zero,48960 <___vfprintf_internal_r+0x198c>
   47c2c:	b5800204 	addi	r22,r22,8
   47c30:	d8801417 	ldw	r2,80(sp)
   47c34:	d9000817 	ldw	r4,32(sp)
   47c38:	1102170e 	bge	r2,r4,48498 <___vfprintf_internal_r+0x14c4>
   47c3c:	d8800d17 	ldw	r2,52(sp)
   47c40:	d9000b17 	ldw	r4,44(sp)
   47c44:	b0800015 	stw	r2,0(r22)
   47c48:	d8801b17 	ldw	r2,108(sp)
   47c4c:	1907883a 	add	r3,r3,r4
   47c50:	b1000115 	stw	r4,4(r22)
   47c54:	10800044 	addi	r2,r2,1
   47c58:	d8801b15 	stw	r2,108(sp)
   47c5c:	d8c01c15 	stw	r3,112(sp)
   47c60:	10800208 	cmpgei	r2,r2,8
   47c64:	1002381e 	bne	r2,zero,48548 <___vfprintf_internal_r+0x1574>
   47c68:	b5800204 	addi	r22,r22,8
   47c6c:	d8800817 	ldw	r2,32(sp)
   47c70:	157fffc4 	addi	r21,r2,-1
   47c74:	057dd30e 	bge	zero,r21,473c4 <___vfprintf_internal_r+0x3f0>
   47c78:	01c00174 	movhi	r7,5
   47c7c:	a9000450 	cmplti	r4,r21,17
   47c80:	d8801b17 	ldw	r2,108(sp)
   47c84:	39cf9904 	addi	r7,r7,15972
   47c88:	2003311e 	bne	r4,zero,48950 <___vfprintf_internal_r+0x197c>
   47c8c:	07000404 	movi	fp,16
   47c90:	3823883a 	mov	r17,r7
   47c94:	00000406 	br	47ca8 <___vfprintf_internal_r+0xcd4>
   47c98:	b5800204 	addi	r22,r22,8
   47c9c:	ad7ffc04 	addi	r21,r21,-16
   47ca0:	a9000448 	cmpgei	r4,r21,17
   47ca4:	20032926 	beq	r4,zero,4894c <___vfprintf_internal_r+0x1978>
   47ca8:	10800044 	addi	r2,r2,1
   47cac:	18c00404 	addi	r3,r3,16
   47cb0:	b4400015 	stw	r17,0(r22)
   47cb4:	b7000115 	stw	fp,4(r22)
   47cb8:	d8c01c15 	stw	r3,112(sp)
   47cbc:	d8801b15 	stw	r2,108(sp)
   47cc0:	11000208 	cmpgei	r4,r2,8
   47cc4:	203ff426 	beq	r4,zero,47c98 <___vfprintf_internal_r+0xcc4>
   47cc8:	d9801a04 	addi	r6,sp,104
   47ccc:	900b883a 	mov	r5,r18
   47cd0:	9809883a 	mov	r4,r19
   47cd4:	004e5400 	call	4e540 <__sprint_r>
   47cd8:	103dcb1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   47cdc:	d8c01c17 	ldw	r3,112(sp)
   47ce0:	d8801b17 	ldw	r2,108(sp)
   47ce4:	dd802704 	addi	r22,sp,156
   47ce8:	003fec06 	br	47c9c <___vfprintf_internal_r+0xcc8>
   47cec:	8519c83a 	sub	r12,r16,r20
   47cf0:	033da50e 	bge	zero,r12,47388 <___vfprintf_internal_r+0x3b4>
   47cf4:	01c00174 	movhi	r7,5
   47cf8:	61000450 	cmplti	r4,r12,17
   47cfc:	d8801b17 	ldw	r2,108(sp)
   47d00:	39cf9904 	addi	r7,r7,15972
   47d04:	2000281e 	bne	r4,zero,47da8 <___vfprintf_internal_r+0xdd4>
   47d08:	dc400e15 	stw	r17,56(sp)
   47d0c:	dc000f15 	stw	r16,60(sp)
   47d10:	b009883a 	mov	r4,r22
   47d14:	03400404 	movi	r13,16
   47d18:	a02d883a 	mov	r22,r20
   47d1c:	6021883a 	mov	r16,r12
   47d20:	4029883a 	mov	r20,r8
   47d24:	3823883a 	mov	r17,r7
   47d28:	00000406 	br	47d3c <___vfprintf_internal_r+0xd68>
   47d2c:	843ffc04 	addi	r16,r16,-16
   47d30:	81400448 	cmpgei	r5,r16,17
   47d34:	21000204 	addi	r4,r4,8
   47d38:	28001426 	beq	r5,zero,47d8c <___vfprintf_internal_r+0xdb8>
   47d3c:	10800044 	addi	r2,r2,1
   47d40:	18c00404 	addi	r3,r3,16
   47d44:	24400015 	stw	r17,0(r4)
   47d48:	23400115 	stw	r13,4(r4)
   47d4c:	d8c01c15 	stw	r3,112(sp)
   47d50:	d8801b15 	stw	r2,108(sp)
   47d54:	11400208 	cmpgei	r5,r2,8
   47d58:	283ff426 	beq	r5,zero,47d2c <___vfprintf_internal_r+0xd58>
   47d5c:	d9801a04 	addi	r6,sp,104
   47d60:	900b883a 	mov	r5,r18
   47d64:	9809883a 	mov	r4,r19
   47d68:	004e5400 	call	4e540 <__sprint_r>
   47d6c:	103da61e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   47d70:	843ffc04 	addi	r16,r16,-16
   47d74:	81400448 	cmpgei	r5,r16,17
   47d78:	d8c01c17 	ldw	r3,112(sp)
   47d7c:	d8801b17 	ldw	r2,108(sp)
   47d80:	d9002704 	addi	r4,sp,156
   47d84:	03400404 	movi	r13,16
   47d88:	283fec1e 	bne	r5,zero,47d3c <___vfprintf_internal_r+0xd68>
   47d8c:	8019883a 	mov	r12,r16
   47d90:	880f883a 	mov	r7,r17
   47d94:	dc000f17 	ldw	r16,60(sp)
   47d98:	dc400e17 	ldw	r17,56(sp)
   47d9c:	a011883a 	mov	r8,r20
   47da0:	b029883a 	mov	r20,r22
   47da4:	202d883a 	mov	r22,r4
   47da8:	10800044 	addi	r2,r2,1
   47dac:	1b07883a 	add	r3,r3,r12
   47db0:	d8801b15 	stw	r2,108(sp)
   47db4:	b1c00015 	stw	r7,0(r22)
   47db8:	b3000115 	stw	r12,4(r22)
   47dbc:	d8c01c15 	stw	r3,112(sp)
   47dc0:	10800208 	cmpgei	r2,r2,8
   47dc4:	1002ee1e 	bne	r2,zero,48980 <___vfprintf_internal_r+0x19ac>
   47dc8:	4551c83a 	sub	r8,r8,r21
   47dcc:	b5800204 	addi	r22,r22,8
   47dd0:	023d6f0e 	bge	zero,r8,47390 <___vfprintf_internal_r+0x3bc>
   47dd4:	01c00174 	movhi	r7,5
   47dd8:	41000450 	cmplti	r4,r8,17
   47ddc:	d8801b17 	ldw	r2,108(sp)
   47de0:	39cf9904 	addi	r7,r7,15972
   47de4:	2000221e 	bne	r4,zero,47e70 <___vfprintf_internal_r+0xe9c>
   47de8:	dc400e15 	stw	r17,56(sp)
   47dec:	dc000f15 	stw	r16,60(sp)
   47df0:	03000404 	movi	r12,16
   47df4:	4021883a 	mov	r16,r8
   47df8:	3823883a 	mov	r17,r7
   47dfc:	00000406 	br	47e10 <___vfprintf_internal_r+0xe3c>
   47e00:	843ffc04 	addi	r16,r16,-16
   47e04:	81000448 	cmpgei	r4,r16,17
   47e08:	b5800204 	addi	r22,r22,8
   47e0c:	20001426 	beq	r4,zero,47e60 <___vfprintf_internal_r+0xe8c>
   47e10:	10800044 	addi	r2,r2,1
   47e14:	18c00404 	addi	r3,r3,16
   47e18:	b4400015 	stw	r17,0(r22)
   47e1c:	b3000115 	stw	r12,4(r22)
   47e20:	d8c01c15 	stw	r3,112(sp)
   47e24:	d8801b15 	stw	r2,108(sp)
   47e28:	11000208 	cmpgei	r4,r2,8
   47e2c:	203ff426 	beq	r4,zero,47e00 <___vfprintf_internal_r+0xe2c>
   47e30:	d9801a04 	addi	r6,sp,104
   47e34:	900b883a 	mov	r5,r18
   47e38:	9809883a 	mov	r4,r19
   47e3c:	004e5400 	call	4e540 <__sprint_r>
   47e40:	103d711e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   47e44:	843ffc04 	addi	r16,r16,-16
   47e48:	81000448 	cmpgei	r4,r16,17
   47e4c:	d8c01c17 	ldw	r3,112(sp)
   47e50:	d8801b17 	ldw	r2,108(sp)
   47e54:	dd802704 	addi	r22,sp,156
   47e58:	03000404 	movi	r12,16
   47e5c:	203fec1e 	bne	r4,zero,47e10 <___vfprintf_internal_r+0xe3c>
   47e60:	8011883a 	mov	r8,r16
   47e64:	880f883a 	mov	r7,r17
   47e68:	dc000f17 	ldw	r16,60(sp)
   47e6c:	dc400e17 	ldw	r17,56(sp)
   47e70:	10800044 	addi	r2,r2,1
   47e74:	1a07883a 	add	r3,r3,r8
   47e78:	d8801b15 	stw	r2,108(sp)
   47e7c:	b1c00015 	stw	r7,0(r22)
   47e80:	b2000115 	stw	r8,4(r22)
   47e84:	d8c01c15 	stw	r3,112(sp)
   47e88:	10800208 	cmpgei	r2,r2,8
   47e8c:	1001731e 	bne	r2,zero,4845c <___vfprintf_internal_r+0x1488>
   47e90:	b5800204 	addi	r22,r22,8
   47e94:	003d3e06 	br	47390 <___vfprintf_internal_r+0x3bc>
   47e98:	10c00060 	cmpeqi	r3,r2,1
   47e9c:	1803861e 	bne	r3,zero,48cb8 <___vfprintf_internal_r+0x1ce4>
   47ea0:	108000a0 	cmpeqi	r2,r2,2
   47ea4:	db000417 	ldw	r12,16(sp)
   47ea8:	103ea326 	beq	r2,zero,47938 <___vfprintf_internal_r+0x964>
   47eac:	d9000c17 	ldw	r4,48(sp)
   47eb0:	dc402704 	addi	r17,sp,156
   47eb4:	a08003cc 	andi	r2,r20,15
   47eb8:	a806973a 	slli	r3,r21,28
   47ebc:	a028d13a 	srli	r20,r20,4
   47ec0:	2085883a 	add	r2,r4,r2
   47ec4:	10800003 	ldbu	r2,0(r2)
   47ec8:	a82ad13a 	srli	r21,r21,4
   47ecc:	1d28b03a 	or	r20,r3,r20
   47ed0:	88bfffc5 	stb	r2,-1(r17)
   47ed4:	a544b03a 	or	r2,r20,r21
   47ed8:	8c7fffc4 	addi	r17,r17,-1
   47edc:	103ff51e 	bne	r2,zero,47eb4 <___vfprintf_internal_r+0xee0>
   47ee0:	d8802704 	addi	r2,sp,156
   47ee4:	146bc83a 	sub	r21,r2,r17
   47ee8:	db000415 	stw	r12,16(sp)
   47eec:	003e4e06 	br	47828 <___vfprintf_internal_r+0x854>
   47ef0:	d9801a04 	addi	r6,sp,104
   47ef4:	900b883a 	mov	r5,r18
   47ef8:	9809883a 	mov	r4,r19
   47efc:	004e5400 	call	4e540 <__sprint_r>
   47f00:	103d3b26 	beq	r2,zero,473f0 <___vfprintf_internal_r+0x41c>
   47f04:	003d4006 	br	47408 <___vfprintf_internal_r+0x434>
   47f08:	d8801b17 	ldw	r2,108(sp)
   47f0c:	01000174 	movhi	r4,5
   47f10:	210f9804 	addi	r4,r4,15968
   47f14:	10800044 	addi	r2,r2,1
   47f18:	18c00044 	addi	r3,r3,1
   47f1c:	b1000015 	stw	r4,0(r22)
   47f20:	01000044 	movi	r4,1
   47f24:	d8801b15 	stw	r2,108(sp)
   47f28:	b1000115 	stw	r4,4(r22)
   47f2c:	d8c01c15 	stw	r3,112(sp)
   47f30:	10800208 	cmpgei	r2,r2,8
   47f34:	1003241e 	bne	r2,zero,48bc8 <___vfprintf_internal_r+0x1bf4>
   47f38:	b5800204 	addi	r22,r22,8
   47f3c:	a802a81e 	bne	r21,zero,489e0 <___vfprintf_internal_r+0x1a0c>
   47f40:	d8800417 	ldw	r2,16(sp)
   47f44:	d9000817 	ldw	r4,32(sp)
   47f48:	1080004c 	andi	r2,r2,1
   47f4c:	1104b03a 	or	r2,r2,r4
   47f50:	103d1c26 	beq	r2,zero,473c4 <___vfprintf_internal_r+0x3f0>
   47f54:	d8800d17 	ldw	r2,52(sp)
   47f58:	d9000b17 	ldw	r4,44(sp)
   47f5c:	b0800015 	stw	r2,0(r22)
   47f60:	d8801b17 	ldw	r2,108(sp)
   47f64:	20c7883a 	add	r3,r4,r3
   47f68:	b1000115 	stw	r4,4(r22)
   47f6c:	10800044 	addi	r2,r2,1
   47f70:	d8c01c15 	stw	r3,112(sp)
   47f74:	d8801b15 	stw	r2,108(sp)
   47f78:	11000208 	cmpgei	r4,r2,8
   47f7c:	20033b1e 	bne	r4,zero,48c6c <___vfprintf_internal_r+0x1c98>
   47f80:	b5800204 	addi	r22,r22,8
   47f84:	d9000817 	ldw	r4,32(sp)
   47f88:	10800044 	addi	r2,r2,1
   47f8c:	d8801b15 	stw	r2,108(sp)
   47f90:	20c7883a 	add	r3,r4,r3
   47f94:	b4400015 	stw	r17,0(r22)
   47f98:	b1000115 	stw	r4,4(r22)
   47f9c:	d8c01c15 	stw	r3,112(sp)
   47fa0:	10800208 	cmpgei	r2,r2,8
   47fa4:	103d0626 	beq	r2,zero,473c0 <___vfprintf_internal_r+0x3ec>
   47fa8:	d9801a04 	addi	r6,sp,104
   47fac:	900b883a 	mov	r5,r18
   47fb0:	9809883a 	mov	r4,r19
   47fb4:	004e5400 	call	4e540 <__sprint_r>
   47fb8:	103d131e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   47fbc:	d8c01c17 	ldw	r3,112(sp)
   47fc0:	dd802704 	addi	r22,sp,156
   47fc4:	003cff06 	br	473c4 <___vfprintf_internal_r+0x3f0>
   47fc8:	d8800817 	ldw	r2,32(sp)
   47fcc:	dd401b17 	ldw	r21,108(sp)
   47fd0:	18c00044 	addi	r3,r3,1
   47fd4:	10800088 	cmpgei	r2,r2,2
   47fd8:	ad400044 	addi	r21,r21,1
   47fdc:	b7000204 	addi	fp,r22,8
   47fe0:	1000e826 	beq	r2,zero,48384 <___vfprintf_internal_r+0x13b0>
   47fe4:	00800044 	movi	r2,1
   47fe8:	b0800115 	stw	r2,4(r22)
   47fec:	b4400015 	stw	r17,0(r22)
   47ff0:	d8c01c15 	stw	r3,112(sp)
   47ff4:	dd401b15 	stw	r21,108(sp)
   47ff8:	a8800210 	cmplti	r2,r21,8
   47ffc:	1001ae26 	beq	r2,zero,486b8 <___vfprintf_internal_r+0x16e4>
   48000:	d8800b17 	ldw	r2,44(sp)
   48004:	d9000d17 	ldw	r4,52(sp)
   48008:	ad400044 	addi	r21,r21,1
   4800c:	1887883a 	add	r3,r3,r2
   48010:	e0800115 	stw	r2,4(fp)
   48014:	e1000015 	stw	r4,0(fp)
   48018:	d8c01c15 	stw	r3,112(sp)
   4801c:	dd401b15 	stw	r21,108(sp)
   48020:	a8800208 	cmpgei	r2,r21,8
   48024:	1001ad1e 	bne	r2,zero,486dc <___vfprintf_internal_r+0x1708>
   48028:	e7000204 	addi	fp,fp,8
   4802c:	d9000917 	ldw	r4,36(sp)
   48030:	d9400a17 	ldw	r5,40(sp)
   48034:	000d883a 	mov	r6,zero
   48038:	000f883a 	mov	r7,zero
   4803c:	d8c00715 	stw	r3,28(sp)
   48040:	00455900 	call	45590 <__eqdf2>
   48044:	d8c00817 	ldw	r3,32(sp)
   48048:	1dbfffc4 	addi	r22,r3,-1
   4804c:	d8c00717 	ldw	r3,28(sp)
   48050:	1000e426 	beq	r2,zero,483e4 <___vfprintf_internal_r+0x1410>
   48054:	8a400044 	addi	r9,r17,1
   48058:	ad400044 	addi	r21,r21,1
   4805c:	1d87883a 	add	r3,r3,r22
   48060:	e2400015 	stw	r9,0(fp)
   48064:	e5800115 	stw	r22,4(fp)
   48068:	d8c01c15 	stw	r3,112(sp)
   4806c:	dd401b15 	stw	r21,108(sp)
   48070:	a8800208 	cmpgei	r2,r21,8
   48074:	1000cd1e 	bne	r2,zero,483ac <___vfprintf_internal_r+0x13d8>
   48078:	e7000204 	addi	fp,fp,8
   4807c:	d9001017 	ldw	r4,64(sp)
   48080:	ad400044 	addi	r21,r21,1
   48084:	d8801644 	addi	r2,sp,89
   48088:	20c7883a 	add	r3,r4,r3
   4808c:	dd401b15 	stw	r21,108(sp)
   48090:	e0800015 	stw	r2,0(fp)
   48094:	e1000115 	stw	r4,4(fp)
   48098:	d8c01c15 	stw	r3,112(sp)
   4809c:	ad400208 	cmpgei	r21,r21,8
   480a0:	a83fc11e 	bne	r21,zero,47fa8 <___vfprintf_internal_r+0xfd4>
   480a4:	e5800204 	addi	r22,fp,8
   480a8:	003cc606 	br	473c4 <___vfprintf_internal_r+0x3f0>
   480ac:	db000417 	ldw	r12,16(sp)
   480b0:	003e1d06 	br	47928 <___vfprintf_internal_r+0x954>
   480b4:	03000174 	movhi	r12,5
   480b8:	39000450 	cmplti	r4,r7,17
   480bc:	d8801b17 	ldw	r2,108(sp)
   480c0:	630f9d04 	addi	r12,r12,15988
   480c4:	2000321e 	bne	r4,zero,48190 <___vfprintf_internal_r+0x11bc>
   480c8:	dc401115 	stw	r17,68(sp)
   480cc:	b009883a 	mov	r4,r22
   480d0:	9023883a 	mov	r17,r18
   480d4:	a82d883a 	mov	r22,r21
   480d8:	ddc01215 	stw	r23,72(sp)
   480dc:	03c00404 	movi	r15,16
   480e0:	a02f883a 	mov	r23,r20
   480e4:	db800e15 	stw	r14,56(sp)
   480e8:	8029883a 	mov	r20,r16
   480ec:	db400f15 	stw	r13,60(sp)
   480f0:	402b883a 	mov	r21,r8
   480f4:	3821883a 	mov	r16,r7
   480f8:	6025883a 	mov	r18,r12
   480fc:	00000406 	br	48110 <___vfprintf_internal_r+0x113c>
   48100:	843ffc04 	addi	r16,r16,-16
   48104:	81800448 	cmpgei	r6,r16,17
   48108:	21000204 	addi	r4,r4,8
   4810c:	30001426 	beq	r6,zero,48160 <___vfprintf_internal_r+0x118c>
   48110:	10800044 	addi	r2,r2,1
   48114:	18c00404 	addi	r3,r3,16
   48118:	24800015 	stw	r18,0(r4)
   4811c:	23c00115 	stw	r15,4(r4)
   48120:	d8c01c15 	stw	r3,112(sp)
   48124:	d8801b15 	stw	r2,108(sp)
   48128:	11800208 	cmpgei	r6,r2,8
   4812c:	303ff426 	beq	r6,zero,48100 <___vfprintf_internal_r+0x112c>
   48130:	d9801a04 	addi	r6,sp,104
   48134:	880b883a 	mov	r5,r17
   48138:	9809883a 	mov	r4,r19
   4813c:	004e5400 	call	4e540 <__sprint_r>
   48140:	10017d1e 	bne	r2,zero,48738 <___vfprintf_internal_r+0x1764>
   48144:	843ffc04 	addi	r16,r16,-16
   48148:	81800448 	cmpgei	r6,r16,17
   4814c:	d8c01c17 	ldw	r3,112(sp)
   48150:	d8801b17 	ldw	r2,108(sp)
   48154:	d9002704 	addi	r4,sp,156
   48158:	03c00404 	movi	r15,16
   4815c:	303fec1e 	bne	r6,zero,48110 <___vfprintf_internal_r+0x113c>
   48160:	800f883a 	mov	r7,r16
   48164:	9019883a 	mov	r12,r18
   48168:	a021883a 	mov	r16,r20
   4816c:	8825883a 	mov	r18,r17
   48170:	b829883a 	mov	r20,r23
   48174:	db800e17 	ldw	r14,56(sp)
   48178:	db400f17 	ldw	r13,60(sp)
   4817c:	ddc01217 	ldw	r23,72(sp)
   48180:	dc401117 	ldw	r17,68(sp)
   48184:	a811883a 	mov	r8,r21
   48188:	b02b883a 	mov	r21,r22
   4818c:	202d883a 	mov	r22,r4
   48190:	10800044 	addi	r2,r2,1
   48194:	19c7883a 	add	r3,r3,r7
   48198:	d8801b15 	stw	r2,108(sp)
   4819c:	b3000015 	stw	r12,0(r22)
   481a0:	b1c00115 	stw	r7,4(r22)
   481a4:	d8c01c15 	stw	r3,112(sp)
   481a8:	10800208 	cmpgei	r2,r2,8
   481ac:	1001541e 	bne	r2,zero,48700 <___vfprintf_internal_r+0x172c>
   481b0:	b5800204 	addi	r22,r22,8
   481b4:	003c5706 	br	47314 <___vfprintf_internal_r+0x340>
   481b8:	d9801a04 	addi	r6,sp,104
   481bc:	900b883a 	mov	r5,r18
   481c0:	9809883a 	mov	r4,r19
   481c4:	da001115 	stw	r8,68(sp)
   481c8:	db400f15 	stw	r13,60(sp)
   481cc:	db800e15 	stw	r14,56(sp)
   481d0:	004e5400 	call	4e540 <__sprint_r>
   481d4:	103c8c1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   481d8:	d8c01c17 	ldw	r3,112(sp)
   481dc:	da001117 	ldw	r8,68(sp)
   481e0:	db400f17 	ldw	r13,60(sp)
   481e4:	db800e17 	ldw	r14,56(sp)
   481e8:	dd802704 	addi	r22,sp,156
   481ec:	003c5706 	br	4734c <___vfprintf_internal_r+0x378>
   481f0:	d9801a04 	addi	r6,sp,104
   481f4:	900b883a 	mov	r5,r18
   481f8:	9809883a 	mov	r4,r19
   481fc:	da000f15 	stw	r8,60(sp)
   48200:	db400e15 	stw	r13,56(sp)
   48204:	004e5400 	call	4e540 <__sprint_r>
   48208:	103c7f1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   4820c:	d8c01c17 	ldw	r3,112(sp)
   48210:	da000f17 	ldw	r8,60(sp)
   48214:	db400e17 	ldw	r13,56(sp)
   48218:	dd802704 	addi	r22,sp,156
   4821c:	003c5806 	br	47380 <___vfprintf_internal_r+0x3ac>
   48220:	dd401417 	ldw	r21,80(sp)
   48224:	057f380e 	bge	zero,r21,47f08 <___vfprintf_internal_r+0xf34>
   48228:	d8800817 	ldw	r2,32(sp)
   4822c:	d9000717 	ldw	r4,28(sp)
   48230:	102b883a 	mov	r21,r2
   48234:	2080b516 	blt	r4,r2,4850c <___vfprintf_internal_r+0x1538>
   48238:	05400a0e 	bge	zero,r21,48264 <___vfprintf_internal_r+0x1290>
   4823c:	d8801b17 	ldw	r2,108(sp)
   48240:	1d47883a 	add	r3,r3,r21
   48244:	b4400015 	stw	r17,0(r22)
   48248:	10800044 	addi	r2,r2,1
   4824c:	d8801b15 	stw	r2,108(sp)
   48250:	b5400115 	stw	r21,4(r22)
   48254:	d8c01c15 	stw	r3,112(sp)
   48258:	10800208 	cmpgei	r2,r2,8
   4825c:	1002d31e 	bne	r2,zero,48dac <___vfprintf_internal_r+0x1dd8>
   48260:	b5800204 	addi	r22,r22,8
   48264:	a800b616 	blt	r21,zero,48540 <___vfprintf_internal_r+0x156c>
   48268:	d8800717 	ldw	r2,28(sp)
   4826c:	156bc83a 	sub	r21,r2,r21
   48270:	0540c516 	blt	zero,r21,48588 <___vfprintf_internal_r+0x15b4>
   48274:	dd401417 	ldw	r21,80(sp)
   48278:	d8800817 	ldw	r2,32(sp)
   4827c:	a880a60e 	bge	r21,r2,48518 <___vfprintf_internal_r+0x1544>
   48280:	d8800d17 	ldw	r2,52(sp)
   48284:	d9000b17 	ldw	r4,44(sp)
   48288:	b0800015 	stw	r2,0(r22)
   4828c:	d8801b17 	ldw	r2,108(sp)
   48290:	1907883a 	add	r3,r3,r4
   48294:	b1000115 	stw	r4,4(r22)
   48298:	10800044 	addi	r2,r2,1
   4829c:	d8801b15 	stw	r2,108(sp)
   482a0:	d8c01c15 	stw	r3,112(sp)
   482a4:	10800208 	cmpgei	r2,r2,8
   482a8:	1002ab1e 	bne	r2,zero,48d58 <___vfprintf_internal_r+0x1d84>
   482ac:	b5800204 	addi	r22,r22,8
   482b0:	d8800817 	ldw	r2,32(sp)
   482b4:	d9000717 	ldw	r4,28(sp)
   482b8:	156bc83a 	sub	r21,r2,r21
   482bc:	1139c83a 	sub	fp,r2,r4
   482c0:	af00010e 	bge	r21,fp,482c8 <___vfprintf_internal_r+0x12f4>
   482c4:	a839883a 	mov	fp,r21
   482c8:	07000c0e 	bge	zero,fp,482fc <___vfprintf_internal_r+0x1328>
   482cc:	d8800717 	ldw	r2,28(sp)
   482d0:	1f07883a 	add	r3,r3,fp
   482d4:	b7000115 	stw	fp,4(r22)
   482d8:	8893883a 	add	r9,r17,r2
   482dc:	d8801b17 	ldw	r2,108(sp)
   482e0:	b2400015 	stw	r9,0(r22)
   482e4:	d8c01c15 	stw	r3,112(sp)
   482e8:	10800044 	addi	r2,r2,1
   482ec:	d8801b15 	stw	r2,108(sp)
   482f0:	10800208 	cmpgei	r2,r2,8
   482f4:	1002b81e 	bne	r2,zero,48dd8 <___vfprintf_internal_r+0x1e04>
   482f8:	b5800204 	addi	r22,r22,8
   482fc:	e005883a 	mov	r2,fp
   48300:	e000010e 	bge	fp,zero,48308 <___vfprintf_internal_r+0x1334>
   48304:	0005883a 	mov	r2,zero
   48308:	a8abc83a 	sub	r21,r21,r2
   4830c:	057c2d0e 	bge	zero,r21,473c4 <___vfprintf_internal_r+0x3f0>
   48310:	01c00174 	movhi	r7,5
   48314:	a9000450 	cmplti	r4,r21,17
   48318:	d8801b17 	ldw	r2,108(sp)
   4831c:	39cf9904 	addi	r7,r7,15972
   48320:	20018b1e 	bne	r4,zero,48950 <___vfprintf_internal_r+0x197c>
   48324:	07000404 	movi	fp,16
   48328:	3823883a 	mov	r17,r7
   4832c:	00000406 	br	48340 <___vfprintf_internal_r+0x136c>
   48330:	b5800204 	addi	r22,r22,8
   48334:	ad7ffc04 	addi	r21,r21,-16
   48338:	a9000448 	cmpgei	r4,r21,17
   4833c:	20018326 	beq	r4,zero,4894c <___vfprintf_internal_r+0x1978>
   48340:	10800044 	addi	r2,r2,1
   48344:	18c00404 	addi	r3,r3,16
   48348:	b4400015 	stw	r17,0(r22)
   4834c:	b7000115 	stw	fp,4(r22)
   48350:	d8c01c15 	stw	r3,112(sp)
   48354:	d8801b15 	stw	r2,108(sp)
   48358:	11000208 	cmpgei	r4,r2,8
   4835c:	203ff426 	beq	r4,zero,48330 <___vfprintf_internal_r+0x135c>
   48360:	d9801a04 	addi	r6,sp,104
   48364:	900b883a 	mov	r5,r18
   48368:	9809883a 	mov	r4,r19
   4836c:	004e5400 	call	4e540 <__sprint_r>
   48370:	103c251e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48374:	d8c01c17 	ldw	r3,112(sp)
   48378:	d8801b17 	ldw	r2,108(sp)
   4837c:	dd802704 	addi	r22,sp,156
   48380:	003fec06 	br	48334 <___vfprintf_internal_r+0x1360>
   48384:	d8800417 	ldw	r2,16(sp)
   48388:	1080004c 	andi	r2,r2,1
   4838c:	103f151e 	bne	r2,zero,47fe4 <___vfprintf_internal_r+0x1010>
   48390:	00800044 	movi	r2,1
   48394:	b0800115 	stw	r2,4(r22)
   48398:	b4400015 	stw	r17,0(r22)
   4839c:	d8c01c15 	stw	r3,112(sp)
   483a0:	dd401b15 	stw	r21,108(sp)
   483a4:	a8800210 	cmplti	r2,r21,8
   483a8:	103f341e 	bne	r2,zero,4807c <___vfprintf_internal_r+0x10a8>
   483ac:	d9801a04 	addi	r6,sp,104
   483b0:	900b883a 	mov	r5,r18
   483b4:	9809883a 	mov	r4,r19
   483b8:	004e5400 	call	4e540 <__sprint_r>
   483bc:	103c121e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   483c0:	d8c01c17 	ldw	r3,112(sp)
   483c4:	dd401b17 	ldw	r21,108(sp)
   483c8:	df002704 	addi	fp,sp,156
   483cc:	003f2b06 	br	4807c <___vfprintf_internal_r+0x10a8>
   483d0:	4002391e 	bne	r8,zero,48cb8 <___vfprintf_internal_r+0x1ce4>
   483d4:	0011883a 	mov	r8,zero
   483d8:	002b883a 	mov	r21,zero
   483dc:	dc402704 	addi	r17,sp,156
   483e0:	003d1106 	br	47828 <___vfprintf_internal_r+0x854>
   483e4:	05bf250e 	bge	zero,r22,4807c <___vfprintf_internal_r+0x10a8>
   483e8:	01c00174 	movhi	r7,5
   483ec:	b0800450 	cmplti	r2,r22,17
   483f0:	39cf9904 	addi	r7,r7,15972
   483f4:	1001761e 	bne	r2,zero,489d0 <___vfprintf_internal_r+0x19fc>
   483f8:	dc000715 	stw	r16,28(sp)
   483fc:	04400404 	movi	r17,16
   48400:	3821883a 	mov	r16,r7
   48404:	00000406 	br	48418 <___vfprintf_internal_r+0x1444>
   48408:	e7000204 	addi	fp,fp,8
   4840c:	b5bffc04 	addi	r22,r22,-16
   48410:	b0800448 	cmpgei	r2,r22,17
   48414:	10016c26 	beq	r2,zero,489c8 <___vfprintf_internal_r+0x19f4>
   48418:	ad400044 	addi	r21,r21,1
   4841c:	18c00404 	addi	r3,r3,16
   48420:	e4000015 	stw	r16,0(fp)
   48424:	e4400115 	stw	r17,4(fp)
   48428:	d8c01c15 	stw	r3,112(sp)
   4842c:	dd401b15 	stw	r21,108(sp)
   48430:	a8800208 	cmpgei	r2,r21,8
   48434:	103ff426 	beq	r2,zero,48408 <___vfprintf_internal_r+0x1434>
   48438:	d9801a04 	addi	r6,sp,104
   4843c:	900b883a 	mov	r5,r18
   48440:	9809883a 	mov	r4,r19
   48444:	004e5400 	call	4e540 <__sprint_r>
   48448:	103bef1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   4844c:	d8c01c17 	ldw	r3,112(sp)
   48450:	dd401b17 	ldw	r21,108(sp)
   48454:	df002704 	addi	fp,sp,156
   48458:	003fec06 	br	4840c <___vfprintf_internal_r+0x1438>
   4845c:	d9801a04 	addi	r6,sp,104
   48460:	900b883a 	mov	r5,r18
   48464:	9809883a 	mov	r4,r19
   48468:	004e5400 	call	4e540 <__sprint_r>
   4846c:	103be61e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48470:	d8c01c17 	ldw	r3,112(sp)
   48474:	dd802704 	addi	r22,sp,156
   48478:	003bc506 	br	47390 <___vfprintf_internal_r+0x3bc>
   4847c:	002b883a 	mov	r21,zero
   48480:	d8c00615 	stw	r3,24(sp)
   48484:	003d7206 	br	47a50 <___vfprintf_internal_r+0xa7c>
   48488:	a02bd7fa 	srai	r21,r20,31
   4848c:	d8c00615 	stw	r3,24(sp)
   48490:	a805883a 	mov	r2,r21
   48494:	003cd206 	br	477e0 <___vfprintf_internal_r+0x80c>
   48498:	d8800417 	ldw	r2,16(sp)
   4849c:	1080004c 	andi	r2,r2,1
   484a0:	103bc826 	beq	r2,zero,473c4 <___vfprintf_internal_r+0x3f0>
   484a4:	003de506 	br	47c3c <___vfprintf_internal_r+0xc68>
   484a8:	63000414 	ori	r12,r12,16
   484ac:	003b1506 	br	47104 <___vfprintf_internal_r+0x130>
   484b0:	bac00007 	ldb	r11,0(r23)
   484b4:	d8800615 	stw	r2,24(sp)
   484b8:	003b1206 	br	47104 <___vfprintf_internal_r+0x130>
   484bc:	dc402704 	addi	r17,sp,156
   484c0:	003cd906 	br	47828 <___vfprintf_internal_r+0x854>
   484c4:	18800017 	ldw	r2,0(r3)
   484c8:	d8800915 	stw	r2,36(sp)
   484cc:	18800117 	ldw	r2,4(r3)
   484d0:	d8800a15 	stw	r2,40(sp)
   484d4:	003c3f06 	br	475d4 <___vfprintf_internal_r+0x600>
   484d8:	00800c04 	movi	r2,48
   484dc:	d8801385 	stb	r2,78(sp)
   484e0:	df0013c5 	stb	fp,79(sp)
   484e4:	63000094 	ori	r12,r12,2
   484e8:	00800084 	movi	r2,2
   484ec:	003c0306 	br	474fc <___vfprintf_internal_r+0x528>
   484f0:	d9400517 	ldw	r5,20(sp)
   484f4:	20800017 	ldw	r2,0(r4)
   484f8:	d8c00615 	stw	r3,24(sp)
   484fc:	2809d7fa 	srai	r4,r5,31
   48500:	11400015 	stw	r5,0(r2)
   48504:	11000115 	stw	r4,4(r2)
   48508:	003ae606 	br	470a4 <___vfprintf_internal_r+0xd0>
   4850c:	202b883a 	mov	r21,r4
   48510:	057f4a16 	blt	zero,r21,4823c <___vfprintf_internal_r+0x1268>
   48514:	003f5306 	br	48264 <___vfprintf_internal_r+0x1290>
   48518:	d8800417 	ldw	r2,16(sp)
   4851c:	1080004c 	andi	r2,r2,1
   48520:	103f571e 	bne	r2,zero,48280 <___vfprintf_internal_r+0x12ac>
   48524:	d8800817 	ldw	r2,32(sp)
   48528:	d9000717 	ldw	r4,28(sp)
   4852c:	156bc83a 	sub	r21,r2,r21
   48530:	1139c83a 	sub	fp,r2,r4
   48534:	af3f710e 	bge	r21,fp,482fc <___vfprintf_internal_r+0x1328>
   48538:	a839883a 	mov	fp,r21
   4853c:	003f6f06 	br	482fc <___vfprintf_internal_r+0x1328>
   48540:	002b883a 	mov	r21,zero
   48544:	003f4806 	br	48268 <___vfprintf_internal_r+0x1294>
   48548:	d9801a04 	addi	r6,sp,104
   4854c:	900b883a 	mov	r5,r18
   48550:	9809883a 	mov	r4,r19
   48554:	004e5400 	call	4e540 <__sprint_r>
   48558:	103bab1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   4855c:	d8c01c17 	ldw	r3,112(sp)
   48560:	dd802704 	addi	r22,sp,156
   48564:	003dc106 	br	47c6c <___vfprintf_internal_r+0xc98>
   48568:	408001f0 	cmpltui	r2,r8,7
   4856c:	402b883a 	mov	r21,r8
   48570:	1001a226 	beq	r2,zero,48bfc <___vfprintf_internal_r+0x1c28>
   48574:	04400174 	movhi	r17,5
   48578:	a829883a 	mov	r20,r21
   4857c:	d8c00615 	stw	r3,24(sp)
   48580:	8c4f9604 	addi	r17,r17,15960
   48584:	003b5606 	br	472e0 <___vfprintf_internal_r+0x30c>
   48588:	01c00174 	movhi	r7,5
   4858c:	a9000450 	cmplti	r4,r21,17
   48590:	d8801b17 	ldw	r2,108(sp)
   48594:	39cf9904 	addi	r7,r7,15972
   48598:	20017d1e 	bne	r4,zero,48b90 <___vfprintf_internal_r+0x1bbc>
   4859c:	dc000e15 	stw	r16,56(sp)
   485a0:	07000404 	movi	fp,16
   485a4:	3821883a 	mov	r16,r7
   485a8:	00000406 	br	485bc <___vfprintf_internal_r+0x15e8>
   485ac:	b5800204 	addi	r22,r22,8
   485b0:	ad7ffc04 	addi	r21,r21,-16
   485b4:	a9000448 	cmpgei	r4,r21,17
   485b8:	20017326 	beq	r4,zero,48b88 <___vfprintf_internal_r+0x1bb4>
   485bc:	10800044 	addi	r2,r2,1
   485c0:	18c00404 	addi	r3,r3,16
   485c4:	b4000015 	stw	r16,0(r22)
   485c8:	b7000115 	stw	fp,4(r22)
   485cc:	d8c01c15 	stw	r3,112(sp)
   485d0:	d8801b15 	stw	r2,108(sp)
   485d4:	11000208 	cmpgei	r4,r2,8
   485d8:	203ff426 	beq	r4,zero,485ac <___vfprintf_internal_r+0x15d8>
   485dc:	d9801a04 	addi	r6,sp,104
   485e0:	900b883a 	mov	r5,r18
   485e4:	9809883a 	mov	r4,r19
   485e8:	004e5400 	call	4e540 <__sprint_r>
   485ec:	103b861e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   485f0:	d8c01c17 	ldw	r3,112(sp)
   485f4:	d8801b17 	ldw	r2,108(sp)
   485f8:	dd802704 	addi	r22,sp,156
   485fc:	003fec06 	br	485b0 <___vfprintf_internal_r+0x15dc>
   48600:	dc402704 	addi	r17,sp,156
   48604:	a805883a 	mov	r2,r21
   48608:	dc000715 	stw	r16,28(sp)
   4860c:	902b883a 	mov	r21,r18
   48610:	8821883a 	mov	r16,r17
   48614:	db000415 	stw	r12,16(sp)
   48618:	a023883a 	mov	r17,r20
   4861c:	da000e15 	stw	r8,56(sp)
   48620:	9829883a 	mov	r20,r19
   48624:	1025883a 	mov	r18,r2
   48628:	6827883a 	mov	r19,r13
   4862c:	8809883a 	mov	r4,r17
   48630:	900b883a 	mov	r5,r18
   48634:	01800284 	movi	r6,10
   48638:	000f883a 	mov	r7,zero
   4863c:	0050f080 	call	50f08 <__umoddi3>
   48640:	10800c04 	addi	r2,r2,48
   48644:	8809883a 	mov	r4,r17
   48648:	900b883a 	mov	r5,r18
   4864c:	01800284 	movi	r6,10
   48650:	000f883a 	mov	r7,zero
   48654:	80bfffc5 	stb	r2,-1(r16)
   48658:	00509b80 	call	509b8 <__udivdi3>
   4865c:	900d883a 	mov	r6,r18
   48660:	880f883a 	mov	r7,r17
   48664:	843fffc4 	addi	r16,r16,-1
   48668:	1023883a 	mov	r17,r2
   4866c:	1825883a 	mov	r18,r3
   48670:	303fee1e 	bne	r6,zero,4862c <___vfprintf_internal_r+0x1658>
   48674:	39c002a8 	cmpgeui	r7,r7,10
   48678:	383fec1e 	bne	r7,zero,4862c <___vfprintf_internal_r+0x1658>
   4867c:	8023883a 	mov	r17,r16
   48680:	d8802704 	addi	r2,sp,156
   48684:	981b883a 	mov	r13,r19
   48688:	a825883a 	mov	r18,r21
   4868c:	dc000717 	ldw	r16,28(sp)
   48690:	da000e17 	ldw	r8,56(sp)
   48694:	a027883a 	mov	r19,r20
   48698:	146bc83a 	sub	r21,r2,r17
   4869c:	003c6206 	br	47828 <___vfprintf_internal_r+0x854>
   486a0:	d8800617 	ldw	r2,24(sp)
   486a4:	10800017 	ldw	r2,0(r2)
   486a8:	d8c00615 	stw	r3,24(sp)
   486ac:	d8c00517 	ldw	r3,20(sp)
   486b0:	10c00015 	stw	r3,0(r2)
   486b4:	003a7b06 	br	470a4 <___vfprintf_internal_r+0xd0>
   486b8:	d9801a04 	addi	r6,sp,104
   486bc:	900b883a 	mov	r5,r18
   486c0:	9809883a 	mov	r4,r19
   486c4:	004e5400 	call	4e540 <__sprint_r>
   486c8:	103b4f1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   486cc:	d8c01c17 	ldw	r3,112(sp)
   486d0:	dd401b17 	ldw	r21,108(sp)
   486d4:	df002704 	addi	fp,sp,156
   486d8:	003e4906 	br	48000 <___vfprintf_internal_r+0x102c>
   486dc:	d9801a04 	addi	r6,sp,104
   486e0:	900b883a 	mov	r5,r18
   486e4:	9809883a 	mov	r4,r19
   486e8:	004e5400 	call	4e540 <__sprint_r>
   486ec:	103b461e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   486f0:	d8c01c17 	ldw	r3,112(sp)
   486f4:	dd401b17 	ldw	r21,108(sp)
   486f8:	df002704 	addi	fp,sp,156
   486fc:	003e4b06 	br	4802c <___vfprintf_internal_r+0x1058>
   48700:	d9801a04 	addi	r6,sp,104
   48704:	900b883a 	mov	r5,r18
   48708:	9809883a 	mov	r4,r19
   4870c:	da001115 	stw	r8,68(sp)
   48710:	db400f15 	stw	r13,60(sp)
   48714:	db800e15 	stw	r14,56(sp)
   48718:	004e5400 	call	4e540 <__sprint_r>
   4871c:	103b3a1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48720:	d8c01c17 	ldw	r3,112(sp)
   48724:	da001117 	ldw	r8,68(sp)
   48728:	db400f17 	ldw	r13,60(sp)
   4872c:	db800e17 	ldw	r14,56(sp)
   48730:	dd802704 	addi	r22,sp,156
   48734:	003af706 	br	47314 <___vfprintf_internal_r+0x340>
   48738:	8825883a 	mov	r18,r17
   4873c:	003b3206 	br	47408 <___vfprintf_internal_r+0x434>
   48740:	d9000917 	ldw	r4,36(sp)
   48744:	d9400a17 	ldw	r5,40(sp)
   48748:	da000615 	stw	r8,24(sp)
   4874c:	200d883a 	mov	r6,r4
   48750:	280f883a 	mov	r7,r5
   48754:	db000415 	stw	r12,16(sp)
   48758:	00467c80 	call	467c8 <__unorddf2>
   4875c:	db000417 	ldw	r12,16(sp)
   48760:	da000617 	ldw	r8,24(sp)
   48764:	1001ec1e 	bne	r2,zero,48f18 <___vfprintf_internal_r+0x1f44>
   48768:	057ff7c4 	movi	r21,-33
   4876c:	40bfffe0 	cmpeqi	r2,r8,-1
   48770:	e56a703a 	and	r21,fp,r21
   48774:	1001961e 	bne	r2,zero,48dd0 <___vfprintf_internal_r+0x1dfc>
   48778:	a88011d8 	cmpnei	r2,r21,71
   4877c:	10013826 	beq	r2,zero,48c60 <___vfprintf_internal_r+0x1c8c>
   48780:	60804014 	ori	r2,r12,256
   48784:	d8800415 	stw	r2,16(sp)
   48788:	d8800a17 	ldw	r2,40(sp)
   4878c:	10011716 	blt	r2,zero,48bec <___vfprintf_internal_r+0x1c18>
   48790:	dd000a17 	ldw	r20,40(sp)
   48794:	d8000605 	stb	zero,24(sp)
   48798:	e08019a0 	cmpeqi	r2,fp,102
   4879c:	d8800f15 	stw	r2,60(sp)
   487a0:	1000bb1e 	bne	r2,zero,48a90 <___vfprintf_internal_r+0x1abc>
   487a4:	e08011a0 	cmpeqi	r2,fp,70
   487a8:	1000b91e 	bne	r2,zero,48a90 <___vfprintf_internal_r+0x1abc>
   487ac:	a8801158 	cmpnei	r2,r21,69
   487b0:	10014326 	beq	r2,zero,48cc0 <___vfprintf_internal_r+0x1cec>
   487b4:	d8801804 	addi	r2,sp,96
   487b8:	d8800315 	stw	r2,12(sp)
   487bc:	d9400917 	ldw	r5,36(sp)
   487c0:	d8801504 	addi	r2,sp,84
   487c4:	d8800215 	stw	r2,8(sp)
   487c8:	d8801404 	addi	r2,sp,80
   487cc:	da000015 	stw	r8,0(sp)
   487d0:	9809883a 	mov	r4,r19
   487d4:	d8800115 	stw	r2,4(sp)
   487d8:	01c00084 	movi	r7,2
   487dc:	a00d883a 	mov	r6,r20
   487e0:	db000815 	stw	r12,32(sp)
   487e4:	da000715 	stw	r8,28(sp)
   487e8:	00494200 	call	49420 <_dtoa_r>
   487ec:	da000717 	ldw	r8,28(sp)
   487f0:	e10019d8 	cmpnei	r4,fp,103
   487f4:	db000817 	ldw	r12,32(sp)
   487f8:	1023883a 	mov	r17,r2
   487fc:	4007883a 	mov	r3,r8
   48800:	2001431e 	bne	r4,zero,48d10 <___vfprintf_internal_r+0x1d3c>
   48804:	6080004c 	andi	r2,r12,1
   48808:	1001431e 	bne	r2,zero,48d18 <___vfprintf_internal_r+0x1d44>
   4880c:	d8801417 	ldw	r2,80(sp)
   48810:	ad4011e0 	cmpeqi	r21,r21,71
   48814:	d8800715 	stw	r2,28(sp)
   48818:	d8801817 	ldw	r2,96(sp)
   4881c:	1445c83a 	sub	r2,r2,r17
   48820:	d8800815 	stw	r2,32(sp)
   48824:	a8000526 	beq	r21,zero,4883c <___vfprintf_internal_r+0x1868>
   48828:	d8c00717 	ldw	r3,28(sp)
   4882c:	18bfff50 	cmplti	r2,r3,-3
   48830:	1000011e 	bne	r2,zero,48838 <___vfprintf_internal_r+0x1864>
   48834:	40c1510e 	bge	r8,r3,48d7c <___vfprintf_internal_r+0x1da8>
   48838:	e73fff84 	addi	fp,fp,-2
   4883c:	d8c00717 	ldw	r3,28(sp)
   48840:	e009883a 	mov	r4,fp
   48844:	18bfffc4 	addi	r2,r3,-1
   48848:	10018516 	blt	r2,zero,48e60 <___vfprintf_internal_r+0x1e8c>
   4884c:	102b883a 	mov	r21,r2
   48850:	00c00ac4 	movi	r3,43
   48854:	d8801415 	stw	r2,80(sp)
   48858:	d9001645 	stb	r4,89(sp)
   4885c:	d8c01685 	stb	r3,90(sp)
   48860:	a8800290 	cmplti	r2,r21,10
   48864:	1001771e 	bne	r2,zero,48e44 <___vfprintf_internal_r+0x1e70>
   48868:	d98019c4 	addi	r6,sp,103
   4886c:	9029883a 	mov	r20,r18
   48870:	dc400715 	stw	r17,28(sp)
   48874:	8025883a 	mov	r18,r16
   48878:	db000f15 	stw	r12,60(sp)
   4887c:	3021883a 	mov	r16,r6
   48880:	a809883a 	mov	r4,r21
   48884:	01400284 	movi	r5,10
   48888:	0046c980 	call	46c98 <__modsi3>
   4888c:	10800c04 	addi	r2,r2,48
   48890:	a809883a 	mov	r4,r21
   48894:	80bfffc5 	stb	r2,-1(r16)
   48898:	01400284 	movi	r5,10
   4889c:	0046c180 	call	46c18 <__divsi3>
   488a0:	a9001908 	cmpgei	r4,r21,100
   488a4:	8023883a 	mov	r17,r16
   488a8:	102b883a 	mov	r21,r2
   488ac:	843fffc4 	addi	r16,r16,-1
   488b0:	203ff31e 	bne	r4,zero,48880 <___vfprintf_internal_r+0x18ac>
   488b4:	800d883a 	mov	r6,r16
   488b8:	11000c04 	addi	r4,r2,48
   488bc:	9021883a 	mov	r16,r18
   488c0:	a025883a 	mov	r18,r20
   488c4:	8829883a 	mov	r20,r17
   488c8:	a0bfff84 	addi	r2,r20,-2
   488cc:	313fffc5 	stb	r4,-1(r6)
   488d0:	d8c019c4 	addi	r3,sp,103
   488d4:	db000f17 	ldw	r12,60(sp)
   488d8:	dc400717 	ldw	r17,28(sp)
   488dc:	10c1be2e 	bgeu	r2,r3,48fd8 <___vfprintf_internal_r+0x2004>
   488e0:	d8c016c4 	addi	r3,sp,91
   488e4:	00000106 	br	488ec <___vfprintf_internal_r+0x1918>
   488e8:	11000003 	ldbu	r4,0(r2)
   488ec:	19000005 	stb	r4,0(r3)
   488f0:	10800044 	addi	r2,r2,1
   488f4:	d90019c4 	addi	r4,sp,103
   488f8:	18c00044 	addi	r3,r3,1
   488fc:	113ffa1e 	bne	r2,r4,488e8 <___vfprintf_internal_r+0x1914>
   48900:	d8801a44 	addi	r2,sp,105
   48904:	d8c016c4 	addi	r3,sp,91
   48908:	1505c83a 	sub	r2,r2,r20
   4890c:	1885883a 	add	r2,r3,r2
   48910:	d8c01644 	addi	r3,sp,89
   48914:	10c5c83a 	sub	r2,r2,r3
   48918:	d8801015 	stw	r2,64(sp)
   4891c:	d8c00817 	ldw	r3,32(sp)
   48920:	d9001017 	ldw	r4,64(sp)
   48924:	18800088 	cmpgei	r2,r3,2
   48928:	192b883a 	add	r21,r3,r4
   4892c:	10015326 	beq	r2,zero,48e7c <___vfprintf_internal_r+0x1ea8>
   48930:	d8800b17 	ldw	r2,44(sp)
   48934:	a8ab883a 	add	r21,r21,r2
   48938:	a829883a 	mov	r20,r21
   4893c:	a800010e 	bge	r21,zero,48944 <___vfprintf_internal_r+0x1970>
   48940:	0029883a 	mov	r20,zero
   48944:	d8000715 	stw	zero,28(sp)
   48948:	00008406 	br	48b5c <___vfprintf_internal_r+0x1b88>
   4894c:	880f883a 	mov	r7,r17
   48950:	10800044 	addi	r2,r2,1
   48954:	1d47883a 	add	r3,r3,r21
   48958:	b1c00015 	stw	r7,0(r22)
   4895c:	003a9306 	br	473ac <___vfprintf_internal_r+0x3d8>
   48960:	d9801a04 	addi	r6,sp,104
   48964:	900b883a 	mov	r5,r18
   48968:	9809883a 	mov	r4,r19
   4896c:	004e5400 	call	4e540 <__sprint_r>
   48970:	103aa51e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48974:	d8c01c17 	ldw	r3,112(sp)
   48978:	dd802704 	addi	r22,sp,156
   4897c:	003cac06 	br	47c30 <___vfprintf_internal_r+0xc5c>
   48980:	d9801a04 	addi	r6,sp,104
   48984:	900b883a 	mov	r5,r18
   48988:	9809883a 	mov	r4,r19
   4898c:	da000e15 	stw	r8,56(sp)
   48990:	004e5400 	call	4e540 <__sprint_r>
   48994:	103a9c1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48998:	d8c01c17 	ldw	r3,112(sp)
   4899c:	da000e17 	ldw	r8,56(sp)
   489a0:	dd802704 	addi	r22,sp,156
   489a4:	003a7806 	br	47388 <___vfprintf_internal_r+0x3b4>
   489a8:	8809883a 	mov	r4,r17
   489ac:	db000415 	stw	r12,16(sp)
   489b0:	d8c00615 	stw	r3,24(sp)
   489b4:	0046f3c0 	call	46f3c <strlen>
   489b8:	db000417 	ldw	r12,16(sp)
   489bc:	102b883a 	mov	r21,r2
   489c0:	1029883a 	mov	r20,r2
   489c4:	003a4606 	br	472e0 <___vfprintf_internal_r+0x30c>
   489c8:	800f883a 	mov	r7,r16
   489cc:	dc000717 	ldw	r16,28(sp)
   489d0:	ad400044 	addi	r21,r21,1
   489d4:	1d87883a 	add	r3,r3,r22
   489d8:	e1c00015 	stw	r7,0(fp)
   489dc:	003da106 	br	48064 <___vfprintf_internal_r+0x1090>
   489e0:	d8800d17 	ldw	r2,52(sp)
   489e4:	d9000b17 	ldw	r4,44(sp)
   489e8:	b0800015 	stw	r2,0(r22)
   489ec:	d8801b17 	ldw	r2,108(sp)
   489f0:	20c7883a 	add	r3,r4,r3
   489f4:	b1000115 	stw	r4,4(r22)
   489f8:	10800044 	addi	r2,r2,1
   489fc:	d8c01c15 	stw	r3,112(sp)
   48a00:	d8801b15 	stw	r2,108(sp)
   48a04:	11000208 	cmpgei	r4,r2,8
   48a08:	2000981e 	bne	r4,zero,48c6c <___vfprintf_internal_r+0x1c98>
   48a0c:	b5800204 	addi	r22,r22,8
   48a10:	a83d5c0e 	bge	r21,zero,47f84 <___vfprintf_internal_r+0xfb0>
   48a14:	01c00174 	movhi	r7,5
   48a18:	a93ffc08 	cmpgei	r4,r21,-16
   48a1c:	39cf9904 	addi	r7,r7,15972
   48a20:	056bc83a 	sub	r21,zero,r21
   48a24:	20011f1e 	bne	r4,zero,48ea4 <___vfprintf_internal_r+0x1ed0>
   48a28:	dc000715 	stw	r16,28(sp)
   48a2c:	07000404 	movi	fp,16
   48a30:	9021883a 	mov	r16,r18
   48a34:	3825883a 	mov	r18,r7
   48a38:	00000406 	br	48a4c <___vfprintf_internal_r+0x1a78>
   48a3c:	b5800204 	addi	r22,r22,8
   48a40:	ad7ffc04 	addi	r21,r21,-16
   48a44:	a9800448 	cmpgei	r6,r21,17
   48a48:	30011326 	beq	r6,zero,48e98 <___vfprintf_internal_r+0x1ec4>
   48a4c:	10800044 	addi	r2,r2,1
   48a50:	18c00404 	addi	r3,r3,16
   48a54:	b4800015 	stw	r18,0(r22)
   48a58:	b7000115 	stw	fp,4(r22)
   48a5c:	d8c01c15 	stw	r3,112(sp)
   48a60:	d8801b15 	stw	r2,108(sp)
   48a64:	11800208 	cmpgei	r6,r2,8
   48a68:	303ff426 	beq	r6,zero,48a3c <___vfprintf_internal_r+0x1a68>
   48a6c:	d9801a04 	addi	r6,sp,104
   48a70:	800b883a 	mov	r5,r16
   48a74:	9809883a 	mov	r4,r19
   48a78:	004e5400 	call	4e540 <__sprint_r>
   48a7c:	1001391e 	bne	r2,zero,48f64 <___vfprintf_internal_r+0x1f90>
   48a80:	d8c01c17 	ldw	r3,112(sp)
   48a84:	d8801b17 	ldw	r2,108(sp)
   48a88:	dd802704 	addi	r22,sp,156
   48a8c:	003fec06 	br	48a40 <___vfprintf_internal_r+0x1a6c>
   48a90:	d8801804 	addi	r2,sp,96
   48a94:	d8800315 	stw	r2,12(sp)
   48a98:	d9400917 	ldw	r5,36(sp)
   48a9c:	d8801504 	addi	r2,sp,84
   48aa0:	d8800215 	stw	r2,8(sp)
   48aa4:	d8801404 	addi	r2,sp,80
   48aa8:	da000015 	stw	r8,0(sp)
   48aac:	d8800115 	stw	r2,4(sp)
   48ab0:	01c000c4 	movi	r7,3
   48ab4:	a00d883a 	mov	r6,r20
   48ab8:	9809883a 	mov	r4,r19
   48abc:	db000815 	stw	r12,32(sp)
   48ac0:	da000715 	stw	r8,28(sp)
   48ac4:	00494200 	call	49420 <_dtoa_r>
   48ac8:	da000717 	ldw	r8,28(sp)
   48acc:	1023883a 	mov	r17,r2
   48ad0:	db000817 	ldw	r12,32(sp)
   48ad4:	1207883a 	add	r3,r2,r8
   48ad8:	88800007 	ldb	r2,0(r17)
   48adc:	10800c20 	cmpeqi	r2,r2,48
   48ae0:	10004f1e 	bne	r2,zero,48c20 <___vfprintf_internal_r+0x1c4c>
   48ae4:	d8801417 	ldw	r2,80(sp)
   48ae8:	1893883a 	add	r9,r3,r2
   48aec:	d9000917 	ldw	r4,36(sp)
   48af0:	000d883a 	mov	r6,zero
   48af4:	000f883a 	mov	r7,zero
   48af8:	a00b883a 	mov	r5,r20
   48afc:	da401115 	stw	r9,68(sp)
   48b00:	da000815 	stw	r8,32(sp)
   48b04:	db000715 	stw	r12,28(sp)
   48b08:	00455900 	call	45590 <__eqdf2>
   48b0c:	db000717 	ldw	r12,28(sp)
   48b10:	da000817 	ldw	r8,32(sp)
   48b14:	da401117 	ldw	r9,68(sp)
   48b18:	1000811e 	bne	r2,zero,48d20 <___vfprintf_internal_r+0x1d4c>
   48b1c:	4805883a 	mov	r2,r9
   48b20:	d8c01417 	ldw	r3,80(sp)
   48b24:	1445c83a 	sub	r2,r2,r17
   48b28:	ad4011d8 	cmpnei	r21,r21,71
   48b2c:	d8c00715 	stw	r3,28(sp)
   48b30:	d8800815 	stw	r2,32(sp)
   48b34:	a83f3c26 	beq	r21,zero,48828 <___vfprintf_internal_r+0x1854>
   48b38:	d8800f17 	ldw	r2,60(sp)
   48b3c:	103f3f26 	beq	r2,zero,4883c <___vfprintf_internal_r+0x1868>
   48b40:	d8c00717 	ldw	r3,28(sp)
   48b44:	6080004c 	andi	r2,r12,1
   48b48:	1204b03a 	or	r2,r2,r8
   48b4c:	00c10e0e 	bge	zero,r3,48f88 <___vfprintf_internal_r+0x1fb4>
   48b50:	1000ff1e 	bne	r2,zero,48f50 <___vfprintf_internal_r+0x1f7c>
   48b54:	dd400717 	ldw	r21,28(sp)
   48b58:	a829883a 	mov	r20,r21
   48b5c:	d8800607 	ldb	r2,24(sp)
   48b60:	10007826 	beq	r2,zero,48d44 <___vfprintf_internal_r+0x1d70>
   48b64:	00800b44 	movi	r2,45
   48b68:	d8801345 	stb	r2,77(sp)
   48b6c:	d8800e17 	ldw	r2,56(sp)
   48b70:	0011883a 	mov	r8,zero
   48b74:	d8800615 	stw	r2,24(sp)
   48b78:	003b3306 	br	47848 <___vfprintf_internal_r+0x874>
   48b7c:	04400174 	movhi	r17,5
   48b80:	8c4f8804 	addi	r17,r17,15904
   48b84:	003ab806 	br	47668 <___vfprintf_internal_r+0x694>
   48b88:	800f883a 	mov	r7,r16
   48b8c:	dc000e17 	ldw	r16,56(sp)
   48b90:	10800044 	addi	r2,r2,1
   48b94:	1d47883a 	add	r3,r3,r21
   48b98:	d8801b15 	stw	r2,108(sp)
   48b9c:	b1c00015 	stw	r7,0(r22)
   48ba0:	b5400115 	stw	r21,4(r22)
   48ba4:	d8c01c15 	stw	r3,112(sp)
   48ba8:	10800208 	cmpgei	r2,r2,8
   48bac:	10003a1e 	bne	r2,zero,48c98 <___vfprintf_internal_r+0x1cc4>
   48bb0:	b5800204 	addi	r22,r22,8
   48bb4:	003daf06 	br	48274 <___vfprintf_internal_r+0x12a0>
   48bb8:	00800b44 	movi	r2,45
   48bbc:	d8801345 	stb	r2,77(sp)
   48bc0:	03400b44 	movi	r13,45
   48bc4:	003aa406 	br	47658 <___vfprintf_internal_r+0x684>
   48bc8:	d9801a04 	addi	r6,sp,104
   48bcc:	900b883a 	mov	r5,r18
   48bd0:	9809883a 	mov	r4,r19
   48bd4:	004e5400 	call	4e540 <__sprint_r>
   48bd8:	103a0b1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48bdc:	dd401417 	ldw	r21,80(sp)
   48be0:	d8c01c17 	ldw	r3,112(sp)
   48be4:	dd802704 	addi	r22,sp,156
   48be8:	003cd406 	br	47f3c <___vfprintf_internal_r+0xf68>
   48bec:	1520003c 	xorhi	r20,r2,32768
   48bf0:	00800b44 	movi	r2,45
   48bf4:	d8800605 	stb	r2,24(sp)
   48bf8:	003ee706 	br	48798 <___vfprintf_internal_r+0x17c4>
   48bfc:	05400184 	movi	r21,6
   48c00:	003e5c06 	br	48574 <___vfprintf_internal_r+0x15a0>
   48c04:	d9801a04 	addi	r6,sp,104
   48c08:	900b883a 	mov	r5,r18
   48c0c:	9809883a 	mov	r4,r19
   48c10:	004e5400 	call	4e540 <__sprint_r>
   48c14:	0039fc06 	br	47408 <___vfprintf_internal_r+0x434>
   48c18:	d9401345 	stb	r5,77(sp)
   48c1c:	0039aa06 	br	472c8 <___vfprintf_internal_r+0x2f4>
   48c20:	d9000917 	ldw	r4,36(sp)
   48c24:	000d883a 	mov	r6,zero
   48c28:	000f883a 	mov	r7,zero
   48c2c:	a00b883a 	mov	r5,r20
   48c30:	d8c01115 	stw	r3,68(sp)
   48c34:	da000815 	stw	r8,32(sp)
   48c38:	db000715 	stw	r12,28(sp)
   48c3c:	00455900 	call	45590 <__eqdf2>
   48c40:	db000717 	ldw	r12,28(sp)
   48c44:	da000817 	ldw	r8,32(sp)
   48c48:	d8c01117 	ldw	r3,68(sp)
   48c4c:	103fa526 	beq	r2,zero,48ae4 <___vfprintf_internal_r+0x1b10>
   48c50:	00800044 	movi	r2,1
   48c54:	1205c83a 	sub	r2,r2,r8
   48c58:	d8801415 	stw	r2,80(sp)
   48c5c:	003fa206 	br	48ae8 <___vfprintf_internal_r+0x1b14>
   48c60:	403ec71e 	bne	r8,zero,48780 <___vfprintf_internal_r+0x17ac>
   48c64:	02000044 	movi	r8,1
   48c68:	003ec506 	br	48780 <___vfprintf_internal_r+0x17ac>
   48c6c:	d9801a04 	addi	r6,sp,104
   48c70:	900b883a 	mov	r5,r18
   48c74:	9809883a 	mov	r4,r19
   48c78:	004e5400 	call	4e540 <__sprint_r>
   48c7c:	1039e21e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48c80:	dd401417 	ldw	r21,80(sp)
   48c84:	d8c01c17 	ldw	r3,112(sp)
   48c88:	d8801b17 	ldw	r2,108(sp)
   48c8c:	dd802704 	addi	r22,sp,156
   48c90:	a83cbc0e 	bge	r21,zero,47f84 <___vfprintf_internal_r+0xfb0>
   48c94:	003f5f06 	br	48a14 <___vfprintf_internal_r+0x1a40>
   48c98:	d9801a04 	addi	r6,sp,104
   48c9c:	900b883a 	mov	r5,r18
   48ca0:	9809883a 	mov	r4,r19
   48ca4:	004e5400 	call	4e540 <__sprint_r>
   48ca8:	1039d71e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48cac:	d8c01c17 	ldw	r3,112(sp)
   48cb0:	dd802704 	addi	r22,sp,156
   48cb4:	003d6f06 	br	48274 <___vfprintf_internal_r+0x12a0>
   48cb8:	db000417 	ldw	r12,16(sp)
   48cbc:	003ad506 	br	47814 <___vfprintf_internal_r+0x840>
   48cc0:	d8801804 	addi	r2,sp,96
   48cc4:	d8800315 	stw	r2,12(sp)
   48cc8:	d9400917 	ldw	r5,36(sp)
   48ccc:	d8801504 	addi	r2,sp,84
   48cd0:	40c00044 	addi	r3,r8,1
   48cd4:	d8800215 	stw	r2,8(sp)
   48cd8:	d8801404 	addi	r2,sp,80
   48cdc:	d8c00015 	stw	r3,0(sp)
   48ce0:	d8800115 	stw	r2,4(sp)
   48ce4:	01c00084 	movi	r7,2
   48ce8:	a00d883a 	mov	r6,r20
   48cec:	9809883a 	mov	r4,r19
   48cf0:	db001115 	stw	r12,68(sp)
   48cf4:	da000815 	stw	r8,32(sp)
   48cf8:	d8c00715 	stw	r3,28(sp)
   48cfc:	00494200 	call	49420 <_dtoa_r>
   48d00:	d8c00717 	ldw	r3,28(sp)
   48d04:	da000817 	ldw	r8,32(sp)
   48d08:	db001117 	ldw	r12,68(sp)
   48d0c:	1023883a 	mov	r17,r2
   48d10:	e08011d8 	cmpnei	r2,fp,71
   48d14:	103ebb26 	beq	r2,zero,48804 <___vfprintf_internal_r+0x1830>
   48d18:	88d3883a 	add	r9,r17,r3
   48d1c:	003f7306 	br	48aec <___vfprintf_internal_r+0x1b18>
   48d20:	d8801817 	ldw	r2,96(sp)
   48d24:	127f7e2e 	bgeu	r2,r9,48b20 <___vfprintf_internal_r+0x1b4c>
   48d28:	01000c04 	movi	r4,48
   48d2c:	10c00044 	addi	r3,r2,1
   48d30:	d8c01815 	stw	r3,96(sp)
   48d34:	11000005 	stb	r4,0(r2)
   48d38:	d8801817 	ldw	r2,96(sp)
   48d3c:	127ffb36 	bltu	r2,r9,48d2c <___vfprintf_internal_r+0x1d58>
   48d40:	003f7706 	br	48b20 <___vfprintf_internal_r+0x1b4c>
   48d44:	d8800e17 	ldw	r2,56(sp)
   48d48:	db401343 	ldbu	r13,77(sp)
   48d4c:	0011883a 	mov	r8,zero
   48d50:	d8800615 	stw	r2,24(sp)
   48d54:	003ab806 	br	47838 <___vfprintf_internal_r+0x864>
   48d58:	d9801a04 	addi	r6,sp,104
   48d5c:	900b883a 	mov	r5,r18
   48d60:	9809883a 	mov	r4,r19
   48d64:	004e5400 	call	4e540 <__sprint_r>
   48d68:	1039a71e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48d6c:	dd401417 	ldw	r21,80(sp)
   48d70:	d8c01c17 	ldw	r3,112(sp)
   48d74:	dd802704 	addi	r22,sp,156
   48d78:	003d4d06 	br	482b0 <___vfprintf_internal_r+0x12dc>
   48d7c:	d8800717 	ldw	r2,28(sp)
   48d80:	d8c00817 	ldw	r3,32(sp)
   48d84:	10c05816 	blt	r2,r3,48ee8 <___vfprintf_internal_r+0x1f14>
   48d88:	6300004c 	andi	r12,r12,1
   48d8c:	d8800717 	ldw	r2,28(sp)
   48d90:	6000691e 	bne	r12,zero,48f38 <___vfprintf_internal_r+0x1f64>
   48d94:	1029883a 	mov	r20,r2
   48d98:	1000010e 	bge	r2,zero,48da0 <___vfprintf_internal_r+0x1dcc>
   48d9c:	0029883a 	mov	r20,zero
   48da0:	dd400717 	ldw	r21,28(sp)
   48da4:	070019c4 	movi	fp,103
   48da8:	003f6c06 	br	48b5c <___vfprintf_internal_r+0x1b88>
   48dac:	d9801a04 	addi	r6,sp,104
   48db0:	900b883a 	mov	r5,r18
   48db4:	9809883a 	mov	r4,r19
   48db8:	004e5400 	call	4e540 <__sprint_r>
   48dbc:	1039921e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48dc0:	d8c01c17 	ldw	r3,112(sp)
   48dc4:	dd802704 	addi	r22,sp,156
   48dc8:	a83d270e 	bge	r21,zero,48268 <___vfprintf_internal_r+0x1294>
   48dcc:	003ddc06 	br	48540 <___vfprintf_internal_r+0x156c>
   48dd0:	02000184 	movi	r8,6
   48dd4:	003e6a06 	br	48780 <___vfprintf_internal_r+0x17ac>
   48dd8:	d9801a04 	addi	r6,sp,104
   48ddc:	900b883a 	mov	r5,r18
   48de0:	9809883a 	mov	r4,r19
   48de4:	004e5400 	call	4e540 <__sprint_r>
   48de8:	1039871e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48dec:	dd401417 	ldw	r21,80(sp)
   48df0:	d8800817 	ldw	r2,32(sp)
   48df4:	d8c01c17 	ldw	r3,112(sp)
   48df8:	dd802704 	addi	r22,sp,156
   48dfc:	156bc83a 	sub	r21,r2,r21
   48e00:	003d3e06 	br	482fc <___vfprintf_internal_r+0x1328>
   48e04:	4029883a 	mov	r20,r8
   48e08:	d8c00615 	stw	r3,24(sp)
   48e0c:	402b883a 	mov	r21,r8
   48e10:	00393306 	br	472e0 <___vfprintf_internal_r+0x30c>
   48e14:	d9401345 	stb	r5,77(sp)
   48e18:	003aa906 	br	478c0 <___vfprintf_internal_r+0x8ec>
   48e1c:	d9401345 	stb	r5,77(sp)
   48e20:	003b5c06 	br	47b94 <___vfprintf_internal_r+0xbc0>
   48e24:	d9401345 	stb	r5,77(sp)
   48e28:	003b3a06 	br	47b14 <___vfprintf_internal_r+0xb40>
   48e2c:	d9401345 	stb	r5,77(sp)
   48e30:	0039de06 	br	475ac <___vfprintf_internal_r+0x5d8>
   48e34:	d9401345 	stb	r5,77(sp)
   48e38:	003a6106 	br	477c0 <___vfprintf_internal_r+0x7ec>
   48e3c:	d9401345 	stb	r5,77(sp)
   48e40:	003af906 	br	47a28 <___vfprintf_internal_r+0xa54>
   48e44:	00800c04 	movi	r2,48
   48e48:	ad400c04 	addi	r21,r21,48
   48e4c:	d88016c5 	stb	r2,91(sp)
   48e50:	00800104 	movi	r2,4
   48e54:	dd401705 	stb	r21,92(sp)
   48e58:	d8801015 	stw	r2,64(sp)
   48e5c:	003eaf06 	br	4891c <___vfprintf_internal_r+0x1948>
   48e60:	05400044 	movi	r21,1
   48e64:	a8ebc83a 	sub	r21,r21,r3
   48e68:	00c00b44 	movi	r3,45
   48e6c:	003e7906 	br	48854 <___vfprintf_internal_r+0x1880>
   48e70:	00bfffc4 	movi	r2,-1
   48e74:	d8800515 	stw	r2,20(sp)
   48e78:	00396606 	br	47414 <___vfprintf_internal_r+0x440>
   48e7c:	6080004c 	andi	r2,r12,1
   48e80:	d8800715 	stw	r2,28(sp)
   48e84:	103eaa1e 	bne	r2,zero,48930 <___vfprintf_internal_r+0x195c>
   48e88:	a829883a 	mov	r20,r21
   48e8c:	a83f330e 	bge	r21,zero,48b5c <___vfprintf_internal_r+0x1b88>
   48e90:	0029883a 	mov	r20,zero
   48e94:	003f3106 	br	48b5c <___vfprintf_internal_r+0x1b88>
   48e98:	900f883a 	mov	r7,r18
   48e9c:	8025883a 	mov	r18,r16
   48ea0:	dc000717 	ldw	r16,28(sp)
   48ea4:	10800044 	addi	r2,r2,1
   48ea8:	1d47883a 	add	r3,r3,r21
   48eac:	b1c00015 	stw	r7,0(r22)
   48eb0:	b5400115 	stw	r21,4(r22)
   48eb4:	d8c01c15 	stw	r3,112(sp)
   48eb8:	d8801b15 	stw	r2,108(sp)
   48ebc:	11000208 	cmpgei	r4,r2,8
   48ec0:	203c2f26 	beq	r4,zero,47f80 <___vfprintf_internal_r+0xfac>
   48ec4:	d9801a04 	addi	r6,sp,104
   48ec8:	900b883a 	mov	r5,r18
   48ecc:	9809883a 	mov	r4,r19
   48ed0:	004e5400 	call	4e540 <__sprint_r>
   48ed4:	10394c1e 	bne	r2,zero,47408 <___vfprintf_internal_r+0x434>
   48ed8:	d8c01c17 	ldw	r3,112(sp)
   48edc:	d8801b17 	ldw	r2,108(sp)
   48ee0:	dd802704 	addi	r22,sp,156
   48ee4:	003c2706 	br	47f84 <___vfprintf_internal_r+0xfb0>
   48ee8:	d8800817 	ldw	r2,32(sp)
   48eec:	d8c00b17 	ldw	r3,44(sp)
   48ef0:	10eb883a 	add	r21,r2,r3
   48ef4:	d8800717 	ldw	r2,28(sp)
   48ef8:	00800316 	blt	zero,r2,48f08 <___vfprintf_internal_r+0x1f34>
   48efc:	d8800717 	ldw	r2,28(sp)
   48f00:	a8abc83a 	sub	r21,r21,r2
   48f04:	ad400044 	addi	r21,r21,1
   48f08:	a829883a 	mov	r20,r21
   48f0c:	a8000e16 	blt	r21,zero,48f48 <___vfprintf_internal_r+0x1f74>
   48f10:	070019c4 	movi	fp,103
   48f14:	003f1106 	br	48b5c <___vfprintf_internal_r+0x1b88>
   48f18:	d8800a17 	ldw	r2,40(sp)
   48f1c:	10001616 	blt	r2,zero,48f78 <___vfprintf_internal_r+0x1fa4>
   48f20:	db401343 	ldbu	r13,77(sp)
   48f24:	e0801210 	cmplti	r2,fp,72
   48f28:	1000101e 	bne	r2,zero,48f6c <___vfprintf_internal_r+0x1f98>
   48f2c:	04400174 	movhi	r17,5
   48f30:	8c4f8b04 	addi	r17,r17,15916
   48f34:	0039cc06 	br	47668 <___vfprintf_internal_r+0x694>
   48f38:	d8c00b17 	ldw	r3,44(sp)
   48f3c:	10eb883a 	add	r21,r2,r3
   48f40:	a829883a 	mov	r20,r21
   48f44:	a83ff20e 	bge	r21,zero,48f10 <___vfprintf_internal_r+0x1f3c>
   48f48:	0029883a 	mov	r20,zero
   48f4c:	003ff006 	br	48f10 <___vfprintf_internal_r+0x1f3c>
   48f50:	d8800717 	ldw	r2,28(sp)
   48f54:	d8c00b17 	ldw	r3,44(sp)
   48f58:	10eb883a 	add	r21,r2,r3
   48f5c:	aa2b883a 	add	r21,r21,r8
   48f60:	003fc906 	br	48e88 <___vfprintf_internal_r+0x1eb4>
   48f64:	8025883a 	mov	r18,r16
   48f68:	00392706 	br	47408 <___vfprintf_internal_r+0x434>
   48f6c:	04400174 	movhi	r17,5
   48f70:	8c4f8a04 	addi	r17,r17,15912
   48f74:	0039bc06 	br	47668 <___vfprintf_internal_r+0x694>
   48f78:	00800b44 	movi	r2,45
   48f7c:	d8801345 	stb	r2,77(sp)
   48f80:	03400b44 	movi	r13,45
   48f84:	003fe706 	br	48f24 <___vfprintf_internal_r+0x1f50>
   48f88:	1000031e 	bne	r2,zero,48f98 <___vfprintf_internal_r+0x1fc4>
   48f8c:	05000044 	movi	r20,1
   48f90:	05400044 	movi	r21,1
   48f94:	003ef106 	br	48b5c <___vfprintf_internal_r+0x1b88>
   48f98:	d8800b17 	ldw	r2,44(sp)
   48f9c:	15400044 	addi	r21,r2,1
   48fa0:	aa2b883a 	add	r21,r21,r8
   48fa4:	003fb806 	br	48e88 <___vfprintf_internal_r+0x1eb4>
   48fa8:	d8800617 	ldw	r2,24(sp)
   48fac:	12000017 	ldw	r8,0(r2)
   48fb0:	10800104 	addi	r2,r2,4
   48fb4:	4000010e 	bge	r8,zero,48fbc <___vfprintf_internal_r+0x1fe8>
   48fb8:	023fffc4 	movi	r8,-1
   48fbc:	bf000043 	ldbu	fp,1(r23)
   48fc0:	d8800615 	stw	r2,24(sp)
   48fc4:	182f883a 	mov	r23,r3
   48fc8:	e2c03fcc 	andi	r11,fp,255
   48fcc:	5ac0201c 	xori	r11,r11,128
   48fd0:	5affe004 	addi	r11,r11,-128
   48fd4:	00384b06 	br	47104 <___vfprintf_internal_r+0x130>
   48fd8:	00800084 	movi	r2,2
   48fdc:	d8801015 	stw	r2,64(sp)
   48fe0:	003e4e06 	br	4891c <___vfprintf_internal_r+0x1948>

00048fe4 <__vfprintf_internal>:
   48fe4:	00c00174 	movhi	r3,5
   48fe8:	2005883a 	mov	r2,r4
   48fec:	1917c217 	ldw	r4,24328(r3)
   48ff0:	300f883a 	mov	r7,r6
   48ff4:	280d883a 	mov	r6,r5
   48ff8:	100b883a 	mov	r5,r2
   48ffc:	0046fd41 	jmpi	46fd4 <___vfprintf_internal_r>

00049000 <__sbprintf>:
   49000:	2880030b 	ldhu	r2,12(r5)
   49004:	2b001917 	ldw	r12,100(r5)
   49008:	2ac0038b 	ldhu	r11,14(r5)
   4900c:	2a800717 	ldw	r10,28(r5)
   49010:	2a400917 	ldw	r9,36(r5)
   49014:	defee204 	addi	sp,sp,-1144
   49018:	da001a04 	addi	r8,sp,104
   4901c:	00c10004 	movi	r3,1024
   49020:	dc011a15 	stw	r16,1128(sp)
   49024:	10bfff4c 	andi	r2,r2,65533
   49028:	2821883a 	mov	r16,r5
   4902c:	d80b883a 	mov	r5,sp
   49030:	dc811c15 	stw	r18,1136(sp)
   49034:	dc411b15 	stw	r17,1132(sp)
   49038:	dfc11d15 	stw	ra,1140(sp)
   4903c:	2025883a 	mov	r18,r4
   49040:	d880030d 	sth	r2,12(sp)
   49044:	db001915 	stw	r12,100(sp)
   49048:	dac0038d 	sth	r11,14(sp)
   4904c:	da800715 	stw	r10,28(sp)
   49050:	da400915 	stw	r9,36(sp)
   49054:	da000015 	stw	r8,0(sp)
   49058:	da000415 	stw	r8,16(sp)
   4905c:	d8c00215 	stw	r3,8(sp)
   49060:	d8c00515 	stw	r3,20(sp)
   49064:	d8000615 	stw	zero,24(sp)
   49068:	0046fd40 	call	46fd4 <___vfprintf_internal_r>
   4906c:	1023883a 	mov	r17,r2
   49070:	10000d0e 	bge	r2,zero,490a8 <__sbprintf+0xa8>
   49074:	d880030b 	ldhu	r2,12(sp)
   49078:	1080100c 	andi	r2,r2,64
   4907c:	10000326 	beq	r2,zero,4908c <__sbprintf+0x8c>
   49080:	8080030b 	ldhu	r2,12(r16)
   49084:	10801014 	ori	r2,r2,64
   49088:	8080030d 	sth	r2,12(r16)
   4908c:	8805883a 	mov	r2,r17
   49090:	dfc11d17 	ldw	ra,1140(sp)
   49094:	dc811c17 	ldw	r18,1136(sp)
   49098:	dc411b17 	ldw	r17,1132(sp)
   4909c:	dc011a17 	ldw	r16,1128(sp)
   490a0:	dec11e04 	addi	sp,sp,1144
   490a4:	f800283a 	ret
   490a8:	d80b883a 	mov	r5,sp
   490ac:	9009883a 	mov	r4,r18
   490b0:	004ada40 	call	4ada4 <_fflush_r>
   490b4:	103fef26 	beq	r2,zero,49074 <__sbprintf+0x74>
   490b8:	047fffc4 	movi	r17,-1
   490bc:	003fed06 	br	49074 <__sbprintf+0x74>

000490c0 <__swsetup_r>:
   490c0:	00800174 	movhi	r2,5
   490c4:	1097c217 	ldw	r2,24328(r2)
   490c8:	defffd04 	addi	sp,sp,-12
   490cc:	dc400115 	stw	r17,4(sp)
   490d0:	dc000015 	stw	r16,0(sp)
   490d4:	dfc00215 	stw	ra,8(sp)
   490d8:	2023883a 	mov	r17,r4
   490dc:	2821883a 	mov	r16,r5
   490e0:	10000226 	beq	r2,zero,490ec <__swsetup_r+0x2c>
   490e4:	10c00e17 	ldw	r3,56(r2)
   490e8:	18001f26 	beq	r3,zero,49168 <__swsetup_r+0xa8>
   490ec:	8180030b 	ldhu	r6,12(r16)
   490f0:	30c0020c 	andi	r3,r6,8
   490f4:	3005883a 	mov	r2,r6
   490f8:	18002126 	beq	r3,zero,49180 <__swsetup_r+0xc0>
   490fc:	80c00417 	ldw	r3,16(r16)
   49100:	18002826 	beq	r3,zero,491a4 <__swsetup_r+0xe4>
   49104:	1100004c 	andi	r4,r2,1
   49108:	20000b1e 	bne	r4,zero,49138 <__swsetup_r+0x78>
   4910c:	1100008c 	andi	r4,r2,2
   49110:	20002e1e 	bne	r4,zero,491cc <__swsetup_r+0x10c>
   49114:	81000517 	ldw	r4,20(r16)
   49118:	81000215 	stw	r4,8(r16)
   4911c:	18000b26 	beq	r3,zero,4914c <__swsetup_r+0x8c>
   49120:	0005883a 	mov	r2,zero
   49124:	dfc00217 	ldw	ra,8(sp)
   49128:	dc400117 	ldw	r17,4(sp)
   4912c:	dc000017 	ldw	r16,0(sp)
   49130:	dec00304 	addi	sp,sp,12
   49134:	f800283a 	ret
   49138:	81000517 	ldw	r4,20(r16)
   4913c:	80000215 	stw	zero,8(r16)
   49140:	0109c83a 	sub	r4,zero,r4
   49144:	81000615 	stw	r4,24(r16)
   49148:	183ff51e 	bne	r3,zero,49120 <__swsetup_r+0x60>
   4914c:	10c0200c 	andi	r3,r2,128
   49150:	0005883a 	mov	r2,zero
   49154:	183ff326 	beq	r3,zero,49124 <__swsetup_r+0x64>
   49158:	31801014 	ori	r6,r6,64
   4915c:	8180030d 	sth	r6,12(r16)
   49160:	00bfffc4 	movi	r2,-1
   49164:	003fef06 	br	49124 <__swsetup_r+0x64>
   49168:	1009883a 	mov	r4,r2
   4916c:	004b1c40 	call	4b1c4 <__sinit>
   49170:	8180030b 	ldhu	r6,12(r16)
   49174:	30c0020c 	andi	r3,r6,8
   49178:	3005883a 	mov	r2,r6
   4917c:	183fdf1e 	bne	r3,zero,490fc <__swsetup_r+0x3c>
   49180:	3080040c 	andi	r2,r6,16
   49184:	10002126 	beq	r2,zero,4920c <__swsetup_r+0x14c>
   49188:	3080010c 	andi	r2,r6,4
   4918c:	1000111e 	bne	r2,zero,491d4 <__swsetup_r+0x114>
   49190:	80c00417 	ldw	r3,16(r16)
   49194:	30800214 	ori	r2,r6,8
   49198:	8080030d 	sth	r2,12(r16)
   4919c:	100d883a 	mov	r6,r2
   491a0:	183fd81e 	bne	r3,zero,49104 <__swsetup_r+0x44>
   491a4:	1100a00c 	andi	r4,r2,640
   491a8:	21008020 	cmpeqi	r4,r4,512
   491ac:	203fd51e 	bne	r4,zero,49104 <__swsetup_r+0x44>
   491b0:	800b883a 	mov	r5,r16
   491b4:	8809883a 	mov	r4,r17
   491b8:	004bc400 	call	4bc40 <__smakebuf_r>
   491bc:	8180030b 	ldhu	r6,12(r16)
   491c0:	80c00417 	ldw	r3,16(r16)
   491c4:	3005883a 	mov	r2,r6
   491c8:	003fce06 	br	49104 <__swsetup_r+0x44>
   491cc:	0009883a 	mov	r4,zero
   491d0:	003fd106 	br	49118 <__swsetup_r+0x58>
   491d4:	81400c17 	ldw	r5,48(r16)
   491d8:	28000626 	beq	r5,zero,491f4 <__swsetup_r+0x134>
   491dc:	80801004 	addi	r2,r16,64
   491e0:	28800326 	beq	r5,r2,491f0 <__swsetup_r+0x130>
   491e4:	8809883a 	mov	r4,r17
   491e8:	004b3280 	call	4b328 <_free_r>
   491ec:	8180030b 	ldhu	r6,12(r16)
   491f0:	80000c15 	stw	zero,48(r16)
   491f4:	80c00417 	ldw	r3,16(r16)
   491f8:	00bff6c4 	movi	r2,-37
   491fc:	118c703a 	and	r6,r2,r6
   49200:	80000115 	stw	zero,4(r16)
   49204:	80c00015 	stw	r3,0(r16)
   49208:	003fe206 	br	49194 <__swsetup_r+0xd4>
   4920c:	00800244 	movi	r2,9
   49210:	88800015 	stw	r2,0(r17)
   49214:	31801014 	ori	r6,r6,64
   49218:	8180030d 	sth	r6,12(r16)
   4921c:	00bfffc4 	movi	r2,-1
   49220:	003fc006 	br	49124 <__swsetup_r+0x64>

00049224 <quorem>:
   49224:	defff504 	addi	sp,sp,-44
   49228:	dc800315 	stw	r18,12(sp)
   4922c:	20800417 	ldw	r2,16(r4)
   49230:	2c800417 	ldw	r18,16(r5)
   49234:	dfc00a15 	stw	ra,40(sp)
   49238:	df000915 	stw	fp,36(sp)
   4923c:	ddc00815 	stw	r23,32(sp)
   49240:	dd800715 	stw	r22,28(sp)
   49244:	dd400615 	stw	r21,24(sp)
   49248:	dd000515 	stw	r20,20(sp)
   4924c:	dcc00415 	stw	r19,16(sp)
   49250:	dc400215 	stw	r17,8(sp)
   49254:	dc000115 	stw	r16,4(sp)
   49258:	14806f16 	blt	r2,r18,49418 <quorem+0x1f4>
   4925c:	94bfffc4 	addi	r18,r18,-1
   49260:	902c90ba 	slli	r22,r18,2
   49264:	2c000504 	addi	r16,r5,20
   49268:	25000504 	addi	r20,r4,20
   4926c:	85a7883a 	add	r19,r16,r22
   49270:	9f000017 	ldw	fp,0(r19)
   49274:	a5ad883a 	add	r22,r20,r22
   49278:	202b883a 	mov	r21,r4
   4927c:	b1000017 	ldw	r4,0(r22)
   49280:	e7000044 	addi	fp,fp,1
   49284:	282f883a 	mov	r23,r5
   49288:	e00b883a 	mov	r5,fp
   4928c:	d9000015 	stw	r4,0(sp)
   49290:	0046d0c0 	call	46d0c <__udivsi3>
   49294:	d9000017 	ldw	r4,0(sp)
   49298:	1023883a 	mov	r17,r2
   4929c:	27002a36 	bltu	r4,fp,49348 <quorem+0x124>
   492a0:	800b883a 	mov	r5,r16
   492a4:	a009883a 	mov	r4,r20
   492a8:	0011883a 	mov	r8,zero
   492ac:	000f883a 	mov	r7,zero
   492b0:	29800017 	ldw	r6,0(r5)
   492b4:	20c00017 	ldw	r3,0(r4)
   492b8:	21000104 	addi	r4,r4,4
   492bc:	30bfffcc 	andi	r2,r6,65535
   492c0:	1445383a 	mul	r2,r2,r17
   492c4:	300cd43a 	srli	r6,r6,16
   492c8:	1a7fffcc 	andi	r9,r3,65535
   492cc:	1205883a 	add	r2,r2,r8
   492d0:	1010d43a 	srli	r8,r2,16
   492d4:	344d383a 	mul	r6,r6,r17
   492d8:	10bfffcc 	andi	r2,r2,65535
   492dc:	388fc83a 	sub	r7,r7,r2
   492e0:	3a4f883a 	add	r7,r7,r9
   492e4:	1806d43a 	srli	r3,r3,16
   492e8:	3805d43a 	srai	r2,r7,16
   492ec:	320d883a 	add	r6,r6,r8
   492f0:	323fffcc 	andi	r8,r6,65535
   492f4:	1a07c83a 	sub	r3,r3,r8
   492f8:	1887883a 	add	r3,r3,r2
   492fc:	1804943a 	slli	r2,r3,16
   49300:	39ffffcc 	andi	r7,r7,65535
   49304:	29400104 	addi	r5,r5,4
   49308:	11c4b03a 	or	r2,r2,r7
   4930c:	20bfff15 	stw	r2,-4(r4)
   49310:	3010d43a 	srli	r8,r6,16
   49314:	180fd43a 	srai	r7,r3,16
   49318:	997fe52e 	bgeu	r19,r5,492b0 <quorem+0x8c>
   4931c:	b0800017 	ldw	r2,0(r22)
   49320:	1000091e 	bne	r2,zero,49348 <quorem+0x124>
   49324:	b5bfff04 	addi	r22,r22,-4
   49328:	a5800336 	bltu	r20,r22,49338 <quorem+0x114>
   4932c:	00000506 	br	49344 <quorem+0x120>
   49330:	94bfffc4 	addi	r18,r18,-1
   49334:	a580032e 	bgeu	r20,r22,49344 <quorem+0x120>
   49338:	b0800017 	ldw	r2,0(r22)
   4933c:	b5bfff04 	addi	r22,r22,-4
   49340:	103ffb26 	beq	r2,zero,49330 <quorem+0x10c>
   49344:	ac800415 	stw	r18,16(r21)
   49348:	b80b883a 	mov	r5,r23
   4934c:	a809883a 	mov	r4,r21
   49350:	004d4700 	call	4d470 <__mcmp>
   49354:	10002316 	blt	r2,zero,493e4 <quorem+0x1c0>
   49358:	8c400044 	addi	r17,r17,1
   4935c:	a00b883a 	mov	r5,r20
   49360:	0005883a 	mov	r2,zero
   49364:	81000017 	ldw	r4,0(r16)
   49368:	28c00017 	ldw	r3,0(r5)
   4936c:	29400104 	addi	r5,r5,4
   49370:	21bfffcc 	andi	r6,r4,65535
   49374:	1185c83a 	sub	r2,r2,r6
   49378:	19bfffcc 	andi	r6,r3,65535
   4937c:	1185883a 	add	r2,r2,r6
   49380:	2008d43a 	srli	r4,r4,16
   49384:	1806d43a 	srli	r3,r3,16
   49388:	100fd43a 	srai	r7,r2,16
   4938c:	11bfffcc 	andi	r6,r2,65535
   49390:	1907c83a 	sub	r3,r3,r4
   49394:	19c7883a 	add	r3,r3,r7
   49398:	1808943a 	slli	r4,r3,16
   4939c:	1805d43a 	srai	r2,r3,16
   493a0:	84000104 	addi	r16,r16,4
   493a4:	2186b03a 	or	r3,r4,r6
   493a8:	28ffff15 	stw	r3,-4(r5)
   493ac:	9c3fed2e 	bgeu	r19,r16,49364 <quorem+0x140>
   493b0:	900490ba 	slli	r2,r18,2
   493b4:	a085883a 	add	r2,r20,r2
   493b8:	10c00017 	ldw	r3,0(r2)
   493bc:	1800091e 	bne	r3,zero,493e4 <quorem+0x1c0>
   493c0:	10bfff04 	addi	r2,r2,-4
   493c4:	a0800336 	bltu	r20,r2,493d4 <quorem+0x1b0>
   493c8:	00000506 	br	493e0 <quorem+0x1bc>
   493cc:	94bfffc4 	addi	r18,r18,-1
   493d0:	a080032e 	bgeu	r20,r2,493e0 <quorem+0x1bc>
   493d4:	10c00017 	ldw	r3,0(r2)
   493d8:	10bfff04 	addi	r2,r2,-4
   493dc:	183ffb26 	beq	r3,zero,493cc <quorem+0x1a8>
   493e0:	ac800415 	stw	r18,16(r21)
   493e4:	8805883a 	mov	r2,r17
   493e8:	dfc00a17 	ldw	ra,40(sp)
   493ec:	df000917 	ldw	fp,36(sp)
   493f0:	ddc00817 	ldw	r23,32(sp)
   493f4:	dd800717 	ldw	r22,28(sp)
   493f8:	dd400617 	ldw	r21,24(sp)
   493fc:	dd000517 	ldw	r20,20(sp)
   49400:	dcc00417 	ldw	r19,16(sp)
   49404:	dc800317 	ldw	r18,12(sp)
   49408:	dc400217 	ldw	r17,8(sp)
   4940c:	dc000117 	ldw	r16,4(sp)
   49410:	dec00b04 	addi	sp,sp,44
   49414:	f800283a 	ret
   49418:	0005883a 	mov	r2,zero
   4941c:	003ff206 	br	493e8 <quorem+0x1c4>

00049420 <_dtoa_r>:
   49420:	20801017 	ldw	r2,64(r4)
   49424:	deffe304 	addi	sp,sp,-116
   49428:	ddc01a15 	stw	r23,104(sp)
   4942c:	dcc01615 	stw	r19,88(sp)
   49430:	dc801515 	stw	r18,84(sp)
   49434:	dc401415 	stw	r17,80(sp)
   49438:	dc001315 	stw	r16,76(sp)
   4943c:	dfc01c15 	stw	ra,112(sp)
   49440:	df001b15 	stw	fp,108(sp)
   49444:	dd801915 	stw	r22,100(sp)
   49448:	dd401815 	stw	r21,96(sp)
   4944c:	dd001715 	stw	r20,92(sp)
   49450:	d9c00115 	stw	r7,4(sp)
   49454:	dc001f17 	ldw	r16,124(sp)
   49458:	202f883a 	mov	r23,r4
   4945c:	3023883a 	mov	r17,r6
   49460:	2827883a 	mov	r19,r5
   49464:	3025883a 	mov	r18,r6
   49468:	10000826 	beq	r2,zero,4948c <_dtoa_r+0x6c>
   4946c:	21801117 	ldw	r6,68(r4)
   49470:	00c00044 	movi	r3,1
   49474:	100b883a 	mov	r5,r2
   49478:	1986983a 	sll	r3,r3,r6
   4947c:	11800115 	stw	r6,4(r2)
   49480:	10c00215 	stw	r3,8(r2)
   49484:	004caf40 	call	4caf4 <_Bfree>
   49488:	b8001015 	stw	zero,64(r23)
   4948c:	88018f16 	blt	r17,zero,49acc <_dtoa_r+0x6ac>
   49490:	80000015 	stw	zero,0(r16)
   49494:	889ffc2c 	andhi	r2,r17,32752
   49498:	00dffc34 	movhi	r3,32752
   4949c:	10c19426 	beq	r2,r3,49af0 <_dtoa_r+0x6d0>
   494a0:	000d883a 	mov	r6,zero
   494a4:	000f883a 	mov	r7,zero
   494a8:	9809883a 	mov	r4,r19
   494ac:	900b883a 	mov	r5,r18
   494b0:	00455900 	call	45590 <__eqdf2>
   494b4:	1000191e 	bne	r2,zero,4951c <_dtoa_r+0xfc>
   494b8:	d8c01e17 	ldw	r3,120(sp)
   494bc:	00800044 	movi	r2,1
   494c0:	18800015 	stw	r2,0(r3)
   494c4:	d8802017 	ldw	r2,128(sp)
   494c8:	1002be26 	beq	r2,zero,49fc4 <_dtoa_r+0xba4>
   494cc:	d9002017 	ldw	r4,128(sp)
   494d0:	00800174 	movhi	r2,5
   494d4:	108f9844 	addi	r2,r2,15969
   494d8:	00c00174 	movhi	r3,5
   494dc:	20800015 	stw	r2,0(r4)
   494e0:	188f9804 	addi	r2,r3,15968
   494e4:	d8800215 	stw	r2,8(sp)
   494e8:	d8800217 	ldw	r2,8(sp)
   494ec:	dfc01c17 	ldw	ra,112(sp)
   494f0:	df001b17 	ldw	fp,108(sp)
   494f4:	ddc01a17 	ldw	r23,104(sp)
   494f8:	dd801917 	ldw	r22,100(sp)
   494fc:	dd401817 	ldw	r21,96(sp)
   49500:	dd001717 	ldw	r20,92(sp)
   49504:	dcc01617 	ldw	r19,88(sp)
   49508:	dc801517 	ldw	r18,84(sp)
   4950c:	dc401417 	ldw	r17,80(sp)
   49510:	dc001317 	ldw	r16,76(sp)
   49514:	dec01d04 	addi	sp,sp,116
   49518:	f800283a 	ret
   4951c:	d8801104 	addi	r2,sp,68
   49520:	8820d53a 	srli	r16,r17,20
   49524:	d8800015 	stw	r2,0(sp)
   49528:	d9c01204 	addi	r7,sp,72
   4952c:	980b883a 	mov	r5,r19
   49530:	900d883a 	mov	r6,r18
   49534:	b809883a 	mov	r4,r23
   49538:	004d84c0 	call	4d84c <__d2b>
   4953c:	1039883a 	mov	fp,r2
   49540:	80017e1e 	bne	r16,zero,49b3c <_dtoa_r+0x71c>
   49544:	dd001117 	ldw	r20,68(sp)
   49548:	dc001217 	ldw	r16,72(sp)
   4954c:	a421883a 	add	r16,r20,r16
   49550:	80810c84 	addi	r2,r16,1074
   49554:	10c00850 	cmplti	r3,r2,33
   49558:	1802c31e 	bne	r3,zero,4a068 <_dtoa_r+0xc48>
   4955c:	00c01004 	movi	r3,64
   49560:	1887c83a 	sub	r3,r3,r2
   49564:	80810484 	addi	r2,r16,1042
   49568:	88c8983a 	sll	r4,r17,r3
   4956c:	9884d83a 	srl	r2,r19,r2
   49570:	2088b03a 	or	r4,r4,r2
   49574:	00514180 	call	51418 <__floatunsidf>
   49578:	1009883a 	mov	r4,r2
   4957c:	00bf8434 	movhi	r2,65040
   49580:	188b883a 	add	r5,r3,r2
   49584:	00800044 	movi	r2,1
   49588:	843fffc4 	addi	r16,r16,-1
   4958c:	d8800915 	stw	r2,36(sp)
   49590:	000d883a 	mov	r6,zero
   49594:	01cffe34 	movhi	r7,16376
   49598:	0045ef40 	call	45ef4 <__subdf3>
   4959c:	0198dbf4 	movhi	r6,25455
   495a0:	01cff4f4 	movhi	r7,16339
   495a4:	3190d844 	addi	r6,r6,17249
   495a8:	39e1e9c4 	addi	r7,r7,-30809
   495ac:	1009883a 	mov	r4,r2
   495b0:	180b883a 	mov	r5,r3
   495b4:	00457e00 	call	457e0 <__muldf3>
   495b8:	01a2d874 	movhi	r6,35681
   495bc:	01cff1f4 	movhi	r7,16327
   495c0:	31b22cc4 	addi	r6,r6,-14157
   495c4:	39e28a04 	addi	r7,r7,-30168
   495c8:	180b883a 	mov	r5,r3
   495cc:	1009883a 	mov	r4,r2
   495d0:	00444380 	call	44438 <__adddf3>
   495d4:	8009883a 	mov	r4,r16
   495d8:	102b883a 	mov	r21,r2
   495dc:	1823883a 	mov	r17,r3
   495e0:	004689c0 	call	4689c <__floatsidf>
   495e4:	019427f4 	movhi	r6,20639
   495e8:	01cff4f4 	movhi	r7,16339
   495ec:	319e7ec4 	addi	r6,r6,31227
   495f0:	39d104c4 	addi	r7,r7,17427
   495f4:	1009883a 	mov	r4,r2
   495f8:	180b883a 	mov	r5,r3
   495fc:	00457e00 	call	457e0 <__muldf3>
   49600:	100d883a 	mov	r6,r2
   49604:	180f883a 	mov	r7,r3
   49608:	a809883a 	mov	r4,r21
   4960c:	880b883a 	mov	r5,r17
   49610:	00444380 	call	44438 <__adddf3>
   49614:	1009883a 	mov	r4,r2
   49618:	180b883a 	mov	r5,r3
   4961c:	1023883a 	mov	r17,r2
   49620:	182b883a 	mov	r21,r3
   49624:	004681c0 	call	4681c <__fixdfsi>
   49628:	000d883a 	mov	r6,zero
   4962c:	000f883a 	mov	r7,zero
   49630:	8809883a 	mov	r4,r17
   49634:	a80b883a 	mov	r5,r21
   49638:	102d883a 	mov	r22,r2
   4963c:	00456f80 	call	456f8 <__ledf2>
   49640:	10025616 	blt	r2,zero,49f9c <_dtoa_r+0xb7c>
   49644:	a429c83a 	sub	r20,r20,r16
   49648:	a0ffffc4 	addi	r3,r20,-1
   4964c:	b08005e8 	cmpgeui	r2,r22,23
   49650:	d8c00315 	stw	r3,12(sp)
   49654:	1002481e 	bne	r2,zero,49f78 <_dtoa_r+0xb58>
   49658:	b00690fa 	slli	r3,r22,3
   4965c:	00800174 	movhi	r2,5
   49660:	108fdf04 	addi	r2,r2,16252
   49664:	10c5883a 	add	r2,r2,r3
   49668:	11800017 	ldw	r6,0(r2)
   4966c:	11c00117 	ldw	r7,4(r2)
   49670:	9809883a 	mov	r4,r19
   49674:	900b883a 	mov	r5,r18
   49678:	00456f80 	call	456f8 <__ledf2>
   4967c:	10021f0e 	bge	r2,zero,49efc <_dtoa_r+0xadc>
   49680:	d8000815 	stw	zero,32(sp)
   49684:	a0bfffc4 	addi	r2,r20,-1
   49688:	b5bfffc4 	addi	r22,r22,-1
   4968c:	10023e16 	blt	r2,zero,49f88 <_dtoa_r+0xb68>
   49690:	d8000415 	stw	zero,16(sp)
   49694:	b0021d0e 	bge	r22,zero,49f0c <_dtoa_r+0xaec>
   49698:	d8800417 	ldw	r2,16(sp)
   4969c:	d8c00117 	ldw	r3,4(sp)
   496a0:	dd800615 	stw	r22,24(sp)
   496a4:	1585c83a 	sub	r2,r2,r22
   496a8:	d8800415 	stw	r2,16(sp)
   496ac:	0585c83a 	sub	r2,zero,r22
   496b0:	d8800715 	stw	r2,28(sp)
   496b4:	188002a8 	cmpgeui	r2,r3,10
   496b8:	002d883a 	mov	r22,zero
   496bc:	10021b1e 	bne	r2,zero,49f2c <_dtoa_r+0xb0c>
   496c0:	18800190 	cmplti	r2,r3,6
   496c4:	10026c1e 	bne	r2,zero,4a078 <_dtoa_r+0xc58>
   496c8:	18bfff04 	addi	r2,r3,-4
   496cc:	d8800115 	stw	r2,4(sp)
   496d0:	0021883a 	mov	r16,zero
   496d4:	d8c00117 	ldw	r3,4(sp)
   496d8:	188000e0 	cmpeqi	r2,r3,3
   496dc:	1003751e 	bne	r2,zero,4a4b4 <_dtoa_r+0x1094>
   496e0:	18800108 	cmpgei	r2,r3,4
   496e4:	10021b26 	beq	r2,zero,49f54 <_dtoa_r+0xb34>
   496e8:	d8800117 	ldw	r2,4(sp)
   496ec:	10800120 	cmpeqi	r2,r2,4
   496f0:	10025a1e 	bne	r2,zero,4a05c <_dtoa_r+0xc3c>
   496f4:	00800044 	movi	r2,1
   496f8:	d8800515 	stw	r2,20(sp)
   496fc:	d8801d17 	ldw	r2,116(sp)
   49700:	d8c00617 	ldw	r3,24(sp)
   49704:	10c5883a 	add	r2,r2,r3
   49708:	14400044 	addi	r17,r2,1
   4970c:	d8800a15 	stw	r2,40(sp)
   49710:	880d883a 	mov	r6,r17
   49714:	04400116 	blt	zero,r17,4971c <_dtoa_r+0x2fc>
   49718:	01800044 	movi	r6,1
   4971c:	b8001115 	stw	zero,68(r23)
   49720:	30800610 	cmplti	r2,r6,24
   49724:	10050c1e 	bne	r2,zero,4ab58 <_dtoa_r+0x1738>
   49728:	00c00044 	movi	r3,1
   4972c:	00800104 	movi	r2,4
   49730:	1085883a 	add	r2,r2,r2
   49734:	11000504 	addi	r4,r2,20
   49738:	180b883a 	mov	r5,r3
   4973c:	18c00044 	addi	r3,r3,1
   49740:	313ffb2e 	bgeu	r6,r4,49730 <_dtoa_r+0x310>
   49744:	b9401115 	stw	r5,68(r23)
   49748:	b809883a 	mov	r4,r23
   4974c:	004ca500 	call	4ca50 <_Balloc>
   49750:	d8800215 	stw	r2,8(sp)
   49754:	1004f526 	beq	r2,zero,4ab2c <_dtoa_r+0x170c>
   49758:	d8800217 	ldw	r2,8(sp)
   4975c:	b8801015 	stw	r2,64(r23)
   49760:	888003e8 	cmpgeui	r2,r17,15
   49764:	1001091e 	bne	r2,zero,49b8c <_dtoa_r+0x76c>
   49768:	80010826 	beq	r16,zero,49b8c <_dtoa_r+0x76c>
   4976c:	d8800617 	ldw	r2,24(sp)
   49770:	0083960e 	bge	zero,r2,4a5cc <_dtoa_r+0x11ac>
   49774:	10c003cc 	andi	r3,r2,15
   49778:	180690fa 	slli	r3,r3,3
   4977c:	102bd13a 	srai	r21,r2,4
   49780:	00800174 	movhi	r2,5
   49784:	108fdf04 	addi	r2,r2,16252
   49788:	10c5883a 	add	r2,r2,r3
   4978c:	a8c0040c 	andi	r3,r21,16
   49790:	12800017 	ldw	r10,0(r2)
   49794:	12400117 	ldw	r9,4(r2)
   49798:	18033e26 	beq	r3,zero,4a494 <_dtoa_r+0x1074>
   4979c:	00800174 	movhi	r2,5
   497a0:	108fd504 	addi	r2,r2,16212
   497a4:	11800817 	ldw	r6,32(r2)
   497a8:	11c00917 	ldw	r7,36(r2)
   497ac:	9809883a 	mov	r4,r19
   497b0:	900b883a 	mov	r5,r18
   497b4:	da400e15 	stw	r9,56(sp)
   497b8:	da800d15 	stw	r10,52(sp)
   497bc:	0044d440 	call	44d44 <__divdf3>
   497c0:	da800d17 	ldw	r10,52(sp)
   497c4:	da400e17 	ldw	r9,56(sp)
   497c8:	ad4003cc 	andi	r21,r21,15
   497cc:	d8800b15 	stw	r2,44(sp)
   497d0:	d8c00c15 	stw	r3,48(sp)
   497d4:	040000c4 	movi	r16,3
   497d8:	a8001126 	beq	r21,zero,49820 <_dtoa_r+0x400>
   497dc:	05000174 	movhi	r20,5
   497e0:	a50fd504 	addi	r20,r20,16212
   497e4:	5009883a 	mov	r4,r10
   497e8:	480b883a 	mov	r5,r9
   497ec:	a980004c 	andi	r6,r21,1
   497f0:	30000626 	beq	r6,zero,4980c <_dtoa_r+0x3ec>
   497f4:	a1800017 	ldw	r6,0(r20)
   497f8:	a1c00117 	ldw	r7,4(r20)
   497fc:	84000044 	addi	r16,r16,1
   49800:	00457e00 	call	457e0 <__muldf3>
   49804:	1009883a 	mov	r4,r2
   49808:	180b883a 	mov	r5,r3
   4980c:	a82bd07a 	srai	r21,r21,1
   49810:	a5000204 	addi	r20,r20,8
   49814:	a83ff51e 	bne	r21,zero,497ec <_dtoa_r+0x3cc>
   49818:	2015883a 	mov	r10,r4
   4981c:	2813883a 	mov	r9,r5
   49820:	d9000b17 	ldw	r4,44(sp)
   49824:	d9400c17 	ldw	r5,48(sp)
   49828:	500d883a 	mov	r6,r10
   4982c:	480f883a 	mov	r7,r9
   49830:	0044d440 	call	44d44 <__divdf3>
   49834:	d8800b15 	stw	r2,44(sp)
   49838:	1829883a 	mov	r20,r3
   4983c:	d8800817 	ldw	r2,32(sp)
   49840:	10000726 	beq	r2,zero,49860 <_dtoa_r+0x440>
   49844:	dd400b17 	ldw	r21,44(sp)
   49848:	000d883a 	mov	r6,zero
   4984c:	01cffc34 	movhi	r7,16368
   49850:	a809883a 	mov	r4,r21
   49854:	a00b883a 	mov	r5,r20
   49858:	00456f80 	call	456f8 <__ledf2>
   4985c:	10044a16 	blt	r2,zero,4a988 <_dtoa_r+0x1568>
   49860:	8009883a 	mov	r4,r16
   49864:	004689c0 	call	4689c <__floatsidf>
   49868:	d9800b17 	ldw	r6,44(sp)
   4986c:	a00f883a 	mov	r7,r20
   49870:	1009883a 	mov	r4,r2
   49874:	180b883a 	mov	r5,r3
   49878:	00457e00 	call	457e0 <__muldf3>
   4987c:	000d883a 	mov	r6,zero
   49880:	01d00734 	movhi	r7,16412
   49884:	1009883a 	mov	r4,r2
   49888:	180b883a 	mov	r5,r3
   4988c:	00444380 	call	44438 <__adddf3>
   49890:	102b883a 	mov	r21,r2
   49894:	00bf3034 	movhi	r2,64704
   49898:	1885883a 	add	r2,r3,r2
   4989c:	d8800c15 	stw	r2,48(sp)
   498a0:	88032026 	beq	r17,zero,4a524 <_dtoa_r+0x1104>
   498a4:	d8800617 	ldw	r2,24(sp)
   498a8:	dc400d15 	stw	r17,52(sp)
   498ac:	d8801015 	stw	r2,64(sp)
   498b0:	dc000b17 	ldw	r16,44(sp)
   498b4:	a00b883a 	mov	r5,r20
   498b8:	8009883a 	mov	r4,r16
   498bc:	004681c0 	call	4681c <__fixdfsi>
   498c0:	d8c00d17 	ldw	r3,52(sp)
   498c4:	d8800f15 	stw	r2,60(sp)
   498c8:	193fffc4 	addi	r4,r3,-1
   498cc:	200890fa 	slli	r4,r4,3
   498d0:	00c00174 	movhi	r3,5
   498d4:	18cfdf04 	addi	r3,r3,16252
   498d8:	1907883a 	add	r3,r3,r4
   498dc:	1b000017 	ldw	r12,0(r3)
   498e0:	1b400117 	ldw	r13,4(r3)
   498e4:	1009883a 	mov	r4,r2
   498e8:	db000e15 	stw	r12,56(sp)
   498ec:	db400b15 	stw	r13,44(sp)
   498f0:	004689c0 	call	4689c <__floatsidf>
   498f4:	8009883a 	mov	r4,r16
   498f8:	a00b883a 	mov	r5,r20
   498fc:	100d883a 	mov	r6,r2
   49900:	180f883a 	mov	r7,r3
   49904:	0045ef40 	call	45ef4 <__subdf3>
   49908:	d9000217 	ldw	r4,8(sp)
   4990c:	dac00f17 	ldw	r11,60(sp)
   49910:	1829883a 	mov	r20,r3
   49914:	d8c00517 	ldw	r3,20(sp)
   49918:	db400b17 	ldw	r13,44(sp)
   4991c:	db000e17 	ldw	r12,56(sp)
   49920:	22000044 	addi	r8,r4,1
   49924:	1021883a 	mov	r16,r2
   49928:	5ac00c04 	addi	r11,r11,48
   4992c:	1803b926 	beq	r3,zero,4a814 <_dtoa_r+0x13f4>
   49930:	600d883a 	mov	r6,r12
   49934:	680f883a 	mov	r7,r13
   49938:	0009883a 	mov	r4,zero
   4993c:	014ff834 	movhi	r5,16352
   49940:	da000e15 	stw	r8,56(sp)
   49944:	dac00f15 	stw	r11,60(sp)
   49948:	0044d440 	call	44d44 <__divdf3>
   4994c:	d9c00c17 	ldw	r7,48(sp)
   49950:	a80d883a 	mov	r6,r21
   49954:	1009883a 	mov	r4,r2
   49958:	180b883a 	mov	r5,r3
   4995c:	0045ef40 	call	45ef4 <__subdf3>
   49960:	dac00f17 	ldw	r11,60(sp)
   49964:	102b883a 	mov	r21,r2
   49968:	d8800217 	ldw	r2,8(sp)
   4996c:	800d883a 	mov	r6,r16
   49970:	a00f883a 	mov	r7,r20
   49974:	12c00005 	stb	r11,0(r2)
   49978:	a809883a 	mov	r4,r21
   4997c:	180b883a 	mov	r5,r3
   49980:	d8c00b15 	stw	r3,44(sp)
   49984:	00456100 	call	45610 <__gedf2>
   49988:	da000e17 	ldw	r8,56(sp)
   4998c:	0083ec16 	blt	zero,r2,4a940 <_dtoa_r+0x1520>
   49990:	0005883a 	mov	r2,zero
   49994:	dd800e15 	stw	r22,56(sp)
   49998:	dc400f15 	stw	r17,60(sp)
   4999c:	dd800d17 	ldw	r22,52(sp)
   499a0:	dc400b17 	ldw	r17,44(sp)
   499a4:	dcc00d15 	stw	r19,52(sp)
   499a8:	dc800b15 	stw	r18,44(sp)
   499ac:	ddc00c15 	stw	r23,48(sp)
   499b0:	1025883a 	mov	r18,r2
   499b4:	4027883a 	mov	r19,r8
   499b8:	00002606 	br	49a54 <_dtoa_r+0x634>
   499bc:	94800044 	addi	r18,r18,1
   499c0:	95806d0e 	bge	r18,r22,49b78 <_dtoa_r+0x758>
   499c4:	a809883a 	mov	r4,r21
   499c8:	880b883a 	mov	r5,r17
   499cc:	000d883a 	mov	r6,zero
   499d0:	01d00934 	movhi	r7,16420
   499d4:	00457e00 	call	457e0 <__muldf3>
   499d8:	000d883a 	mov	r6,zero
   499dc:	01d00934 	movhi	r7,16420
   499e0:	8009883a 	mov	r4,r16
   499e4:	a00b883a 	mov	r5,r20
   499e8:	102b883a 	mov	r21,r2
   499ec:	1823883a 	mov	r17,r3
   499f0:	00457e00 	call	457e0 <__muldf3>
   499f4:	180b883a 	mov	r5,r3
   499f8:	1009883a 	mov	r4,r2
   499fc:	1821883a 	mov	r16,r3
   49a00:	1029883a 	mov	r20,r2
   49a04:	004681c0 	call	4681c <__fixdfsi>
   49a08:	1009883a 	mov	r4,r2
   49a0c:	102f883a 	mov	r23,r2
   49a10:	004689c0 	call	4689c <__floatsidf>
   49a14:	a009883a 	mov	r4,r20
   49a18:	800b883a 	mov	r5,r16
   49a1c:	100d883a 	mov	r6,r2
   49a20:	180f883a 	mov	r7,r3
   49a24:	0045ef40 	call	45ef4 <__subdf3>
   49a28:	9cc00044 	addi	r19,r19,1
   49a2c:	ba000c04 	addi	r8,r23,48
   49a30:	9a3fffc5 	stb	r8,-1(r19)
   49a34:	a80d883a 	mov	r6,r21
   49a38:	880f883a 	mov	r7,r17
   49a3c:	1009883a 	mov	r4,r2
   49a40:	180b883a 	mov	r5,r3
   49a44:	1021883a 	mov	r16,r2
   49a48:	1829883a 	mov	r20,r3
   49a4c:	00456f80 	call	456f8 <__ledf2>
   49a50:	10040d16 	blt	r2,zero,4aa88 <_dtoa_r+0x1668>
   49a54:	800d883a 	mov	r6,r16
   49a58:	a00f883a 	mov	r7,r20
   49a5c:	0009883a 	mov	r4,zero
   49a60:	014ffc34 	movhi	r5,16368
   49a64:	0045ef40 	call	45ef4 <__subdf3>
   49a68:	a80d883a 	mov	r6,r21
   49a6c:	880f883a 	mov	r7,r17
   49a70:	1009883a 	mov	r4,r2
   49a74:	180b883a 	mov	r5,r3
   49a78:	00456f80 	call	456f8 <__ledf2>
   49a7c:	103fcf0e 	bge	r2,zero,499bc <_dtoa_r+0x59c>
   49a80:	d8801017 	ldw	r2,64(sp)
   49a84:	982b883a 	mov	r21,r19
   49a88:	ddc00c17 	ldw	r23,48(sp)
   49a8c:	d9000217 	ldw	r4,8(sp)
   49a90:	14c00044 	addi	r19,r2,1
   49a94:	00000106 	br	49a9c <_dtoa_r+0x67c>
   49a98:	2543e026 	beq	r4,r21,4aa1c <_dtoa_r+0x15fc>
   49a9c:	a8ffffc3 	ldbu	r3,-1(r21)
   49aa0:	a811883a 	mov	r8,r21
   49aa4:	ad7fffc4 	addi	r21,r21,-1
   49aa8:	18803fcc 	andi	r2,r3,255
   49aac:	1080201c 	xori	r2,r2,128
   49ab0:	10bfe004 	addi	r2,r2,-128
   49ab4:	10800e60 	cmpeqi	r2,r2,57
   49ab8:	103ff71e 	bne	r2,zero,49a98 <_dtoa_r+0x678>
   49abc:	18c00044 	addi	r3,r3,1
   49ac0:	a8c00005 	stb	r3,0(r21)
   49ac4:	dcc00115 	stw	r19,4(sp)
   49ac8:	00024b06 	br	4a3f8 <_dtoa_r+0xfd8>
   49acc:	04a00034 	movhi	r18,32768
   49ad0:	94bfffc4 	addi	r18,r18,-1
   49ad4:	8ca4703a 	and	r18,r17,r18
   49ad8:	00800044 	movi	r2,1
   49adc:	9023883a 	mov	r17,r18
   49ae0:	80800015 	stw	r2,0(r16)
   49ae4:	00dffc34 	movhi	r3,32752
   49ae8:	889ffc2c 	andhi	r2,r17,32752
   49aec:	10fe6c1e 	bne	r2,r3,494a0 <_dtoa_r+0x80>
   49af0:	d9001e17 	ldw	r4,120(sp)
   49af4:	00800434 	movhi	r2,16
   49af8:	10bfffc4 	addi	r2,r2,-1
   49afc:	8884703a 	and	r2,r17,r2
   49b00:	00c9c3c4 	movi	r3,9999
   49b04:	20c00015 	stw	r3,0(r4)
   49b08:	14c4b03a 	or	r2,r2,r19
   49b0c:	1000141e 	bne	r2,zero,49b60 <_dtoa_r+0x740>
   49b10:	d8802017 	ldw	r2,128(sp)
   49b14:	10040c26 	beq	r2,zero,4ab48 <_dtoa_r+0x1728>
   49b18:	00800174 	movhi	r2,5
   49b1c:	1007883a 	mov	r3,r2
   49b20:	18cfa104 	addi	r3,r3,16004
   49b24:	00800174 	movhi	r2,5
   49b28:	d8c00215 	stw	r3,8(sp)
   49b2c:	108fa304 	addi	r2,r2,16012
   49b30:	d8c02017 	ldw	r3,128(sp)
   49b34:	18800015 	stw	r2,0(r3)
   49b38:	003e6b06 	br	494e8 <_dtoa_r+0xc8>
   49b3c:	01400434 	movhi	r5,16
   49b40:	297fffc4 	addi	r5,r5,-1
   49b44:	914a703a 	and	r5,r18,r5
   49b48:	dd001117 	ldw	r20,68(sp)
   49b4c:	9809883a 	mov	r4,r19
   49b50:	294ffc34 	orhi	r5,r5,16368
   49b54:	843f0044 	addi	r16,r16,-1023
   49b58:	d8000915 	stw	zero,36(sp)
   49b5c:	003e8c06 	br	49590 <_dtoa_r+0x170>
   49b60:	d8802017 	ldw	r2,128(sp)
   49b64:	1001e81e 	bne	r2,zero,4a308 <_dtoa_r+0xee8>
   49b68:	00800174 	movhi	r2,5
   49b6c:	108fa404 	addi	r2,r2,16016
   49b70:	d8800215 	stw	r2,8(sp)
   49b74:	003e5c06 	br	494e8 <_dtoa_r+0xc8>
   49b78:	dd800e17 	ldw	r22,56(sp)
   49b7c:	dc400f17 	ldw	r17,60(sp)
   49b80:	ddc00c17 	ldw	r23,48(sp)
   49b84:	dc800b17 	ldw	r18,44(sp)
   49b88:	dcc00d17 	ldw	r19,52(sp)
   49b8c:	d8801217 	ldw	r2,72(sp)
   49b90:	10006b16 	blt	r2,zero,49d40 <_dtoa_r+0x920>
   49b94:	d9000617 	ldw	r4,24(sp)
   49b98:	20c003c8 	cmpgei	r3,r4,15
   49b9c:	1800681e 	bne	r3,zero,49d40 <_dtoa_r+0x920>
   49ba0:	200690fa 	slli	r3,r4,3
   49ba4:	00800174 	movhi	r2,5
   49ba8:	108fdf04 	addi	r2,r2,16252
   49bac:	10c5883a 	add	r2,r2,r3
   49bb0:	14000017 	ldw	r16,0(r2)
   49bb4:	15000117 	ldw	r20,4(r2)
   49bb8:	d8801d17 	ldw	r2,116(sp)
   49bbc:	1000130e 	bge	r2,zero,49c0c <_dtoa_r+0x7ec>
   49bc0:	04401216 	blt	zero,r17,49c0c <_dtoa_r+0x7ec>
   49bc4:	88026b1e 	bne	r17,zero,4a574 <_dtoa_r+0x1154>
   49bc8:	8009883a 	mov	r4,r16
   49bcc:	a00b883a 	mov	r5,r20
   49bd0:	000d883a 	mov	r6,zero
   49bd4:	01d00534 	movhi	r7,16404
   49bd8:	00457e00 	call	457e0 <__muldf3>
   49bdc:	100d883a 	mov	r6,r2
   49be0:	180f883a 	mov	r7,r3
   49be4:	9809883a 	mov	r4,r19
   49be8:	900b883a 	mov	r5,r18
   49bec:	00456f80 	call	456f8 <__ledf2>
   49bf0:	0029883a 	mov	r20,zero
   49bf4:	0021883a 	mov	r16,zero
   49bf8:	0081ec16 	blt	zero,r2,4a3ac <_dtoa_r+0xf8c>
   49bfc:	d8801d17 	ldw	r2,116(sp)
   49c00:	da000217 	ldw	r8,8(sp)
   49c04:	00a6303a 	nor	r19,zero,r2
   49c08:	0001ee06 	br	4a3c4 <_dtoa_r+0xfa4>
   49c0c:	800d883a 	mov	r6,r16
   49c10:	a00f883a 	mov	r7,r20
   49c14:	9809883a 	mov	r4,r19
   49c18:	900b883a 	mov	r5,r18
   49c1c:	0044d440 	call	44d44 <__divdf3>
   49c20:	180b883a 	mov	r5,r3
   49c24:	1009883a 	mov	r4,r2
   49c28:	004681c0 	call	4681c <__fixdfsi>
   49c2c:	1009883a 	mov	r4,r2
   49c30:	102d883a 	mov	r22,r2
   49c34:	004689c0 	call	4689c <__floatsidf>
   49c38:	800d883a 	mov	r6,r16
   49c3c:	a00f883a 	mov	r7,r20
   49c40:	1009883a 	mov	r4,r2
   49c44:	180b883a 	mov	r5,r3
   49c48:	00457e00 	call	457e0 <__muldf3>
   49c4c:	100d883a 	mov	r6,r2
   49c50:	9809883a 	mov	r4,r19
   49c54:	900b883a 	mov	r5,r18
   49c58:	180f883a 	mov	r7,r3
   49c5c:	0045ef40 	call	45ef4 <__subdf3>
   49c60:	d9800217 	ldw	r6,8(sp)
   49c64:	1009883a 	mov	r4,r2
   49c68:	b0800c04 	addi	r2,r22,48
   49c6c:	30800005 	stb	r2,0(r6)
   49c70:	88800060 	cmpeqi	r2,r17,1
   49c74:	180b883a 	mov	r5,r3
   49c78:	35400044 	addi	r21,r6,1
   49c7c:	1002a41e 	bne	r2,zero,4a710 <_dtoa_r+0x12f0>
   49c80:	04c00044 	movi	r19,1
   49c84:	ddc00115 	stw	r23,4(sp)
   49c88:	00001c06 	br	49cfc <_dtoa_r+0x8dc>
   49c8c:	800d883a 	mov	r6,r16
   49c90:	a00f883a 	mov	r7,r20
   49c94:	b009883a 	mov	r4,r22
   49c98:	900b883a 	mov	r5,r18
   49c9c:	0044d440 	call	44d44 <__divdf3>
   49ca0:	180b883a 	mov	r5,r3
   49ca4:	1009883a 	mov	r4,r2
   49ca8:	004681c0 	call	4681c <__fixdfsi>
   49cac:	1009883a 	mov	r4,r2
   49cb0:	102f883a 	mov	r23,r2
   49cb4:	004689c0 	call	4689c <__floatsidf>
   49cb8:	800d883a 	mov	r6,r16
   49cbc:	a00f883a 	mov	r7,r20
   49cc0:	1009883a 	mov	r4,r2
   49cc4:	180b883a 	mov	r5,r3
   49cc8:	00457e00 	call	457e0 <__muldf3>
   49ccc:	b009883a 	mov	r4,r22
   49cd0:	900b883a 	mov	r5,r18
   49cd4:	100d883a 	mov	r6,r2
   49cd8:	180f883a 	mov	r7,r3
   49cdc:	0045ef40 	call	45ef4 <__subdf3>
   49ce0:	b9000c04 	addi	r4,r23,48
   49ce4:	a9000005 	stb	r4,0(r21)
   49ce8:	9cc00044 	addi	r19,r19,1
   49cec:	ad400044 	addi	r21,r21,1
   49cf0:	1009883a 	mov	r4,r2
   49cf4:	180b883a 	mov	r5,r3
   49cf8:	9c428326 	beq	r19,r17,4a708 <_dtoa_r+0x12e8>
   49cfc:	000d883a 	mov	r6,zero
   49d00:	01d00934 	movhi	r7,16420
   49d04:	00457e00 	call	457e0 <__muldf3>
   49d08:	000d883a 	mov	r6,zero
   49d0c:	000f883a 	mov	r7,zero
   49d10:	1009883a 	mov	r4,r2
   49d14:	180b883a 	mov	r5,r3
   49d18:	102d883a 	mov	r22,r2
   49d1c:	1825883a 	mov	r18,r3
   49d20:	00455900 	call	45590 <__eqdf2>
   49d24:	103fd91e 	bne	r2,zero,49c8c <_dtoa_r+0x86c>
   49d28:	d8800617 	ldw	r2,24(sp)
   49d2c:	ddc00117 	ldw	r23,4(sp)
   49d30:	a811883a 	mov	r8,r21
   49d34:	10800044 	addi	r2,r2,1
   49d38:	d8800115 	stw	r2,4(sp)
   49d3c:	0001ae06 	br	4a3f8 <_dtoa_r+0xfd8>
   49d40:	d8c00517 	ldw	r3,20(sp)
   49d44:	1800a326 	beq	r3,zero,49fd4 <_dtoa_r+0xbb4>
   49d48:	d8c00117 	ldw	r3,4(sp)
   49d4c:	18c00088 	cmpgei	r3,r3,2
   49d50:	18021226 	beq	r3,zero,4a59c <_dtoa_r+0x117c>
   49d54:	d8800717 	ldw	r2,28(sp)
   49d58:	8d3fffc4 	addi	r20,r17,-1
   49d5c:	1501bb0e 	bge	r2,r20,4a44c <_dtoa_r+0x102c>
   49d60:	d8800717 	ldw	r2,28(sp)
   49d64:	dd000715 	stw	r20,28(sp)
   49d68:	a085c83a 	sub	r2,r20,r2
   49d6c:	b0ad883a 	add	r22,r22,r2
   49d70:	0029883a 	mov	r20,zero
   49d74:	d8800417 	ldw	r2,16(sp)
   49d78:	88028f16 	blt	r17,zero,4a7b8 <_dtoa_r+0x1398>
   49d7c:	d8c00317 	ldw	r3,12(sp)
   49d80:	102b883a 	mov	r21,r2
   49d84:	1445883a 	add	r2,r2,r17
   49d88:	1c47883a 	add	r3,r3,r17
   49d8c:	d8c00315 	stw	r3,12(sp)
   49d90:	d8800415 	stw	r2,16(sp)
   49d94:	01400044 	movi	r5,1
   49d98:	b809883a 	mov	r4,r23
   49d9c:	004ce9c0 	call	4ce9c <__i2b>
   49da0:	1021883a 	mov	r16,r2
   49da4:	a8000b26 	beq	r21,zero,49dd4 <_dtoa_r+0x9b4>
   49da8:	d8c00317 	ldw	r3,12(sp)
   49dac:	00c0090e 	bge	zero,r3,49dd4 <_dtoa_r+0x9b4>
   49db0:	a805883a 	mov	r2,r21
   49db4:	1d41a316 	blt	r3,r21,4a444 <_dtoa_r+0x1024>
   49db8:	d8c00417 	ldw	r3,16(sp)
   49dbc:	a8abc83a 	sub	r21,r21,r2
   49dc0:	1887c83a 	sub	r3,r3,r2
   49dc4:	d8c00415 	stw	r3,16(sp)
   49dc8:	d8c00317 	ldw	r3,12(sp)
   49dcc:	1885c83a 	sub	r2,r3,r2
   49dd0:	d8800315 	stw	r2,12(sp)
   49dd4:	d8800717 	ldw	r2,28(sp)
   49dd8:	10000626 	beq	r2,zero,49df4 <_dtoa_r+0x9d4>
   49ddc:	d8800517 	ldw	r2,20(sp)
   49de0:	10022d26 	beq	r2,zero,4a698 <_dtoa_r+0x1278>
   49de4:	05019b16 	blt	zero,r20,4a454 <_dtoa_r+0x1034>
   49de8:	d8800717 	ldw	r2,28(sp)
   49dec:	150dc83a 	sub	r6,r2,r20
   49df0:	1502831e 	bne	r2,r20,4a800 <_dtoa_r+0x13e0>
   49df4:	01400044 	movi	r5,1
   49df8:	b809883a 	mov	r4,r23
   49dfc:	004ce9c0 	call	4ce9c <__i2b>
   49e00:	1029883a 	mov	r20,r2
   49e04:	05809e16 	blt	zero,r22,4a080 <_dtoa_r+0xc60>
   49e08:	d8800117 	ldw	r2,4(sp)
   49e0c:	10800088 	cmpgei	r2,r2,2
   49e10:	10014a26 	beq	r2,zero,4a33c <_dtoa_r+0xf1c>
   49e14:	0025883a 	mov	r18,zero
   49e18:	00800044 	movi	r2,1
   49e1c:	b000a11e 	bne	r22,zero,4a0a4 <_dtoa_r+0xc84>
   49e20:	d8c00317 	ldw	r3,12(sp)
   49e24:	1885883a 	add	r2,r3,r2
   49e28:	108007cc 	andi	r2,r2,31
   49e2c:	10014126 	beq	r2,zero,4a334 <_dtoa_r+0xf14>
   49e30:	00c00804 	movi	r3,32
   49e34:	1887c83a 	sub	r3,r3,r2
   49e38:	19000150 	cmplti	r4,r3,5
   49e3c:	20007d26 	beq	r4,zero,4a034 <_dtoa_r+0xc14>
   49e40:	18c00120 	cmpeqi	r3,r3,4
   49e44:	18019926 	beq	r3,zero,4a4ac <_dtoa_r+0x108c>
   49e48:	d8800417 	ldw	r2,16(sp)
   49e4c:	0080050e 	bge	zero,r2,49e64 <_dtoa_r+0xa44>
   49e50:	e00b883a 	mov	r5,fp
   49e54:	100d883a 	mov	r6,r2
   49e58:	b809883a 	mov	r4,r23
   49e5c:	004d2e80 	call	4d2e8 <__lshift>
   49e60:	1039883a 	mov	fp,r2
   49e64:	d8800317 	ldw	r2,12(sp)
   49e68:	0080050e 	bge	zero,r2,49e80 <_dtoa_r+0xa60>
   49e6c:	a00b883a 	mov	r5,r20
   49e70:	100d883a 	mov	r6,r2
   49e74:	b809883a 	mov	r4,r23
   49e78:	004d2e80 	call	4d2e8 <__lshift>
   49e7c:	1029883a 	mov	r20,r2
   49e80:	d8800817 	ldw	r2,32(sp)
   49e84:	1000571e 	bne	r2,zero,49fe4 <_dtoa_r+0xbc4>
   49e88:	0440e90e 	bge	zero,r17,4a230 <_dtoa_r+0xe10>
   49e8c:	d8800517 	ldw	r2,20(sp)
   49e90:	1000971e 	bne	r2,zero,4a0f0 <_dtoa_r+0xcd0>
   49e94:	d8800617 	ldw	r2,24(sp)
   49e98:	10800044 	addi	r2,r2,1
   49e9c:	d8800115 	stw	r2,4(sp)
   49ea0:	dd400217 	ldw	r21,8(sp)
   49ea4:	04800044 	movi	r18,1
   49ea8:	00000706 	br	49ec8 <_dtoa_r+0xaa8>
   49eac:	e00b883a 	mov	r5,fp
   49eb0:	000f883a 	mov	r7,zero
   49eb4:	01800284 	movi	r6,10
   49eb8:	b809883a 	mov	r4,r23
   49ebc:	004cb180 	call	4cb18 <__multadd>
   49ec0:	1039883a 	mov	fp,r2
   49ec4:	94800044 	addi	r18,r18,1
   49ec8:	a00b883a 	mov	r5,r20
   49ecc:	e009883a 	mov	r4,fp
   49ed0:	00492240 	call	49224 <quorem>
   49ed4:	14c00c04 	addi	r19,r2,48
   49ed8:	ac85883a 	add	r2,r21,r18
   49edc:	14ffffc5 	stb	r19,-1(r2)
   49ee0:	947ff216 	blt	r18,r17,49eac <_dtoa_r+0xa8c>
   49ee4:	04416f0e 	bge	zero,r17,4a4a4 <_dtoa_r+0x1084>
   49ee8:	8811883a 	mov	r8,r17
   49eec:	d8800217 	ldw	r2,8(sp)
   49ef0:	0023883a 	mov	r17,zero
   49ef4:	1211883a 	add	r8,r2,r8
   49ef8:	0000dd06 	br	4a270 <_dtoa_r+0xe50>
   49efc:	a0bfffc4 	addi	r2,r20,-1
   49f00:	d8000815 	stw	zero,32(sp)
   49f04:	10002016 	blt	r2,zero,49f88 <_dtoa_r+0xb68>
   49f08:	d8000415 	stw	zero,16(sp)
   49f0c:	d8800317 	ldw	r2,12(sp)
   49f10:	d8c00117 	ldw	r3,4(sp)
   49f14:	dd800615 	stw	r22,24(sp)
   49f18:	1585883a 	add	r2,r2,r22
   49f1c:	d8800315 	stw	r2,12(sp)
   49f20:	d8000715 	stw	zero,28(sp)
   49f24:	188002a8 	cmpgeui	r2,r3,10
   49f28:	103de526 	beq	r2,zero,496c0 <_dtoa_r+0x2a0>
   49f2c:	00800044 	movi	r2,1
   49f30:	04000044 	movi	r16,1
   49f34:	d8000115 	stw	zero,4(sp)
   49f38:	d8800515 	stw	r2,20(sp)
   49f3c:	047fffc4 	movi	r17,-1
   49f40:	d8001d15 	stw	zero,116(sp)
   49f44:	b8001115 	stw	zero,68(r23)
   49f48:	dc400a15 	stw	r17,40(sp)
   49f4c:	000b883a 	mov	r5,zero
   49f50:	003dfd06 	br	49748 <_dtoa_r+0x328>
   49f54:	188000a0 	cmpeqi	r2,r3,2
   49f58:	d8000515 	stw	zero,20(sp)
   49f5c:	1002e426 	beq	r2,zero,4aaf0 <_dtoa_r+0x16d0>
   49f60:	d8801d17 	ldw	r2,116(sp)
   49f64:	0080ef0e 	bge	zero,r2,4a324 <_dtoa_r+0xf04>
   49f68:	d8800a15 	stw	r2,40(sp)
   49f6c:	1023883a 	mov	r17,r2
   49f70:	100d883a 	mov	r6,r2
   49f74:	003de906 	br	4971c <_dtoa_r+0x2fc>
   49f78:	00800044 	movi	r2,1
   49f7c:	d8800815 	stw	r2,32(sp)
   49f80:	a0bfffc4 	addi	r2,r20,-1
   49f84:	103dc20e 	bge	r2,zero,49690 <_dtoa_r+0x270>
   49f88:	00800044 	movi	r2,1
   49f8c:	1505c83a 	sub	r2,r2,r20
   49f90:	d8800415 	stw	r2,16(sp)
   49f94:	d8000315 	stw	zero,12(sp)
   49f98:	003dbe06 	br	49694 <_dtoa_r+0x274>
   49f9c:	b009883a 	mov	r4,r22
   49fa0:	004689c0 	call	4689c <__floatsidf>
   49fa4:	880d883a 	mov	r6,r17
   49fa8:	a80f883a 	mov	r7,r21
   49fac:	1009883a 	mov	r4,r2
   49fb0:	180b883a 	mov	r5,r3
   49fb4:	00455900 	call	45590 <__eqdf2>
   49fb8:	103da226 	beq	r2,zero,49644 <_dtoa_r+0x224>
   49fbc:	b5bfffc4 	addi	r22,r22,-1
   49fc0:	003da006 	br	49644 <_dtoa_r+0x224>
   49fc4:	00800174 	movhi	r2,5
   49fc8:	108f9804 	addi	r2,r2,15968
   49fcc:	d8800215 	stw	r2,8(sp)
   49fd0:	003d4506 	br	494e8 <_dtoa_r+0xc8>
   49fd4:	dd000717 	ldw	r20,28(sp)
   49fd8:	dd400417 	ldw	r21,16(sp)
   49fdc:	0021883a 	mov	r16,zero
   49fe0:	003f7006 	br	49da4 <_dtoa_r+0x984>
   49fe4:	a00b883a 	mov	r5,r20
   49fe8:	e009883a 	mov	r4,fp
   49fec:	004d4700 	call	4d470 <__mcmp>
   49ff0:	103fa50e 	bge	r2,zero,49e88 <_dtoa_r+0xa68>
   49ff4:	e00b883a 	mov	r5,fp
   49ff8:	000f883a 	mov	r7,zero
   49ffc:	01800284 	movi	r6,10
   4a000:	b809883a 	mov	r4,r23
   4a004:	004cb180 	call	4cb18 <__multadd>
   4a008:	d8c00617 	ldw	r3,24(sp)
   4a00c:	1039883a 	mov	fp,r2
   4a010:	d8800517 	ldw	r2,20(sp)
   4a014:	1c7fffc4 	addi	r17,r3,-1
   4a018:	10002b1e 	bne	r2,zero,4a0c8 <_dtoa_r+0xca8>
   4a01c:	d8800a17 	ldw	r2,40(sp)
   4a020:	0082a30e 	bge	zero,r2,4aab0 <_dtoa_r+0x1690>
   4a024:	d8c00617 	ldw	r3,24(sp)
   4a028:	1023883a 	mov	r17,r2
   4a02c:	d8c00115 	stw	r3,4(sp)
   4a030:	003f9b06 	br	49ea0 <_dtoa_r+0xa80>
   4a034:	00c00704 	movi	r3,28
   4a038:	1885c83a 	sub	r2,r3,r2
   4a03c:	d8c00417 	ldw	r3,16(sp)
   4a040:	a8ab883a 	add	r21,r21,r2
   4a044:	1887883a 	add	r3,r3,r2
   4a048:	d8c00415 	stw	r3,16(sp)
   4a04c:	d8c00317 	ldw	r3,12(sp)
   4a050:	1885883a 	add	r2,r3,r2
   4a054:	d8800315 	stw	r2,12(sp)
   4a058:	003f7b06 	br	49e48 <_dtoa_r+0xa28>
   4a05c:	00800044 	movi	r2,1
   4a060:	d8800515 	stw	r2,20(sp)
   4a064:	003fbe06 	br	49f60 <_dtoa_r+0xb40>
   4a068:	01000804 	movi	r4,32
   4a06c:	2089c83a 	sub	r4,r4,r2
   4a070:	9908983a 	sll	r4,r19,r4
   4a074:	003d3f06 	br	49574 <_dtoa_r+0x154>
   4a078:	04000044 	movi	r16,1
   4a07c:	003d9506 	br	496d4 <_dtoa_r+0x2b4>
   4a080:	100b883a 	mov	r5,r2
   4a084:	b00d883a 	mov	r6,r22
   4a088:	b809883a 	mov	r4,r23
   4a08c:	004d1a00 	call	4d1a0 <__pow5mult>
   4a090:	d8c00117 	ldw	r3,4(sp)
   4a094:	1029883a 	mov	r20,r2
   4a098:	18c00090 	cmplti	r3,r3,2
   4a09c:	1801781e 	bne	r3,zero,4a680 <_dtoa_r+0x1260>
   4a0a0:	0025883a 	mov	r18,zero
   4a0a4:	a0800417 	ldw	r2,16(r20)
   4a0a8:	10800104 	addi	r2,r2,4
   4a0ac:	100490ba 	slli	r2,r2,2
   4a0b0:	a085883a 	add	r2,r20,r2
   4a0b4:	11000017 	ldw	r4,0(r2)
   4a0b8:	004cd880 	call	4cd88 <__hi0bits>
   4a0bc:	00c00804 	movi	r3,32
   4a0c0:	1885c83a 	sub	r2,r3,r2
   4a0c4:	003f5606 	br	49e20 <_dtoa_r+0xa00>
   4a0c8:	800b883a 	mov	r5,r16
   4a0cc:	000f883a 	mov	r7,zero
   4a0d0:	01800284 	movi	r6,10
   4a0d4:	b809883a 	mov	r4,r23
   4a0d8:	004cb180 	call	4cb18 <__multadd>
   4a0dc:	1021883a 	mov	r16,r2
   4a0e0:	d8800a17 	ldw	r2,40(sp)
   4a0e4:	0082770e 	bge	zero,r2,4aac4 <_dtoa_r+0x16a4>
   4a0e8:	dc400615 	stw	r17,24(sp)
   4a0ec:	1023883a 	mov	r17,r2
   4a0f0:	0540ce16 	blt	zero,r21,4a42c <_dtoa_r+0x100c>
   4a0f4:	90019f1e 	bne	r18,zero,4a774 <_dtoa_r+0x1354>
   4a0f8:	8025883a 	mov	r18,r16
   4a0fc:	dd800217 	ldw	r22,8(sp)
   4a100:	98c0004c 	andi	r3,r19,1
   4a104:	d8c00815 	stw	r3,32(sp)
   4a108:	b0bfffc4 	addi	r2,r22,-1
   4a10c:	1445883a 	add	r2,r2,r17
   4a110:	d8800515 	stw	r2,20(sp)
   4a114:	d8800117 	ldw	r2,4(sp)
   4a118:	1884b03a 	or	r2,r3,r2
   4a11c:	d8800715 	stw	r2,28(sp)
   4a120:	00002b06 	br	4a1d0 <_dtoa_r+0xdb0>
   4a124:	e009883a 	mov	r4,fp
   4a128:	d9400415 	stw	r5,16(sp)
   4a12c:	004d4700 	call	4d470 <__mcmp>
   4a130:	d9400417 	ldw	r5,16(sp)
   4a134:	b809883a 	mov	r4,r23
   4a138:	d8800315 	stw	r2,12(sp)
   4a13c:	004caf40 	call	4caf4 <_Bfree>
   4a140:	d8800317 	ldw	r2,12(sp)
   4a144:	1000021e 	bne	r2,zero,4a150 <_dtoa_r+0xd30>
   4a148:	d8c00717 	ldw	r3,28(sp)
   4a14c:	18025126 	beq	r3,zero,4aa94 <_dtoa_r+0x1674>
   4a150:	b2000044 	addi	r8,r22,1
   4a154:	da000315 	stw	r8,12(sp)
   4a158:	88015516 	blt	r17,zero,4a6b0 <_dtoa_r+0x1290>
   4a15c:	d8c00117 	ldw	r3,4(sp)
   4a160:	88e2b03a 	or	r17,r17,r3
   4a164:	d8c00817 	ldw	r3,32(sp)
   4a168:	1c62b03a 	or	r17,r3,r17
   4a16c:	88015026 	beq	r17,zero,4a6b0 <_dtoa_r+0x1290>
   4a170:	00819316 	blt	zero,r2,4a7c0 <_dtoa_r+0x13a0>
   4a174:	d8800517 	ldw	r2,20(sp)
   4a178:	b4c00005 	stb	r19,0(r22)
   4a17c:	15819a26 	beq	r2,r22,4a7e8 <_dtoa_r+0x13c8>
   4a180:	e00b883a 	mov	r5,fp
   4a184:	000f883a 	mov	r7,zero
   4a188:	01800284 	movi	r6,10
   4a18c:	b809883a 	mov	r4,r23
   4a190:	004cb180 	call	4cb18 <__multadd>
   4a194:	1039883a 	mov	fp,r2
   4a198:	800b883a 	mov	r5,r16
   4a19c:	000f883a 	mov	r7,zero
   4a1a0:	01800284 	movi	r6,10
   4a1a4:	b809883a 	mov	r4,r23
   4a1a8:	84801d26 	beq	r16,r18,4a220 <_dtoa_r+0xe00>
   4a1ac:	004cb180 	call	4cb18 <__multadd>
   4a1b0:	900b883a 	mov	r5,r18
   4a1b4:	000f883a 	mov	r7,zero
   4a1b8:	01800284 	movi	r6,10
   4a1bc:	b809883a 	mov	r4,r23
   4a1c0:	1021883a 	mov	r16,r2
   4a1c4:	004cb180 	call	4cb18 <__multadd>
   4a1c8:	1025883a 	mov	r18,r2
   4a1cc:	dd800317 	ldw	r22,12(sp)
   4a1d0:	a00b883a 	mov	r5,r20
   4a1d4:	e009883a 	mov	r4,fp
   4a1d8:	00492240 	call	49224 <quorem>
   4a1dc:	800b883a 	mov	r5,r16
   4a1e0:	e009883a 	mov	r4,fp
   4a1e4:	102b883a 	mov	r21,r2
   4a1e8:	004d4700 	call	4d470 <__mcmp>
   4a1ec:	a00b883a 	mov	r5,r20
   4a1f0:	900d883a 	mov	r6,r18
   4a1f4:	b809883a 	mov	r4,r23
   4a1f8:	1023883a 	mov	r17,r2
   4a1fc:	004d4c80 	call	4d4c8 <__mdiff>
   4a200:	100b883a 	mov	r5,r2
   4a204:	10800317 	ldw	r2,12(r2)
   4a208:	acc00c04 	addi	r19,r21,48
   4a20c:	103fc526 	beq	r2,zero,4a124 <_dtoa_r+0xd04>
   4a210:	b809883a 	mov	r4,r23
   4a214:	004caf40 	call	4caf4 <_Bfree>
   4a218:	00800044 	movi	r2,1
   4a21c:	003fcc06 	br	4a150 <_dtoa_r+0xd30>
   4a220:	004cb180 	call	4cb18 <__multadd>
   4a224:	1021883a 	mov	r16,r2
   4a228:	1025883a 	mov	r18,r2
   4a22c:	003fe706 	br	4a1cc <_dtoa_r+0xdac>
   4a230:	d8800117 	ldw	r2,4(sp)
   4a234:	108000d0 	cmplti	r2,r2,3
   4a238:	10005126 	beq	r2,zero,4a380 <_dtoa_r+0xf60>
   4a23c:	d8800517 	ldw	r2,20(sp)
   4a240:	103fab1e 	bne	r2,zero,4a0f0 <_dtoa_r+0xcd0>
   4a244:	a00b883a 	mov	r5,r20
   4a248:	e009883a 	mov	r4,fp
   4a24c:	00492240 	call	49224 <quorem>
   4a250:	14c00c04 	addi	r19,r2,48
   4a254:	d8800217 	ldw	r2,8(sp)
   4a258:	0023883a 	mov	r17,zero
   4a25c:	12000044 	addi	r8,r2,1
   4a260:	14c00005 	stb	r19,0(r2)
   4a264:	d8800617 	ldw	r2,24(sp)
   4a268:	10800044 	addi	r2,r2,1
   4a26c:	d8800115 	stw	r2,4(sp)
   4a270:	e00b883a 	mov	r5,fp
   4a274:	01800044 	movi	r6,1
   4a278:	b809883a 	mov	r4,r23
   4a27c:	da000315 	stw	r8,12(sp)
   4a280:	004d2e80 	call	4d2e8 <__lshift>
   4a284:	a00b883a 	mov	r5,r20
   4a288:	1009883a 	mov	r4,r2
   4a28c:	1039883a 	mov	fp,r2
   4a290:	004d4700 	call	4d470 <__mcmp>
   4a294:	da000317 	ldw	r8,12(sp)
   4a298:	0080880e 	bge	zero,r2,4a4bc <_dtoa_r+0x109c>
   4a29c:	413fffc3 	ldbu	r4,-1(r8)
   4a2a0:	d9400217 	ldw	r5,8(sp)
   4a2a4:	00000306 	br	4a2b4 <_dtoa_r+0xe94>
   4a2a8:	28c0b526 	beq	r5,r3,4a580 <_dtoa_r+0x1160>
   4a2ac:	193fffc3 	ldbu	r4,-1(r3)
   4a2b0:	1811883a 	mov	r8,r3
   4a2b4:	20803fcc 	andi	r2,r4,255
   4a2b8:	1080201c 	xori	r2,r2,128
   4a2bc:	10bfe004 	addi	r2,r2,-128
   4a2c0:	10800e60 	cmpeqi	r2,r2,57
   4a2c4:	40ffffc4 	addi	r3,r8,-1
   4a2c8:	103ff71e 	bne	r2,zero,4a2a8 <_dtoa_r+0xe88>
   4a2cc:	21000044 	addi	r4,r4,1
   4a2d0:	19000005 	stb	r4,0(r3)
   4a2d4:	a00b883a 	mov	r5,r20
   4a2d8:	b809883a 	mov	r4,r23
   4a2dc:	da000315 	stw	r8,12(sp)
   4a2e0:	004caf40 	call	4caf4 <_Bfree>
   4a2e4:	da000317 	ldw	r8,12(sp)
   4a2e8:	80004326 	beq	r16,zero,4a3f8 <_dtoa_r+0xfd8>
   4a2ec:	88003d26 	beq	r17,zero,4a3e4 <_dtoa_r+0xfc4>
   4a2f0:	8c003c26 	beq	r17,r16,4a3e4 <_dtoa_r+0xfc4>
   4a2f4:	880b883a 	mov	r5,r17
   4a2f8:	b809883a 	mov	r4,r23
   4a2fc:	004caf40 	call	4caf4 <_Bfree>
   4a300:	da000317 	ldw	r8,12(sp)
   4a304:	00003706 	br	4a3e4 <_dtoa_r+0xfc4>
   4a308:	00800174 	movhi	r2,5
   4a30c:	1007883a 	mov	r3,r2
   4a310:	18cfa404 	addi	r3,r3,16016
   4a314:	00800174 	movhi	r2,5
   4a318:	d8c00215 	stw	r3,8(sp)
   4a31c:	108fa4c4 	addi	r2,r2,16019
   4a320:	003e0306 	br	49b30 <_dtoa_r+0x710>
   4a324:	00800044 	movi	r2,1
   4a328:	04400044 	movi	r17,1
   4a32c:	d8801d15 	stw	r2,116(sp)
   4a330:	003f0406 	br	49f44 <_dtoa_r+0xb24>
   4a334:	00800704 	movi	r2,28
   4a338:	003f4006 	br	4a03c <_dtoa_r+0xc1c>
   4a33c:	983eb51e 	bne	r19,zero,49e14 <_dtoa_r+0x9f4>
   4a340:	00800434 	movhi	r2,16
   4a344:	10bfffc4 	addi	r2,r2,-1
   4a348:	9084703a 	and	r2,r18,r2
   4a34c:	103eb11e 	bne	r2,zero,49e14 <_dtoa_r+0x9f4>
   4a350:	949ffc2c 	andhi	r18,r18,32752
   4a354:	903eaf26 	beq	r18,zero,49e14 <_dtoa_r+0x9f4>
   4a358:	d8800417 	ldw	r2,16(sp)
   4a35c:	04800044 	movi	r18,1
   4a360:	10800044 	addi	r2,r2,1
   4a364:	d8800415 	stw	r2,16(sp)
   4a368:	d8800317 	ldw	r2,12(sp)
   4a36c:	10800044 	addi	r2,r2,1
   4a370:	d8800315 	stw	r2,12(sp)
   4a374:	003ea806 	br	49e18 <_dtoa_r+0x9f8>
   4a378:	dc400615 	stw	r17,24(sp)
   4a37c:	dc400a17 	ldw	r17,40(sp)
   4a380:	883e1e1e 	bne	r17,zero,49bfc <_dtoa_r+0x7dc>
   4a384:	a00b883a 	mov	r5,r20
   4a388:	b809883a 	mov	r4,r23
   4a38c:	000f883a 	mov	r7,zero
   4a390:	01800144 	movi	r6,5
   4a394:	004cb180 	call	4cb18 <__multadd>
   4a398:	100b883a 	mov	r5,r2
   4a39c:	e009883a 	mov	r4,fp
   4a3a0:	1029883a 	mov	r20,r2
   4a3a4:	004d4700 	call	4d470 <__mcmp>
   4a3a8:	00be140e 	bge	zero,r2,49bfc <_dtoa_r+0x7dc>
   4a3ac:	d8c00217 	ldw	r3,8(sp)
   4a3b0:	00800c44 	movi	r2,49
   4a3b4:	18800005 	stb	r2,0(r3)
   4a3b8:	d8800617 	ldw	r2,24(sp)
   4a3bc:	1a000044 	addi	r8,r3,1
   4a3c0:	14c00044 	addi	r19,r2,1
   4a3c4:	a00b883a 	mov	r5,r20
   4a3c8:	b809883a 	mov	r4,r23
   4a3cc:	da000315 	stw	r8,12(sp)
   4a3d0:	004caf40 	call	4caf4 <_Bfree>
   4a3d4:	98800044 	addi	r2,r19,1
   4a3d8:	d8800115 	stw	r2,4(sp)
   4a3dc:	da000317 	ldw	r8,12(sp)
   4a3e0:	80000526 	beq	r16,zero,4a3f8 <_dtoa_r+0xfd8>
   4a3e4:	800b883a 	mov	r5,r16
   4a3e8:	b809883a 	mov	r4,r23
   4a3ec:	da000315 	stw	r8,12(sp)
   4a3f0:	004caf40 	call	4caf4 <_Bfree>
   4a3f4:	da000317 	ldw	r8,12(sp)
   4a3f8:	e00b883a 	mov	r5,fp
   4a3fc:	b809883a 	mov	r4,r23
   4a400:	da000315 	stw	r8,12(sp)
   4a404:	004caf40 	call	4caf4 <_Bfree>
   4a408:	da000317 	ldw	r8,12(sp)
   4a40c:	d8801e17 	ldw	r2,120(sp)
   4a410:	d8c00117 	ldw	r3,4(sp)
   4a414:	40000005 	stb	zero,0(r8)
   4a418:	10c00015 	stw	r3,0(r2)
   4a41c:	d8802017 	ldw	r2,128(sp)
   4a420:	103c3126 	beq	r2,zero,494e8 <_dtoa_r+0xc8>
   4a424:	12000015 	stw	r8,0(r2)
   4a428:	003c2f06 	br	494e8 <_dtoa_r+0xc8>
   4a42c:	800b883a 	mov	r5,r16
   4a430:	a80d883a 	mov	r6,r21
   4a434:	b809883a 	mov	r4,r23
   4a438:	004d2e80 	call	4d2e8 <__lshift>
   4a43c:	1021883a 	mov	r16,r2
   4a440:	003f2c06 	br	4a0f4 <_dtoa_r+0xcd4>
   4a444:	1805883a 	mov	r2,r3
   4a448:	003e5b06 	br	49db8 <_dtoa_r+0x998>
   4a44c:	1529c83a 	sub	r20,r2,r20
   4a450:	003e4806 	br	49d74 <_dtoa_r+0x954>
   4a454:	800b883a 	mov	r5,r16
   4a458:	a00d883a 	mov	r6,r20
   4a45c:	b809883a 	mov	r4,r23
   4a460:	004d1a00 	call	4d1a0 <__pow5mult>
   4a464:	e00d883a 	mov	r6,fp
   4a468:	100b883a 	mov	r5,r2
   4a46c:	b809883a 	mov	r4,r23
   4a470:	1021883a 	mov	r16,r2
   4a474:	004cf4c0 	call	4cf4c <__multiply>
   4a478:	e00b883a 	mov	r5,fp
   4a47c:	b809883a 	mov	r4,r23
   4a480:	d8800915 	stw	r2,36(sp)
   4a484:	004caf40 	call	4caf4 <_Bfree>
   4a488:	d8800917 	ldw	r2,36(sp)
   4a48c:	1039883a 	mov	fp,r2
   4a490:	003e5506 	br	49de8 <_dtoa_r+0x9c8>
   4a494:	dcc00b15 	stw	r19,44(sp)
   4a498:	dc800c15 	stw	r18,48(sp)
   4a49c:	04000084 	movi	r16,2
   4a4a0:	003ccd06 	br	497d8 <_dtoa_r+0x3b8>
   4a4a4:	02000044 	movi	r8,1
   4a4a8:	003e9006 	br	49eec <_dtoa_r+0xacc>
   4a4ac:	00c00f04 	movi	r3,60
   4a4b0:	003ee106 	br	4a038 <_dtoa_r+0xc18>
   4a4b4:	d8000515 	stw	zero,20(sp)
   4a4b8:	003c9006 	br	496fc <_dtoa_r+0x2dc>
   4a4bc:	1000021e 	bne	r2,zero,4a4c8 <_dtoa_r+0x10a8>
   4a4c0:	98c0004c 	andi	r3,r19,1
   4a4c4:	183f751e 	bne	r3,zero,4a29c <_dtoa_r+0xe7c>
   4a4c8:	40bfffc7 	ldb	r2,-1(r8)
   4a4cc:	4007883a 	mov	r3,r8
   4a4d0:	423fffc4 	addi	r8,r8,-1
   4a4d4:	10800c20 	cmpeqi	r2,r2,48
   4a4d8:	103ffb1e 	bne	r2,zero,4a4c8 <_dtoa_r+0x10a8>
   4a4dc:	1811883a 	mov	r8,r3
   4a4e0:	003f7c06 	br	4a2d4 <_dtoa_r+0xeb4>
   4a4e4:	8009883a 	mov	r4,r16
   4a4e8:	004689c0 	call	4689c <__floatsidf>
   4a4ec:	d9800b17 	ldw	r6,44(sp)
   4a4f0:	a00f883a 	mov	r7,r20
   4a4f4:	1009883a 	mov	r4,r2
   4a4f8:	180b883a 	mov	r5,r3
   4a4fc:	00457e00 	call	457e0 <__muldf3>
   4a500:	000d883a 	mov	r6,zero
   4a504:	01d00734 	movhi	r7,16412
   4a508:	1009883a 	mov	r4,r2
   4a50c:	180b883a 	mov	r5,r3
   4a510:	00444380 	call	44438 <__adddf3>
   4a514:	102b883a 	mov	r21,r2
   4a518:	00bf3034 	movhi	r2,64704
   4a51c:	1885883a 	add	r2,r3,r2
   4a520:	d8800c15 	stw	r2,48(sp)
   4a524:	d9000b17 	ldw	r4,44(sp)
   4a528:	a00b883a 	mov	r5,r20
   4a52c:	000d883a 	mov	r6,zero
   4a530:	01d00534 	movhi	r7,16404
   4a534:	0045ef40 	call	45ef4 <__subdf3>
   4a538:	d9c00c17 	ldw	r7,48(sp)
   4a53c:	a80d883a 	mov	r6,r21
   4a540:	1009883a 	mov	r4,r2
   4a544:	180b883a 	mov	r5,r3
   4a548:	1029883a 	mov	r20,r2
   4a54c:	1821883a 	mov	r16,r3
   4a550:	00456100 	call	45610 <__gedf2>
   4a554:	00814116 	blt	zero,r2,4aa5c <_dtoa_r+0x163c>
   4a558:	d8800c17 	ldw	r2,48(sp)
   4a55c:	a80d883a 	mov	r6,r21
   4a560:	a009883a 	mov	r4,r20
   4a564:	11e0003c 	xorhi	r7,r2,32768
   4a568:	800b883a 	mov	r5,r16
   4a56c:	00456f80 	call	456f8 <__ledf2>
   4a570:	103d860e 	bge	r2,zero,49b8c <_dtoa_r+0x76c>
   4a574:	0029883a 	mov	r20,zero
   4a578:	0021883a 	mov	r16,zero
   4a57c:	003d9f06 	br	49bfc <_dtoa_r+0x7dc>
   4a580:	d8c00217 	ldw	r3,8(sp)
   4a584:	00800c44 	movi	r2,49
   4a588:	18800005 	stb	r2,0(r3)
   4a58c:	d8800117 	ldw	r2,4(sp)
   4a590:	10800044 	addi	r2,r2,1
   4a594:	d8800115 	stw	r2,4(sp)
   4a598:	003f4e06 	br	4a2d4 <_dtoa_r+0xeb4>
   4a59c:	d8c00917 	ldw	r3,36(sp)
   4a5a0:	1800eb26 	beq	r3,zero,4a950 <_dtoa_r+0x1530>
   4a5a4:	d8c00417 	ldw	r3,16(sp)
   4a5a8:	d9000317 	ldw	r4,12(sp)
   4a5ac:	10810cc4 	addi	r2,r2,1075
   4a5b0:	dd000717 	ldw	r20,28(sp)
   4a5b4:	2089883a 	add	r4,r4,r2
   4a5b8:	1885883a 	add	r2,r3,r2
   4a5bc:	182b883a 	mov	r21,r3
   4a5c0:	d9000315 	stw	r4,12(sp)
   4a5c4:	d8800415 	stw	r2,16(sp)
   4a5c8:	003df206 	br	49d94 <_dtoa_r+0x974>
   4a5cc:	d8800617 	ldw	r2,24(sp)
   4a5d0:	10010e26 	beq	r2,zero,4aa0c <_dtoa_r+0x15ec>
   4a5d4:	00abc83a 	sub	r21,zero,r2
   4a5d8:	a8c003cc 	andi	r3,r21,15
   4a5dc:	180690fa 	slli	r3,r3,3
   4a5e0:	00800174 	movhi	r2,5
   4a5e4:	108fdf04 	addi	r2,r2,16252
   4a5e8:	10c5883a 	add	r2,r2,r3
   4a5ec:	11800017 	ldw	r6,0(r2)
   4a5f0:	11c00117 	ldw	r7,4(r2)
   4a5f4:	9809883a 	mov	r4,r19
   4a5f8:	900b883a 	mov	r5,r18
   4a5fc:	a82bd13a 	srai	r21,r21,4
   4a600:	00457e00 	call	457e0 <__muldf3>
   4a604:	d8800b15 	stw	r2,44(sp)
   4a608:	1829883a 	mov	r20,r3
   4a60c:	a8013626 	beq	r21,zero,4aae8 <_dtoa_r+0x16c8>
   4a610:	02000174 	movhi	r8,5
   4a614:	04000084 	movi	r16,2
   4a618:	420fd504 	addi	r8,r8,16212
   4a61c:	180b883a 	mov	r5,r3
   4a620:	dc400c15 	stw	r17,48(sp)
   4a624:	1009883a 	mov	r4,r2
   4a628:	8023883a 	mov	r17,r16
   4a62c:	0007883a 	mov	r3,zero
   4a630:	4021883a 	mov	r16,r8
   4a634:	a980004c 	andi	r6,r21,1
   4a638:	30000726 	beq	r6,zero,4a658 <_dtoa_r+0x1238>
   4a63c:	81800017 	ldw	r6,0(r16)
   4a640:	81c00117 	ldw	r7,4(r16)
   4a644:	8c400044 	addi	r17,r17,1
   4a648:	00457e00 	call	457e0 <__muldf3>
   4a64c:	180b883a 	mov	r5,r3
   4a650:	1009883a 	mov	r4,r2
   4a654:	00c00044 	movi	r3,1
   4a658:	a82bd07a 	srai	r21,r21,1
   4a65c:	84000204 	addi	r16,r16,8
   4a660:	a83ff41e 	bne	r21,zero,4a634 <_dtoa_r+0x1214>
   4a664:	18c03fcc 	andi	r3,r3,255
   4a668:	8821883a 	mov	r16,r17
   4a66c:	dc400c17 	ldw	r17,48(sp)
   4a670:	183c7226 	beq	r3,zero,4983c <_dtoa_r+0x41c>
   4a674:	d9000b15 	stw	r4,44(sp)
   4a678:	2829883a 	mov	r20,r5
   4a67c:	003c6f06 	br	4983c <_dtoa_r+0x41c>
   4a680:	983e871e 	bne	r19,zero,4a0a0 <_dtoa_r+0xc80>
   4a684:	00800434 	movhi	r2,16
   4a688:	10bfffc4 	addi	r2,r2,-1
   4a68c:	9084703a 	and	r2,r18,r2
   4a690:	103f2f26 	beq	r2,zero,4a350 <_dtoa_r+0xf30>
   4a694:	003e8206 	br	4a0a0 <_dtoa_r+0xc80>
   4a698:	d9800717 	ldw	r6,28(sp)
   4a69c:	e00b883a 	mov	r5,fp
   4a6a0:	b809883a 	mov	r4,r23
   4a6a4:	004d1a00 	call	4d1a0 <__pow5mult>
   4a6a8:	1039883a 	mov	fp,r2
   4a6ac:	003dd106 	br	49df4 <_dtoa_r+0x9d4>
   4a6b0:	00800e0e 	bge	zero,r2,4a6ec <_dtoa_r+0x12cc>
   4a6b4:	e00b883a 	mov	r5,fp
   4a6b8:	01800044 	movi	r6,1
   4a6bc:	b809883a 	mov	r4,r23
   4a6c0:	da000115 	stw	r8,4(sp)
   4a6c4:	004d2e80 	call	4d2e8 <__lshift>
   4a6c8:	a00b883a 	mov	r5,r20
   4a6cc:	1009883a 	mov	r4,r2
   4a6d0:	1039883a 	mov	fp,r2
   4a6d4:	004d4700 	call	4d470 <__mcmp>
   4a6d8:	da000117 	ldw	r8,4(sp)
   4a6dc:	0080e60e 	bge	zero,r2,4aa78 <_dtoa_r+0x1658>
   4a6e0:	98c00e60 	cmpeqi	r3,r19,57
   4a6e4:	1800d21e 	bne	r3,zero,4aa30 <_dtoa_r+0x1610>
   4a6e8:	acc00c44 	addi	r19,r21,49
   4a6ec:	8023883a 	mov	r17,r16
   4a6f0:	d8800617 	ldw	r2,24(sp)
   4a6f4:	b4c00005 	stb	r19,0(r22)
   4a6f8:	9021883a 	mov	r16,r18
   4a6fc:	10800044 	addi	r2,r2,1
   4a700:	d8800115 	stw	r2,4(sp)
   4a704:	003ef306 	br	4a2d4 <_dtoa_r+0xeb4>
   4a708:	b82d883a 	mov	r22,r23
   4a70c:	ddc00117 	ldw	r23,4(sp)
   4a710:	200d883a 	mov	r6,r4
   4a714:	280f883a 	mov	r7,r5
   4a718:	00444380 	call	44438 <__adddf3>
   4a71c:	1025883a 	mov	r18,r2
   4a720:	1009883a 	mov	r4,r2
   4a724:	d8800617 	ldw	r2,24(sp)
   4a728:	800d883a 	mov	r6,r16
   4a72c:	a00f883a 	mov	r7,r20
   4a730:	10800044 	addi	r2,r2,1
   4a734:	180b883a 	mov	r5,r3
   4a738:	1823883a 	mov	r17,r3
   4a73c:	1027883a 	mov	r19,r2
   4a740:	d8800115 	stw	r2,4(sp)
   4a744:	00456100 	call	45610 <__gedf2>
   4a748:	00808d16 	blt	zero,r2,4a980 <_dtoa_r+0x1560>
   4a74c:	800d883a 	mov	r6,r16
   4a750:	a00f883a 	mov	r7,r20
   4a754:	9009883a 	mov	r4,r18
   4a758:	880b883a 	mov	r5,r17
   4a75c:	00455900 	call	45590 <__eqdf2>
   4a760:	1000021e 	bne	r2,zero,4a76c <_dtoa_r+0x134c>
   4a764:	b580004c 	andi	r22,r22,1
   4a768:	b000851e 	bne	r22,zero,4a980 <_dtoa_r+0x1560>
   4a76c:	a811883a 	mov	r8,r21
   4a770:	003f2106 	br	4a3f8 <_dtoa_r+0xfd8>
   4a774:	81400117 	ldw	r5,4(r16)
   4a778:	b809883a 	mov	r4,r23
   4a77c:	004ca500 	call	4ca50 <_Balloc>
   4a780:	1025883a 	mov	r18,r2
   4a784:	1000f626 	beq	r2,zero,4ab60 <_dtoa_r+0x1740>
   4a788:	81800417 	ldw	r6,16(r16)
   4a78c:	81400304 	addi	r5,r16,12
   4a790:	11000304 	addi	r4,r2,12
   4a794:	31800084 	addi	r6,r6,2
   4a798:	300c90ba 	slli	r6,r6,2
   4a79c:	004c7300 	call	4c730 <memcpy>
   4a7a0:	900b883a 	mov	r5,r18
   4a7a4:	01800044 	movi	r6,1
   4a7a8:	b809883a 	mov	r4,r23
   4a7ac:	004d2e80 	call	4d2e8 <__lshift>
   4a7b0:	1025883a 	mov	r18,r2
   4a7b4:	003e5106 	br	4a0fc <_dtoa_r+0xcdc>
   4a7b8:	146bc83a 	sub	r21,r2,r17
   4a7bc:	003d7506 	br	49d94 <_dtoa_r+0x974>
   4a7c0:	98800e58 	cmpnei	r2,r19,57
   4a7c4:	10009a26 	beq	r2,zero,4aa30 <_dtoa_r+0x1610>
   4a7c8:	d8800617 	ldw	r2,24(sp)
   4a7cc:	98c00044 	addi	r3,r19,1
   4a7d0:	8023883a 	mov	r17,r16
   4a7d4:	10800044 	addi	r2,r2,1
   4a7d8:	d8800115 	stw	r2,4(sp)
   4a7dc:	b0c00005 	stb	r3,0(r22)
   4a7e0:	9021883a 	mov	r16,r18
   4a7e4:	003ebb06 	br	4a2d4 <_dtoa_r+0xeb4>
   4a7e8:	d8800617 	ldw	r2,24(sp)
   4a7ec:	8023883a 	mov	r17,r16
   4a7f0:	9021883a 	mov	r16,r18
   4a7f4:	10800044 	addi	r2,r2,1
   4a7f8:	d8800115 	stw	r2,4(sp)
   4a7fc:	003e9c06 	br	4a270 <_dtoa_r+0xe50>
   4a800:	e00b883a 	mov	r5,fp
   4a804:	b809883a 	mov	r4,r23
   4a808:	004d1a00 	call	4d1a0 <__pow5mult>
   4a80c:	1039883a 	mov	fp,r2
   4a810:	003d7806 	br	49df4 <_dtoa_r+0x9d4>
   4a814:	d9400c17 	ldw	r5,48(sp)
   4a818:	a809883a 	mov	r4,r21
   4a81c:	600d883a 	mov	r6,r12
   4a820:	680f883a 	mov	r7,r13
   4a824:	dac00b15 	stw	r11,44(sp)
   4a828:	da000e15 	stw	r8,56(sp)
   4a82c:	00457e00 	call	457e0 <__muldf3>
   4a830:	d9400217 	ldw	r5,8(sp)
   4a834:	dac00b17 	ldw	r11,44(sp)
   4a838:	d9800d17 	ldw	r6,52(sp)
   4a83c:	d8800b15 	stw	r2,44(sp)
   4a840:	2ac00005 	stb	r11,0(r5)
   4a844:	31000058 	cmpnei	r4,r6,1
   4a848:	d8c00c15 	stw	r3,48(sp)
   4a84c:	da000e17 	ldw	r8,56(sp)
   4a850:	29ab883a 	add	r21,r5,r6
   4a854:	2000a226 	beq	r4,zero,4aae0 <_dtoa_r+0x16c0>
   4a858:	dc400d15 	stw	r17,52(sp)
   4a85c:	8009883a 	mov	r4,r16
   4a860:	4023883a 	mov	r17,r8
   4a864:	a00b883a 	mov	r5,r20
   4a868:	dc800e15 	stw	r18,56(sp)
   4a86c:	000d883a 	mov	r6,zero
   4a870:	01d00934 	movhi	r7,16420
   4a874:	00457e00 	call	457e0 <__muldf3>
   4a878:	180b883a 	mov	r5,r3
   4a87c:	1009883a 	mov	r4,r2
   4a880:	1829883a 	mov	r20,r3
   4a884:	1025883a 	mov	r18,r2
   4a888:	004681c0 	call	4681c <__fixdfsi>
   4a88c:	1009883a 	mov	r4,r2
   4a890:	1021883a 	mov	r16,r2
   4a894:	004689c0 	call	4689c <__floatsidf>
   4a898:	9009883a 	mov	r4,r18
   4a89c:	a00b883a 	mov	r5,r20
   4a8a0:	100d883a 	mov	r6,r2
   4a8a4:	180f883a 	mov	r7,r3
   4a8a8:	8c400044 	addi	r17,r17,1
   4a8ac:	84000c04 	addi	r16,r16,48
   4a8b0:	0045ef40 	call	45ef4 <__subdf3>
   4a8b4:	8c3fffc5 	stb	r16,-1(r17)
   4a8b8:	1009883a 	mov	r4,r2
   4a8bc:	180b883a 	mov	r5,r3
   4a8c0:	ac7fea1e 	bne	r21,r17,4a86c <_dtoa_r+0x144c>
   4a8c4:	dc400d17 	ldw	r17,52(sp)
   4a8c8:	dc800e17 	ldw	r18,56(sp)
   4a8cc:	1021883a 	mov	r16,r2
   4a8d0:	1829883a 	mov	r20,r3
   4a8d4:	d9000b17 	ldw	r4,44(sp)
   4a8d8:	d9400c17 	ldw	r5,48(sp)
   4a8dc:	000d883a 	mov	r6,zero
   4a8e0:	01cff834 	movhi	r7,16352
   4a8e4:	00444380 	call	44438 <__adddf3>
   4a8e8:	800d883a 	mov	r6,r16
   4a8ec:	a00f883a 	mov	r7,r20
   4a8f0:	1009883a 	mov	r4,r2
   4a8f4:	180b883a 	mov	r5,r3
   4a8f8:	00456f80 	call	456f8 <__ledf2>
   4a8fc:	10005a16 	blt	r2,zero,4aa68 <_dtoa_r+0x1648>
   4a900:	d9800b17 	ldw	r6,44(sp)
   4a904:	d9c00c17 	ldw	r7,48(sp)
   4a908:	0009883a 	mov	r4,zero
   4a90c:	014ff834 	movhi	r5,16352
   4a910:	0045ef40 	call	45ef4 <__subdf3>
   4a914:	800d883a 	mov	r6,r16
   4a918:	a00f883a 	mov	r7,r20
   4a91c:	1009883a 	mov	r4,r2
   4a920:	180b883a 	mov	r5,r3
   4a924:	00456100 	call	45610 <__gedf2>
   4a928:	00bc980e 	bge	zero,r2,49b8c <_dtoa_r+0x76c>
   4a92c:	a8bfffc7 	ldb	r2,-1(r21)
   4a930:	a811883a 	mov	r8,r21
   4a934:	ad7fffc4 	addi	r21,r21,-1
   4a938:	10800c20 	cmpeqi	r2,r2,48
   4a93c:	103ffb1e 	bne	r2,zero,4a92c <_dtoa_r+0x150c>
   4a940:	d8801017 	ldw	r2,64(sp)
   4a944:	10800044 	addi	r2,r2,1
   4a948:	d8800115 	stw	r2,4(sp)
   4a94c:	003eaa06 	br	4a3f8 <_dtoa_r+0xfd8>
   4a950:	d8c01117 	ldw	r3,68(sp)
   4a954:	00800d84 	movi	r2,54
   4a958:	d9000417 	ldw	r4,16(sp)
   4a95c:	10c5c83a 	sub	r2,r2,r3
   4a960:	d8c00317 	ldw	r3,12(sp)
   4a964:	dd000717 	ldw	r20,28(sp)
   4a968:	202b883a 	mov	r21,r4
   4a96c:	1887883a 	add	r3,r3,r2
   4a970:	2085883a 	add	r2,r4,r2
   4a974:	d8c00315 	stw	r3,12(sp)
   4a978:	d8800415 	stw	r2,16(sp)
   4a97c:	003d0506 	br	49d94 <_dtoa_r+0x974>
   4a980:	d9000217 	ldw	r4,8(sp)
   4a984:	003c4506 	br	49a9c <_dtoa_r+0x67c>
   4a988:	883ed626 	beq	r17,zero,4a4e4 <_dtoa_r+0x10c4>
   4a98c:	d8800a17 	ldw	r2,40(sp)
   4a990:	00bc7e0e 	bge	zero,r2,49b8c <_dtoa_r+0x76c>
   4a994:	a00b883a 	mov	r5,r20
   4a998:	a809883a 	mov	r4,r21
   4a99c:	000d883a 	mov	r6,zero
   4a9a0:	01d00934 	movhi	r7,16420
   4a9a4:	00457e00 	call	457e0 <__muldf3>
   4a9a8:	81000044 	addi	r4,r16,1
   4a9ac:	102b883a 	mov	r21,r2
   4a9b0:	1829883a 	mov	r20,r3
   4a9b4:	d8800b15 	stw	r2,44(sp)
   4a9b8:	004689c0 	call	4689c <__floatsidf>
   4a9bc:	a80d883a 	mov	r6,r21
   4a9c0:	a00f883a 	mov	r7,r20
   4a9c4:	1009883a 	mov	r4,r2
   4a9c8:	180b883a 	mov	r5,r3
   4a9cc:	00457e00 	call	457e0 <__muldf3>
   4a9d0:	1009883a 	mov	r4,r2
   4a9d4:	000d883a 	mov	r6,zero
   4a9d8:	01d00734 	movhi	r7,16412
   4a9dc:	180b883a 	mov	r5,r3
   4a9e0:	00444380 	call	44438 <__adddf3>
   4a9e4:	d9000617 	ldw	r4,24(sp)
   4a9e8:	102b883a 	mov	r21,r2
   4a9ec:	00bf3034 	movhi	r2,64704
   4a9f0:	1887883a 	add	r3,r3,r2
   4a9f4:	d8800a17 	ldw	r2,40(sp)
   4a9f8:	213fffc4 	addi	r4,r4,-1
   4a9fc:	d9001015 	stw	r4,64(sp)
   4aa00:	d8c00c15 	stw	r3,48(sp)
   4aa04:	d8800d15 	stw	r2,52(sp)
   4aa08:	003ba906 	br	498b0 <_dtoa_r+0x490>
   4aa0c:	dcc00b15 	stw	r19,44(sp)
   4aa10:	9029883a 	mov	r20,r18
   4aa14:	04000084 	movi	r16,2
   4aa18:	003b8806 	br	4983c <_dtoa_r+0x41c>
   4aa1c:	00c00c44 	movi	r3,49
   4aa20:	9cc00044 	addi	r19,r19,1
   4aa24:	003c2606 	br	49ac0 <_dtoa_r+0x6a0>
   4aa28:	b0800044 	addi	r2,r22,1
   4aa2c:	d8800315 	stw	r2,12(sp)
   4aa30:	00800e44 	movi	r2,57
   4aa34:	b0800005 	stb	r2,0(r22)
   4aa38:	d8800617 	ldw	r2,24(sp)
   4aa3c:	8023883a 	mov	r17,r16
   4aa40:	da000317 	ldw	r8,12(sp)
   4aa44:	10800044 	addi	r2,r2,1
   4aa48:	d9400217 	ldw	r5,8(sp)
   4aa4c:	d8800115 	stw	r2,4(sp)
   4aa50:	9021883a 	mov	r16,r18
   4aa54:	01000e44 	movi	r4,57
   4aa58:	003e1606 	br	4a2b4 <_dtoa_r+0xe94>
   4aa5c:	0029883a 	mov	r20,zero
   4aa60:	0021883a 	mov	r16,zero
   4aa64:	003e5106 	br	4a3ac <_dtoa_r+0xf8c>
   4aa68:	d8801017 	ldw	r2,64(sp)
   4aa6c:	d9000217 	ldw	r4,8(sp)
   4aa70:	14c00044 	addi	r19,r2,1
   4aa74:	003c0906 	br	49a9c <_dtoa_r+0x67c>
   4aa78:	103f1c1e 	bne	r2,zero,4a6ec <_dtoa_r+0x12cc>
   4aa7c:	9880004c 	andi	r2,r19,1
   4aa80:	103f171e 	bne	r2,zero,4a6e0 <_dtoa_r+0x12c0>
   4aa84:	003f1906 	br	4a6ec <_dtoa_r+0x12cc>
   4aa88:	ddc00c17 	ldw	r23,48(sp)
   4aa8c:	9811883a 	mov	r8,r19
   4aa90:	003fab06 	br	4a940 <_dtoa_r+0x1520>
   4aa94:	98800e60 	cmpeqi	r2,r19,57
   4aa98:	103fe31e 	bne	r2,zero,4aa28 <_dtoa_r+0x1608>
   4aa9c:	0440010e 	bge	zero,r17,4aaa4 <_dtoa_r+0x1684>
   4aaa0:	acc00c44 	addi	r19,r21,49
   4aaa4:	8023883a 	mov	r17,r16
   4aaa8:	b2000044 	addi	r8,r22,1
   4aaac:	003f1006 	br	4a6f0 <_dtoa_r+0x12d0>
   4aab0:	d8800117 	ldw	r2,4(sp)
   4aab4:	108000c8 	cmpgei	r2,r2,3
   4aab8:	103e2f1e 	bne	r2,zero,4a378 <_dtoa_r+0xf58>
   4aabc:	dc400615 	stw	r17,24(sp)
   4aac0:	003de006 	br	4a244 <_dtoa_r+0xe24>
   4aac4:	d8800117 	ldw	r2,4(sp)
   4aac8:	108000c8 	cmpgei	r2,r2,3
   4aacc:	103e2a1e 	bne	r2,zero,4a378 <_dtoa_r+0xf58>
   4aad0:	dc400615 	stw	r17,24(sp)
   4aad4:	dc400a17 	ldw	r17,40(sp)
   4aad8:	057d860e 	bge	zero,r21,4a0f4 <_dtoa_r+0xcd4>
   4aadc:	003e5306 	br	4a42c <_dtoa_r+0x100c>
   4aae0:	402b883a 	mov	r21,r8
   4aae4:	003f7b06 	br	4a8d4 <_dtoa_r+0x14b4>
   4aae8:	04000084 	movi	r16,2
   4aaec:	003b5306 	br	4983c <_dtoa_r+0x41c>
   4aaf0:	b8001115 	stw	zero,68(r23)
   4aaf4:	000b883a 	mov	r5,zero
   4aaf8:	b809883a 	mov	r4,r23
   4aafc:	004ca500 	call	4ca50 <_Balloc>
   4ab00:	d8800215 	stw	r2,8(sp)
   4ab04:	10000926 	beq	r2,zero,4ab2c <_dtoa_r+0x170c>
   4ab08:	d8800217 	ldw	r2,8(sp)
   4ab0c:	d8001d15 	stw	zero,116(sp)
   4ab10:	047fffc4 	movi	r17,-1
   4ab14:	b8801015 	stw	r2,64(r23)
   4ab18:	00bfffc4 	movi	r2,-1
   4ab1c:	d8800a15 	stw	r2,40(sp)
   4ab20:	00800044 	movi	r2,1
   4ab24:	d8800515 	stw	r2,20(sp)
   4ab28:	003c1806 	br	49b8c <_dtoa_r+0x76c>
   4ab2c:	01c00174 	movhi	r7,5
   4ab30:	01000174 	movhi	r4,5
   4ab34:	39cfa504 	addi	r7,r7,16020
   4ab38:	000d883a 	mov	r6,zero
   4ab3c:	01406a84 	movi	r5,426
   4ab40:	210faa04 	addi	r4,r4,16040
   4ab44:	004fa9c0 	call	4fa9c <__assert_func>
   4ab48:	00800174 	movhi	r2,5
   4ab4c:	108fa104 	addi	r2,r2,16004
   4ab50:	d8800215 	stw	r2,8(sp)
   4ab54:	003a6406 	br	494e8 <_dtoa_r+0xc8>
   4ab58:	000b883a 	mov	r5,zero
   4ab5c:	003afa06 	br	49748 <_dtoa_r+0x328>
   4ab60:	01c00174 	movhi	r7,5
   4ab64:	01000174 	movhi	r4,5
   4ab68:	39cfa504 	addi	r7,r7,16020
   4ab6c:	000d883a 	mov	r6,zero
   4ab70:	0140ba84 	movi	r5,746
   4ab74:	210faa04 	addi	r4,r4,16040
   4ab78:	004fa9c0 	call	4fa9c <__assert_func>

0004ab7c <__sflush_r>:
   4ab7c:	2880030b 	ldhu	r2,12(r5)
   4ab80:	defffb04 	addi	sp,sp,-20
   4ab84:	dcc00315 	stw	r19,12(sp)
   4ab88:	dc000015 	stw	r16,0(sp)
   4ab8c:	dfc00415 	stw	ra,16(sp)
   4ab90:	dc800215 	stw	r18,8(sp)
   4ab94:	dc400115 	stw	r17,4(sp)
   4ab98:	10c0020c 	andi	r3,r2,8
   4ab9c:	2821883a 	mov	r16,r5
   4aba0:	2027883a 	mov	r19,r4
   4aba4:	18003f1e 	bne	r3,zero,4aca4 <__sflush_r+0x128>
   4aba8:	28c00117 	ldw	r3,4(r5)
   4abac:	10820014 	ori	r2,r2,2048
   4abb0:	2880030d 	sth	r2,12(r5)
   4abb4:	00c0550e 	bge	zero,r3,4ad0c <__sflush_r+0x190>
   4abb8:	82000a17 	ldw	r8,40(r16)
   4abbc:	40003126 	beq	r8,zero,4ac84 <__sflush_r+0x108>
   4abc0:	9c400017 	ldw	r17,0(r19)
   4abc4:	1104000c 	andi	r4,r2,4096
   4abc8:	98000015 	stw	zero,0(r19)
   4abcc:	81400717 	ldw	r5,28(r16)
   4abd0:	1007883a 	mov	r3,r2
   4abd4:	2000521e 	bne	r4,zero,4ad20 <__sflush_r+0x1a4>
   4abd8:	01c00044 	movi	r7,1
   4abdc:	000d883a 	mov	r6,zero
   4abe0:	9809883a 	mov	r4,r19
   4abe4:	403ee83a 	callr	r8
   4abe8:	10ffffd8 	cmpnei	r3,r2,-1
   4abec:	18005826 	beq	r3,zero,4ad50 <__sflush_r+0x1d4>
   4abf0:	80c0030b 	ldhu	r3,12(r16)
   4abf4:	82000a17 	ldw	r8,40(r16)
   4abf8:	18c0010c 	andi	r3,r3,4
   4abfc:	18000626 	beq	r3,zero,4ac18 <__sflush_r+0x9c>
   4ac00:	81000117 	ldw	r4,4(r16)
   4ac04:	80c00c17 	ldw	r3,48(r16)
   4ac08:	1105c83a 	sub	r2,r2,r4
   4ac0c:	18000226 	beq	r3,zero,4ac18 <__sflush_r+0x9c>
   4ac10:	80c00f17 	ldw	r3,60(r16)
   4ac14:	10c5c83a 	sub	r2,r2,r3
   4ac18:	81400717 	ldw	r5,28(r16)
   4ac1c:	100d883a 	mov	r6,r2
   4ac20:	000f883a 	mov	r7,zero
   4ac24:	9809883a 	mov	r4,r19
   4ac28:	403ee83a 	callr	r8
   4ac2c:	10ffffd8 	cmpnei	r3,r2,-1
   4ac30:	18003d1e 	bne	r3,zero,4ad28 <__sflush_r+0x1ac>
   4ac34:	99000017 	ldw	r4,0(r19)
   4ac38:	80c0030b 	ldhu	r3,12(r16)
   4ac3c:	20004e26 	beq	r4,zero,4ad78 <__sflush_r+0x1fc>
   4ac40:	21400760 	cmpeqi	r5,r4,29
   4ac44:	2800021e 	bne	r5,zero,4ac50 <__sflush_r+0xd4>
   4ac48:	210005a0 	cmpeqi	r4,r4,22
   4ac4c:	20002c26 	beq	r4,zero,4ad00 <__sflush_r+0x184>
   4ac50:	80800417 	ldw	r2,16(r16)
   4ac54:	18fdffcc 	andi	r3,r3,63487
   4ac58:	80c0030d 	sth	r3,12(r16)
   4ac5c:	80000115 	stw	zero,4(r16)
   4ac60:	80800015 	stw	r2,0(r16)
   4ac64:	81400c17 	ldw	r5,48(r16)
   4ac68:	9c400015 	stw	r17,0(r19)
   4ac6c:	28000526 	beq	r5,zero,4ac84 <__sflush_r+0x108>
   4ac70:	80801004 	addi	r2,r16,64
   4ac74:	28800226 	beq	r5,r2,4ac80 <__sflush_r+0x104>
   4ac78:	9809883a 	mov	r4,r19
   4ac7c:	004b3280 	call	4b328 <_free_r>
   4ac80:	80000c15 	stw	zero,48(r16)
   4ac84:	0005883a 	mov	r2,zero
   4ac88:	dfc00417 	ldw	ra,16(sp)
   4ac8c:	dcc00317 	ldw	r19,12(sp)
   4ac90:	dc800217 	ldw	r18,8(sp)
   4ac94:	dc400117 	ldw	r17,4(sp)
   4ac98:	dc000017 	ldw	r16,0(sp)
   4ac9c:	dec00504 	addi	sp,sp,20
   4aca0:	f800283a 	ret
   4aca4:	2c800417 	ldw	r18,16(r5)
   4aca8:	903ff626 	beq	r18,zero,4ac84 <__sflush_r+0x108>
   4acac:	2c400017 	ldw	r17,0(r5)
   4acb0:	108000cc 	andi	r2,r2,3
   4acb4:	2c800015 	stw	r18,0(r5)
   4acb8:	8ca3c83a 	sub	r17,r17,r18
   4acbc:	1000161e 	bne	r2,zero,4ad18 <__sflush_r+0x19c>
   4acc0:	28800517 	ldw	r2,20(r5)
   4acc4:	80800215 	stw	r2,8(r16)
   4acc8:	04400316 	blt	zero,r17,4acd8 <__sflush_r+0x15c>
   4accc:	003fed06 	br	4ac84 <__sflush_r+0x108>
   4acd0:	90a5883a 	add	r18,r18,r2
   4acd4:	047feb0e 	bge	zero,r17,4ac84 <__sflush_r+0x108>
   4acd8:	80800917 	ldw	r2,36(r16)
   4acdc:	81400717 	ldw	r5,28(r16)
   4ace0:	880f883a 	mov	r7,r17
   4ace4:	900d883a 	mov	r6,r18
   4ace8:	9809883a 	mov	r4,r19
   4acec:	103ee83a 	callr	r2
   4acf0:	88a3c83a 	sub	r17,r17,r2
   4acf4:	00bff616 	blt	zero,r2,4acd0 <__sflush_r+0x154>
   4acf8:	80c0030b 	ldhu	r3,12(r16)
   4acfc:	00bfffc4 	movi	r2,-1
   4ad00:	18c01014 	ori	r3,r3,64
   4ad04:	80c0030d 	sth	r3,12(r16)
   4ad08:	003fdf06 	br	4ac88 <__sflush_r+0x10c>
   4ad0c:	28c00f17 	ldw	r3,60(r5)
   4ad10:	00ffa916 	blt	zero,r3,4abb8 <__sflush_r+0x3c>
   4ad14:	003fdb06 	br	4ac84 <__sflush_r+0x108>
   4ad18:	0005883a 	mov	r2,zero
   4ad1c:	003fe906 	br	4acc4 <__sflush_r+0x148>
   4ad20:	80801417 	ldw	r2,80(r16)
   4ad24:	003fb406 	br	4abf8 <__sflush_r+0x7c>
   4ad28:	80c0030b 	ldhu	r3,12(r16)
   4ad2c:	81000417 	ldw	r4,16(r16)
   4ad30:	80000115 	stw	zero,4(r16)
   4ad34:	197dffcc 	andi	r5,r3,63487
   4ad38:	8140030d 	sth	r5,12(r16)
   4ad3c:	81000015 	stw	r4,0(r16)
   4ad40:	18c4000c 	andi	r3,r3,4096
   4ad44:	183fc726 	beq	r3,zero,4ac64 <__sflush_r+0xe8>
   4ad48:	80801415 	stw	r2,80(r16)
   4ad4c:	003fc506 	br	4ac64 <__sflush_r+0xe8>
   4ad50:	98c00017 	ldw	r3,0(r19)
   4ad54:	183fa626 	beq	r3,zero,4abf0 <__sflush_r+0x74>
   4ad58:	19000760 	cmpeqi	r4,r3,29
   4ad5c:	20000e1e 	bne	r4,zero,4ad98 <__sflush_r+0x21c>
   4ad60:	18c00598 	cmpnei	r3,r3,22
   4ad64:	18000c26 	beq	r3,zero,4ad98 <__sflush_r+0x21c>
   4ad68:	80c0030b 	ldhu	r3,12(r16)
   4ad6c:	18c01014 	ori	r3,r3,64
   4ad70:	80c0030d 	sth	r3,12(r16)
   4ad74:	003fc406 	br	4ac88 <__sflush_r+0x10c>
   4ad78:	81000417 	ldw	r4,16(r16)
   4ad7c:	197dffcc 	andi	r5,r3,63487
   4ad80:	8140030d 	sth	r5,12(r16)
   4ad84:	80000115 	stw	zero,4(r16)
   4ad88:	81000015 	stw	r4,0(r16)
   4ad8c:	18c4000c 	andi	r3,r3,4096
   4ad90:	183fb426 	beq	r3,zero,4ac64 <__sflush_r+0xe8>
   4ad94:	003fec06 	br	4ad48 <__sflush_r+0x1cc>
   4ad98:	9c400015 	stw	r17,0(r19)
   4ad9c:	0005883a 	mov	r2,zero
   4ada0:	003fb906 	br	4ac88 <__sflush_r+0x10c>

0004ada4 <_fflush_r>:
   4ada4:	defffd04 	addi	sp,sp,-12
   4ada8:	dc000115 	stw	r16,4(sp)
   4adac:	dfc00215 	stw	ra,8(sp)
   4adb0:	2021883a 	mov	r16,r4
   4adb4:	20000226 	beq	r4,zero,4adc0 <_fflush_r+0x1c>
   4adb8:	20800e17 	ldw	r2,56(r4)
   4adbc:	10000726 	beq	r2,zero,4addc <_fflush_r+0x38>
   4adc0:	2880030f 	ldh	r2,12(r5)
   4adc4:	10000a1e 	bne	r2,zero,4adf0 <_fflush_r+0x4c>
   4adc8:	0005883a 	mov	r2,zero
   4adcc:	dfc00217 	ldw	ra,8(sp)
   4add0:	dc000117 	ldw	r16,4(sp)
   4add4:	dec00304 	addi	sp,sp,12
   4add8:	f800283a 	ret
   4addc:	d9400015 	stw	r5,0(sp)
   4ade0:	004b1c40 	call	4b1c4 <__sinit>
   4ade4:	d9400017 	ldw	r5,0(sp)
   4ade8:	2880030f 	ldh	r2,12(r5)
   4adec:	103ff626 	beq	r2,zero,4adc8 <_fflush_r+0x24>
   4adf0:	8009883a 	mov	r4,r16
   4adf4:	dfc00217 	ldw	ra,8(sp)
   4adf8:	dc000117 	ldw	r16,4(sp)
   4adfc:	dec00304 	addi	sp,sp,12
   4ae00:	004ab7c1 	jmpi	4ab7c <__sflush_r>

0004ae04 <fflush>:
   4ae04:	20001726 	beq	r4,zero,4ae64 <fflush+0x60>
   4ae08:	00800174 	movhi	r2,5
   4ae0c:	200b883a 	mov	r5,r4
   4ae10:	1117c217 	ldw	r4,24328(r2)
   4ae14:	20000226 	beq	r4,zero,4ae20 <fflush+0x1c>
   4ae18:	20800e17 	ldw	r2,56(r4)
   4ae1c:	10000526 	beq	r2,zero,4ae34 <fflush+0x30>
   4ae20:	2880030f 	ldh	r2,12(r5)
   4ae24:	1000021e 	bne	r2,zero,4ae30 <fflush+0x2c>
   4ae28:	0005883a 	mov	r2,zero
   4ae2c:	f800283a 	ret
   4ae30:	004ab7c1 	jmpi	4ab7c <__sflush_r>
   4ae34:	defffd04 	addi	sp,sp,-12
   4ae38:	d9400115 	stw	r5,4(sp)
   4ae3c:	d9000015 	stw	r4,0(sp)
   4ae40:	dfc00215 	stw	ra,8(sp)
   4ae44:	004b1c40 	call	4b1c4 <__sinit>
   4ae48:	d9400117 	ldw	r5,4(sp)
   4ae4c:	d9000017 	ldw	r4,0(sp)
   4ae50:	2880030f 	ldh	r2,12(r5)
   4ae54:	10000826 	beq	r2,zero,4ae78 <fflush+0x74>
   4ae58:	dfc00217 	ldw	ra,8(sp)
   4ae5c:	dec00304 	addi	sp,sp,12
   4ae60:	004ab7c1 	jmpi	4ab7c <__sflush_r>
   4ae64:	00800174 	movhi	r2,5
   4ae68:	1117c117 	ldw	r4,24324(r2)
   4ae6c:	01400174 	movhi	r5,5
   4ae70:	296b6904 	addi	r5,r5,-21084
   4ae74:	004bb781 	jmpi	4bb78 <_fwalk_reent>
   4ae78:	0005883a 	mov	r2,zero
   4ae7c:	dfc00217 	ldw	ra,8(sp)
   4ae80:	dec00304 	addi	sp,sp,12
   4ae84:	f800283a 	ret

0004ae88 <__fp_lock>:
   4ae88:	0005883a 	mov	r2,zero
   4ae8c:	f800283a 	ret

0004ae90 <_cleanup_r>:
   4ae90:	01400174 	movhi	r5,5
   4ae94:	297f1004 	addi	r5,r5,-960
   4ae98:	004bb781 	jmpi	4bb78 <_fwalk_reent>

0004ae9c <__fp_unlock>:
   4ae9c:	0005883a 	mov	r2,zero
   4aea0:	f800283a 	ret

0004aea4 <__sinit.part.0>:
   4aea4:	00c00174 	movhi	r3,5
   4aea8:	20800117 	ldw	r2,4(r4)
   4aeac:	18eba404 	addi	r3,r3,-20848
   4aeb0:	20c00f15 	stw	r3,60(r4)
   4aeb4:	2140bb04 	addi	r5,r4,748
   4aeb8:	00c000c4 	movi	r3,3
   4aebc:	20c0b915 	stw	r3,740(r4)
   4aec0:	2140ba15 	stw	r5,744(r4)
   4aec4:	2000b815 	stw	zero,736(r4)
   4aec8:	10001705 	stb	zero,92(r2)
   4aecc:	10001745 	stb	zero,93(r2)
   4aed0:	10001785 	stb	zero,94(r2)
   4aed4:	100017c5 	stb	zero,95(r2)
   4aed8:	10001805 	stb	zero,96(r2)
   4aedc:	10001845 	stb	zero,97(r2)
   4aee0:	10001885 	stb	zero,98(r2)
   4aee4:	100018c5 	stb	zero,99(r2)
   4aee8:	00c00104 	movi	r3,4
   4aeec:	10c00315 	stw	r3,12(r2)
   4aef0:	02000174 	movhi	r8,5
   4aef4:	20c00217 	ldw	r3,8(r4)
   4aef8:	01c00174 	movhi	r7,5
   4aefc:	01800174 	movhi	r6,5
   4af00:	01400174 	movhi	r5,5
   4af04:	4238c304 	addi	r8,r8,-7412
   4af08:	39f8da04 	addi	r7,r7,-7320
   4af0c:	31b8fa04 	addi	r6,r6,-7192
   4af10:	29791104 	addi	r5,r5,-7100
   4af14:	02400074 	movhi	r9,1
   4af18:	10001915 	stw	zero,100(r2)
   4af1c:	10000015 	stw	zero,0(r2)
   4af20:	10000115 	stw	zero,4(r2)
   4af24:	10000215 	stw	zero,8(r2)
   4af28:	10000415 	stw	zero,16(r2)
   4af2c:	10000515 	stw	zero,20(r2)
   4af30:	10000615 	stw	zero,24(r2)
   4af34:	10800715 	stw	r2,28(r2)
   4af38:	12000815 	stw	r8,32(r2)
   4af3c:	11c00915 	stw	r7,36(r2)
   4af40:	11800a15 	stw	r6,40(r2)
   4af44:	11400b15 	stw	r5,44(r2)
   4af48:	4a400284 	addi	r9,r9,10
   4af4c:	1a400315 	stw	r9,12(r3)
   4af50:	18001915 	stw	zero,100(r3)
   4af54:	18000015 	stw	zero,0(r3)
   4af58:	18000115 	stw	zero,4(r3)
   4af5c:	18000215 	stw	zero,8(r3)
   4af60:	18000415 	stw	zero,16(r3)
   4af64:	18001705 	stb	zero,92(r3)
   4af68:	18001745 	stb	zero,93(r3)
   4af6c:	18001785 	stb	zero,94(r3)
   4af70:	180017c5 	stb	zero,95(r3)
   4af74:	18001805 	stb	zero,96(r3)
   4af78:	18001845 	stb	zero,97(r3)
   4af7c:	18001885 	stb	zero,98(r3)
   4af80:	180018c5 	stb	zero,99(r3)
   4af84:	20800317 	ldw	r2,12(r4)
   4af88:	024000b4 	movhi	r9,2
   4af8c:	18000515 	stw	zero,20(r3)
   4af90:	18000615 	stw	zero,24(r3)
   4af94:	18c00715 	stw	r3,28(r3)
   4af98:	1a000815 	stw	r8,32(r3)
   4af9c:	19c00915 	stw	r7,36(r3)
   4afa0:	19800a15 	stw	r6,40(r3)
   4afa4:	19400b15 	stw	r5,44(r3)
   4afa8:	4a400484 	addi	r9,r9,18
   4afac:	10001915 	stw	zero,100(r2)
   4afb0:	10000015 	stw	zero,0(r2)
   4afb4:	10000115 	stw	zero,4(r2)
   4afb8:	10000215 	stw	zero,8(r2)
   4afbc:	12400315 	stw	r9,12(r2)
   4afc0:	10000415 	stw	zero,16(r2)
   4afc4:	10000515 	stw	zero,20(r2)
   4afc8:	10000615 	stw	zero,24(r2)
   4afcc:	10001705 	stb	zero,92(r2)
   4afd0:	10001745 	stb	zero,93(r2)
   4afd4:	10001785 	stb	zero,94(r2)
   4afd8:	100017c5 	stb	zero,95(r2)
   4afdc:	10001805 	stb	zero,96(r2)
   4afe0:	10001845 	stb	zero,97(r2)
   4afe4:	10001885 	stb	zero,98(r2)
   4afe8:	100018c5 	stb	zero,99(r2)
   4afec:	10800715 	stw	r2,28(r2)
   4aff0:	12000815 	stw	r8,32(r2)
   4aff4:	11c00915 	stw	r7,36(r2)
   4aff8:	11800a15 	stw	r6,40(r2)
   4affc:	11400b15 	stw	r5,44(r2)
   4b000:	00800044 	movi	r2,1
   4b004:	20800e15 	stw	r2,56(r4)
   4b008:	f800283a 	ret

0004b00c <__sfmoreglue>:
   4b00c:	defffc04 	addi	sp,sp,-16
   4b010:	dc400115 	stw	r17,4(sp)
   4b014:	2c7fffc4 	addi	r17,r5,-1
   4b018:	8c401a24 	muli	r17,r17,104
   4b01c:	dc800215 	stw	r18,8(sp)
   4b020:	2825883a 	mov	r18,r5
   4b024:	89401d04 	addi	r5,r17,116
   4b028:	dc000015 	stw	r16,0(sp)
   4b02c:	dfc00315 	stw	ra,12(sp)
   4b030:	004be800 	call	4be80 <_malloc_r>
   4b034:	1021883a 	mov	r16,r2
   4b038:	10000726 	beq	r2,zero,4b058 <__sfmoreglue+0x4c>
   4b03c:	11000304 	addi	r4,r2,12
   4b040:	10000015 	stw	zero,0(r2)
   4b044:	14800115 	stw	r18,4(r2)
   4b048:	11000215 	stw	r4,8(r2)
   4b04c:	89801a04 	addi	r6,r17,104
   4b050:	000b883a 	mov	r5,zero
   4b054:	004c95c0 	call	4c95c <memset>
   4b058:	8005883a 	mov	r2,r16
   4b05c:	dfc00317 	ldw	ra,12(sp)
   4b060:	dc800217 	ldw	r18,8(sp)
   4b064:	dc400117 	ldw	r17,4(sp)
   4b068:	dc000017 	ldw	r16,0(sp)
   4b06c:	dec00404 	addi	sp,sp,16
   4b070:	f800283a 	ret

0004b074 <__sfp>:
   4b074:	defffb04 	addi	sp,sp,-20
   4b078:	00800174 	movhi	r2,5
   4b07c:	dc400115 	stw	r17,4(sp)
   4b080:	1457c117 	ldw	r17,24324(r2)
   4b084:	dc800215 	stw	r18,8(sp)
   4b088:	dfc00415 	stw	ra,16(sp)
   4b08c:	88800e17 	ldw	r2,56(r17)
   4b090:	dcc00315 	stw	r19,12(sp)
   4b094:	dc000015 	stw	r16,0(sp)
   4b098:	2025883a 	mov	r18,r4
   4b09c:	10002f26 	beq	r2,zero,4b15c <__sfp+0xe8>
   4b0a0:	8c40b804 	addi	r17,r17,736
   4b0a4:	04c00104 	movi	r19,4
   4b0a8:	88800117 	ldw	r2,4(r17)
   4b0ac:	8c000217 	ldw	r16,8(r17)
   4b0b0:	10bfffc4 	addi	r2,r2,-1
   4b0b4:	1000030e 	bge	r2,zero,4b0c4 <__sfp+0x50>
   4b0b8:	00002406 	br	4b14c <__sfp+0xd8>
   4b0bc:	84001a04 	addi	r16,r16,104
   4b0c0:	28002226 	beq	r5,zero,4b14c <__sfp+0xd8>
   4b0c4:	80c0030f 	ldh	r3,12(r16)
   4b0c8:	10bfffc4 	addi	r2,r2,-1
   4b0cc:	117fffd8 	cmpnei	r5,r2,-1
   4b0d0:	183ffa1e 	bne	r3,zero,4b0bc <__sfp+0x48>
   4b0d4:	00bffff4 	movhi	r2,65535
   4b0d8:	10800044 	addi	r2,r2,1
   4b0dc:	80001915 	stw	zero,100(r16)
   4b0e0:	80000015 	stw	zero,0(r16)
   4b0e4:	80000115 	stw	zero,4(r16)
   4b0e8:	80000215 	stw	zero,8(r16)
   4b0ec:	80800315 	stw	r2,12(r16)
   4b0f0:	80000415 	stw	zero,16(r16)
   4b0f4:	80000515 	stw	zero,20(r16)
   4b0f8:	80000615 	stw	zero,24(r16)
   4b0fc:	80001705 	stb	zero,92(r16)
   4b100:	80001745 	stb	zero,93(r16)
   4b104:	80001785 	stb	zero,94(r16)
   4b108:	800017c5 	stb	zero,95(r16)
   4b10c:	80001805 	stb	zero,96(r16)
   4b110:	80001845 	stb	zero,97(r16)
   4b114:	80001885 	stb	zero,98(r16)
   4b118:	800018c5 	stb	zero,99(r16)
   4b11c:	80000c15 	stw	zero,48(r16)
   4b120:	80000d15 	stw	zero,52(r16)
   4b124:	80001115 	stw	zero,68(r16)
   4b128:	80001215 	stw	zero,72(r16)
   4b12c:	8005883a 	mov	r2,r16
   4b130:	dfc00417 	ldw	ra,16(sp)
   4b134:	dcc00317 	ldw	r19,12(sp)
   4b138:	dc800217 	ldw	r18,8(sp)
   4b13c:	dc400117 	ldw	r17,4(sp)
   4b140:	dc000017 	ldw	r16,0(sp)
   4b144:	dec00504 	addi	sp,sp,20
   4b148:	f800283a 	ret
   4b14c:	8c000017 	ldw	r16,0(r17)
   4b150:	80000526 	beq	r16,zero,4b168 <__sfp+0xf4>
   4b154:	8023883a 	mov	r17,r16
   4b158:	003fd306 	br	4b0a8 <__sfp+0x34>
   4b15c:	8809883a 	mov	r4,r17
   4b160:	004aea40 	call	4aea4 <__sinit.part.0>
   4b164:	003fce06 	br	4b0a0 <__sfp+0x2c>
   4b168:	01406b04 	movi	r5,428
   4b16c:	9009883a 	mov	r4,r18
   4b170:	004be800 	call	4be80 <_malloc_r>
   4b174:	1021883a 	mov	r16,r2
   4b178:	10000926 	beq	r2,zero,4b1a0 <__sfp+0x12c>
   4b17c:	11000304 	addi	r4,r2,12
   4b180:	10000015 	stw	zero,0(r2)
   4b184:	14c00115 	stw	r19,4(r2)
   4b188:	11000215 	stw	r4,8(r2)
   4b18c:	01806804 	movi	r6,416
   4b190:	000b883a 	mov	r5,zero
   4b194:	004c95c0 	call	4c95c <memset>
   4b198:	8c000015 	stw	r16,0(r17)
   4b19c:	003fed06 	br	4b154 <__sfp+0xe0>
   4b1a0:	88000015 	stw	zero,0(r17)
   4b1a4:	00800304 	movi	r2,12
   4b1a8:	90800015 	stw	r2,0(r18)
   4b1ac:	003fdf06 	br	4b12c <__sfp+0xb8>

0004b1b0 <_cleanup>:
   4b1b0:	00800174 	movhi	r2,5
   4b1b4:	1117c117 	ldw	r4,24324(r2)
   4b1b8:	01400174 	movhi	r5,5
   4b1bc:	297f1004 	addi	r5,r5,-960
   4b1c0:	004bb781 	jmpi	4bb78 <_fwalk_reent>

0004b1c4 <__sinit>:
   4b1c4:	20800e17 	ldw	r2,56(r4)
   4b1c8:	10000126 	beq	r2,zero,4b1d0 <__sinit+0xc>
   4b1cc:	f800283a 	ret
   4b1d0:	004aea41 	jmpi	4aea4 <__sinit.part.0>

0004b1d4 <__sfp_lock_acquire>:
   4b1d4:	f800283a 	ret

0004b1d8 <__sfp_lock_release>:
   4b1d8:	f800283a 	ret

0004b1dc <__sinit_lock_acquire>:
   4b1dc:	f800283a 	ret

0004b1e0 <__sinit_lock_release>:
   4b1e0:	f800283a 	ret

0004b1e4 <__fp_lock_all>:
   4b1e4:	00800174 	movhi	r2,5
   4b1e8:	1117c217 	ldw	r4,24328(r2)
   4b1ec:	01400174 	movhi	r5,5
   4b1f0:	296ba204 	addi	r5,r5,-20856
   4b1f4:	004bae01 	jmpi	4bae0 <_fwalk>

0004b1f8 <__fp_unlock_all>:
   4b1f8:	00800174 	movhi	r2,5
   4b1fc:	1117c217 	ldw	r4,24328(r2)
   4b200:	01400174 	movhi	r5,5
   4b204:	296ba704 	addi	r5,r5,-20836
   4b208:	004bae01 	jmpi	4bae0 <_fwalk>

0004b20c <_malloc_trim_r>:
   4b20c:	defffb04 	addi	sp,sp,-20
   4b210:	dcc00315 	stw	r19,12(sp)
   4b214:	04c00174 	movhi	r19,5
   4b218:	dc800215 	stw	r18,8(sp)
   4b21c:	dc400115 	stw	r17,4(sp)
   4b220:	dc000015 	stw	r16,0(sp)
   4b224:	dfc00415 	stw	ra,16(sp)
   4b228:	2821883a 	mov	r16,r5
   4b22c:	9cd1e204 	addi	r19,r19,18312
   4b230:	2025883a 	mov	r18,r4
   4b234:	0051ba80 	call	51ba8 <__malloc_lock>
   4b238:	98800217 	ldw	r2,8(r19)
   4b23c:	14400117 	ldw	r17,4(r2)
   4b240:	00bfff04 	movi	r2,-4
   4b244:	88a2703a 	and	r17,r17,r2
   4b248:	8c21c83a 	sub	r16,r17,r16
   4b24c:	8403fbc4 	addi	r16,r16,4079
   4b250:	8020d33a 	srli	r16,r16,12
   4b254:	843fffc4 	addi	r16,r16,-1
   4b258:	8020933a 	slli	r16,r16,12
   4b25c:	80840008 	cmpgei	r2,r16,4096
   4b260:	10000626 	beq	r2,zero,4b27c <_malloc_trim_r+0x70>
   4b264:	000b883a 	mov	r5,zero
   4b268:	9009883a 	mov	r4,r18
   4b26c:	004e2b40 	call	4e2b4 <_sbrk_r>
   4b270:	98c00217 	ldw	r3,8(r19)
   4b274:	1c47883a 	add	r3,r3,r17
   4b278:	10c00a26 	beq	r2,r3,4b2a4 <_malloc_trim_r+0x98>
   4b27c:	9009883a 	mov	r4,r18
   4b280:	0051bcc0 	call	51bcc <__malloc_unlock>
   4b284:	0005883a 	mov	r2,zero
   4b288:	dfc00417 	ldw	ra,16(sp)
   4b28c:	dcc00317 	ldw	r19,12(sp)
   4b290:	dc800217 	ldw	r18,8(sp)
   4b294:	dc400117 	ldw	r17,4(sp)
   4b298:	dc000017 	ldw	r16,0(sp)
   4b29c:	dec00504 	addi	sp,sp,20
   4b2a0:	f800283a 	ret
   4b2a4:	040bc83a 	sub	r5,zero,r16
   4b2a8:	9009883a 	mov	r4,r18
   4b2ac:	004e2b40 	call	4e2b4 <_sbrk_r>
   4b2b0:	10bfffd8 	cmpnei	r2,r2,-1
   4b2b4:	10000d26 	beq	r2,zero,4b2ec <_malloc_trim_r+0xe0>
   4b2b8:	00800174 	movhi	r2,5
   4b2bc:	109ed217 	ldw	r2,31560(r2)
   4b2c0:	98c00217 	ldw	r3,8(r19)
   4b2c4:	8c23c83a 	sub	r17,r17,r16
   4b2c8:	8c400054 	ori	r17,r17,1
   4b2cc:	1405c83a 	sub	r2,r2,r16
   4b2d0:	1c400115 	stw	r17,4(r3)
   4b2d4:	9009883a 	mov	r4,r18
   4b2d8:	00c00174 	movhi	r3,5
   4b2dc:	189ed215 	stw	r2,31560(r3)
   4b2e0:	0051bcc0 	call	51bcc <__malloc_unlock>
   4b2e4:	00800044 	movi	r2,1
   4b2e8:	003fe706 	br	4b288 <_malloc_trim_r+0x7c>
   4b2ec:	000b883a 	mov	r5,zero
   4b2f0:	9009883a 	mov	r4,r18
   4b2f4:	004e2b40 	call	4e2b4 <_sbrk_r>
   4b2f8:	99000217 	ldw	r4,8(r19)
   4b2fc:	1107c83a 	sub	r3,r2,r4
   4b300:	19400410 	cmplti	r5,r3,16
   4b304:	283fdd1e 	bne	r5,zero,4b27c <_malloc_trim_r+0x70>
   4b308:	01400174 	movhi	r5,5
   4b30c:	2957c317 	ldw	r5,24332(r5)
   4b310:	18c00054 	ori	r3,r3,1
   4b314:	20c00115 	stw	r3,4(r4)
   4b318:	1145c83a 	sub	r2,r2,r5
   4b31c:	01400174 	movhi	r5,5
   4b320:	289ed215 	stw	r2,31560(r5)
   4b324:	003fd506 	br	4b27c <_malloc_trim_r+0x70>

0004b328 <_free_r>:
   4b328:	28004f26 	beq	r5,zero,4b468 <_free_r+0x140>
   4b32c:	defffd04 	addi	sp,sp,-12
   4b330:	dc400115 	stw	r17,4(sp)
   4b334:	dc000015 	stw	r16,0(sp)
   4b338:	2023883a 	mov	r17,r4
   4b33c:	2821883a 	mov	r16,r5
   4b340:	dfc00215 	stw	ra,8(sp)
   4b344:	0051ba80 	call	51ba8 <__malloc_lock>
   4b348:	81ffff17 	ldw	r7,-4(r16)
   4b34c:	00bfff84 	movi	r2,-2
   4b350:	80fffe04 	addi	r3,r16,-8
   4b354:	3884703a 	and	r2,r7,r2
   4b358:	01000174 	movhi	r4,5
   4b35c:	188d883a 	add	r6,r3,r2
   4b360:	2111e204 	addi	r4,r4,18312
   4b364:	31400117 	ldw	r5,4(r6)
   4b368:	22000217 	ldw	r8,8(r4)
   4b36c:	027fff04 	movi	r9,-4
   4b370:	2a4a703a 	and	r5,r5,r9
   4b374:	41806426 	beq	r8,r6,4b508 <_free_r+0x1e0>
   4b378:	31400115 	stw	r5,4(r6)
   4b37c:	39c0004c 	andi	r7,r7,1
   4b380:	3151883a 	add	r8,r6,r5
   4b384:	3800281e 	bne	r7,zero,4b428 <_free_r+0x100>
   4b388:	82bffe17 	ldw	r10,-8(r16)
   4b38c:	42000117 	ldw	r8,4(r8)
   4b390:	01c00174 	movhi	r7,5
   4b394:	1a87c83a 	sub	r3,r3,r10
   4b398:	1a400217 	ldw	r9,8(r3)
   4b39c:	39d1e404 	addi	r7,r7,18320
   4b3a0:	1285883a 	add	r2,r2,r10
   4b3a4:	4200004c 	andi	r8,r8,1
   4b3a8:	49c04c26 	beq	r9,r7,4b4dc <_free_r+0x1b4>
   4b3ac:	1a800317 	ldw	r10,12(r3)
   4b3b0:	4a800315 	stw	r10,12(r9)
   4b3b4:	52400215 	stw	r9,8(r10)
   4b3b8:	40007126 	beq	r8,zero,4b580 <_free_r+0x258>
   4b3bc:	11400054 	ori	r5,r2,1
   4b3c0:	19400115 	stw	r5,4(r3)
   4b3c4:	30800015 	stw	r2,0(r6)
   4b3c8:	11408028 	cmpgeui	r5,r2,512
   4b3cc:	28002c1e 	bne	r5,zero,4b480 <_free_r+0x158>
   4b3d0:	100ad0fa 	srli	r5,r2,3
   4b3d4:	100cd17a 	srli	r6,r2,5
   4b3d8:	21c00117 	ldw	r7,4(r4)
   4b3dc:	28800044 	addi	r2,r5,1
   4b3e0:	100490fa 	slli	r2,r2,3
   4b3e4:	01400044 	movi	r5,1
   4b3e8:	298a983a 	sll	r5,r5,r6
   4b3ec:	2085883a 	add	r2,r4,r2
   4b3f0:	11800017 	ldw	r6,0(r2)
   4b3f4:	29cab03a 	or	r5,r5,r7
   4b3f8:	11fffe04 	addi	r7,r2,-8
   4b3fc:	19c00315 	stw	r7,12(r3)
   4b400:	19800215 	stw	r6,8(r3)
   4b404:	21400115 	stw	r5,4(r4)
   4b408:	10c00015 	stw	r3,0(r2)
   4b40c:	30c00315 	stw	r3,12(r6)
   4b410:	8809883a 	mov	r4,r17
   4b414:	dfc00217 	ldw	ra,8(sp)
   4b418:	dc400117 	ldw	r17,4(sp)
   4b41c:	dc000017 	ldw	r16,0(sp)
   4b420:	dec00304 	addi	sp,sp,12
   4b424:	0051bcc1 	jmpi	51bcc <__malloc_unlock>
   4b428:	41c00117 	ldw	r7,4(r8)
   4b42c:	39c0004c 	andi	r7,r7,1
   4b430:	38000e1e 	bne	r7,zero,4b46c <_free_r+0x144>
   4b434:	01c00174 	movhi	r7,5
   4b438:	1145883a 	add	r2,r2,r5
   4b43c:	39d1e404 	addi	r7,r7,18320
   4b440:	31400217 	ldw	r5,8(r6)
   4b444:	12400054 	ori	r9,r2,1
   4b448:	1891883a 	add	r8,r3,r2
   4b44c:	29c05226 	beq	r5,r7,4b598 <_free_r+0x270>
   4b450:	31800317 	ldw	r6,12(r6)
   4b454:	29800315 	stw	r6,12(r5)
   4b458:	31400215 	stw	r5,8(r6)
   4b45c:	1a400115 	stw	r9,4(r3)
   4b460:	40800015 	stw	r2,0(r8)
   4b464:	003fd806 	br	4b3c8 <_free_r+0xa0>
   4b468:	f800283a 	ret
   4b46c:	11400054 	ori	r5,r2,1
   4b470:	817fff15 	stw	r5,-4(r16)
   4b474:	30800015 	stw	r2,0(r6)
   4b478:	11408028 	cmpgeui	r5,r2,512
   4b47c:	283fd426 	beq	r5,zero,4b3d0 <_free_r+0xa8>
   4b480:	100ad27a 	srli	r5,r2,9
   4b484:	29800168 	cmpgeui	r6,r5,5
   4b488:	3000341e 	bne	r6,zero,4b55c <_free_r+0x234>
   4b48c:	100ad1ba 	srli	r5,r2,6
   4b490:	29800e44 	addi	r6,r5,57
   4b494:	300c90fa 	slli	r6,r6,3
   4b498:	29c00e04 	addi	r7,r5,56
   4b49c:	218d883a 	add	r6,r4,r6
   4b4a0:	31400017 	ldw	r5,0(r6)
   4b4a4:	31bffe04 	addi	r6,r6,-8
   4b4a8:	31404226 	beq	r6,r5,4b5b4 <_free_r+0x28c>
   4b4ac:	01ffff04 	movi	r7,-4
   4b4b0:	29000117 	ldw	r4,4(r5)
   4b4b4:	21c8703a 	and	r4,r4,r7
   4b4b8:	1100022e 	bgeu	r2,r4,4b4c4 <_free_r+0x19c>
   4b4bc:	29400217 	ldw	r5,8(r5)
   4b4c0:	317ffb1e 	bne	r6,r5,4b4b0 <_free_r+0x188>
   4b4c4:	29800317 	ldw	r6,12(r5)
   4b4c8:	19800315 	stw	r6,12(r3)
   4b4cc:	19400215 	stw	r5,8(r3)
   4b4d0:	30c00215 	stw	r3,8(r6)
   4b4d4:	28c00315 	stw	r3,12(r5)
   4b4d8:	003fcd06 	br	4b410 <_free_r+0xe8>
   4b4dc:	40004d1e 	bne	r8,zero,4b614 <_free_r+0x2ec>
   4b4e0:	31000317 	ldw	r4,12(r6)
   4b4e4:	31800217 	ldw	r6,8(r6)
   4b4e8:	288b883a 	add	r5,r5,r2
   4b4ec:	28800054 	ori	r2,r5,1
   4b4f0:	31000315 	stw	r4,12(r6)
   4b4f4:	21800215 	stw	r6,8(r4)
   4b4f8:	18800115 	stw	r2,4(r3)
   4b4fc:	1947883a 	add	r3,r3,r5
   4b500:	19400015 	stw	r5,0(r3)
   4b504:	003fc206 	br	4b410 <_free_r+0xe8>
   4b508:	39c0004c 	andi	r7,r7,1
   4b50c:	114b883a 	add	r5,r2,r5
   4b510:	3800071e 	bne	r7,zero,4b530 <_free_r+0x208>
   4b514:	81fffe17 	ldw	r7,-8(r16)
   4b518:	19c7c83a 	sub	r3,r3,r7
   4b51c:	18800317 	ldw	r2,12(r3)
   4b520:	19800217 	ldw	r6,8(r3)
   4b524:	29cb883a 	add	r5,r5,r7
   4b528:	30800315 	stw	r2,12(r6)
   4b52c:	11800215 	stw	r6,8(r2)
   4b530:	00800174 	movhi	r2,5
   4b534:	29800054 	ori	r6,r5,1
   4b538:	1097c417 	ldw	r2,24336(r2)
   4b53c:	19800115 	stw	r6,4(r3)
   4b540:	20c00215 	stw	r3,8(r4)
   4b544:	28bfb236 	bltu	r5,r2,4b410 <_free_r+0xe8>
   4b548:	00800174 	movhi	r2,5
   4b54c:	115ec717 	ldw	r5,31516(r2)
   4b550:	8809883a 	mov	r4,r17
   4b554:	004b20c0 	call	4b20c <_malloc_trim_r>
   4b558:	003fad06 	br	4b410 <_free_r+0xe8>
   4b55c:	29800568 	cmpgeui	r6,r5,21
   4b560:	30000926 	beq	r6,zero,4b588 <_free_r+0x260>
   4b564:	29801568 	cmpgeui	r6,r5,85
   4b568:	3000191e 	bne	r6,zero,4b5d0 <_free_r+0x2a8>
   4b56c:	100ad33a 	srli	r5,r2,12
   4b570:	29801bc4 	addi	r6,r5,111
   4b574:	300c90fa 	slli	r6,r6,3
   4b578:	29c01b84 	addi	r7,r5,110
   4b57c:	003fc706 	br	4b49c <_free_r+0x174>
   4b580:	1145883a 	add	r2,r2,r5
   4b584:	003fae06 	br	4b440 <_free_r+0x118>
   4b588:	29801704 	addi	r6,r5,92
   4b58c:	300c90fa 	slli	r6,r6,3
   4b590:	29c016c4 	addi	r7,r5,91
   4b594:	003fc106 	br	4b49c <_free_r+0x174>
   4b598:	20c00515 	stw	r3,20(r4)
   4b59c:	20c00415 	stw	r3,16(r4)
   4b5a0:	19c00315 	stw	r7,12(r3)
   4b5a4:	19c00215 	stw	r7,8(r3)
   4b5a8:	1a400115 	stw	r9,4(r3)
   4b5ac:	40800015 	stw	r2,0(r8)
   4b5b0:	003f9706 	br	4b410 <_free_r+0xe8>
   4b5b4:	380fd0ba 	srai	r7,r7,2
   4b5b8:	00800044 	movi	r2,1
   4b5bc:	22000117 	ldw	r8,4(r4)
   4b5c0:	11c4983a 	sll	r2,r2,r7
   4b5c4:	1204b03a 	or	r2,r2,r8
   4b5c8:	20800115 	stw	r2,4(r4)
   4b5cc:	003fbe06 	br	4b4c8 <_free_r+0x1a0>
   4b5d0:	29805568 	cmpgeui	r6,r5,341
   4b5d4:	3000051e 	bne	r6,zero,4b5ec <_free_r+0x2c4>
   4b5d8:	100ad3fa 	srli	r5,r2,15
   4b5dc:	29801e04 	addi	r6,r5,120
   4b5e0:	300c90fa 	slli	r6,r6,3
   4b5e4:	29c01dc4 	addi	r7,r5,119
   4b5e8:	003fac06 	br	4b49c <_free_r+0x174>
   4b5ec:	29415568 	cmpgeui	r5,r5,1365
   4b5f0:	2800051e 	bne	r5,zero,4b608 <_free_r+0x2e0>
   4b5f4:	100ad4ba 	srli	r5,r2,18
   4b5f8:	29801f44 	addi	r6,r5,125
   4b5fc:	300c90fa 	slli	r6,r6,3
   4b600:	29c01f04 	addi	r7,r5,124
   4b604:	003fa506 	br	4b49c <_free_r+0x174>
   4b608:	0180fe04 	movi	r6,1016
   4b60c:	01c01f84 	movi	r7,126
   4b610:	003fa206 	br	4b49c <_free_r+0x174>
   4b614:	11000054 	ori	r4,r2,1
   4b618:	19000115 	stw	r4,4(r3)
   4b61c:	30800015 	stw	r2,0(r6)
   4b620:	003f7b06 	br	4b410 <_free_r+0xe8>

0004b624 <__sfvwrite_r>:
   4b624:	30800217 	ldw	r2,8(r6)
   4b628:	1000c626 	beq	r2,zero,4b944 <__sfvwrite_r+0x320>
   4b62c:	2a80030b 	ldhu	r10,12(r5)
   4b630:	defff404 	addi	sp,sp,-48
   4b634:	df000a15 	stw	fp,40(sp)
   4b638:	dc800415 	stw	r18,16(sp)
   4b63c:	dc000215 	stw	r16,8(sp)
   4b640:	dfc00b15 	stw	ra,44(sp)
   4b644:	ddc00915 	stw	r23,36(sp)
   4b648:	dd800815 	stw	r22,32(sp)
   4b64c:	dd400715 	stw	r21,28(sp)
   4b650:	dd000615 	stw	r20,24(sp)
   4b654:	dcc00515 	stw	r19,20(sp)
   4b658:	dc400315 	stw	r17,12(sp)
   4b65c:	5080020c 	andi	r2,r10,8
   4b660:	3039883a 	mov	fp,r6
   4b664:	2025883a 	mov	r18,r4
   4b668:	2821883a 	mov	r16,r5
   4b66c:	10002226 	beq	r2,zero,4b6f8 <__sfvwrite_r+0xd4>
   4b670:	28800417 	ldw	r2,16(r5)
   4b674:	10002026 	beq	r2,zero,4b6f8 <__sfvwrite_r+0xd4>
   4b678:	5080008c 	andi	r2,r10,2
   4b67c:	e4400017 	ldw	r17,0(fp)
   4b680:	10002526 	beq	r2,zero,4b718 <__sfvwrite_r+0xf4>
   4b684:	80800917 	ldw	r2,36(r16)
   4b688:	81400717 	ldw	r5,28(r16)
   4b68c:	05600034 	movhi	r21,32768
   4b690:	0029883a 	mov	r20,zero
   4b694:	0027883a 	mov	r19,zero
   4b698:	ad7f0004 	addi	r21,r21,-1024
   4b69c:	a00d883a 	mov	r6,r20
   4b6a0:	9009883a 	mov	r4,r18
   4b6a4:	98001026 	beq	r19,zero,4b6e8 <__sfvwrite_r+0xc4>
   4b6a8:	980f883a 	mov	r7,r19
   4b6ac:	acc0012e 	bgeu	r21,r19,4b6b4 <__sfvwrite_r+0x90>
   4b6b0:	a80f883a 	mov	r7,r21
   4b6b4:	103ee83a 	callr	r2
   4b6b8:	00809d0e 	bge	zero,r2,4b930 <__sfvwrite_r+0x30c>
   4b6bc:	e0c00217 	ldw	r3,8(fp)
   4b6c0:	a0a9883a 	add	r20,r20,r2
   4b6c4:	98a7c83a 	sub	r19,r19,r2
   4b6c8:	1885c83a 	sub	r2,r3,r2
   4b6cc:	e0800215 	stw	r2,8(fp)
   4b6d0:	10008626 	beq	r2,zero,4b8ec <__sfvwrite_r+0x2c8>
   4b6d4:	80800917 	ldw	r2,36(r16)
   4b6d8:	81400717 	ldw	r5,28(r16)
   4b6dc:	a00d883a 	mov	r6,r20
   4b6e0:	9009883a 	mov	r4,r18
   4b6e4:	983ff01e 	bne	r19,zero,4b6a8 <__sfvwrite_r+0x84>
   4b6e8:	8d000017 	ldw	r20,0(r17)
   4b6ec:	8cc00117 	ldw	r19,4(r17)
   4b6f0:	8c400204 	addi	r17,r17,8
   4b6f4:	003fe906 	br	4b69c <__sfvwrite_r+0x78>
   4b6f8:	800b883a 	mov	r5,r16
   4b6fc:	9009883a 	mov	r4,r18
   4b700:	00490c00 	call	490c0 <__swsetup_r>
   4b704:	1000f41e 	bne	r2,zero,4bad8 <__sfvwrite_r+0x4b4>
   4b708:	8280030b 	ldhu	r10,12(r16)
   4b70c:	e4400017 	ldw	r17,0(fp)
   4b710:	5080008c 	andi	r2,r10,2
   4b714:	103fdb1e 	bne	r2,zero,4b684 <__sfvwrite_r+0x60>
   4b718:	5080004c 	andi	r2,r10,1
   4b71c:	1000511e 	bne	r2,zero,4b864 <__sfvwrite_r+0x240>
   4b720:	00a00034 	movhi	r2,32768
   4b724:	10bfff84 	addi	r2,r2,-2
   4b728:	01200034 	movhi	r4,32768
   4b72c:	82000017 	ldw	r8,0(r16)
   4b730:	80c00217 	ldw	r3,8(r16)
   4b734:	d8800015 	stw	r2,0(sp)
   4b738:	20bfffc4 	addi	r2,r4,-1
   4b73c:	002b883a 	mov	r21,zero
   4b740:	002d883a 	mov	r22,zero
   4b744:	d8800115 	stw	r2,4(sp)
   4b748:	4009883a 	mov	r4,r8
   4b74c:	1827883a 	mov	r19,r3
   4b750:	b0004026 	beq	r22,zero,4b854 <__sfvwrite_r+0x230>
   4b754:	5080800c 	andi	r2,r10,512
   4b758:	10009426 	beq	r2,zero,4b9ac <__sfvwrite_r+0x388>
   4b75c:	1829883a 	mov	r20,r3
   4b760:	b0c0b836 	bltu	r22,r3,4ba44 <__sfvwrite_r+0x420>
   4b764:	5081200c 	andi	r2,r10,1152
   4b768:	10002426 	beq	r2,zero,4b7fc <__sfvwrite_r+0x1d8>
   4b76c:	80800517 	ldw	r2,20(r16)
   4b770:	81000417 	ldw	r4,16(r16)
   4b774:	108000e4 	muli	r2,r2,3
   4b778:	412fc83a 	sub	r23,r8,r4
   4b77c:	b8c00044 	addi	r3,r23,1
   4b780:	100ed7fa 	srli	r7,r2,31
   4b784:	1d87883a 	add	r3,r3,r22
   4b788:	388f883a 	add	r7,r7,r2
   4b78c:	3827d07a 	srai	r19,r7,1
   4b790:	980b883a 	mov	r5,r19
   4b794:	98c0022e 	bgeu	r19,r3,4b7a0 <__sfvwrite_r+0x17c>
   4b798:	1827883a 	mov	r19,r3
   4b79c:	180b883a 	mov	r5,r3
   4b7a0:	5281000c 	andi	r10,r10,1024
   4b7a4:	5000ba26 	beq	r10,zero,4ba90 <__sfvwrite_r+0x46c>
   4b7a8:	9009883a 	mov	r4,r18
   4b7ac:	004be800 	call	4be80 <_malloc_r>
   4b7b0:	1000c526 	beq	r2,zero,4bac8 <__sfvwrite_r+0x4a4>
   4b7b4:	81400417 	ldw	r5,16(r16)
   4b7b8:	1009883a 	mov	r4,r2
   4b7bc:	b80d883a 	mov	r6,r23
   4b7c0:	004c7300 	call	4c730 <memcpy>
   4b7c4:	1007883a 	mov	r3,r2
   4b7c8:	8080030b 	ldhu	r2,12(r16)
   4b7cc:	013edfc4 	movi	r4,-1153
   4b7d0:	1104703a 	and	r2,r2,r4
   4b7d4:	10802014 	ori	r2,r2,128
   4b7d8:	8080030d 	sth	r2,12(r16)
   4b7dc:	9dd1c83a 	sub	r8,r19,r23
   4b7e0:	1dc9883a 	add	r4,r3,r23
   4b7e4:	84c00515 	stw	r19,20(r16)
   4b7e8:	80c00415 	stw	r3,16(r16)
   4b7ec:	81000015 	stw	r4,0(r16)
   4b7f0:	b027883a 	mov	r19,r22
   4b7f4:	82000215 	stw	r8,8(r16)
   4b7f8:	b029883a 	mov	r20,r22
   4b7fc:	a00d883a 	mov	r6,r20
   4b800:	a80b883a 	mov	r5,r21
   4b804:	004c8300 	call	4c830 <memmove>
   4b808:	80c00217 	ldw	r3,8(r16)
   4b80c:	82000017 	ldw	r8,0(r16)
   4b810:	b02f883a 	mov	r23,r22
   4b814:	1cc7c83a 	sub	r3,r3,r19
   4b818:	450d883a 	add	r6,r8,r20
   4b81c:	80c00215 	stw	r3,8(r16)
   4b820:	81800015 	stw	r6,0(r16)
   4b824:	002d883a 	mov	r22,zero
   4b828:	e0800217 	ldw	r2,8(fp)
   4b82c:	adeb883a 	add	r21,r21,r23
   4b830:	15c5c83a 	sub	r2,r2,r23
   4b834:	e0800215 	stw	r2,8(fp)
   4b838:	10002c26 	beq	r2,zero,4b8ec <__sfvwrite_r+0x2c8>
   4b83c:	82000017 	ldw	r8,0(r16)
   4b840:	80c00217 	ldw	r3,8(r16)
   4b844:	8280030b 	ldhu	r10,12(r16)
   4b848:	4009883a 	mov	r4,r8
   4b84c:	1827883a 	mov	r19,r3
   4b850:	b03fc01e 	bne	r22,zero,4b754 <__sfvwrite_r+0x130>
   4b854:	8d400017 	ldw	r21,0(r17)
   4b858:	8d800117 	ldw	r22,4(r17)
   4b85c:	8c400204 	addi	r17,r17,8
   4b860:	003fb906 	br	4b748 <__sfvwrite_r+0x124>
   4b864:	002f883a 	mov	r23,zero
   4b868:	0005883a 	mov	r2,zero
   4b86c:	002d883a 	mov	r22,zero
   4b870:	0029883a 	mov	r20,zero
   4b874:	a0003526 	beq	r20,zero,4b94c <__sfvwrite_r+0x328>
   4b878:	10003926 	beq	r2,zero,4b960 <__sfvwrite_r+0x33c>
   4b87c:	b805883a 	mov	r2,r23
   4b880:	a02b883a 	mov	r21,r20
   4b884:	1500012e 	bgeu	r2,r20,4b88c <__sfvwrite_r+0x268>
   4b888:	102b883a 	mov	r21,r2
   4b88c:	81000017 	ldw	r4,0(r16)
   4b890:	80800417 	ldw	r2,16(r16)
   4b894:	84c00217 	ldw	r19,8(r16)
   4b898:	81c00517 	ldw	r7,20(r16)
   4b89c:	1100022e 	bgeu	r2,r4,4b8a8 <__sfvwrite_r+0x284>
   4b8a0:	99e7883a 	add	r19,r19,r7
   4b8a4:	9d403616 	blt	r19,r21,4b980 <__sfvwrite_r+0x35c>
   4b8a8:	a9c06916 	blt	r21,r7,4ba50 <__sfvwrite_r+0x42c>
   4b8ac:	80800917 	ldw	r2,36(r16)
   4b8b0:	81400717 	ldw	r5,28(r16)
   4b8b4:	b00d883a 	mov	r6,r22
   4b8b8:	9009883a 	mov	r4,r18
   4b8bc:	103ee83a 	callr	r2
   4b8c0:	1027883a 	mov	r19,r2
   4b8c4:	00801a0e 	bge	zero,r2,4b930 <__sfvwrite_r+0x30c>
   4b8c8:	bcefc83a 	sub	r23,r23,r19
   4b8cc:	b8001426 	beq	r23,zero,4b920 <__sfvwrite_r+0x2fc>
   4b8d0:	00800044 	movi	r2,1
   4b8d4:	e0c00217 	ldw	r3,8(fp)
   4b8d8:	b4ed883a 	add	r22,r22,r19
   4b8dc:	a4e9c83a 	sub	r20,r20,r19
   4b8e0:	1cc7c83a 	sub	r3,r3,r19
   4b8e4:	e0c00215 	stw	r3,8(fp)
   4b8e8:	183fe21e 	bne	r3,zero,4b874 <__sfvwrite_r+0x250>
   4b8ec:	0005883a 	mov	r2,zero
   4b8f0:	dfc00b17 	ldw	ra,44(sp)
   4b8f4:	df000a17 	ldw	fp,40(sp)
   4b8f8:	ddc00917 	ldw	r23,36(sp)
   4b8fc:	dd800817 	ldw	r22,32(sp)
   4b900:	dd400717 	ldw	r21,28(sp)
   4b904:	dd000617 	ldw	r20,24(sp)
   4b908:	dcc00517 	ldw	r19,20(sp)
   4b90c:	dc800417 	ldw	r18,16(sp)
   4b910:	dc400317 	ldw	r17,12(sp)
   4b914:	dc000217 	ldw	r16,8(sp)
   4b918:	dec00c04 	addi	sp,sp,48
   4b91c:	f800283a 	ret
   4b920:	800b883a 	mov	r5,r16
   4b924:	9009883a 	mov	r4,r18
   4b928:	004ada40 	call	4ada4 <_fflush_r>
   4b92c:	103fe926 	beq	r2,zero,4b8d4 <__sfvwrite_r+0x2b0>
   4b930:	8080030b 	ldhu	r2,12(r16)
   4b934:	10801014 	ori	r2,r2,64
   4b938:	8080030d 	sth	r2,12(r16)
   4b93c:	00bfffc4 	movi	r2,-1
   4b940:	003feb06 	br	4b8f0 <__sfvwrite_r+0x2cc>
   4b944:	0005883a 	mov	r2,zero
   4b948:	f800283a 	ret
   4b94c:	8d000117 	ldw	r20,4(r17)
   4b950:	8805883a 	mov	r2,r17
   4b954:	8c400204 	addi	r17,r17,8
   4b958:	a03ffc26 	beq	r20,zero,4b94c <__sfvwrite_r+0x328>
   4b95c:	15800017 	ldw	r22,0(r2)
   4b960:	a00d883a 	mov	r6,r20
   4b964:	01400284 	movi	r5,10
   4b968:	b009883a 	mov	r4,r22
   4b96c:	004c6640 	call	4c664 <memchr>
   4b970:	10004426 	beq	r2,zero,4ba84 <__sfvwrite_r+0x460>
   4b974:	10800044 	addi	r2,r2,1
   4b978:	15afc83a 	sub	r23,r2,r22
   4b97c:	003fbf06 	br	4b87c <__sfvwrite_r+0x258>
   4b980:	b00b883a 	mov	r5,r22
   4b984:	980d883a 	mov	r6,r19
   4b988:	004c8300 	call	4c830 <memmove>
   4b98c:	80800017 	ldw	r2,0(r16)
   4b990:	800b883a 	mov	r5,r16
   4b994:	9009883a 	mov	r4,r18
   4b998:	14c5883a 	add	r2,r2,r19
   4b99c:	80800015 	stw	r2,0(r16)
   4b9a0:	004ada40 	call	4ada4 <_fflush_r>
   4b9a4:	103fc826 	beq	r2,zero,4b8c8 <__sfvwrite_r+0x2a4>
   4b9a8:	003fe106 	br	4b930 <__sfvwrite_r+0x30c>
   4b9ac:	80800417 	ldw	r2,16(r16)
   4b9b0:	12001136 	bltu	r2,r8,4b9f8 <__sfvwrite_r+0x3d4>
   4b9b4:	85c00517 	ldw	r23,20(r16)
   4b9b8:	b5c00f36 	bltu	r22,r23,4b9f8 <__sfvwrite_r+0x3d4>
   4b9bc:	d8800017 	ldw	r2,0(sp)
   4b9c0:	15802e2e 	bgeu	r2,r22,4ba7c <__sfvwrite_r+0x458>
   4b9c4:	d9000117 	ldw	r4,4(sp)
   4b9c8:	b80b883a 	mov	r5,r23
   4b9cc:	0046c180 	call	46c18 <__divsi3>
   4b9d0:	15cf383a 	mul	r7,r2,r23
   4b9d4:	80c00917 	ldw	r3,36(r16)
   4b9d8:	81400717 	ldw	r5,28(r16)
   4b9dc:	a80d883a 	mov	r6,r21
   4b9e0:	9009883a 	mov	r4,r18
   4b9e4:	183ee83a 	callr	r3
   4b9e8:	102f883a 	mov	r23,r2
   4b9ec:	00bfd00e 	bge	zero,r2,4b930 <__sfvwrite_r+0x30c>
   4b9f0:	b5edc83a 	sub	r22,r22,r23
   4b9f4:	003f8c06 	br	4b828 <__sfvwrite_r+0x204>
   4b9f8:	182f883a 	mov	r23,r3
   4b9fc:	b0c0012e 	bgeu	r22,r3,4ba04 <__sfvwrite_r+0x3e0>
   4ba00:	b02f883a 	mov	r23,r22
   4ba04:	4009883a 	mov	r4,r8
   4ba08:	b80d883a 	mov	r6,r23
   4ba0c:	a80b883a 	mov	r5,r21
   4ba10:	004c8300 	call	4c830 <memmove>
   4ba14:	80c00217 	ldw	r3,8(r16)
   4ba18:	82000017 	ldw	r8,0(r16)
   4ba1c:	1dc7c83a 	sub	r3,r3,r23
   4ba20:	45d1883a 	add	r8,r8,r23
   4ba24:	80c00215 	stw	r3,8(r16)
   4ba28:	82000015 	stw	r8,0(r16)
   4ba2c:	183ff01e 	bne	r3,zero,4b9f0 <__sfvwrite_r+0x3cc>
   4ba30:	800b883a 	mov	r5,r16
   4ba34:	9009883a 	mov	r4,r18
   4ba38:	004ada40 	call	4ada4 <_fflush_r>
   4ba3c:	103fec26 	beq	r2,zero,4b9f0 <__sfvwrite_r+0x3cc>
   4ba40:	003fbb06 	br	4b930 <__sfvwrite_r+0x30c>
   4ba44:	b027883a 	mov	r19,r22
   4ba48:	b029883a 	mov	r20,r22
   4ba4c:	003f6b06 	br	4b7fc <__sfvwrite_r+0x1d8>
   4ba50:	a80d883a 	mov	r6,r21
   4ba54:	b00b883a 	mov	r5,r22
   4ba58:	004c8300 	call	4c830 <memmove>
   4ba5c:	80c00217 	ldw	r3,8(r16)
   4ba60:	80800017 	ldw	r2,0(r16)
   4ba64:	a827883a 	mov	r19,r21
   4ba68:	1d47c83a 	sub	r3,r3,r21
   4ba6c:	1545883a 	add	r2,r2,r21
   4ba70:	80c00215 	stw	r3,8(r16)
   4ba74:	80800015 	stw	r2,0(r16)
   4ba78:	003f9306 	br	4b8c8 <__sfvwrite_r+0x2a4>
   4ba7c:	b009883a 	mov	r4,r22
   4ba80:	003fd106 	br	4b9c8 <__sfvwrite_r+0x3a4>
   4ba84:	a0800044 	addi	r2,r20,1
   4ba88:	102f883a 	mov	r23,r2
   4ba8c:	003f7c06 	br	4b880 <__sfvwrite_r+0x25c>
   4ba90:	280d883a 	mov	r6,r5
   4ba94:	200b883a 	mov	r5,r4
   4ba98:	9009883a 	mov	r4,r18
   4ba9c:	004dd440 	call	4dd44 <_realloc_r>
   4baa0:	1007883a 	mov	r3,r2
   4baa4:	103f4d1e 	bne	r2,zero,4b7dc <__sfvwrite_r+0x1b8>
   4baa8:	81400417 	ldw	r5,16(r16)
   4baac:	9009883a 	mov	r4,r18
   4bab0:	004b3280 	call	4b328 <_free_r>
   4bab4:	8080030b 	ldhu	r2,12(r16)
   4bab8:	00c00304 	movi	r3,12
   4babc:	90c00015 	stw	r3,0(r18)
   4bac0:	10bfdfcc 	andi	r2,r2,65407
   4bac4:	003f9b06 	br	4b934 <__sfvwrite_r+0x310>
   4bac8:	00c00304 	movi	r3,12
   4bacc:	8080030b 	ldhu	r2,12(r16)
   4bad0:	90c00015 	stw	r3,0(r18)
   4bad4:	003f9706 	br	4b934 <__sfvwrite_r+0x310>
   4bad8:	00bfffc4 	movi	r2,-1
   4badc:	003f8406 	br	4b8f0 <__sfvwrite_r+0x2cc>

0004bae0 <_fwalk>:
   4bae0:	defffa04 	addi	sp,sp,-24
   4bae4:	dd000415 	stw	r20,16(sp)
   4bae8:	dcc00315 	stw	r19,12(sp)
   4baec:	dc800215 	stw	r18,8(sp)
   4baf0:	dfc00515 	stw	ra,20(sp)
   4baf4:	dc400115 	stw	r17,4(sp)
   4baf8:	dc000015 	stw	r16,0(sp)
   4bafc:	2827883a 	mov	r19,r5
   4bb00:	2480b804 	addi	r18,r4,736
   4bb04:	0029883a 	mov	r20,zero
   4bb08:	94400117 	ldw	r17,4(r18)
   4bb0c:	94000217 	ldw	r16,8(r18)
   4bb10:	8c7fffc4 	addi	r17,r17,-1
   4bb14:	88000d16 	blt	r17,zero,4bb4c <_fwalk+0x6c>
   4bb18:	8080030b 	ldhu	r2,12(r16)
   4bb1c:	8c7fffc4 	addi	r17,r17,-1
   4bb20:	108000b0 	cmpltui	r2,r2,2
   4bb24:	1000061e 	bne	r2,zero,4bb40 <_fwalk+0x60>
   4bb28:	8080038f 	ldh	r2,14(r16)
   4bb2c:	8009883a 	mov	r4,r16
   4bb30:	10bfffe0 	cmpeqi	r2,r2,-1
   4bb34:	1000021e 	bne	r2,zero,4bb40 <_fwalk+0x60>
   4bb38:	983ee83a 	callr	r19
   4bb3c:	a0a8b03a 	or	r20,r20,r2
   4bb40:	88bfffd8 	cmpnei	r2,r17,-1
   4bb44:	84001a04 	addi	r16,r16,104
   4bb48:	103ff31e 	bne	r2,zero,4bb18 <_fwalk+0x38>
   4bb4c:	94800017 	ldw	r18,0(r18)
   4bb50:	903fed1e 	bne	r18,zero,4bb08 <_fwalk+0x28>
   4bb54:	a005883a 	mov	r2,r20
   4bb58:	dfc00517 	ldw	ra,20(sp)
   4bb5c:	dd000417 	ldw	r20,16(sp)
   4bb60:	dcc00317 	ldw	r19,12(sp)
   4bb64:	dc800217 	ldw	r18,8(sp)
   4bb68:	dc400117 	ldw	r17,4(sp)
   4bb6c:	dc000017 	ldw	r16,0(sp)
   4bb70:	dec00604 	addi	sp,sp,24
   4bb74:	f800283a 	ret

0004bb78 <_fwalk_reent>:
   4bb78:	defff904 	addi	sp,sp,-28
   4bb7c:	dd400515 	stw	r21,20(sp)
   4bb80:	dd000415 	stw	r20,16(sp)
   4bb84:	dcc00315 	stw	r19,12(sp)
   4bb88:	dc800215 	stw	r18,8(sp)
   4bb8c:	dfc00615 	stw	ra,24(sp)
   4bb90:	dc400115 	stw	r17,4(sp)
   4bb94:	dc000015 	stw	r16,0(sp)
   4bb98:	202b883a 	mov	r21,r4
   4bb9c:	2827883a 	mov	r19,r5
   4bba0:	2480b804 	addi	r18,r4,736
   4bba4:	0029883a 	mov	r20,zero
   4bba8:	94400117 	ldw	r17,4(r18)
   4bbac:	94000217 	ldw	r16,8(r18)
   4bbb0:	8c7fffc4 	addi	r17,r17,-1
   4bbb4:	88000e16 	blt	r17,zero,4bbf0 <_fwalk_reent+0x78>
   4bbb8:	8080030b 	ldhu	r2,12(r16)
   4bbbc:	8c7fffc4 	addi	r17,r17,-1
   4bbc0:	108000b0 	cmpltui	r2,r2,2
   4bbc4:	1000071e 	bne	r2,zero,4bbe4 <_fwalk_reent+0x6c>
   4bbc8:	8080038f 	ldh	r2,14(r16)
   4bbcc:	800b883a 	mov	r5,r16
   4bbd0:	a809883a 	mov	r4,r21
   4bbd4:	10bfffe0 	cmpeqi	r2,r2,-1
   4bbd8:	1000021e 	bne	r2,zero,4bbe4 <_fwalk_reent+0x6c>
   4bbdc:	983ee83a 	callr	r19
   4bbe0:	a0a8b03a 	or	r20,r20,r2
   4bbe4:	88bfffd8 	cmpnei	r2,r17,-1
   4bbe8:	84001a04 	addi	r16,r16,104
   4bbec:	103ff21e 	bne	r2,zero,4bbb8 <_fwalk_reent+0x40>
   4bbf0:	94800017 	ldw	r18,0(r18)
   4bbf4:	903fec1e 	bne	r18,zero,4bba8 <_fwalk_reent+0x30>
   4bbf8:	a005883a 	mov	r2,r20
   4bbfc:	dfc00617 	ldw	ra,24(sp)
   4bc00:	dd400517 	ldw	r21,20(sp)
   4bc04:	dd000417 	ldw	r20,16(sp)
   4bc08:	dcc00317 	ldw	r19,12(sp)
   4bc0c:	dc800217 	ldw	r18,8(sp)
   4bc10:	dc400117 	ldw	r17,4(sp)
   4bc14:	dc000017 	ldw	r16,0(sp)
   4bc18:	dec00704 	addi	sp,sp,28
   4bc1c:	f800283a 	ret

0004bc20 <__localeconv_l>:
   4bc20:	20803c04 	addi	r2,r4,240
   4bc24:	f800283a 	ret

0004bc28 <_localeconv_r>:
   4bc28:	00800174 	movhi	r2,5
   4bc2c:	10932004 	addi	r2,r2,19584
   4bc30:	f800283a 	ret

0004bc34 <localeconv>:
   4bc34:	00800174 	movhi	r2,5
   4bc38:	10932004 	addi	r2,r2,19584
   4bc3c:	f800283a 	ret

0004bc40 <__smakebuf_r>:
   4bc40:	2880030b 	ldhu	r2,12(r5)
   4bc44:	deffe804 	addi	sp,sp,-96
   4bc48:	dc001215 	stw	r16,72(sp)
   4bc4c:	dfc01715 	stw	ra,92(sp)
   4bc50:	dd001615 	stw	r20,88(sp)
   4bc54:	dcc01515 	stw	r19,84(sp)
   4bc58:	dc801415 	stw	r18,80(sp)
   4bc5c:	dc401315 	stw	r17,76(sp)
   4bc60:	10c0008c 	andi	r3,r2,2
   4bc64:	2821883a 	mov	r16,r5
   4bc68:	18000d26 	beq	r3,zero,4bca0 <__smakebuf_r+0x60>
   4bc6c:	288010c4 	addi	r2,r5,67
   4bc70:	28800015 	stw	r2,0(r5)
   4bc74:	28800415 	stw	r2,16(r5)
   4bc78:	00800044 	movi	r2,1
   4bc7c:	28800515 	stw	r2,20(r5)
   4bc80:	dfc01717 	ldw	ra,92(sp)
   4bc84:	dd001617 	ldw	r20,88(sp)
   4bc88:	dcc01517 	ldw	r19,84(sp)
   4bc8c:	dc801417 	ldw	r18,80(sp)
   4bc90:	dc401317 	ldw	r17,76(sp)
   4bc94:	dc001217 	ldw	r16,72(sp)
   4bc98:	dec01804 	addi	sp,sp,96
   4bc9c:	f800283a 	ret
   4bca0:	2940038f 	ldh	r5,14(r5)
   4bca4:	2023883a 	mov	r17,r4
   4bca8:	28002816 	blt	r5,zero,4bd4c <__smakebuf_r+0x10c>
   4bcac:	d80d883a 	mov	r6,sp
   4bcb0:	004ffa00 	call	4ffa0 <_fstat_r>
   4bcb4:	10002416 	blt	r2,zero,4bd48 <__smakebuf_r+0x108>
   4bcb8:	d8800117 	ldw	r2,4(sp)
   4bcbc:	10bc000c 	andi	r2,r2,61440
   4bcc0:	10880018 	cmpnei	r2,r2,8192
   4bcc4:	1000461e 	bne	r2,zero,4bde0 <__smakebuf_r+0x1a0>
   4bcc8:	8140038f 	ldh	r5,14(r16)
   4bccc:	8809883a 	mov	r4,r17
   4bcd0:	00500000 	call	50000 <_isatty_r>
   4bcd4:	10003e26 	beq	r2,zero,4bdd0 <__smakebuf_r+0x190>
   4bcd8:	8080030b 	ldhu	r2,12(r16)
   4bcdc:	80c010c4 	addi	r3,r16,67
   4bce0:	80c00015 	stw	r3,0(r16)
   4bce4:	10800054 	ori	r2,r2,1
   4bce8:	8080030d 	sth	r2,12(r16)
   4bcec:	00800044 	movi	r2,1
   4bcf0:	80c00415 	stw	r3,16(r16)
   4bcf4:	80800515 	stw	r2,20(r16)
   4bcf8:	04c00044 	movi	r19,1
   4bcfc:	05010004 	movi	r20,1024
   4bd00:	04820004 	movi	r18,2048
   4bd04:	a00b883a 	mov	r5,r20
   4bd08:	8809883a 	mov	r4,r17
   4bd0c:	004be800 	call	4be80 <_malloc_r>
   4bd10:	10001726 	beq	r2,zero,4bd70 <__smakebuf_r+0x130>
   4bd14:	80c0030b 	ldhu	r3,12(r16)
   4bd18:	01000174 	movhi	r4,5
   4bd1c:	212ba404 	addi	r4,r4,-20848
   4bd20:	89000f15 	stw	r4,60(r17)
   4bd24:	18c02014 	ori	r3,r3,128
   4bd28:	80c0030d 	sth	r3,12(r16)
   4bd2c:	80800015 	stw	r2,0(r16)
   4bd30:	80800415 	stw	r2,16(r16)
   4bd34:	85000515 	stw	r20,20(r16)
   4bd38:	98001d1e 	bne	r19,zero,4bdb0 <__smakebuf_r+0x170>
   4bd3c:	90e4b03a 	or	r18,r18,r3
   4bd40:	8480030d 	sth	r18,12(r16)
   4bd44:	003fce06 	br	4bc80 <__smakebuf_r+0x40>
   4bd48:	8080030b 	ldhu	r2,12(r16)
   4bd4c:	1080200c 	andi	r2,r2,128
   4bd50:	0027883a 	mov	r19,zero
   4bd54:	10001326 	beq	r2,zero,4bda4 <__smakebuf_r+0x164>
   4bd58:	05001004 	movi	r20,64
   4bd5c:	a00b883a 	mov	r5,r20
   4bd60:	8809883a 	mov	r4,r17
   4bd64:	0025883a 	mov	r18,zero
   4bd68:	004be800 	call	4be80 <_malloc_r>
   4bd6c:	103fe91e 	bne	r2,zero,4bd14 <__smakebuf_r+0xd4>
   4bd70:	8080030b 	ldhu	r2,12(r16)
   4bd74:	10c0800c 	andi	r3,r2,512
   4bd78:	183fc11e 	bne	r3,zero,4bc80 <__smakebuf_r+0x40>
   4bd7c:	00ffff04 	movi	r3,-4
   4bd80:	10c4703a 	and	r2,r2,r3
   4bd84:	10800094 	ori	r2,r2,2
   4bd88:	80c010c4 	addi	r3,r16,67
   4bd8c:	8080030d 	sth	r2,12(r16)
   4bd90:	00800044 	movi	r2,1
   4bd94:	80c00015 	stw	r3,0(r16)
   4bd98:	80c00415 	stw	r3,16(r16)
   4bd9c:	80800515 	stw	r2,20(r16)
   4bda0:	003fb706 	br	4bc80 <__smakebuf_r+0x40>
   4bda4:	05010004 	movi	r20,1024
   4bda8:	0025883a 	mov	r18,zero
   4bdac:	003fd506 	br	4bd04 <__smakebuf_r+0xc4>
   4bdb0:	8140038f 	ldh	r5,14(r16)
   4bdb4:	8809883a 	mov	r4,r17
   4bdb8:	00500000 	call	50000 <_isatty_r>
   4bdbc:	80c0030b 	ldhu	r3,12(r16)
   4bdc0:	103fde26 	beq	r2,zero,4bd3c <__smakebuf_r+0xfc>
   4bdc4:	18ffff0c 	andi	r3,r3,65532
   4bdc8:	18c00054 	ori	r3,r3,1
   4bdcc:	003fdb06 	br	4bd3c <__smakebuf_r+0xfc>
   4bdd0:	04c00044 	movi	r19,1
   4bdd4:	05010004 	movi	r20,1024
   4bdd8:	04820004 	movi	r18,2048
   4bddc:	003fc906 	br	4bd04 <__smakebuf_r+0xc4>
   4bde0:	0027883a 	mov	r19,zero
   4bde4:	05010004 	movi	r20,1024
   4bde8:	04820004 	movi	r18,2048
   4bdec:	003fc506 	br	4bd04 <__smakebuf_r+0xc4>

0004bdf0 <__swhatbuf_r>:
   4bdf0:	deffea04 	addi	sp,sp,-88
   4bdf4:	dc001215 	stw	r16,72(sp)
   4bdf8:	2821883a 	mov	r16,r5
   4bdfc:	2940038f 	ldh	r5,14(r5)
   4be00:	dc801415 	stw	r18,80(sp)
   4be04:	dc401315 	stw	r17,76(sp)
   4be08:	dfc01515 	stw	ra,84(sp)
   4be0c:	3023883a 	mov	r17,r6
   4be10:	3825883a 	mov	r18,r7
   4be14:	28001016 	blt	r5,zero,4be58 <__swhatbuf_r+0x68>
   4be18:	d80d883a 	mov	r6,sp
   4be1c:	004ffa00 	call	4ffa0 <_fstat_r>
   4be20:	10000d16 	blt	r2,zero,4be58 <__swhatbuf_r+0x68>
   4be24:	d8c00117 	ldw	r3,4(sp)
   4be28:	01010004 	movi	r4,1024
   4be2c:	00820004 	movi	r2,2048
   4be30:	18fc000c 	andi	r3,r3,61440
   4be34:	18c80020 	cmpeqi	r3,r3,8192
   4be38:	90c00015 	stw	r3,0(r18)
   4be3c:	89000015 	stw	r4,0(r17)
   4be40:	dfc01517 	ldw	ra,84(sp)
   4be44:	dc801417 	ldw	r18,80(sp)
   4be48:	dc401317 	ldw	r17,76(sp)
   4be4c:	dc001217 	ldw	r16,72(sp)
   4be50:	dec01604 	addi	sp,sp,88
   4be54:	f800283a 	ret
   4be58:	8080030b 	ldhu	r2,12(r16)
   4be5c:	0007883a 	mov	r3,zero
   4be60:	1080200c 	andi	r2,r2,128
   4be64:	10000326 	beq	r2,zero,4be74 <__swhatbuf_r+0x84>
   4be68:	01001004 	movi	r4,64
   4be6c:	0005883a 	mov	r2,zero
   4be70:	003ff106 	br	4be38 <__swhatbuf_r+0x48>
   4be74:	01010004 	movi	r4,1024
   4be78:	0005883a 	mov	r2,zero
   4be7c:	003fee06 	br	4be38 <__swhatbuf_r+0x48>

0004be80 <_malloc_r>:
   4be80:	defff604 	addi	sp,sp,-40
   4be84:	dc400115 	stw	r17,4(sp)
   4be88:	2c4002c4 	addi	r17,r5,11
   4be8c:	dc800215 	stw	r18,8(sp)
   4be90:	dfc00915 	stw	ra,36(sp)
   4be94:	df000815 	stw	fp,32(sp)
   4be98:	ddc00715 	stw	r23,28(sp)
   4be9c:	dd800615 	stw	r22,24(sp)
   4bea0:	dd400515 	stw	r21,20(sp)
   4bea4:	dd000415 	stw	r20,16(sp)
   4bea8:	dcc00315 	stw	r19,12(sp)
   4beac:	dc000015 	stw	r16,0(sp)
   4beb0:	888005e8 	cmpgeui	r2,r17,23
   4beb4:	2025883a 	mov	r18,r4
   4beb8:	10001b1e 	bne	r2,zero,4bf28 <_malloc_r+0xa8>
   4bebc:	29400468 	cmpgeui	r5,r5,17
   4bec0:	2800821e 	bne	r5,zero,4c0cc <_malloc_r+0x24c>
   4bec4:	0051ba80 	call	51ba8 <__malloc_lock>
   4bec8:	04400404 	movi	r17,16
   4becc:	00800604 	movi	r2,24
   4bed0:	01c00084 	movi	r7,2
   4bed4:	04c00174 	movhi	r19,5
   4bed8:	9cd1e204 	addi	r19,r19,18312
   4bedc:	9885883a 	add	r2,r19,r2
   4bee0:	14000117 	ldw	r16,4(r2)
   4bee4:	10fffe04 	addi	r3,r2,-8
   4bee8:	80c08b26 	beq	r16,r3,4c118 <_malloc_r+0x298>
   4beec:	80800117 	ldw	r2,4(r16)
   4bef0:	81000317 	ldw	r4,12(r16)
   4bef4:	00ffff04 	movi	r3,-4
   4bef8:	10c4703a 	and	r2,r2,r3
   4befc:	81400217 	ldw	r5,8(r16)
   4bf00:	8085883a 	add	r2,r16,r2
   4bf04:	10c00117 	ldw	r3,4(r2)
   4bf08:	29000315 	stw	r4,12(r5)
   4bf0c:	21400215 	stw	r5,8(r4)
   4bf10:	18c00054 	ori	r3,r3,1
   4bf14:	10c00115 	stw	r3,4(r2)
   4bf18:	9009883a 	mov	r4,r18
   4bf1c:	0051bcc0 	call	51bcc <__malloc_unlock>
   4bf20:	80800204 	addi	r2,r16,8
   4bf24:	00006c06 	br	4c0d8 <_malloc_r+0x258>
   4bf28:	00bffe04 	movi	r2,-8
   4bf2c:	88a2703a 	and	r17,r17,r2
   4bf30:	88006616 	blt	r17,zero,4c0cc <_malloc_r+0x24c>
   4bf34:	89406536 	bltu	r17,r5,4c0cc <_malloc_r+0x24c>
   4bf38:	0051ba80 	call	51ba8 <__malloc_lock>
   4bf3c:	88807e28 	cmpgeui	r2,r17,504
   4bf40:	10012326 	beq	r2,zero,4c3d0 <_malloc_r+0x550>
   4bf44:	8804d27a 	srli	r2,r17,9
   4bf48:	10006f26 	beq	r2,zero,4c108 <_malloc_r+0x288>
   4bf4c:	10c00168 	cmpgeui	r3,r2,5
   4bf50:	1800ff1e 	bne	r3,zero,4c350 <_malloc_r+0x4d0>
   4bf54:	8804d1ba 	srli	r2,r17,6
   4bf58:	11c00e44 	addi	r7,r2,57
   4bf5c:	380890fa 	slli	r4,r7,3
   4bf60:	12000e04 	addi	r8,r2,56
   4bf64:	04c00174 	movhi	r19,5
   4bf68:	9cd1e204 	addi	r19,r19,18312
   4bf6c:	9909883a 	add	r4,r19,r4
   4bf70:	24000117 	ldw	r16,4(r4)
   4bf74:	213ffe04 	addi	r4,r4,-8
   4bf78:	24000b26 	beq	r4,r16,4bfa8 <_malloc_r+0x128>
   4bf7c:	01bfff04 	movi	r6,-4
   4bf80:	00000306 	br	4bf90 <_malloc_r+0x110>
   4bf84:	1800d70e 	bge	r3,zero,4c2e4 <_malloc_r+0x464>
   4bf88:	84000317 	ldw	r16,12(r16)
   4bf8c:	24000626 	beq	r4,r16,4bfa8 <_malloc_r+0x128>
   4bf90:	80800117 	ldw	r2,4(r16)
   4bf94:	1184703a 	and	r2,r2,r6
   4bf98:	1447c83a 	sub	r3,r2,r17
   4bf9c:	19400408 	cmpgei	r5,r3,16
   4bfa0:	283ff826 	beq	r5,zero,4bf84 <_malloc_r+0x104>
   4bfa4:	400f883a 	mov	r7,r8
   4bfa8:	9c000417 	ldw	r16,16(r19)
   4bfac:	02400174 	movhi	r9,5
   4bfb0:	4a51e404 	addi	r9,r9,18320
   4bfb4:	82405f26 	beq	r16,r9,4c134 <_malloc_r+0x2b4>
   4bfb8:	80800117 	ldw	r2,4(r16)
   4bfbc:	00ffff04 	movi	r3,-4
   4bfc0:	10c4703a 	and	r2,r2,r3
   4bfc4:	1447c83a 	sub	r3,r2,r17
   4bfc8:	19000410 	cmplti	r4,r3,16
   4bfcc:	20010b26 	beq	r4,zero,4c3fc <_malloc_r+0x57c>
   4bfd0:	9a400515 	stw	r9,20(r19)
   4bfd4:	9a400415 	stw	r9,16(r19)
   4bfd8:	1801000e 	bge	r3,zero,4c3dc <_malloc_r+0x55c>
   4bfdc:	10c08028 	cmpgeui	r3,r2,512
   4bfe0:	1800c21e 	bne	r3,zero,4c2ec <_malloc_r+0x46c>
   4bfe4:	1006d0fa 	srli	r3,r2,3
   4bfe8:	1008d17a 	srli	r4,r2,5
   4bfec:	00800044 	movi	r2,1
   4bff0:	18c00044 	addi	r3,r3,1
   4bff4:	180690fa 	slli	r3,r3,3
   4bff8:	99400117 	ldw	r5,4(r19)
   4bffc:	1104983a 	sll	r2,r2,r4
   4c000:	98c7883a 	add	r3,r19,r3
   4c004:	19000017 	ldw	r4,0(r3)
   4c008:	1144b03a 	or	r2,r2,r5
   4c00c:	197ffe04 	addi	r5,r3,-8
   4c010:	81400315 	stw	r5,12(r16)
   4c014:	81000215 	stw	r4,8(r16)
   4c018:	98800115 	stw	r2,4(r19)
   4c01c:	1c000015 	stw	r16,0(r3)
   4c020:	24000315 	stw	r16,12(r4)
   4c024:	3807d0ba 	srai	r3,r7,2
   4c028:	01000044 	movi	r4,1
   4c02c:	20c8983a 	sll	r4,r4,r3
   4c030:	11004536 	bltu	r2,r4,4c148 <_malloc_r+0x2c8>
   4c034:	2086703a 	and	r3,r4,r2
   4c038:	18000a1e 	bne	r3,zero,4c064 <_malloc_r+0x1e4>
   4c03c:	2109883a 	add	r4,r4,r4
   4c040:	00ffff04 	movi	r3,-4
   4c044:	38c6703a 	and	r3,r7,r3
   4c048:	208a703a 	and	r5,r4,r2
   4c04c:	19c00104 	addi	r7,r3,4
   4c050:	2800041e 	bne	r5,zero,4c064 <_malloc_r+0x1e4>
   4c054:	2109883a 	add	r4,r4,r4
   4c058:	2086703a 	and	r3,r4,r2
   4c05c:	39c00104 	addi	r7,r7,4
   4c060:	183ffc26 	beq	r3,zero,4c054 <_malloc_r+0x1d4>
   4c064:	02bfff04 	movi	r10,-4
   4c068:	381690fa 	slli	r11,r7,3
   4c06c:	3819883a 	mov	r12,r7
   4c070:	9ad7883a 	add	r11,r19,r11
   4c074:	5811883a 	mov	r8,r11
   4c078:	40800317 	ldw	r2,12(r8)
   4c07c:	4080bd26 	beq	r8,r2,4c374 <_malloc_r+0x4f4>
   4c080:	10c00117 	ldw	r3,4(r2)
   4c084:	1021883a 	mov	r16,r2
   4c088:	10800317 	ldw	r2,12(r2)
   4c08c:	1a86703a 	and	r3,r3,r10
   4c090:	1c4bc83a 	sub	r5,r3,r17
   4c094:	29800410 	cmplti	r6,r5,16
   4c098:	3000bb26 	beq	r6,zero,4c388 <_malloc_r+0x508>
   4c09c:	283ff716 	blt	r5,zero,4c07c <_malloc_r+0x1fc>
   4c0a0:	80c7883a 	add	r3,r16,r3
   4c0a4:	19400117 	ldw	r5,4(r3)
   4c0a8:	81800217 	ldw	r6,8(r16)
   4c0ac:	9009883a 	mov	r4,r18
   4c0b0:	29400054 	ori	r5,r5,1
   4c0b4:	19400115 	stw	r5,4(r3)
   4c0b8:	30800315 	stw	r2,12(r6)
   4c0bc:	11800215 	stw	r6,8(r2)
   4c0c0:	0051bcc0 	call	51bcc <__malloc_unlock>
   4c0c4:	80800204 	addi	r2,r16,8
   4c0c8:	00000306 	br	4c0d8 <_malloc_r+0x258>
   4c0cc:	00800304 	movi	r2,12
   4c0d0:	90800015 	stw	r2,0(r18)
   4c0d4:	0005883a 	mov	r2,zero
   4c0d8:	dfc00917 	ldw	ra,36(sp)
   4c0dc:	df000817 	ldw	fp,32(sp)
   4c0e0:	ddc00717 	ldw	r23,28(sp)
   4c0e4:	dd800617 	ldw	r22,24(sp)
   4c0e8:	dd400517 	ldw	r21,20(sp)
   4c0ec:	dd000417 	ldw	r20,16(sp)
   4c0f0:	dcc00317 	ldw	r19,12(sp)
   4c0f4:	dc800217 	ldw	r18,8(sp)
   4c0f8:	dc400117 	ldw	r17,4(sp)
   4c0fc:	dc000017 	ldw	r16,0(sp)
   4c100:	dec00a04 	addi	sp,sp,40
   4c104:	f800283a 	ret
   4c108:	01008004 	movi	r4,512
   4c10c:	01c01004 	movi	r7,64
   4c110:	02000fc4 	movi	r8,63
   4c114:	003f9306 	br	4bf64 <_malloc_r+0xe4>
   4c118:	14000317 	ldw	r16,12(r2)
   4c11c:	39c00084 	addi	r7,r7,2
   4c120:	143f721e 	bne	r2,r16,4beec <_malloc_r+0x6c>
   4c124:	9c000417 	ldw	r16,16(r19)
   4c128:	02400174 	movhi	r9,5
   4c12c:	4a51e404 	addi	r9,r9,18320
   4c130:	827fa11e 	bne	r16,r9,4bfb8 <_malloc_r+0x138>
   4c134:	3807d0ba 	srai	r3,r7,2
   4c138:	01000044 	movi	r4,1
   4c13c:	98800117 	ldw	r2,4(r19)
   4c140:	20c8983a 	sll	r4,r4,r3
   4c144:	113fbb2e 	bgeu	r2,r4,4c034 <_malloc_r+0x1b4>
   4c148:	9c000217 	ldw	r16,8(r19)
   4c14c:	00bfff04 	movi	r2,-4
   4c150:	85800117 	ldw	r22,4(r16)
   4c154:	b0ac703a 	and	r22,r22,r2
   4c158:	b4400336 	bltu	r22,r17,4c168 <_malloc_r+0x2e8>
   4c15c:	b445c83a 	sub	r2,r22,r17
   4c160:	10c00408 	cmpgei	r3,r2,16
   4c164:	1800551e 	bne	r3,zero,4c2bc <_malloc_r+0x43c>
   4c168:	00800174 	movhi	r2,5
   4c16c:	1097c317 	ldw	r2,24332(r2)
   4c170:	00c00174 	movhi	r3,5
   4c174:	1d5ec717 	ldw	r21,31516(r3)
   4c178:	10bfffd8 	cmpnei	r2,r2,-1
   4c17c:	85b9883a 	add	fp,r16,r22
   4c180:	8d6b883a 	add	r21,r17,r21
   4c184:	1000d726 	beq	r2,zero,4c4e4 <_malloc_r+0x664>
   4c188:	ad4403c4 	addi	r21,r21,4111
   4c18c:	00bc0004 	movi	r2,-4096
   4c190:	a8aa703a 	and	r21,r21,r2
   4c194:	a80b883a 	mov	r5,r21
   4c198:	9009883a 	mov	r4,r18
   4c19c:	004e2b40 	call	4e2b4 <_sbrk_r>
   4c1a0:	102f883a 	mov	r23,r2
   4c1a4:	10bfffd8 	cmpnei	r2,r2,-1
   4c1a8:	1000a926 	beq	r2,zero,4c450 <_malloc_r+0x5d0>
   4c1ac:	bf00a736 	bltu	r23,fp,4c44c <_malloc_r+0x5cc>
   4c1b0:	00800174 	movhi	r2,5
   4c1b4:	151ed217 	ldw	r20,31560(r2)
   4c1b8:	ad29883a 	add	r20,r21,r20
   4c1bc:	151ed215 	stw	r20,31560(r2)
   4c1c0:	a007883a 	mov	r3,r20
   4c1c4:	e5c0ed26 	beq	fp,r23,4c57c <_malloc_r+0x6fc>
   4c1c8:	00800174 	movhi	r2,5
   4c1cc:	1097c317 	ldw	r2,24332(r2)
   4c1d0:	10bfffd8 	cmpnei	r2,r2,-1
   4c1d4:	1000f026 	beq	r2,zero,4c598 <_malloc_r+0x718>
   4c1d8:	bf05c83a 	sub	r2,r23,fp
   4c1dc:	10c5883a 	add	r2,r2,r3
   4c1e0:	00c00174 	movhi	r3,5
   4c1e4:	189ed215 	stw	r2,31560(r3)
   4c1e8:	bf0001cc 	andi	fp,r23,7
   4c1ec:	e000c626 	beq	fp,zero,4c508 <_malloc_r+0x688>
   4c1f0:	bf2fc83a 	sub	r23,r23,fp
   4c1f4:	bdc00204 	addi	r23,r23,8
   4c1f8:	05040204 	movi	r20,4104
   4c1fc:	a729c83a 	sub	r20,r20,fp
   4c200:	bd6b883a 	add	r21,r23,r21
   4c204:	a569c83a 	sub	r20,r20,r21
   4c208:	a503ffcc 	andi	r20,r20,4095
   4c20c:	a00b883a 	mov	r5,r20
   4c210:	9009883a 	mov	r4,r18
   4c214:	004e2b40 	call	4e2b4 <_sbrk_r>
   4c218:	10ffffe0 	cmpeqi	r3,r2,-1
   4c21c:	1800f41e 	bne	r3,zero,4c5f0 <_malloc_r+0x770>
   4c220:	15c5c83a 	sub	r2,r2,r23
   4c224:	152b883a 	add	r21,r2,r20
   4c228:	00800174 	movhi	r2,5
   4c22c:	109ed217 	ldw	r2,31560(r2)
   4c230:	9dc00215 	stw	r23,8(r19)
   4c234:	ad400054 	ori	r21,r21,1
   4c238:	a0a9883a 	add	r20,r20,r2
   4c23c:	00800174 	movhi	r2,5
   4c240:	151ed215 	stw	r20,31560(r2)
   4c244:	bd400115 	stw	r21,4(r23)
   4c248:	84c0d626 	beq	r16,r19,4c5a4 <_malloc_r+0x724>
   4c24c:	b0800428 	cmpgeui	r2,r22,16
   4c250:	1000d626 	beq	r2,zero,4c5ac <_malloc_r+0x72c>
   4c254:	80c00117 	ldw	r3,4(r16)
   4c258:	013ffe04 	movi	r4,-8
   4c25c:	b0bffd04 	addi	r2,r22,-12
   4c260:	1104703a 	and	r2,r2,r4
   4c264:	18c0004c 	andi	r3,r3,1
   4c268:	1886b03a 	or	r3,r3,r2
   4c26c:	80c00115 	stw	r3,4(r16)
   4c270:	01000144 	movi	r4,5
   4c274:	8087883a 	add	r3,r16,r2
   4c278:	19000115 	stw	r4,4(r3)
   4c27c:	19000215 	stw	r4,8(r3)
   4c280:	10800428 	cmpgeui	r2,r2,16
   4c284:	1000df1e 	bne	r2,zero,4c604 <_malloc_r+0x784>
   4c288:	bd400117 	ldw	r21,4(r23)
   4c28c:	b821883a 	mov	r16,r23
   4c290:	00800174 	movhi	r2,5
   4c294:	109ec617 	ldw	r2,31512(r2)
   4c298:	1500022e 	bgeu	r2,r20,4c2a4 <_malloc_r+0x424>
   4c29c:	00800174 	movhi	r2,5
   4c2a0:	151ec615 	stw	r20,31512(r2)
   4c2a4:	00800174 	movhi	r2,5
   4c2a8:	109ec517 	ldw	r2,31508(r2)
   4c2ac:	15006a2e 	bgeu	r2,r20,4c458 <_malloc_r+0x5d8>
   4c2b0:	00800174 	movhi	r2,5
   4c2b4:	151ec515 	stw	r20,31508(r2)
   4c2b8:	00006706 	br	4c458 <_malloc_r+0x5d8>
   4c2bc:	88c00054 	ori	r3,r17,1
   4c2c0:	80c00115 	stw	r3,4(r16)
   4c2c4:	8463883a 	add	r17,r16,r17
   4c2c8:	10800054 	ori	r2,r2,1
   4c2cc:	9c400215 	stw	r17,8(r19)
   4c2d0:	88800115 	stw	r2,4(r17)
   4c2d4:	9009883a 	mov	r4,r18
   4c2d8:	0051bcc0 	call	51bcc <__malloc_unlock>
   4c2dc:	80800204 	addi	r2,r16,8
   4c2e0:	003f7d06 	br	4c0d8 <_malloc_r+0x258>
   4c2e4:	81000317 	ldw	r4,12(r16)
   4c2e8:	003f0406 	br	4befc <_malloc_r+0x7c>
   4c2ec:	1006d27a 	srli	r3,r2,9
   4c2f0:	19000168 	cmpgeui	r4,r3,5
   4c2f4:	20005026 	beq	r4,zero,4c438 <_malloc_r+0x5b8>
   4c2f8:	19000568 	cmpgeui	r4,r3,21
   4c2fc:	20008c1e 	bne	r4,zero,4c530 <_malloc_r+0x6b0>
   4c300:	19401704 	addi	r5,r3,92
   4c304:	280a90fa 	slli	r5,r5,3
   4c308:	190016c4 	addi	r4,r3,91
   4c30c:	994b883a 	add	r5,r19,r5
   4c310:	28c00017 	ldw	r3,0(r5)
   4c314:	297ffe04 	addi	r5,r5,-8
   4c318:	28c07426 	beq	r5,r3,4c4ec <_malloc_r+0x66c>
   4c31c:	01bfff04 	movi	r6,-4
   4c320:	19000117 	ldw	r4,4(r3)
   4c324:	2188703a 	and	r4,r4,r6
   4c328:	1100022e 	bgeu	r2,r4,4c334 <_malloc_r+0x4b4>
   4c32c:	18c00217 	ldw	r3,8(r3)
   4c330:	28fffb1e 	bne	r5,r3,4c320 <_malloc_r+0x4a0>
   4c334:	19400317 	ldw	r5,12(r3)
   4c338:	98800117 	ldw	r2,4(r19)
   4c33c:	81400315 	stw	r5,12(r16)
   4c340:	80c00215 	stw	r3,8(r16)
   4c344:	2c000215 	stw	r16,8(r5)
   4c348:	1c000315 	stw	r16,12(r3)
   4c34c:	003f3506 	br	4c024 <_malloc_r+0x1a4>
   4c350:	10c00568 	cmpgeui	r3,r2,21
   4c354:	18004a26 	beq	r3,zero,4c480 <_malloc_r+0x600>
   4c358:	10c01568 	cmpgeui	r3,r2,85
   4c35c:	18007b1e 	bne	r3,zero,4c54c <_malloc_r+0x6cc>
   4c360:	8804d33a 	srli	r2,r17,12
   4c364:	11c01bc4 	addi	r7,r2,111
   4c368:	380890fa 	slli	r4,r7,3
   4c36c:	12001b84 	addi	r8,r2,110
   4c370:	003efc06 	br	4bf64 <_malloc_r+0xe4>
   4c374:	63000044 	addi	r12,r12,1
   4c378:	608000cc 	andi	r2,r12,3
   4c37c:	42000204 	addi	r8,r8,8
   4c380:	103f3d1e 	bne	r2,zero,4c078 <_malloc_r+0x1f8>
   4c384:	00004506 	br	4c49c <_malloc_r+0x61c>
   4c388:	81000217 	ldw	r4,8(r16)
   4c38c:	89800054 	ori	r6,r17,1
   4c390:	81800115 	stw	r6,4(r16)
   4c394:	20800315 	stw	r2,12(r4)
   4c398:	11000215 	stw	r4,8(r2)
   4c39c:	8463883a 	add	r17,r16,r17
   4c3a0:	9c400515 	stw	r17,20(r19)
   4c3a4:	9c400415 	stw	r17,16(r19)
   4c3a8:	28800054 	ori	r2,r5,1
   4c3ac:	88800115 	stw	r2,4(r17)
   4c3b0:	8a400315 	stw	r9,12(r17)
   4c3b4:	8a400215 	stw	r9,8(r17)
   4c3b8:	80c7883a 	add	r3,r16,r3
   4c3bc:	19400015 	stw	r5,0(r3)
   4c3c0:	9009883a 	mov	r4,r18
   4c3c4:	0051bcc0 	call	51bcc <__malloc_unlock>
   4c3c8:	80800204 	addi	r2,r16,8
   4c3cc:	003f4206 	br	4c0d8 <_malloc_r+0x258>
   4c3d0:	880ed0fa 	srli	r7,r17,3
   4c3d4:	88800204 	addi	r2,r17,8
   4c3d8:	003ebe06 	br	4bed4 <_malloc_r+0x54>
   4c3dc:	8085883a 	add	r2,r16,r2
   4c3e0:	10c00117 	ldw	r3,4(r2)
   4c3e4:	9009883a 	mov	r4,r18
   4c3e8:	18c00054 	ori	r3,r3,1
   4c3ec:	10c00115 	stw	r3,4(r2)
   4c3f0:	0051bcc0 	call	51bcc <__malloc_unlock>
   4c3f4:	80800204 	addi	r2,r16,8
   4c3f8:	003f3706 	br	4c0d8 <_malloc_r+0x258>
   4c3fc:	89000054 	ori	r4,r17,1
   4c400:	81000115 	stw	r4,4(r16)
   4c404:	8463883a 	add	r17,r16,r17
   4c408:	9c400515 	stw	r17,20(r19)
   4c40c:	9c400415 	stw	r17,16(r19)
   4c410:	19000054 	ori	r4,r3,1
   4c414:	89000115 	stw	r4,4(r17)
   4c418:	8085883a 	add	r2,r16,r2
   4c41c:	8a400315 	stw	r9,12(r17)
   4c420:	8a400215 	stw	r9,8(r17)
   4c424:	10c00015 	stw	r3,0(r2)
   4c428:	9009883a 	mov	r4,r18
   4c42c:	0051bcc0 	call	51bcc <__malloc_unlock>
   4c430:	80800204 	addi	r2,r16,8
   4c434:	003f2806 	br	4c0d8 <_malloc_r+0x258>
   4c438:	1006d1ba 	srli	r3,r2,6
   4c43c:	19400e44 	addi	r5,r3,57
   4c440:	280a90fa 	slli	r5,r5,3
   4c444:	19000e04 	addi	r4,r3,56
   4c448:	003fb006 	br	4c30c <_malloc_r+0x48c>
   4c44c:	84c04626 	beq	r16,r19,4c568 <_malloc_r+0x6e8>
   4c450:	9c000217 	ldw	r16,8(r19)
   4c454:	85400117 	ldw	r21,4(r16)
   4c458:	00bfff04 	movi	r2,-4
   4c45c:	a8aa703a 	and	r21,r21,r2
   4c460:	ac45c83a 	sub	r2,r21,r17
   4c464:	ac400236 	bltu	r21,r17,4c470 <_malloc_r+0x5f0>
   4c468:	10c00408 	cmpgei	r3,r2,16
   4c46c:	183f931e 	bne	r3,zero,4c2bc <_malloc_r+0x43c>
   4c470:	9009883a 	mov	r4,r18
   4c474:	0051bcc0 	call	51bcc <__malloc_unlock>
   4c478:	0005883a 	mov	r2,zero
   4c47c:	003f1606 	br	4c0d8 <_malloc_r+0x258>
   4c480:	11c01704 	addi	r7,r2,92
   4c484:	380890fa 	slli	r4,r7,3
   4c488:	120016c4 	addi	r8,r2,91
   4c48c:	003eb506 	br	4bf64 <_malloc_r+0xe4>
   4c490:	58800217 	ldw	r2,8(r11)
   4c494:	39ffffc4 	addi	r7,r7,-1
   4c498:	12c0701e 	bne	r2,r11,4c65c <_malloc_r+0x7dc>
   4c49c:	388000cc 	andi	r2,r7,3
   4c4a0:	5afffe04 	addi	r11,r11,-8
   4c4a4:	103ffa1e 	bne	r2,zero,4c490 <_malloc_r+0x610>
   4c4a8:	98c00117 	ldw	r3,4(r19)
   4c4ac:	0104303a 	nor	r2,zero,r4
   4c4b0:	10c4703a 	and	r2,r2,r3
   4c4b4:	98800115 	stw	r2,4(r19)
   4c4b8:	2109883a 	add	r4,r4,r4
   4c4bc:	113f2236 	bltu	r2,r4,4c148 <_malloc_r+0x2c8>
   4c4c0:	203f2126 	beq	r4,zero,4c148 <_malloc_r+0x2c8>
   4c4c4:	2086703a 	and	r3,r4,r2
   4c4c8:	1800041e 	bne	r3,zero,4c4dc <_malloc_r+0x65c>
   4c4cc:	2109883a 	add	r4,r4,r4
   4c4d0:	2086703a 	and	r3,r4,r2
   4c4d4:	63000104 	addi	r12,r12,4
   4c4d8:	183ffc26 	beq	r3,zero,4c4cc <_malloc_r+0x64c>
   4c4dc:	600f883a 	mov	r7,r12
   4c4e0:	003ee106 	br	4c068 <_malloc_r+0x1e8>
   4c4e4:	ad400404 	addi	r21,r21,16
   4c4e8:	003f2a06 	br	4c194 <_malloc_r+0x314>
   4c4ec:	2009d0ba 	srai	r4,r4,2
   4c4f0:	00800044 	movi	r2,1
   4c4f4:	99800117 	ldw	r6,4(r19)
   4c4f8:	1104983a 	sll	r2,r2,r4
   4c4fc:	1184b03a 	or	r2,r2,r6
   4c500:	98800115 	stw	r2,4(r19)
   4c504:	003f8d06 	br	4c33c <_malloc_r+0x4bc>
   4c508:	bd69883a 	add	r20,r23,r21
   4c50c:	0529c83a 	sub	r20,zero,r20
   4c510:	a503ffcc 	andi	r20,r20,4095
   4c514:	a00b883a 	mov	r5,r20
   4c518:	9009883a 	mov	r4,r18
   4c51c:	004e2b40 	call	4e2b4 <_sbrk_r>
   4c520:	10ffffe0 	cmpeqi	r3,r2,-1
   4c524:	183f3e26 	beq	r3,zero,4c220 <_malloc_r+0x3a0>
   4c528:	0029883a 	mov	r20,zero
   4c52c:	003f3e06 	br	4c228 <_malloc_r+0x3a8>
   4c530:	19001568 	cmpgeui	r4,r3,85
   4c534:	2000201e 	bne	r4,zero,4c5b8 <_malloc_r+0x738>
   4c538:	1006d33a 	srli	r3,r2,12
   4c53c:	19401bc4 	addi	r5,r3,111
   4c540:	280a90fa 	slli	r5,r5,3
   4c544:	19001b84 	addi	r4,r3,110
   4c548:	003f7006 	br	4c30c <_malloc_r+0x48c>
   4c54c:	10c05568 	cmpgeui	r3,r2,341
   4c550:	1800201e 	bne	r3,zero,4c5d4 <_malloc_r+0x754>
   4c554:	8804d3fa 	srli	r2,r17,15
   4c558:	11c01e04 	addi	r7,r2,120
   4c55c:	380890fa 	slli	r4,r7,3
   4c560:	12001dc4 	addi	r8,r2,119
   4c564:	003e7f06 	br	4bf64 <_malloc_r+0xe4>
   4c568:	00800174 	movhi	r2,5
   4c56c:	10ded217 	ldw	r3,31560(r2)
   4c570:	a8c7883a 	add	r3,r21,r3
   4c574:	10ded215 	stw	r3,31560(r2)
   4c578:	003f1306 	br	4c1c8 <_malloc_r+0x348>
   4c57c:	e083ffcc 	andi	r2,fp,4095
   4c580:	103f111e 	bne	r2,zero,4c1c8 <_malloc_r+0x348>
   4c584:	9c000217 	ldw	r16,8(r19)
   4c588:	b56b883a 	add	r21,r22,r21
   4c58c:	ad400054 	ori	r21,r21,1
   4c590:	85400115 	stw	r21,4(r16)
   4c594:	003f3e06 	br	4c290 <_malloc_r+0x410>
   4c598:	00800174 	movhi	r2,5
   4c59c:	15d7c315 	stw	r23,24332(r2)
   4c5a0:	003f1106 	br	4c1e8 <_malloc_r+0x368>
   4c5a4:	b821883a 	mov	r16,r23
   4c5a8:	003f3906 	br	4c290 <_malloc_r+0x410>
   4c5ac:	00800044 	movi	r2,1
   4c5b0:	b8800115 	stw	r2,4(r23)
   4c5b4:	003fae06 	br	4c470 <_malloc_r+0x5f0>
   4c5b8:	19005568 	cmpgeui	r4,r3,341
   4c5bc:	2000191e 	bne	r4,zero,4c624 <_malloc_r+0x7a4>
   4c5c0:	1006d3fa 	srli	r3,r2,15
   4c5c4:	19401e04 	addi	r5,r3,120
   4c5c8:	280a90fa 	slli	r5,r5,3
   4c5cc:	19001dc4 	addi	r4,r3,119
   4c5d0:	003f4e06 	br	4c30c <_malloc_r+0x48c>
   4c5d4:	10815568 	cmpgeui	r2,r2,1365
   4c5d8:	1000191e 	bne	r2,zero,4c640 <_malloc_r+0x7c0>
   4c5dc:	8804d4ba 	srli	r2,r17,18
   4c5e0:	11c01f44 	addi	r7,r2,125
   4c5e4:	380890fa 	slli	r4,r7,3
   4c5e8:	12001f04 	addi	r8,r2,124
   4c5ec:	003e5d06 	br	4bf64 <_malloc_r+0xe4>
   4c5f0:	e73ffe04 	addi	fp,fp,-8
   4c5f4:	af2b883a 	add	r21,r21,fp
   4c5f8:	adebc83a 	sub	r21,r21,r23
   4c5fc:	0029883a 	mov	r20,zero
   4c600:	003f0906 	br	4c228 <_malloc_r+0x3a8>
   4c604:	81400204 	addi	r5,r16,8
   4c608:	9009883a 	mov	r4,r18
   4c60c:	004b3280 	call	4b328 <_free_r>
   4c610:	9c000217 	ldw	r16,8(r19)
   4c614:	00800174 	movhi	r2,5
   4c618:	151ed217 	ldw	r20,31560(r2)
   4c61c:	85400117 	ldw	r21,4(r16)
   4c620:	003f1b06 	br	4c290 <_malloc_r+0x410>
   4c624:	18c15568 	cmpgeui	r3,r3,1365
   4c628:	1800091e 	bne	r3,zero,4c650 <_malloc_r+0x7d0>
   4c62c:	1006d4ba 	srli	r3,r2,18
   4c630:	19401f44 	addi	r5,r3,125
   4c634:	280a90fa 	slli	r5,r5,3
   4c638:	19001f04 	addi	r4,r3,124
   4c63c:	003f3306 	br	4c30c <_malloc_r+0x48c>
   4c640:	0100fe04 	movi	r4,1016
   4c644:	01c01fc4 	movi	r7,127
   4c648:	02001f84 	movi	r8,126
   4c64c:	003e4506 	br	4bf64 <_malloc_r+0xe4>
   4c650:	0140fe04 	movi	r5,1016
   4c654:	01001f84 	movi	r4,126
   4c658:	003f2c06 	br	4c30c <_malloc_r+0x48c>
   4c65c:	98800117 	ldw	r2,4(r19)
   4c660:	003f9506 	br	4c4b8 <_malloc_r+0x638>

0004c664 <memchr>:
   4c664:	208000cc 	andi	r2,r4,3
   4c668:	280f883a 	mov	r7,r5
   4c66c:	10000e26 	beq	r2,zero,4c6a8 <memchr+0x44>
   4c670:	30bfffc4 	addi	r2,r6,-1
   4c674:	30001726 	beq	r6,zero,4c6d4 <memchr+0x70>
   4c678:	29803fcc 	andi	r6,r5,255
   4c67c:	00000606 	br	4c698 <memchr+0x34>
   4c680:	21000044 	addi	r4,r4,1
   4c684:	20c000cc 	andi	r3,r4,3
   4c688:	18000826 	beq	r3,zero,4c6ac <memchr+0x48>
   4c68c:	10bfffc4 	addi	r2,r2,-1
   4c690:	10ffffe0 	cmpeqi	r3,r2,-1
   4c694:	18000f1e 	bne	r3,zero,4c6d4 <memchr+0x70>
   4c698:	20c00003 	ldbu	r3,0(r4)
   4c69c:	19bff81e 	bne	r3,r6,4c680 <memchr+0x1c>
   4c6a0:	2005883a 	mov	r2,r4
   4c6a4:	f800283a 	ret
   4c6a8:	3005883a 	mov	r2,r6
   4c6ac:	10c00130 	cmpltui	r3,r2,4
   4c6b0:	18000a26 	beq	r3,zero,4c6dc <memchr+0x78>
   4c6b4:	10000726 	beq	r2,zero,4c6d4 <memchr+0x70>
   4c6b8:	2087883a 	add	r3,r4,r2
   4c6bc:	39803fcc 	andi	r6,r7,255
   4c6c0:	2005883a 	mov	r2,r4
   4c6c4:	11000003 	ldbu	r4,0(r2)
   4c6c8:	21800326 	beq	r4,r6,4c6d8 <memchr+0x74>
   4c6cc:	10800044 	addi	r2,r2,1
   4c6d0:	18bffc1e 	bne	r3,r2,4c6c4 <memchr+0x60>
   4c6d4:	0005883a 	mov	r2,zero
   4c6d8:	f800283a 	ret
   4c6dc:	29403fcc 	andi	r5,r5,255
   4c6e0:	2806923a 	slli	r3,r5,8
   4c6e4:	027fbff4 	movhi	r9,65279
   4c6e8:	02202074 	movhi	r8,32897
   4c6ec:	1946b03a 	or	r3,r3,r5
   4c6f0:	180c943a 	slli	r6,r3,16
   4c6f4:	4a7fbfc4 	addi	r9,r9,-257
   4c6f8:	42202004 	addi	r8,r8,-32640
   4c6fc:	30ccb03a 	or	r6,r6,r3
   4c700:	20c00017 	ldw	r3,0(r4)
   4c704:	30c6f03a 	xor	r3,r6,r3
   4c708:	1a4b883a 	add	r5,r3,r9
   4c70c:	00c6303a 	nor	r3,zero,r3
   4c710:	28c6703a 	and	r3,r5,r3
   4c714:	1a06703a 	and	r3,r3,r8
   4c718:	183fe71e 	bne	r3,zero,4c6b8 <memchr+0x54>
   4c71c:	10bfff04 	addi	r2,r2,-4
   4c720:	10c00128 	cmpgeui	r3,r2,4
   4c724:	21000104 	addi	r4,r4,4
   4c728:	183ff51e 	bne	r3,zero,4c700 <memchr+0x9c>
   4c72c:	003fe106 	br	4c6b4 <memchr+0x50>

0004c730 <memcpy>:
   4c730:	30c00430 	cmpltui	r3,r6,16
   4c734:	2005883a 	mov	r2,r4
   4c738:	18002d1e 	bne	r3,zero,4c7f0 <memcpy+0xc0>
   4c73c:	2146b03a 	or	r3,r4,r5
   4c740:	18c000cc 	andi	r3,r3,3
   4c744:	1800351e 	bne	r3,zero,4c81c <memcpy+0xec>
   4c748:	32fffc04 	addi	r11,r6,-16
   4c74c:	5816d13a 	srli	r11,r11,4
   4c750:	280f883a 	mov	r7,r5
   4c754:	2007883a 	mov	r3,r4
   4c758:	5ac00044 	addi	r11,r11,1
   4c75c:	5816913a 	slli	r11,r11,4
   4c760:	22d5883a 	add	r10,r4,r11
   4c764:	39000117 	ldw	r4,4(r7)
   4c768:	3a400017 	ldw	r9,0(r7)
   4c76c:	3a000217 	ldw	r8,8(r7)
   4c770:	19000115 	stw	r4,4(r3)
   4c774:	39000317 	ldw	r4,12(r7)
   4c778:	1a400015 	stw	r9,0(r3)
   4c77c:	1a000215 	stw	r8,8(r3)
   4c780:	19000315 	stw	r4,12(r3)
   4c784:	18c00404 	addi	r3,r3,16
   4c788:	39c00404 	addi	r7,r7,16
   4c78c:	50fff51e 	bne	r10,r3,4c764 <memcpy+0x34>
   4c790:	3100030c 	andi	r4,r6,12
   4c794:	2acb883a 	add	r5,r5,r11
   4c798:	320003cc 	andi	r8,r6,15
   4c79c:	20002226 	beq	r4,zero,4c828 <memcpy+0xf8>
   4c7a0:	280f883a 	mov	r7,r5
   4c7a4:	1813883a 	mov	r9,r3
   4c7a8:	39c00104 	addi	r7,r7,4
   4c7ac:	3abfff17 	ldw	r10,-4(r7)
   4c7b0:	41c9c83a 	sub	r4,r8,r7
   4c7b4:	2909883a 	add	r4,r5,r4
   4c7b8:	4a800015 	stw	r10,0(r9)
   4c7bc:	21000128 	cmpgeui	r4,r4,4
   4c7c0:	4a400104 	addi	r9,r9,4
   4c7c4:	203ff81e 	bne	r4,zero,4c7a8 <memcpy+0x78>
   4c7c8:	413fff04 	addi	r4,r8,-4
   4c7cc:	2008d0ba 	srli	r4,r4,2
   4c7d0:	318000cc 	andi	r6,r6,3
   4c7d4:	31ffffc4 	addi	r7,r6,-1
   4c7d8:	21000044 	addi	r4,r4,1
   4c7dc:	200890ba 	slli	r4,r4,2
   4c7e0:	1907883a 	add	r3,r3,r4
   4c7e4:	290b883a 	add	r5,r5,r4
   4c7e8:	3000041e 	bne	r6,zero,4c7fc <memcpy+0xcc>
   4c7ec:	f800283a 	ret
   4c7f0:	2007883a 	mov	r3,r4
   4c7f4:	31ffffc4 	addi	r7,r6,-1
   4c7f8:	303ffc26 	beq	r6,zero,4c7ec <memcpy+0xbc>
   4c7fc:	39c00044 	addi	r7,r7,1
   4c800:	19cf883a 	add	r7,r3,r7
   4c804:	29800003 	ldbu	r6,0(r5)
   4c808:	18c00044 	addi	r3,r3,1
   4c80c:	29400044 	addi	r5,r5,1
   4c810:	19bfffc5 	stb	r6,-1(r3)
   4c814:	38fffb1e 	bne	r7,r3,4c804 <memcpy+0xd4>
   4c818:	f800283a 	ret
   4c81c:	31ffffc4 	addi	r7,r6,-1
   4c820:	2007883a 	mov	r3,r4
   4c824:	003ff506 	br	4c7fc <memcpy+0xcc>
   4c828:	400d883a 	mov	r6,r8
   4c82c:	003ff106 	br	4c7f4 <memcpy+0xc4>

0004c830 <memmove>:
   4c830:	2005883a 	mov	r2,r4
   4c834:	29000a2e 	bgeu	r5,r4,4c860 <memmove+0x30>
   4c838:	2989883a 	add	r4,r5,r6
   4c83c:	1100082e 	bgeu	r2,r4,4c860 <memmove+0x30>
   4c840:	1187883a 	add	r3,r2,r6
   4c844:	30003e26 	beq	r6,zero,4c940 <memmove+0x110>
   4c848:	217fffc3 	ldbu	r5,-1(r4)
   4c84c:	18ffffc4 	addi	r3,r3,-1
   4c850:	213fffc4 	addi	r4,r4,-1
   4c854:	19400005 	stb	r5,0(r3)
   4c858:	10fffb1e 	bne	r2,r3,4c848 <memmove+0x18>
   4c85c:	f800283a 	ret
   4c860:	30c00430 	cmpltui	r3,r6,16
   4c864:	18000b26 	beq	r3,zero,4c894 <memmove+0x64>
   4c868:	1007883a 	mov	r3,r2
   4c86c:	31ffffc4 	addi	r7,r6,-1
   4c870:	30003726 	beq	r6,zero,4c950 <memmove+0x120>
   4c874:	39c00044 	addi	r7,r7,1
   4c878:	29cf883a 	add	r7,r5,r7
   4c87c:	29800003 	ldbu	r6,0(r5)
   4c880:	29400044 	addi	r5,r5,1
   4c884:	18c00044 	addi	r3,r3,1
   4c888:	19bfffc5 	stb	r6,-1(r3)
   4c88c:	29fffb1e 	bne	r5,r7,4c87c <memmove+0x4c>
   4c890:	f800283a 	ret
   4c894:	1146b03a 	or	r3,r2,r5
   4c898:	18c000cc 	andi	r3,r3,3
   4c89c:	1800291e 	bne	r3,zero,4c944 <memmove+0x114>
   4c8a0:	327ffc04 	addi	r9,r6,-16
   4c8a4:	4812d13a 	srli	r9,r9,4
   4c8a8:	280f883a 	mov	r7,r5
   4c8ac:	1007883a 	mov	r3,r2
   4c8b0:	4a400044 	addi	r9,r9,1
   4c8b4:	4812913a 	slli	r9,r9,4
   4c8b8:	1251883a 	add	r8,r2,r9
   4c8bc:	39000017 	ldw	r4,0(r7)
   4c8c0:	39c00404 	addi	r7,r7,16
   4c8c4:	18c00404 	addi	r3,r3,16
   4c8c8:	193ffc15 	stw	r4,-16(r3)
   4c8cc:	393ffd17 	ldw	r4,-12(r7)
   4c8d0:	193ffd15 	stw	r4,-12(r3)
   4c8d4:	393ffe17 	ldw	r4,-8(r7)
   4c8d8:	193ffe15 	stw	r4,-8(r3)
   4c8dc:	393fff17 	ldw	r4,-4(r7)
   4c8e0:	193fff15 	stw	r4,-4(r3)
   4c8e4:	40fff51e 	bne	r8,r3,4c8bc <memmove+0x8c>
   4c8e8:	3100030c 	andi	r4,r6,12
   4c8ec:	2a4b883a 	add	r5,r5,r9
   4c8f0:	320003cc 	andi	r8,r6,15
   4c8f4:	20001726 	beq	r4,zero,4c954 <memmove+0x124>
   4c8f8:	2813883a 	mov	r9,r5
   4c8fc:	180f883a 	mov	r7,r3
   4c900:	4a800017 	ldw	r10,0(r9)
   4c904:	39c00104 	addi	r7,r7,4
   4c908:	41c9c83a 	sub	r4,r8,r7
   4c90c:	1909883a 	add	r4,r3,r4
   4c910:	21000128 	cmpgeui	r4,r4,4
   4c914:	3abfff15 	stw	r10,-4(r7)
   4c918:	4a400104 	addi	r9,r9,4
   4c91c:	203ff81e 	bne	r4,zero,4c900 <memmove+0xd0>
   4c920:	413fff04 	addi	r4,r8,-4
   4c924:	2008d0ba 	srli	r4,r4,2
   4c928:	318000cc 	andi	r6,r6,3
   4c92c:	21000044 	addi	r4,r4,1
   4c930:	200890ba 	slli	r4,r4,2
   4c934:	1907883a 	add	r3,r3,r4
   4c938:	290b883a 	add	r5,r5,r4
   4c93c:	003fcb06 	br	4c86c <memmove+0x3c>
   4c940:	f800283a 	ret
   4c944:	31ffffc4 	addi	r7,r6,-1
   4c948:	1007883a 	mov	r3,r2
   4c94c:	003fc906 	br	4c874 <memmove+0x44>
   4c950:	f800283a 	ret
   4c954:	400d883a 	mov	r6,r8
   4c958:	003fc406 	br	4c86c <memmove+0x3c>

0004c95c <memset>:
   4c95c:	20c000cc 	andi	r3,r4,3
   4c960:	2005883a 	mov	r2,r4
   4c964:	18003726 	beq	r3,zero,4ca44 <memset+0xe8>
   4c968:	31ffffc4 	addi	r7,r6,-1
   4c96c:	30003326 	beq	r6,zero,4ca3c <memset+0xe0>
   4c970:	2811883a 	mov	r8,r5
   4c974:	2007883a 	mov	r3,r4
   4c978:	00000306 	br	4c988 <memset+0x2c>
   4c97c:	39ffffc4 	addi	r7,r7,-1
   4c980:	39bfffe0 	cmpeqi	r6,r7,-1
   4c984:	30002d1e 	bne	r6,zero,4ca3c <memset+0xe0>
   4c988:	18c00044 	addi	r3,r3,1
   4c98c:	198000cc 	andi	r6,r3,3
   4c990:	1a3fffc5 	stb	r8,-1(r3)
   4c994:	303ff91e 	bne	r6,zero,4c97c <memset+0x20>
   4c998:	39000128 	cmpgeui	r4,r7,4
   4c99c:	20002226 	beq	r4,zero,4ca28 <memset+0xcc>
   4c9a0:	29803fcc 	andi	r6,r5,255
   4c9a4:	3008923a 	slli	r4,r6,8
   4c9a8:	3a000430 	cmpltui	r8,r7,16
   4c9ac:	2188b03a 	or	r4,r4,r6
   4c9b0:	200c943a 	slli	r6,r4,16
   4c9b4:	310cb03a 	or	r6,r6,r4
   4c9b8:	40000e1e 	bne	r8,zero,4c9f4 <memset+0x98>
   4c9bc:	393ffc04 	addi	r4,r7,-16
   4c9c0:	2008d13a 	srli	r4,r4,4
   4c9c4:	21000044 	addi	r4,r4,1
   4c9c8:	2008913a 	slli	r4,r4,4
   4c9cc:	1909883a 	add	r4,r3,r4
   4c9d0:	19800015 	stw	r6,0(r3)
   4c9d4:	19800115 	stw	r6,4(r3)
   4c9d8:	19800215 	stw	r6,8(r3)
   4c9dc:	19800315 	stw	r6,12(r3)
   4c9e0:	18c00404 	addi	r3,r3,16
   4c9e4:	20fffa1e 	bne	r4,r3,4c9d0 <memset+0x74>
   4c9e8:	3900030c 	andi	r4,r7,12
   4c9ec:	39c003cc 	andi	r7,r7,15
   4c9f0:	20000d26 	beq	r4,zero,4ca28 <memset+0xcc>
   4c9f4:	1811883a 	mov	r8,r3
   4c9f8:	42000104 	addi	r8,r8,4
   4c9fc:	3a09c83a 	sub	r4,r7,r8
   4ca00:	1909883a 	add	r4,r3,r4
   4ca04:	21000128 	cmpgeui	r4,r4,4
   4ca08:	41bfff15 	stw	r6,-4(r8)
   4ca0c:	203ffa1e 	bne	r4,zero,4c9f8 <memset+0x9c>
   4ca10:	393fff04 	addi	r4,r7,-4
   4ca14:	2008d0ba 	srli	r4,r4,2
   4ca18:	39c000cc 	andi	r7,r7,3
   4ca1c:	21000044 	addi	r4,r4,1
   4ca20:	200890ba 	slli	r4,r4,2
   4ca24:	1907883a 	add	r3,r3,r4
   4ca28:	38000526 	beq	r7,zero,4ca40 <memset+0xe4>
   4ca2c:	19cf883a 	add	r7,r3,r7
   4ca30:	18c00044 	addi	r3,r3,1
   4ca34:	197fffc5 	stb	r5,-1(r3)
   4ca38:	38fffd1e 	bne	r7,r3,4ca30 <memset+0xd4>
   4ca3c:	f800283a 	ret
   4ca40:	f800283a 	ret
   4ca44:	2007883a 	mov	r3,r4
   4ca48:	300f883a 	mov	r7,r6
   4ca4c:	003fd206 	br	4c998 <memset+0x3c>

0004ca50 <_Balloc>:
   4ca50:	20801317 	ldw	r2,76(r4)
   4ca54:	defffc04 	addi	sp,sp,-16
   4ca58:	dc400115 	stw	r17,4(sp)
   4ca5c:	dc000015 	stw	r16,0(sp)
   4ca60:	dfc00315 	stw	ra,12(sp)
   4ca64:	dc800215 	stw	r18,8(sp)
   4ca68:	2021883a 	mov	r16,r4
   4ca6c:	2823883a 	mov	r17,r5
   4ca70:	10000e26 	beq	r2,zero,4caac <_Balloc+0x5c>
   4ca74:	880690ba 	slli	r3,r17,2
   4ca78:	10c7883a 	add	r3,r2,r3
   4ca7c:	18800017 	ldw	r2,0(r3)
   4ca80:	10001126 	beq	r2,zero,4cac8 <_Balloc+0x78>
   4ca84:	11000017 	ldw	r4,0(r2)
   4ca88:	19000015 	stw	r4,0(r3)
   4ca8c:	10000415 	stw	zero,16(r2)
   4ca90:	10000315 	stw	zero,12(r2)
   4ca94:	dfc00317 	ldw	ra,12(sp)
   4ca98:	dc800217 	ldw	r18,8(sp)
   4ca9c:	dc400117 	ldw	r17,4(sp)
   4caa0:	dc000017 	ldw	r16,0(sp)
   4caa4:	dec00404 	addi	sp,sp,16
   4caa8:	f800283a 	ret
   4caac:	01800844 	movi	r6,33
   4cab0:	01400104 	movi	r5,4
   4cab4:	004fb140 	call	4fb14 <_calloc_r>
   4cab8:	80801315 	stw	r2,76(r16)
   4cabc:	103fed1e 	bne	r2,zero,4ca74 <_Balloc+0x24>
   4cac0:	0005883a 	mov	r2,zero
   4cac4:	003ff306 	br	4ca94 <_Balloc+0x44>
   4cac8:	04800044 	movi	r18,1
   4cacc:	9464983a 	sll	r18,r18,r17
   4cad0:	01400044 	movi	r5,1
   4cad4:	8009883a 	mov	r4,r16
   4cad8:	91800144 	addi	r6,r18,5
   4cadc:	300c90ba 	slli	r6,r6,2
   4cae0:	004fb140 	call	4fb14 <_calloc_r>
   4cae4:	103ff626 	beq	r2,zero,4cac0 <_Balloc+0x70>
   4cae8:	14400115 	stw	r17,4(r2)
   4caec:	14800215 	stw	r18,8(r2)
   4caf0:	003fe606 	br	4ca8c <_Balloc+0x3c>

0004caf4 <_Bfree>:
   4caf4:	28000726 	beq	r5,zero,4cb14 <_Bfree+0x20>
   4caf8:	28c00117 	ldw	r3,4(r5)
   4cafc:	20801317 	ldw	r2,76(r4)
   4cb00:	180690ba 	slli	r3,r3,2
   4cb04:	10c5883a 	add	r2,r2,r3
   4cb08:	10c00017 	ldw	r3,0(r2)
   4cb0c:	28c00015 	stw	r3,0(r5)
   4cb10:	11400015 	stw	r5,0(r2)
   4cb14:	f800283a 	ret

0004cb18 <__multadd>:
   4cb18:	defffa04 	addi	sp,sp,-24
   4cb1c:	dc400115 	stw	r17,4(sp)
   4cb20:	2c400417 	ldw	r17,16(r5)
   4cb24:	dcc00315 	stw	r19,12(sp)
   4cb28:	dc800215 	stw	r18,8(sp)
   4cb2c:	dc000015 	stw	r16,0(sp)
   4cb30:	dfc00515 	stw	ra,20(sp)
   4cb34:	dd000415 	stw	r20,16(sp)
   4cb38:	2825883a 	mov	r18,r5
   4cb3c:	2027883a 	mov	r19,r4
   4cb40:	3821883a 	mov	r16,r7
   4cb44:	2a400504 	addi	r9,r5,20
   4cb48:	0015883a 	mov	r10,zero
   4cb4c:	48c00017 	ldw	r3,0(r9)
   4cb50:	4a400104 	addi	r9,r9,4
   4cb54:	52800044 	addi	r10,r10,1
   4cb58:	1a3fffcc 	andi	r8,r3,65535
   4cb5c:	4191383a 	mul	r8,r8,r6
   4cb60:	180ed43a 	srli	r7,r3,16
   4cb64:	4407883a 	add	r3,r8,r16
   4cb68:	1810d43a 	srli	r8,r3,16
   4cb6c:	398f383a 	mul	r7,r7,r6
   4cb70:	18ffffcc 	andi	r3,r3,65535
   4cb74:	3a0f883a 	add	r7,r7,r8
   4cb78:	3810943a 	slli	r8,r7,16
   4cb7c:	3820d43a 	srli	r16,r7,16
   4cb80:	40c7883a 	add	r3,r8,r3
   4cb84:	48ffff15 	stw	r3,-4(r9)
   4cb88:	547ff016 	blt	r10,r17,4cb4c <__multadd+0x34>
   4cb8c:	80000826 	beq	r16,zero,4cbb0 <__multadd+0x98>
   4cb90:	90800217 	ldw	r2,8(r18)
   4cb94:	88800f0e 	bge	r17,r2,4cbd4 <__multadd+0xbc>
   4cb98:	88800144 	addi	r2,r17,5
   4cb9c:	100490ba 	slli	r2,r2,2
   4cba0:	8c400044 	addi	r17,r17,1
   4cba4:	9085883a 	add	r2,r18,r2
   4cba8:	14000015 	stw	r16,0(r2)
   4cbac:	94400415 	stw	r17,16(r18)
   4cbb0:	9005883a 	mov	r2,r18
   4cbb4:	dfc00517 	ldw	ra,20(sp)
   4cbb8:	dd000417 	ldw	r20,16(sp)
   4cbbc:	dcc00317 	ldw	r19,12(sp)
   4cbc0:	dc800217 	ldw	r18,8(sp)
   4cbc4:	dc400117 	ldw	r17,4(sp)
   4cbc8:	dc000017 	ldw	r16,0(sp)
   4cbcc:	dec00604 	addi	sp,sp,24
   4cbd0:	f800283a 	ret
   4cbd4:	91400117 	ldw	r5,4(r18)
   4cbd8:	9809883a 	mov	r4,r19
   4cbdc:	29400044 	addi	r5,r5,1
   4cbe0:	004ca500 	call	4ca50 <_Balloc>
   4cbe4:	1029883a 	mov	r20,r2
   4cbe8:	10001226 	beq	r2,zero,4cc34 <__multadd+0x11c>
   4cbec:	91800417 	ldw	r6,16(r18)
   4cbf0:	91400304 	addi	r5,r18,12
   4cbf4:	11000304 	addi	r4,r2,12
   4cbf8:	31800084 	addi	r6,r6,2
   4cbfc:	300c90ba 	slli	r6,r6,2
   4cc00:	004c7300 	call	4c730 <memcpy>
   4cc04:	90000926 	beq	r18,zero,4cc2c <__multadd+0x114>
   4cc08:	90c00117 	ldw	r3,4(r18)
   4cc0c:	98801317 	ldw	r2,76(r19)
   4cc10:	180690ba 	slli	r3,r3,2
   4cc14:	10c5883a 	add	r2,r2,r3
   4cc18:	10c00017 	ldw	r3,0(r2)
   4cc1c:	90c00015 	stw	r3,0(r18)
   4cc20:	14800015 	stw	r18,0(r2)
   4cc24:	a025883a 	mov	r18,r20
   4cc28:	003fdb06 	br	4cb98 <__multadd+0x80>
   4cc2c:	a025883a 	mov	r18,r20
   4cc30:	003fd906 	br	4cb98 <__multadd+0x80>
   4cc34:	01c00174 	movhi	r7,5
   4cc38:	01000174 	movhi	r4,5
   4cc3c:	39cfa504 	addi	r7,r7,16020
   4cc40:	000d883a 	mov	r6,zero
   4cc44:	01402d44 	movi	r5,181
   4cc48:	210fb904 	addi	r4,r4,16100
   4cc4c:	004fa9c0 	call	4fa9c <__assert_func>

0004cc50 <__s2b>:
   4cc50:	defff904 	addi	sp,sp,-28
   4cc54:	dc800215 	stw	r18,8(sp)
   4cc58:	dc000015 	stw	r16,0(sp)
   4cc5c:	2025883a 	mov	r18,r4
   4cc60:	2821883a 	mov	r16,r5
   4cc64:	39000204 	addi	r4,r7,8
   4cc68:	01400244 	movi	r5,9
   4cc6c:	dcc00315 	stw	r19,12(sp)
   4cc70:	dc400115 	stw	r17,4(sp)
   4cc74:	dfc00615 	stw	ra,24(sp)
   4cc78:	3823883a 	mov	r17,r7
   4cc7c:	dd400515 	stw	r21,20(sp)
   4cc80:	dd000415 	stw	r20,16(sp)
   4cc84:	3027883a 	mov	r19,r6
   4cc88:	0046c180 	call	46c18 <__divsi3>
   4cc8c:	88c00290 	cmplti	r3,r17,10
   4cc90:	1800341e 	bne	r3,zero,4cd64 <__s2b+0x114>
   4cc94:	00c00044 	movi	r3,1
   4cc98:	000b883a 	mov	r5,zero
   4cc9c:	18c7883a 	add	r3,r3,r3
   4cca0:	29400044 	addi	r5,r5,1
   4cca4:	18bffd16 	blt	r3,r2,4cc9c <__s2b+0x4c>
   4cca8:	9009883a 	mov	r4,r18
   4ccac:	004ca500 	call	4ca50 <_Balloc>
   4ccb0:	100b883a 	mov	r5,r2
   4ccb4:	10002d26 	beq	r2,zero,4cd6c <__s2b+0x11c>
   4ccb8:	d8800717 	ldw	r2,28(sp)
   4ccbc:	28800515 	stw	r2,20(r5)
   4ccc0:	00800044 	movi	r2,1
   4ccc4:	28800415 	stw	r2,16(r5)
   4ccc8:	98800290 	cmplti	r2,r19,10
   4cccc:	1000221e 	bne	r2,zero,4cd58 <__s2b+0x108>
   4ccd0:	85400244 	addi	r21,r16,9
   4ccd4:	a829883a 	mov	r20,r21
   4ccd8:	84e1883a 	add	r16,r16,r19
   4ccdc:	a1c00007 	ldb	r7,0(r20)
   4cce0:	01800284 	movi	r6,10
   4cce4:	9009883a 	mov	r4,r18
   4cce8:	39fff404 	addi	r7,r7,-48
   4ccec:	004cb180 	call	4cb18 <__multadd>
   4ccf0:	a5000044 	addi	r20,r20,1
   4ccf4:	100b883a 	mov	r5,r2
   4ccf8:	a43ff81e 	bne	r20,r16,4ccdc <__s2b+0x8c>
   4ccfc:	9c3ffe04 	addi	r16,r19,-8
   4cd00:	ac21883a 	add	r16,r21,r16
   4cd04:	9c400a0e 	bge	r19,r17,4cd30 <__s2b+0xe0>
   4cd08:	8ce3c83a 	sub	r17,r17,r19
   4cd0c:	8463883a 	add	r17,r16,r17
   4cd10:	81c00007 	ldb	r7,0(r16)
   4cd14:	01800284 	movi	r6,10
   4cd18:	9009883a 	mov	r4,r18
   4cd1c:	39fff404 	addi	r7,r7,-48
   4cd20:	004cb180 	call	4cb18 <__multadd>
   4cd24:	84000044 	addi	r16,r16,1
   4cd28:	100b883a 	mov	r5,r2
   4cd2c:	8c3ff81e 	bne	r17,r16,4cd10 <__s2b+0xc0>
   4cd30:	2805883a 	mov	r2,r5
   4cd34:	dfc00617 	ldw	ra,24(sp)
   4cd38:	dd400517 	ldw	r21,20(sp)
   4cd3c:	dd000417 	ldw	r20,16(sp)
   4cd40:	dcc00317 	ldw	r19,12(sp)
   4cd44:	dc800217 	ldw	r18,8(sp)
   4cd48:	dc400117 	ldw	r17,4(sp)
   4cd4c:	dc000017 	ldw	r16,0(sp)
   4cd50:	dec00704 	addi	sp,sp,28
   4cd54:	f800283a 	ret
   4cd58:	84000284 	addi	r16,r16,10
   4cd5c:	04c00244 	movi	r19,9
   4cd60:	003fe806 	br	4cd04 <__s2b+0xb4>
   4cd64:	000b883a 	mov	r5,zero
   4cd68:	003fcf06 	br	4cca8 <__s2b+0x58>
   4cd6c:	01c00174 	movhi	r7,5
   4cd70:	01000174 	movhi	r4,5
   4cd74:	39cfa504 	addi	r7,r7,16020
   4cd78:	000d883a 	mov	r6,zero
   4cd7c:	01403384 	movi	r5,206
   4cd80:	210fb904 	addi	r4,r4,16100
   4cd84:	004fa9c0 	call	4fa9c <__assert_func>

0004cd88 <__hi0bits>:
   4cd88:	20bfffec 	andhi	r2,r4,65535
   4cd8c:	1000131e 	bne	r2,zero,4cddc <__hi0bits+0x54>
   4cd90:	2008943a 	slli	r4,r4,16
   4cd94:	00800404 	movi	r2,16
   4cd98:	20ffc02c 	andhi	r3,r4,65280
   4cd9c:	1800021e 	bne	r3,zero,4cda8 <__hi0bits+0x20>
   4cda0:	2008923a 	slli	r4,r4,8
   4cda4:	10800204 	addi	r2,r2,8
   4cda8:	20fc002c 	andhi	r3,r4,61440
   4cdac:	1800021e 	bne	r3,zero,4cdb8 <__hi0bits+0x30>
   4cdb0:	2008913a 	slli	r4,r4,4
   4cdb4:	10800104 	addi	r2,r2,4
   4cdb8:	20f0002c 	andhi	r3,r4,49152
   4cdbc:	1800021e 	bne	r3,zero,4cdc8 <__hi0bits+0x40>
   4cdc0:	200890ba 	slli	r4,r4,2
   4cdc4:	10800084 	addi	r2,r2,2
   4cdc8:	20000316 	blt	r4,zero,4cdd8 <__hi0bits+0x50>
   4cdcc:	2110002c 	andhi	r4,r4,16384
   4cdd0:	10800044 	addi	r2,r2,1
   4cdd4:	20000326 	beq	r4,zero,4cde4 <__hi0bits+0x5c>
   4cdd8:	f800283a 	ret
   4cddc:	0005883a 	mov	r2,zero
   4cde0:	003fed06 	br	4cd98 <__hi0bits+0x10>
   4cde4:	00800804 	movi	r2,32
   4cde8:	f800283a 	ret

0004cdec <__lo0bits>:
   4cdec:	20c00017 	ldw	r3,0(r4)
   4cdf0:	188001cc 	andi	r2,r3,7
   4cdf4:	10000826 	beq	r2,zero,4ce18 <__lo0bits+0x2c>
   4cdf8:	1880004c 	andi	r2,r3,1
   4cdfc:	10001f1e 	bne	r2,zero,4ce7c <__lo0bits+0x90>
   4ce00:	1880008c 	andi	r2,r3,2
   4ce04:	10002126 	beq	r2,zero,4ce8c <__lo0bits+0xa0>
   4ce08:	1806d07a 	srli	r3,r3,1
   4ce0c:	00800044 	movi	r2,1
   4ce10:	20c00015 	stw	r3,0(r4)
   4ce14:	f800283a 	ret
   4ce18:	18bfffcc 	andi	r2,r3,65535
   4ce1c:	10001426 	beq	r2,zero,4ce70 <__lo0bits+0x84>
   4ce20:	0005883a 	mov	r2,zero
   4ce24:	19403fcc 	andi	r5,r3,255
   4ce28:	2800021e 	bne	r5,zero,4ce34 <__lo0bits+0x48>
   4ce2c:	1806d23a 	srli	r3,r3,8
   4ce30:	10800204 	addi	r2,r2,8
   4ce34:	194003cc 	andi	r5,r3,15
   4ce38:	2800021e 	bne	r5,zero,4ce44 <__lo0bits+0x58>
   4ce3c:	1806d13a 	srli	r3,r3,4
   4ce40:	10800104 	addi	r2,r2,4
   4ce44:	194000cc 	andi	r5,r3,3
   4ce48:	2800021e 	bne	r5,zero,4ce54 <__lo0bits+0x68>
   4ce4c:	1806d0ba 	srli	r3,r3,2
   4ce50:	10800084 	addi	r2,r2,2
   4ce54:	1940004c 	andi	r5,r3,1
   4ce58:	2800031e 	bne	r5,zero,4ce68 <__lo0bits+0x7c>
   4ce5c:	1806d07a 	srli	r3,r3,1
   4ce60:	10800044 	addi	r2,r2,1
   4ce64:	18000726 	beq	r3,zero,4ce84 <__lo0bits+0x98>
   4ce68:	20c00015 	stw	r3,0(r4)
   4ce6c:	f800283a 	ret
   4ce70:	1806d43a 	srli	r3,r3,16
   4ce74:	00800404 	movi	r2,16
   4ce78:	003fea06 	br	4ce24 <__lo0bits+0x38>
   4ce7c:	0005883a 	mov	r2,zero
   4ce80:	f800283a 	ret
   4ce84:	00800804 	movi	r2,32
   4ce88:	f800283a 	ret
   4ce8c:	1806d0ba 	srli	r3,r3,2
   4ce90:	00800084 	movi	r2,2
   4ce94:	20c00015 	stw	r3,0(r4)
   4ce98:	f800283a 	ret

0004ce9c <__i2b>:
   4ce9c:	20c01317 	ldw	r3,76(r4)
   4cea0:	defffd04 	addi	sp,sp,-12
   4cea4:	dc400115 	stw	r17,4(sp)
   4cea8:	dc000015 	stw	r16,0(sp)
   4ceac:	dfc00215 	stw	ra,8(sp)
   4ceb0:	2021883a 	mov	r16,r4
   4ceb4:	2823883a 	mov	r17,r5
   4ceb8:	18000d26 	beq	r3,zero,4cef0 <__i2b+0x54>
   4cebc:	18800117 	ldw	r2,4(r3)
   4cec0:	10001826 	beq	r2,zero,4cf24 <__i2b+0x88>
   4cec4:	11000017 	ldw	r4,0(r2)
   4cec8:	19000115 	stw	r4,4(r3)
   4cecc:	00c00044 	movi	r3,1
   4ced0:	10000315 	stw	zero,12(r2)
   4ced4:	14400515 	stw	r17,20(r2)
   4ced8:	10c00415 	stw	r3,16(r2)
   4cedc:	dfc00217 	ldw	ra,8(sp)
   4cee0:	dc400117 	ldw	r17,4(sp)
   4cee4:	dc000017 	ldw	r16,0(sp)
   4cee8:	dec00304 	addi	sp,sp,12
   4ceec:	f800283a 	ret
   4cef0:	01800844 	movi	r6,33
   4cef4:	01400104 	movi	r5,4
   4cef8:	004fb140 	call	4fb14 <_calloc_r>
   4cefc:	80801315 	stw	r2,76(r16)
   4cf00:	1007883a 	mov	r3,r2
   4cf04:	103fed1e 	bne	r2,zero,4cebc <__i2b+0x20>
   4cf08:	01c00174 	movhi	r7,5
   4cf0c:	01000174 	movhi	r4,5
   4cf10:	39cfa504 	addi	r7,r7,16020
   4cf14:	000d883a 	mov	r6,zero
   4cf18:	01405004 	movi	r5,320
   4cf1c:	210fb904 	addi	r4,r4,16100
   4cf20:	004fa9c0 	call	4fa9c <__assert_func>
   4cf24:	01800704 	movi	r6,28
   4cf28:	01400044 	movi	r5,1
   4cf2c:	8009883a 	mov	r4,r16
   4cf30:	004fb140 	call	4fb14 <_calloc_r>
   4cf34:	103ff426 	beq	r2,zero,4cf08 <__i2b+0x6c>
   4cf38:	00c00044 	movi	r3,1
   4cf3c:	10c00115 	stw	r3,4(r2)
   4cf40:	00c00084 	movi	r3,2
   4cf44:	10c00215 	stw	r3,8(r2)
   4cf48:	003fe006 	br	4cecc <__i2b+0x30>

0004cf4c <__multiply>:
   4cf4c:	defff804 	addi	sp,sp,-32
   4cf50:	dd400515 	stw	r21,20(sp)
   4cf54:	dd000415 	stw	r20,16(sp)
   4cf58:	35400417 	ldw	r21,16(r6)
   4cf5c:	2d000417 	ldw	r20,16(r5)
   4cf60:	dd800615 	stw	r22,24(sp)
   4cf64:	dcc00315 	stw	r19,12(sp)
   4cf68:	dfc00715 	stw	ra,28(sp)
   4cf6c:	dc800215 	stw	r18,8(sp)
   4cf70:	dc400115 	stw	r17,4(sp)
   4cf74:	dc000015 	stw	r16,0(sp)
   4cf78:	282d883a 	mov	r22,r5
   4cf7c:	3027883a 	mov	r19,r6
   4cf80:	a5400516 	blt	r20,r21,4cf98 <__multiply+0x4c>
   4cf84:	a807883a 	mov	r3,r21
   4cf88:	2827883a 	mov	r19,r5
   4cf8c:	a02b883a 	mov	r21,r20
   4cf90:	302d883a 	mov	r22,r6
   4cf94:	1829883a 	mov	r20,r3
   4cf98:	98800217 	ldw	r2,8(r19)
   4cf9c:	ad23883a 	add	r17,r21,r20
   4cfa0:	99400117 	ldw	r5,4(r19)
   4cfa4:	1440010e 	bge	r2,r17,4cfac <__multiply+0x60>
   4cfa8:	29400044 	addi	r5,r5,1
   4cfac:	004ca500 	call	4ca50 <_Balloc>
   4cfb0:	1025883a 	mov	r18,r2
   4cfb4:	10007326 	beq	r2,zero,4d184 <__multiply+0x238>
   4cfb8:	882090ba 	slli	r16,r17,2
   4cfbc:	11000504 	addi	r4,r2,20
   4cfc0:	2421883a 	add	r16,r4,r16
   4cfc4:	2400082e 	bgeu	r4,r16,4cfe8 <__multiply+0x9c>
   4cfc8:	808dc83a 	sub	r6,r16,r2
   4cfcc:	31bffac4 	addi	r6,r6,-21
   4cfd0:	300cd0ba 	srli	r6,r6,2
   4cfd4:	000b883a 	mov	r5,zero
   4cfd8:	31800044 	addi	r6,r6,1
   4cfdc:	300c90ba 	slli	r6,r6,2
   4cfe0:	004c95c0 	call	4c95c <memset>
   4cfe4:	1009883a 	mov	r4,r2
   4cfe8:	a01090ba 	slli	r8,r20,2
   4cfec:	a80e90ba 	slli	r7,r21,2
   4cff0:	b1400504 	addi	r5,r22,20
   4cff4:	9a400504 	addi	r9,r19,20
   4cff8:	2a11883a 	add	r8,r5,r8
   4cffc:	49cf883a 	add	r7,r9,r7
   4d000:	2a004b2e 	bgeu	r5,r8,4d130 <__multiply+0x1e4>
   4d004:	98800544 	addi	r2,r19,21
   4d008:	38805c36 	bltu	r7,r2,4d17c <__multiply+0x230>
   4d00c:	3cc5c83a 	sub	r2,r7,r19
   4d010:	10bffac4 	addi	r2,r2,-21
   4d014:	1004d0ba 	srli	r2,r2,2
   4d018:	10800044 	addi	r2,r2,1
   4d01c:	100490ba 	slli	r2,r2,2
   4d020:	00000506 	br	4d038 <__multiply+0xec>
   4d024:	5816d43a 	srli	r11,r11,16
   4d028:	5800231e 	bne	r11,zero,4d0b8 <__multiply+0x16c>
   4d02c:	29400104 	addi	r5,r5,4
   4d030:	21000104 	addi	r4,r4,4
   4d034:	2a003e2e 	bgeu	r5,r8,4d130 <__multiply+0x1e4>
   4d038:	2ac00017 	ldw	r11,0(r5)
   4d03c:	5b7fffcc 	andi	r13,r11,65535
   4d040:	683ff826 	beq	r13,zero,4d024 <__multiply+0xd8>
   4d044:	2019883a 	mov	r12,r4
   4d048:	4817883a 	mov	r11,r9
   4d04c:	001d883a 	mov	r14,zero
   4d050:	58c00017 	ldw	r3,0(r11)
   4d054:	62800017 	ldw	r10,0(r12)
   4d058:	63000104 	addi	r12,r12,4
   4d05c:	19bfffcc 	andi	r6,r3,65535
   4d060:	334d383a 	mul	r6,r6,r13
   4d064:	1806d43a 	srli	r3,r3,16
   4d068:	53ffffcc 	andi	r15,r10,65535
   4d06c:	33cd883a 	add	r6,r6,r15
   4d070:	5014d43a 	srli	r10,r10,16
   4d074:	338d883a 	add	r6,r6,r14
   4d078:	1b47383a 	mul	r3,r3,r13
   4d07c:	301cd43a 	srli	r14,r6,16
   4d080:	31bfffcc 	andi	r6,r6,65535
   4d084:	1a87883a 	add	r3,r3,r10
   4d088:	1b87883a 	add	r3,r3,r14
   4d08c:	1814943a 	slli	r10,r3,16
   4d090:	181cd43a 	srli	r14,r3,16
   4d094:	5ac00104 	addi	r11,r11,4
   4d098:	5186b03a 	or	r3,r10,r6
   4d09c:	60ffff15 	stw	r3,-4(r12)
   4d0a0:	59ffeb36 	bltu	r11,r7,4d050 <__multiply+0x104>
   4d0a4:	2087883a 	add	r3,r4,r2
   4d0a8:	1b800015 	stw	r14,0(r3)
   4d0ac:	2ac00017 	ldw	r11,0(r5)
   4d0b0:	5816d43a 	srli	r11,r11,16
   4d0b4:	583fdd26 	beq	r11,zero,4d02c <__multiply+0xe0>
   4d0b8:	20c00017 	ldw	r3,0(r4)
   4d0bc:	2019883a 	mov	r12,r4
   4d0c0:	4815883a 	mov	r10,r9
   4d0c4:	181b883a 	mov	r13,r3
   4d0c8:	001d883a 	mov	r14,zero
   4d0cc:	5180000b 	ldhu	r6,0(r10)
   4d0d0:	681ed43a 	srli	r15,r13,16
   4d0d4:	18ffffcc 	andi	r3,r3,65535
   4d0d8:	32cd383a 	mul	r6,r6,r11
   4d0dc:	52800104 	addi	r10,r10,4
   4d0e0:	63400117 	ldw	r13,4(r12)
   4d0e4:	33cd883a 	add	r6,r6,r15
   4d0e8:	338d883a 	add	r6,r6,r14
   4d0ec:	301c943a 	slli	r14,r6,16
   4d0f0:	300cd43a 	srli	r6,r6,16
   4d0f4:	6bffffcc 	andi	r15,r13,65535
   4d0f8:	70c6b03a 	or	r3,r14,r3
   4d0fc:	60c00015 	stw	r3,0(r12)
   4d100:	50ffff8b 	ldhu	r3,-2(r10)
   4d104:	63000104 	addi	r12,r12,4
   4d108:	1ac7383a 	mul	r3,r3,r11
   4d10c:	1bc7883a 	add	r3,r3,r15
   4d110:	1987883a 	add	r3,r3,r6
   4d114:	181cd43a 	srli	r14,r3,16
   4d118:	51ffec36 	bltu	r10,r7,4d0cc <__multiply+0x180>
   4d11c:	208d883a 	add	r6,r4,r2
   4d120:	30c00015 	stw	r3,0(r6)
   4d124:	29400104 	addi	r5,r5,4
   4d128:	21000104 	addi	r4,r4,4
   4d12c:	2a3fc236 	bltu	r5,r8,4d038 <__multiply+0xec>
   4d130:	04400316 	blt	zero,r17,4d140 <__multiply+0x1f4>
   4d134:	00000506 	br	4d14c <__multiply+0x200>
   4d138:	8c7fffc4 	addi	r17,r17,-1
   4d13c:	88000326 	beq	r17,zero,4d14c <__multiply+0x200>
   4d140:	80bfff17 	ldw	r2,-4(r16)
   4d144:	843fff04 	addi	r16,r16,-4
   4d148:	103ffb26 	beq	r2,zero,4d138 <__multiply+0x1ec>
   4d14c:	9005883a 	mov	r2,r18
   4d150:	94400415 	stw	r17,16(r18)
   4d154:	dfc00717 	ldw	ra,28(sp)
   4d158:	dd800617 	ldw	r22,24(sp)
   4d15c:	dd400517 	ldw	r21,20(sp)
   4d160:	dd000417 	ldw	r20,16(sp)
   4d164:	dcc00317 	ldw	r19,12(sp)
   4d168:	dc800217 	ldw	r18,8(sp)
   4d16c:	dc400117 	ldw	r17,4(sp)
   4d170:	dc000017 	ldw	r16,0(sp)
   4d174:	dec00804 	addi	sp,sp,32
   4d178:	f800283a 	ret
   4d17c:	00800104 	movi	r2,4
   4d180:	003fad06 	br	4d038 <__multiply+0xec>
   4d184:	01c00174 	movhi	r7,5
   4d188:	01000174 	movhi	r4,5
   4d18c:	39cfa504 	addi	r7,r7,16020
   4d190:	000d883a 	mov	r6,zero
   4d194:	01405744 	movi	r5,349
   4d198:	210fb904 	addi	r4,r4,16100
   4d19c:	004fa9c0 	call	4fa9c <__assert_func>

0004d1a0 <__pow5mult>:
   4d1a0:	defffb04 	addi	sp,sp,-20
   4d1a4:	dcc00315 	stw	r19,12(sp)
   4d1a8:	dc000015 	stw	r16,0(sp)
   4d1ac:	dfc00415 	stw	ra,16(sp)
   4d1b0:	dc800215 	stw	r18,8(sp)
   4d1b4:	dc400115 	stw	r17,4(sp)
   4d1b8:	308000cc 	andi	r2,r6,3
   4d1bc:	3021883a 	mov	r16,r6
   4d1c0:	2027883a 	mov	r19,r4
   4d1c4:	10002d1e 	bne	r2,zero,4d27c <__pow5mult+0xdc>
   4d1c8:	2825883a 	mov	r18,r5
   4d1cc:	8021d0ba 	srai	r16,r16,2
   4d1d0:	80001926 	beq	r16,zero,4d238 <__pow5mult+0x98>
   4d1d4:	9c401217 	ldw	r17,72(r19)
   4d1d8:	8800061e 	bne	r17,zero,4d1f4 <__pow5mult+0x54>
   4d1dc:	00002f06 	br	4d29c <__pow5mult+0xfc>
   4d1e0:	8021d07a 	srai	r16,r16,1
   4d1e4:	80001426 	beq	r16,zero,4d238 <__pow5mult+0x98>
   4d1e8:	88800017 	ldw	r2,0(r17)
   4d1ec:	10001a26 	beq	r2,zero,4d258 <__pow5mult+0xb8>
   4d1f0:	1023883a 	mov	r17,r2
   4d1f4:	8080004c 	andi	r2,r16,1
   4d1f8:	103ff926 	beq	r2,zero,4d1e0 <__pow5mult+0x40>
   4d1fc:	880d883a 	mov	r6,r17
   4d200:	900b883a 	mov	r5,r18
   4d204:	9809883a 	mov	r4,r19
   4d208:	004cf4c0 	call	4cf4c <__multiply>
   4d20c:	90001926 	beq	r18,zero,4d274 <__pow5mult+0xd4>
   4d210:	91000117 	ldw	r4,4(r18)
   4d214:	98c01317 	ldw	r3,76(r19)
   4d218:	8021d07a 	srai	r16,r16,1
   4d21c:	200890ba 	slli	r4,r4,2
   4d220:	1907883a 	add	r3,r3,r4
   4d224:	19000017 	ldw	r4,0(r3)
   4d228:	91000015 	stw	r4,0(r18)
   4d22c:	1c800015 	stw	r18,0(r3)
   4d230:	1025883a 	mov	r18,r2
   4d234:	803fec1e 	bne	r16,zero,4d1e8 <__pow5mult+0x48>
   4d238:	9005883a 	mov	r2,r18
   4d23c:	dfc00417 	ldw	ra,16(sp)
   4d240:	dcc00317 	ldw	r19,12(sp)
   4d244:	dc800217 	ldw	r18,8(sp)
   4d248:	dc400117 	ldw	r17,4(sp)
   4d24c:	dc000017 	ldw	r16,0(sp)
   4d250:	dec00504 	addi	sp,sp,20
   4d254:	f800283a 	ret
   4d258:	880d883a 	mov	r6,r17
   4d25c:	880b883a 	mov	r5,r17
   4d260:	9809883a 	mov	r4,r19
   4d264:	004cf4c0 	call	4cf4c <__multiply>
   4d268:	88800015 	stw	r2,0(r17)
   4d26c:	10000015 	stw	zero,0(r2)
   4d270:	003fdf06 	br	4d1f0 <__pow5mult+0x50>
   4d274:	1025883a 	mov	r18,r2
   4d278:	003fd906 	br	4d1e0 <__pow5mult+0x40>
   4d27c:	100490ba 	slli	r2,r2,2
   4d280:	00c00174 	movhi	r3,5
   4d284:	000f883a 	mov	r7,zero
   4d288:	10c7883a 	add	r3,r2,r3
   4d28c:	198fc717 	ldw	r6,16156(r3)
   4d290:	004cb180 	call	4cb18 <__multadd>
   4d294:	1025883a 	mov	r18,r2
   4d298:	003fcc06 	br	4d1cc <__pow5mult+0x2c>
   4d29c:	01400044 	movi	r5,1
   4d2a0:	9809883a 	mov	r4,r19
   4d2a4:	004ca500 	call	4ca50 <_Balloc>
   4d2a8:	1023883a 	mov	r17,r2
   4d2ac:	10000726 	beq	r2,zero,4d2cc <__pow5mult+0x12c>
   4d2b0:	00809c44 	movi	r2,625
   4d2b4:	88800515 	stw	r2,20(r17)
   4d2b8:	00800044 	movi	r2,1
   4d2bc:	88800415 	stw	r2,16(r17)
   4d2c0:	9c401215 	stw	r17,72(r19)
   4d2c4:	88000015 	stw	zero,0(r17)
   4d2c8:	003fca06 	br	4d1f4 <__pow5mult+0x54>
   4d2cc:	01c00174 	movhi	r7,5
   4d2d0:	01000174 	movhi	r4,5
   4d2d4:	39cfa504 	addi	r7,r7,16020
   4d2d8:	000d883a 	mov	r6,zero
   4d2dc:	01405004 	movi	r5,320
   4d2e0:	210fb904 	addi	r4,r4,16100
   4d2e4:	004fa9c0 	call	4fa9c <__assert_func>

0004d2e8 <__lshift>:
   4d2e8:	defff804 	addi	sp,sp,-32
   4d2ec:	dd800615 	stw	r22,24(sp)
   4d2f0:	dc000015 	stw	r16,0(sp)
   4d2f4:	302dd17a 	srai	r22,r6,5
   4d2f8:	2c000417 	ldw	r16,16(r5)
   4d2fc:	28800217 	ldw	r2,8(r5)
   4d300:	dd000415 	stw	r20,16(sp)
   4d304:	b421883a 	add	r16,r22,r16
   4d308:	dcc00315 	stw	r19,12(sp)
   4d30c:	dc800215 	stw	r18,8(sp)
   4d310:	dc400115 	stw	r17,4(sp)
   4d314:	dfc00715 	stw	ra,28(sp)
   4d318:	dd400515 	stw	r21,20(sp)
   4d31c:	85000044 	addi	r20,r16,1
   4d320:	2827883a 	mov	r19,r5
   4d324:	3025883a 	mov	r18,r6
   4d328:	29400117 	ldw	r5,4(r5)
   4d32c:	2023883a 	mov	r17,r4
   4d330:	1500030e 	bge	r2,r20,4d340 <__lshift+0x58>
   4d334:	1085883a 	add	r2,r2,r2
   4d338:	29400044 	addi	r5,r5,1
   4d33c:	153ffd16 	blt	r2,r20,4d334 <__lshift+0x4c>
   4d340:	8809883a 	mov	r4,r17
   4d344:	004ca500 	call	4ca50 <_Balloc>
   4d348:	102b883a 	mov	r21,r2
   4d34c:	10004126 	beq	r2,zero,4d454 <__lshift+0x16c>
   4d350:	11000504 	addi	r4,r2,20
   4d354:	0580050e 	bge	zero,r22,4d36c <__lshift+0x84>
   4d358:	b02c90ba 	slli	r22,r22,2
   4d35c:	000b883a 	mov	r5,zero
   4d360:	b00d883a 	mov	r6,r22
   4d364:	004c95c0 	call	4c95c <memset>
   4d368:	1589883a 	add	r4,r2,r22
   4d36c:	9a400417 	ldw	r9,16(r19)
   4d370:	98c00504 	addi	r3,r19,20
   4d374:	948007cc 	andi	r18,r18,31
   4d378:	481290ba 	slli	r9,r9,2
   4d37c:	1a53883a 	add	r9,r3,r9
   4d380:	90002c26 	beq	r18,zero,4d434 <__lshift+0x14c>
   4d384:	01400804 	movi	r5,32
   4d388:	2c8bc83a 	sub	r5,r5,r18
   4d38c:	2005883a 	mov	r2,r4
   4d390:	0011883a 	mov	r8,zero
   4d394:	19c00017 	ldw	r7,0(r3)
   4d398:	10800104 	addi	r2,r2,4
   4d39c:	18c00104 	addi	r3,r3,4
   4d3a0:	3c8e983a 	sll	r7,r7,r18
   4d3a4:	3a0eb03a 	or	r7,r7,r8
   4d3a8:	11ffff15 	stw	r7,-4(r2)
   4d3ac:	1a3fff17 	ldw	r8,-4(r3)
   4d3b0:	4150d83a 	srl	r8,r8,r5
   4d3b4:	1a7ff736 	bltu	r3,r9,4d394 <__lshift+0xac>
   4d3b8:	98800544 	addi	r2,r19,21
   4d3bc:	48802336 	bltu	r9,r2,4d44c <__lshift+0x164>
   4d3c0:	4cc7c83a 	sub	r3,r9,r19
   4d3c4:	18fffac4 	addi	r3,r3,-21
   4d3c8:	1806d0ba 	srli	r3,r3,2
   4d3cc:	18c00044 	addi	r3,r3,1
   4d3d0:	180690ba 	slli	r3,r3,2
   4d3d4:	20c9883a 	add	r4,r4,r3
   4d3d8:	22000015 	stw	r8,0(r4)
   4d3dc:	40000126 	beq	r8,zero,4d3e4 <__lshift+0xfc>
   4d3e0:	a021883a 	mov	r16,r20
   4d3e4:	ac000415 	stw	r16,16(r21)
   4d3e8:	98000726 	beq	r19,zero,4d408 <__lshift+0x120>
   4d3ec:	98c00117 	ldw	r3,4(r19)
   4d3f0:	88801317 	ldw	r2,76(r17)
   4d3f4:	180690ba 	slli	r3,r3,2
   4d3f8:	10c5883a 	add	r2,r2,r3
   4d3fc:	10c00017 	ldw	r3,0(r2)
   4d400:	98c00015 	stw	r3,0(r19)
   4d404:	14c00015 	stw	r19,0(r2)
   4d408:	a805883a 	mov	r2,r21
   4d40c:	dfc00717 	ldw	ra,28(sp)
   4d410:	dd800617 	ldw	r22,24(sp)
   4d414:	dd400517 	ldw	r21,20(sp)
   4d418:	dd000417 	ldw	r20,16(sp)
   4d41c:	dcc00317 	ldw	r19,12(sp)
   4d420:	dc800217 	ldw	r18,8(sp)
   4d424:	dc400117 	ldw	r17,4(sp)
   4d428:	dc000017 	ldw	r16,0(sp)
   4d42c:	dec00804 	addi	sp,sp,32
   4d430:	f800283a 	ret
   4d434:	18800017 	ldw	r2,0(r3)
   4d438:	18c00104 	addi	r3,r3,4
   4d43c:	21000104 	addi	r4,r4,4
   4d440:	20bfff15 	stw	r2,-4(r4)
   4d444:	1a7ffb36 	bltu	r3,r9,4d434 <__lshift+0x14c>
   4d448:	003fe606 	br	4d3e4 <__lshift+0xfc>
   4d44c:	00c00104 	movi	r3,4
   4d450:	003fe006 	br	4d3d4 <__lshift+0xec>
   4d454:	01c00174 	movhi	r7,5
   4d458:	01000174 	movhi	r4,5
   4d45c:	39cfa504 	addi	r7,r7,16020
   4d460:	000d883a 	mov	r6,zero
   4d464:	01407644 	movi	r5,473
   4d468:	210fb904 	addi	r4,r4,16100
   4d46c:	004fa9c0 	call	4fa9c <__assert_func>

0004d470 <__mcmp>:
   4d470:	21800417 	ldw	r6,16(r4)
   4d474:	28c00417 	ldw	r3,16(r5)
   4d478:	30c5c83a 	sub	r2,r6,r3
   4d47c:	30c00e1e 	bne	r6,r3,4d4b8 <__mcmp+0x48>
   4d480:	180690ba 	slli	r3,r3,2
   4d484:	21000504 	addi	r4,r4,20
   4d488:	29400504 	addi	r5,r5,20
   4d48c:	20cd883a 	add	r6,r4,r3
   4d490:	28c7883a 	add	r3,r5,r3
   4d494:	00000106 	br	4d49c <__mcmp+0x2c>
   4d498:	2180082e 	bgeu	r4,r6,4d4bc <__mcmp+0x4c>
   4d49c:	31ffff17 	ldw	r7,-4(r6)
   4d4a0:	197fff17 	ldw	r5,-4(r3)
   4d4a4:	31bfff04 	addi	r6,r6,-4
   4d4a8:	18ffff04 	addi	r3,r3,-4
   4d4ac:	397ffa26 	beq	r7,r5,4d498 <__mcmp+0x28>
   4d4b0:	3940032e 	bgeu	r7,r5,4d4c0 <__mcmp+0x50>
   4d4b4:	00bfffc4 	movi	r2,-1
   4d4b8:	f800283a 	ret
   4d4bc:	f800283a 	ret
   4d4c0:	00800044 	movi	r2,1
   4d4c4:	f800283a 	ret

0004d4c8 <__mdiff>:
   4d4c8:	28c00417 	ldw	r3,16(r5)
   4d4cc:	30800417 	ldw	r2,16(r6)
   4d4d0:	defffc04 	addi	sp,sp,-16
   4d4d4:	dc800215 	stw	r18,8(sp)
   4d4d8:	dc400115 	stw	r17,4(sp)
   4d4dc:	dc000015 	stw	r16,0(sp)
   4d4e0:	dfc00315 	stw	ra,12(sp)
   4d4e4:	2823883a 	mov	r17,r5
   4d4e8:	3021883a 	mov	r16,r6
   4d4ec:	18a5c83a 	sub	r18,r3,r2
   4d4f0:	1880641e 	bne	r3,r2,4d684 <__mdiff+0x1bc>
   4d4f4:	100c90ba 	slli	r6,r2,2
   4d4f8:	29400504 	addi	r5,r5,20
   4d4fc:	80c00504 	addi	r3,r16,20
   4d500:	2985883a 	add	r2,r5,r6
   4d504:	1987883a 	add	r3,r3,r6
   4d508:	00000106 	br	4d510 <__mdiff+0x48>
   4d50c:	2880642e 	bgeu	r5,r2,4d6a0 <__mdiff+0x1d8>
   4d510:	11bfff17 	ldw	r6,-4(r2)
   4d514:	19ffff17 	ldw	r7,-4(r3)
   4d518:	10bfff04 	addi	r2,r2,-4
   4d51c:	18ffff04 	addi	r3,r3,-4
   4d520:	31fffa26 	beq	r6,r7,4d50c <__mdiff+0x44>
   4d524:	31c05236 	bltu	r6,r7,4d670 <__mdiff+0x1a8>
   4d528:	89400117 	ldw	r5,4(r17)
   4d52c:	004ca500 	call	4ca50 <_Balloc>
   4d530:	10006226 	beq	r2,zero,4d6bc <__mdiff+0x1f4>
   4d534:	8a400417 	ldw	r9,16(r17)
   4d538:	83400417 	ldw	r13,16(r16)
   4d53c:	89400504 	addi	r5,r17,20
   4d540:	481090ba 	slli	r8,r9,2
   4d544:	681a90ba 	slli	r13,r13,2
   4d548:	82800504 	addi	r10,r16,20
   4d54c:	13800504 	addi	r14,r2,20
   4d550:	14800315 	stw	r18,12(r2)
   4d554:	2a11883a 	add	r8,r5,r8
   4d558:	535b883a 	add	r13,r10,r13
   4d55c:	701f883a 	mov	r15,r14
   4d560:	2819883a 	mov	r12,r5
   4d564:	0017883a 	mov	r11,zero
   4d568:	60c00017 	ldw	r3,0(r12)
   4d56c:	51c00017 	ldw	r7,0(r10)
   4d570:	7bc00104 	addi	r15,r15,4
   4d574:	193fffcc 	andi	r4,r3,65535
   4d578:	39bfffcc 	andi	r6,r7,65535
   4d57c:	22c9883a 	add	r4,r4,r11
   4d580:	2189c83a 	sub	r4,r4,r6
   4d584:	1806d43a 	srli	r3,r3,16
   4d588:	380ed43a 	srli	r7,r7,16
   4d58c:	200dd43a 	srai	r6,r4,16
   4d590:	213fffcc 	andi	r4,r4,65535
   4d594:	19c7c83a 	sub	r3,r3,r7
   4d598:	1987883a 	add	r3,r3,r6
   4d59c:	180c943a 	slli	r6,r3,16
   4d5a0:	1817d43a 	srai	r11,r3,16
   4d5a4:	52800104 	addi	r10,r10,4
   4d5a8:	3106b03a 	or	r3,r6,r4
   4d5ac:	78ffff15 	stw	r3,-4(r15)
   4d5b0:	63000104 	addi	r12,r12,4
   4d5b4:	537fec36 	bltu	r10,r13,4d568 <__mdiff+0xa0>
   4d5b8:	6c0dc83a 	sub	r6,r13,r16
   4d5bc:	31bffac4 	addi	r6,r6,-21
   4d5c0:	84000544 	addi	r16,r16,21
   4d5c4:	300cd0ba 	srli	r6,r6,2
   4d5c8:	6c003336 	bltu	r13,r16,4d698 <__mdiff+0x1d0>
   4d5cc:	300890ba 	slli	r4,r6,2
   4d5d0:	7109883a 	add	r4,r14,r4
   4d5d4:	6c002e36 	bltu	r13,r16,4d690 <__mdiff+0x1c8>
   4d5d8:	31800044 	addi	r6,r6,1
   4d5dc:	300c90ba 	slli	r6,r6,2
   4d5e0:	298b883a 	add	r5,r5,r6
   4d5e4:	719d883a 	add	r14,r14,r6
   4d5e8:	2a00152e 	bgeu	r5,r8,4d640 <__mdiff+0x178>
   4d5ec:	700f883a 	mov	r7,r14
   4d5f0:	280d883a 	mov	r6,r5
   4d5f4:	31000017 	ldw	r4,0(r6)
   4d5f8:	39c00104 	addi	r7,r7,4
   4d5fc:	31800104 	addi	r6,r6,4
   4d600:	20ffffcc 	andi	r3,r4,65535
   4d604:	1ac7883a 	add	r3,r3,r11
   4d608:	1815d43a 	srai	r10,r3,16
   4d60c:	2008d43a 	srli	r4,r4,16
   4d610:	18ffffcc 	andi	r3,r3,65535
   4d614:	2289883a 	add	r4,r4,r10
   4d618:	2014943a 	slli	r10,r4,16
   4d61c:	2017d43a 	srai	r11,r4,16
   4d620:	50c6b03a 	or	r3,r10,r3
   4d624:	38ffff15 	stw	r3,-4(r7)
   4d628:	323ff236 	bltu	r6,r8,4d5f4 <__mdiff+0x12c>
   4d62c:	413fffc4 	addi	r4,r8,-1
   4d630:	2149c83a 	sub	r4,r4,r5
   4d634:	2008d0ba 	srli	r4,r4,2
   4d638:	200890ba 	slli	r4,r4,2
   4d63c:	7109883a 	add	r4,r14,r4
   4d640:	1800041e 	bne	r3,zero,4d654 <__mdiff+0x18c>
   4d644:	20ffff17 	ldw	r3,-4(r4)
   4d648:	4a7fffc4 	addi	r9,r9,-1
   4d64c:	213fff04 	addi	r4,r4,-4
   4d650:	183ffc26 	beq	r3,zero,4d644 <__mdiff+0x17c>
   4d654:	12400415 	stw	r9,16(r2)
   4d658:	dfc00317 	ldw	ra,12(sp)
   4d65c:	dc800217 	ldw	r18,8(sp)
   4d660:	dc400117 	ldw	r17,4(sp)
   4d664:	dc000017 	ldw	r16,0(sp)
   4d668:	dec00404 	addi	sp,sp,16
   4d66c:	f800283a 	ret
   4d670:	8805883a 	mov	r2,r17
   4d674:	04800044 	movi	r18,1
   4d678:	8023883a 	mov	r17,r16
   4d67c:	1021883a 	mov	r16,r2
   4d680:	003fa906 	br	4d528 <__mdiff+0x60>
   4d684:	903ffa16 	blt	r18,zero,4d670 <__mdiff+0x1a8>
   4d688:	0025883a 	mov	r18,zero
   4d68c:	003fa606 	br	4d528 <__mdiff+0x60>
   4d690:	01800104 	movi	r6,4
   4d694:	003fd206 	br	4d5e0 <__mdiff+0x118>
   4d698:	0009883a 	mov	r4,zero
   4d69c:	003fcc06 	br	4d5d0 <__mdiff+0x108>
   4d6a0:	000b883a 	mov	r5,zero
   4d6a4:	004ca500 	call	4ca50 <_Balloc>
   4d6a8:	10000b26 	beq	r2,zero,4d6d8 <__mdiff+0x210>
   4d6ac:	00c00044 	movi	r3,1
   4d6b0:	10c00415 	stw	r3,16(r2)
   4d6b4:	10000515 	stw	zero,20(r2)
   4d6b8:	003fe706 	br	4d658 <__mdiff+0x190>
   4d6bc:	01c00174 	movhi	r7,5
   4d6c0:	01000174 	movhi	r4,5
   4d6c4:	39cfa504 	addi	r7,r7,16020
   4d6c8:	000d883a 	mov	r6,zero
   4d6cc:	01409004 	movi	r5,576
   4d6d0:	210fb904 	addi	r4,r4,16100
   4d6d4:	004fa9c0 	call	4fa9c <__assert_func>
   4d6d8:	01c00174 	movhi	r7,5
   4d6dc:	01000174 	movhi	r4,5
   4d6e0:	39cfa504 	addi	r7,r7,16020
   4d6e4:	000d883a 	mov	r6,zero
   4d6e8:	01408c84 	movi	r5,562
   4d6ec:	210fb904 	addi	r4,r4,16100
   4d6f0:	004fa9c0 	call	4fa9c <__assert_func>

0004d6f4 <__ulp>:
   4d6f4:	28dffc2c 	andhi	r3,r5,32752
   4d6f8:	00bf3034 	movhi	r2,64704
   4d6fc:	1887883a 	add	r3,r3,r2
   4d700:	00c0020e 	bge	zero,r3,4d70c <__ulp+0x18>
   4d704:	0005883a 	mov	r2,zero
   4d708:	f800283a 	ret
   4d70c:	00c7c83a 	sub	r3,zero,r3
   4d710:	1807d53a 	srai	r3,r3,20
   4d714:	18800508 	cmpgei	r2,r3,20
   4d718:	1000041e 	bne	r2,zero,4d72c <__ulp+0x38>
   4d71c:	00800234 	movhi	r2,8
   4d720:	10c7d83a 	sra	r3,r2,r3
   4d724:	0005883a 	mov	r2,zero
   4d728:	f800283a 	ret
   4d72c:	18fffb04 	addi	r3,r3,-20
   4d730:	188007c8 	cmpgei	r2,r3,31
   4d734:	10000326 	beq	r2,zero,4d744 <__ulp+0x50>
   4d738:	00800044 	movi	r2,1
   4d73c:	0007883a 	mov	r3,zero
   4d740:	f800283a 	ret
   4d744:	00a00034 	movhi	r2,32768
   4d748:	10c4d83a 	srl	r2,r2,r3
   4d74c:	0007883a 	mov	r3,zero
   4d750:	f800283a 	ret

0004d754 <__b2d>:
   4d754:	defffa04 	addi	sp,sp,-24
   4d758:	dc400115 	stw	r17,4(sp)
   4d75c:	24400417 	ldw	r17,16(r4)
   4d760:	dc000015 	stw	r16,0(sp)
   4d764:	24000504 	addi	r16,r4,20
   4d768:	882290ba 	slli	r17,r17,2
   4d76c:	dc800215 	stw	r18,8(sp)
   4d770:	dd000415 	stw	r20,16(sp)
   4d774:	8463883a 	add	r17,r16,r17
   4d778:	8cbfff17 	ldw	r18,-4(r17)
   4d77c:	dcc00315 	stw	r19,12(sp)
   4d780:	dfc00515 	stw	ra,20(sp)
   4d784:	9009883a 	mov	r4,r18
   4d788:	2827883a 	mov	r19,r5
   4d78c:	004cd880 	call	4cd88 <__hi0bits>
   4d790:	01000804 	movi	r4,32
   4d794:	2087c83a 	sub	r3,r4,r2
   4d798:	98c00015 	stw	r3,0(r19)
   4d79c:	10c002c8 	cmpgei	r3,r2,11
   4d7a0:	8d3fff04 	addi	r20,r17,-4
   4d7a4:	18001c26 	beq	r3,zero,4d818 <__b2d+0xc4>
   4d7a8:	10fffd44 	addi	r3,r2,-11
   4d7ac:	85000e2e 	bgeu	r16,r20,4d7e8 <__b2d+0x94>
   4d7b0:	88bffe17 	ldw	r2,-8(r17)
   4d7b4:	18000f26 	beq	r3,zero,4d7f4 <__b2d+0xa0>
   4d7b8:	20c9c83a 	sub	r4,r4,r3
   4d7bc:	110cd83a 	srl	r6,r2,r4
   4d7c0:	90e4983a 	sll	r18,r18,r3
   4d7c4:	10c4983a 	sll	r2,r2,r3
   4d7c8:	897ffe04 	addi	r5,r17,-8
   4d7cc:	9186b03a 	or	r3,r18,r6
   4d7d0:	18cffc34 	orhi	r3,r3,16368
   4d7d4:	8140082e 	bgeu	r16,r5,4d7f8 <__b2d+0xa4>
   4d7d8:	897ffd17 	ldw	r5,-12(r17)
   4d7dc:	2908d83a 	srl	r4,r5,r4
   4d7e0:	1104b03a 	or	r2,r2,r4
   4d7e4:	00000406 	br	4d7f8 <__b2d+0xa4>
   4d7e8:	18000126 	beq	r3,zero,4d7f0 <__b2d+0x9c>
   4d7ec:	90e4983a 	sll	r18,r18,r3
   4d7f0:	0005883a 	mov	r2,zero
   4d7f4:	90cffc34 	orhi	r3,r18,16368
   4d7f8:	dfc00517 	ldw	ra,20(sp)
   4d7fc:	dd000417 	ldw	r20,16(sp)
   4d800:	dcc00317 	ldw	r19,12(sp)
   4d804:	dc800217 	ldw	r18,8(sp)
   4d808:	dc400117 	ldw	r17,4(sp)
   4d80c:	dc000017 	ldw	r16,0(sp)
   4d810:	dec00604 	addi	sp,sp,24
   4d814:	f800283a 	ret
   4d818:	014002c4 	movi	r5,11
   4d81c:	288bc83a 	sub	r5,r5,r2
   4d820:	9146d83a 	srl	r3,r18,r5
   4d824:	18cffc34 	orhi	r3,r3,16368
   4d828:	85000536 	bltu	r16,r20,4d840 <__b2d+0xec>
   4d82c:	0009883a 	mov	r4,zero
   4d830:	10800544 	addi	r2,r2,21
   4d834:	90a4983a 	sll	r18,r18,r2
   4d838:	9104b03a 	or	r2,r18,r4
   4d83c:	003fee06 	br	4d7f8 <__b2d+0xa4>
   4d840:	893ffe17 	ldw	r4,-8(r17)
   4d844:	2148d83a 	srl	r4,r4,r5
   4d848:	003ff906 	br	4d830 <__b2d+0xdc>

0004d84c <__d2b>:
   4d84c:	defff804 	addi	sp,sp,-32
   4d850:	dd000615 	stw	r20,24(sp)
   4d854:	2829883a 	mov	r20,r5
   4d858:	01400044 	movi	r5,1
   4d85c:	dcc00515 	stw	r19,20(sp)
   4d860:	dc400315 	stw	r17,12(sp)
   4d864:	dfc00715 	stw	ra,28(sp)
   4d868:	dc800415 	stw	r18,16(sp)
   4d86c:	dc000215 	stw	r16,8(sp)
   4d870:	3023883a 	mov	r17,r6
   4d874:	3827883a 	mov	r19,r7
   4d878:	004ca500 	call	4ca50 <_Balloc>
   4d87c:	10004226 	beq	r2,zero,4d988 <__d2b+0x13c>
   4d880:	8824d53a 	srli	r18,r17,20
   4d884:	1021883a 	mov	r16,r2
   4d888:	00800434 	movhi	r2,16
   4d88c:	10bfffc4 	addi	r2,r2,-1
   4d890:	9481ffcc 	andi	r18,r18,2047
   4d894:	88a2703a 	and	r17,r17,r2
   4d898:	90000126 	beq	r18,zero,4d8a0 <__d2b+0x54>
   4d89c:	8c400434 	orhi	r17,r17,16
   4d8a0:	dc400115 	stw	r17,4(sp)
   4d8a4:	a0001b26 	beq	r20,zero,4d914 <__d2b+0xc8>
   4d8a8:	d809883a 	mov	r4,sp
   4d8ac:	dd000015 	stw	r20,0(sp)
   4d8b0:	004cdec0 	call	4cdec <__lo0bits>
   4d8b4:	d8c00117 	ldw	r3,4(sp)
   4d8b8:	10003026 	beq	r2,zero,4d97c <__d2b+0x130>
   4d8bc:	01000804 	movi	r4,32
   4d8c0:	2089c83a 	sub	r4,r4,r2
   4d8c4:	1908983a 	sll	r4,r3,r4
   4d8c8:	d9400017 	ldw	r5,0(sp)
   4d8cc:	1886d83a 	srl	r3,r3,r2
   4d8d0:	2148b03a 	or	r4,r4,r5
   4d8d4:	81000515 	stw	r4,20(r16)
   4d8d8:	d8c00115 	stw	r3,4(sp)
   4d8dc:	80c00615 	stw	r3,24(r16)
   4d8e0:	1800241e 	bne	r3,zero,4d974 <__d2b+0x128>
   4d8e4:	04400044 	movi	r17,1
   4d8e8:	84400415 	stw	r17,16(r16)
   4d8ec:	9000111e 	bne	r18,zero,4d934 <__d2b+0xe8>
   4d8f0:	880690ba 	slli	r3,r17,2
   4d8f4:	10bef384 	addi	r2,r2,-1074
   4d8f8:	98800015 	stw	r2,0(r19)
   4d8fc:	80c5883a 	add	r2,r16,r3
   4d900:	11000417 	ldw	r4,16(r2)
   4d904:	8822917a 	slli	r17,r17,5
   4d908:	004cd880 	call	4cd88 <__hi0bits>
   4d90c:	8885c83a 	sub	r2,r17,r2
   4d910:	00000d06 	br	4d948 <__d2b+0xfc>
   4d914:	d9000104 	addi	r4,sp,4
   4d918:	004cdec0 	call	4cdec <__lo0bits>
   4d91c:	d8c00117 	ldw	r3,4(sp)
   4d920:	10800804 	addi	r2,r2,32
   4d924:	04400044 	movi	r17,1
   4d928:	80c00515 	stw	r3,20(r16)
   4d92c:	84400415 	stw	r17,16(r16)
   4d930:	903fef26 	beq	r18,zero,4d8f0 <__d2b+0xa4>
   4d934:	94bef344 	addi	r18,r18,-1075
   4d938:	90a5883a 	add	r18,r18,r2
   4d93c:	04400d44 	movi	r17,53
   4d940:	9c800015 	stw	r18,0(r19)
   4d944:	8885c83a 	sub	r2,r17,r2
   4d948:	d8c00817 	ldw	r3,32(sp)
   4d94c:	18800015 	stw	r2,0(r3)
   4d950:	8005883a 	mov	r2,r16
   4d954:	dfc00717 	ldw	ra,28(sp)
   4d958:	dd000617 	ldw	r20,24(sp)
   4d95c:	dcc00517 	ldw	r19,20(sp)
   4d960:	dc800417 	ldw	r18,16(sp)
   4d964:	dc400317 	ldw	r17,12(sp)
   4d968:	dc000217 	ldw	r16,8(sp)
   4d96c:	dec00804 	addi	sp,sp,32
   4d970:	f800283a 	ret
   4d974:	04400084 	movi	r17,2
   4d978:	003fec06 	br	4d92c <__d2b+0xe0>
   4d97c:	d9000017 	ldw	r4,0(sp)
   4d980:	81000515 	stw	r4,20(r16)
   4d984:	003fd506 	br	4d8dc <__d2b+0x90>
   4d988:	01c00174 	movhi	r7,5
   4d98c:	01000174 	movhi	r4,5
   4d990:	39cfa504 	addi	r7,r7,16020
   4d994:	000d883a 	mov	r6,zero
   4d998:	0140c284 	movi	r5,778
   4d99c:	210fb904 	addi	r4,r4,16100
   4d9a0:	004fa9c0 	call	4fa9c <__assert_func>

0004d9a4 <__ratio>:
   4d9a4:	defff904 	addi	sp,sp,-28
   4d9a8:	dc400315 	stw	r17,12(sp)
   4d9ac:	2823883a 	mov	r17,r5
   4d9b0:	d80b883a 	mov	r5,sp
   4d9b4:	dfc00615 	stw	ra,24(sp)
   4d9b8:	dcc00515 	stw	r19,20(sp)
   4d9bc:	dc800415 	stw	r18,16(sp)
   4d9c0:	2027883a 	mov	r19,r4
   4d9c4:	dc000215 	stw	r16,8(sp)
   4d9c8:	004d7540 	call	4d754 <__b2d>
   4d9cc:	d9400104 	addi	r5,sp,4
   4d9d0:	8809883a 	mov	r4,r17
   4d9d4:	1025883a 	mov	r18,r2
   4d9d8:	1821883a 	mov	r16,r3
   4d9dc:	004d7540 	call	4d754 <__b2d>
   4d9e0:	89000417 	ldw	r4,16(r17)
   4d9e4:	9a000417 	ldw	r8,16(r19)
   4d9e8:	d9400117 	ldw	r5,4(sp)
   4d9ec:	100d883a 	mov	r6,r2
   4d9f0:	4111c83a 	sub	r8,r8,r4
   4d9f4:	d9000017 	ldw	r4,0(sp)
   4d9f8:	4010917a 	slli	r8,r8,5
   4d9fc:	180f883a 	mov	r7,r3
   4da00:	2149c83a 	sub	r4,r4,r5
   4da04:	4111883a 	add	r8,r8,r4
   4da08:	02000c0e 	bge	zero,r8,4da3c <__ratio+0x98>
   4da0c:	4010953a 	slli	r8,r8,20
   4da10:	4421883a 	add	r16,r8,r16
   4da14:	9009883a 	mov	r4,r18
   4da18:	800b883a 	mov	r5,r16
   4da1c:	0044d440 	call	44d44 <__divdf3>
   4da20:	dfc00617 	ldw	ra,24(sp)
   4da24:	dcc00517 	ldw	r19,20(sp)
   4da28:	dc800417 	ldw	r18,16(sp)
   4da2c:	dc400317 	ldw	r17,12(sp)
   4da30:	dc000217 	ldw	r16,8(sp)
   4da34:	dec00704 	addi	sp,sp,28
   4da38:	f800283a 	ret
   4da3c:	00bffc34 	movhi	r2,65520
   4da40:	4091383a 	mul	r8,r8,r2
   4da44:	40cf883a 	add	r7,r8,r3
   4da48:	003ff206 	br	4da14 <__ratio+0x70>

0004da4c <_mprec_log10>:
   4da4c:	defffe04 	addi	sp,sp,-8
   4da50:	dc000015 	stw	r16,0(sp)
   4da54:	dfc00115 	stw	ra,4(sp)
   4da58:	20800608 	cmpgei	r2,r4,24
   4da5c:	2021883a 	mov	r16,r4
   4da60:	10000f26 	beq	r2,zero,4daa0 <_mprec_log10+0x54>
   4da64:	0009883a 	mov	r4,zero
   4da68:	014ffc34 	movhi	r5,16368
   4da6c:	000d883a 	mov	r6,zero
   4da70:	01d00934 	movhi	r7,16420
   4da74:	00457e00 	call	457e0 <__muldf3>
   4da78:	843fffc4 	addi	r16,r16,-1
   4da7c:	1009883a 	mov	r4,r2
   4da80:	180b883a 	mov	r5,r3
   4da84:	803ff91e 	bne	r16,zero,4da6c <_mprec_log10+0x20>
   4da88:	2005883a 	mov	r2,r4
   4da8c:	2807883a 	mov	r3,r5
   4da90:	dfc00117 	ldw	ra,4(sp)
   4da94:	dc000017 	ldw	r16,0(sp)
   4da98:	dec00204 	addi	sp,sp,8
   4da9c:	f800283a 	ret
   4daa0:	202090fa 	slli	r16,r4,3
   4daa4:	00800174 	movhi	r2,5
   4daa8:	108fdf04 	addi	r2,r2,16252
   4daac:	1405883a 	add	r2,r2,r16
   4dab0:	11000017 	ldw	r4,0(r2)
   4dab4:	11400117 	ldw	r5,4(r2)
   4dab8:	003ff306 	br	4da88 <_mprec_log10+0x3c>

0004dabc <__copybits>:
   4dabc:	297fffc4 	addi	r5,r5,-1
   4dac0:	280fd17a 	srai	r7,r5,5
   4dac4:	31400417 	ldw	r5,16(r6)
   4dac8:	30800504 	addi	r2,r6,20
   4dacc:	39c00044 	addi	r7,r7,1
   4dad0:	280a90ba 	slli	r5,r5,2
   4dad4:	380e90ba 	slli	r7,r7,2
   4dad8:	114b883a 	add	r5,r2,r5
   4dadc:	21cf883a 	add	r7,r4,r7
   4dae0:	11400c2e 	bgeu	r2,r5,4db14 <__copybits+0x58>
   4dae4:	2007883a 	mov	r3,r4
   4dae8:	12000017 	ldw	r8,0(r2)
   4daec:	10800104 	addi	r2,r2,4
   4daf0:	18c00104 	addi	r3,r3,4
   4daf4:	1a3fff15 	stw	r8,-4(r3)
   4daf8:	117ffb36 	bltu	r2,r5,4dae8 <__copybits+0x2c>
   4dafc:	2985c83a 	sub	r2,r5,r6
   4db00:	10bffac4 	addi	r2,r2,-21
   4db04:	1004d0ba 	srli	r2,r2,2
   4db08:	10800044 	addi	r2,r2,1
   4db0c:	100490ba 	slli	r2,r2,2
   4db10:	2089883a 	add	r4,r4,r2
   4db14:	21c0072e 	bgeu	r4,r7,4db34 <__copybits+0x78>
   4db18:	39bfffc4 	addi	r6,r7,-1
   4db1c:	310dc83a 	sub	r6,r6,r4
   4db20:	300cd0ba 	srli	r6,r6,2
   4db24:	000b883a 	mov	r5,zero
   4db28:	31800044 	addi	r6,r6,1
   4db2c:	300c90ba 	slli	r6,r6,2
   4db30:	004c95c1 	jmpi	4c95c <memset>
   4db34:	f800283a 	ret

0004db38 <__any_on>:
   4db38:	20c00417 	ldw	r3,16(r4)
   4db3c:	280dd17a 	srai	r6,r5,5
   4db40:	21000504 	addi	r4,r4,20
   4db44:	1980080e 	bge	r3,r6,4db68 <__any_on+0x30>
   4db48:	180690ba 	slli	r3,r3,2
   4db4c:	20c5883a 	add	r2,r4,r3
   4db50:	20800f2e 	bgeu	r4,r2,4db90 <__any_on+0x58>
   4db54:	10ffff17 	ldw	r3,-4(r2)
   4db58:	10bfff04 	addi	r2,r2,-4
   4db5c:	183ffc26 	beq	r3,zero,4db50 <__any_on+0x18>
   4db60:	00800044 	movi	r2,1
   4db64:	f800283a 	ret
   4db68:	300490ba 	slli	r2,r6,2
   4db6c:	2085883a 	add	r2,r4,r2
   4db70:	30fff70e 	bge	r6,r3,4db50 <__any_on+0x18>
   4db74:	294007cc 	andi	r5,r5,31
   4db78:	283ff526 	beq	r5,zero,4db50 <__any_on+0x18>
   4db7c:	11800017 	ldw	r6,0(r2)
   4db80:	3146d83a 	srl	r3,r6,r5
   4db84:	1946983a 	sll	r3,r3,r5
   4db88:	30fff51e 	bne	r6,r3,4db60 <__any_on+0x28>
   4db8c:	003ff006 	br	4db50 <__any_on+0x18>
   4db90:	0005883a 	mov	r2,zero
   4db94:	f800283a 	ret

0004db98 <_putc_r>:
   4db98:	defffc04 	addi	sp,sp,-16
   4db9c:	dc400215 	stw	r17,8(sp)
   4dba0:	dfc00315 	stw	ra,12(sp)
   4dba4:	2023883a 	mov	r17,r4
   4dba8:	20000226 	beq	r4,zero,4dbb4 <_putc_r+0x1c>
   4dbac:	20800e17 	ldw	r2,56(r4)
   4dbb0:	10000e26 	beq	r2,zero,4dbec <_putc_r+0x54>
   4dbb4:	30800217 	ldw	r2,8(r6)
   4dbb8:	10bfffc4 	addi	r2,r2,-1
   4dbbc:	30800215 	stw	r2,8(r6)
   4dbc0:	10001316 	blt	r2,zero,4dc10 <_putc_r+0x78>
   4dbc4:	30800017 	ldw	r2,0(r6)
   4dbc8:	11400005 	stb	r5,0(r2)
   4dbcc:	30800017 	ldw	r2,0(r6)
   4dbd0:	10c00044 	addi	r3,r2,1
   4dbd4:	30c00015 	stw	r3,0(r6)
   4dbd8:	10800003 	ldbu	r2,0(r2)
   4dbdc:	dfc00317 	ldw	ra,12(sp)
   4dbe0:	dc400217 	ldw	r17,8(sp)
   4dbe4:	dec00404 	addi	sp,sp,16
   4dbe8:	f800283a 	ret
   4dbec:	d9800115 	stw	r6,4(sp)
   4dbf0:	d9400015 	stw	r5,0(sp)
   4dbf4:	004b1c40 	call	4b1c4 <__sinit>
   4dbf8:	d9800117 	ldw	r6,4(sp)
   4dbfc:	d9400017 	ldw	r5,0(sp)
   4dc00:	30800217 	ldw	r2,8(r6)
   4dc04:	10bfffc4 	addi	r2,r2,-1
   4dc08:	30800215 	stw	r2,8(r6)
   4dc0c:	103fed0e 	bge	r2,zero,4dbc4 <_putc_r+0x2c>
   4dc10:	30c00617 	ldw	r3,24(r6)
   4dc14:	10c00e16 	blt	r2,r3,4dc50 <_putc_r+0xb8>
   4dc18:	30800017 	ldw	r2,0(r6)
   4dc1c:	11400005 	stb	r5,0(r2)
   4dc20:	30c00017 	ldw	r3,0(r6)
   4dc24:	18800003 	ldbu	r2,0(r3)
   4dc28:	108002a0 	cmpeqi	r2,r2,10
   4dc2c:	1000071e 	bne	r2,zero,4dc4c <_putc_r+0xb4>
   4dc30:	18800044 	addi	r2,r3,1
   4dc34:	30800015 	stw	r2,0(r6)
   4dc38:	18800003 	ldbu	r2,0(r3)
   4dc3c:	dfc00317 	ldw	ra,12(sp)
   4dc40:	dc400217 	ldw	r17,8(sp)
   4dc44:	dec00404 	addi	sp,sp,16
   4dc48:	f800283a 	ret
   4dc4c:	01400284 	movi	r5,10
   4dc50:	8809883a 	mov	r4,r17
   4dc54:	dfc00317 	ldw	ra,12(sp)
   4dc58:	dc400217 	ldw	r17,8(sp)
   4dc5c:	dec00404 	addi	sp,sp,16
   4dc60:	004f8801 	jmpi	4f880 <__swbuf_r>

0004dc64 <putc>:
   4dc64:	defffc04 	addi	sp,sp,-16
   4dc68:	00800174 	movhi	r2,5
   4dc6c:	dc800215 	stw	r18,8(sp)
   4dc70:	1497c217 	ldw	r18,24328(r2)
   4dc74:	dc400115 	stw	r17,4(sp)
   4dc78:	dfc00315 	stw	ra,12(sp)
   4dc7c:	2023883a 	mov	r17,r4
   4dc80:	90000226 	beq	r18,zero,4dc8c <putc+0x28>
   4dc84:	90800e17 	ldw	r2,56(r18)
   4dc88:	10000f26 	beq	r2,zero,4dcc8 <putc+0x64>
   4dc8c:	28800217 	ldw	r2,8(r5)
   4dc90:	10bfffc4 	addi	r2,r2,-1
   4dc94:	28800215 	stw	r2,8(r5)
   4dc98:	10001316 	blt	r2,zero,4dce8 <putc+0x84>
   4dc9c:	28800017 	ldw	r2,0(r5)
   4dca0:	14400005 	stb	r17,0(r2)
   4dca4:	28800017 	ldw	r2,0(r5)
   4dca8:	10c00044 	addi	r3,r2,1
   4dcac:	28c00015 	stw	r3,0(r5)
   4dcb0:	10800003 	ldbu	r2,0(r2)
   4dcb4:	dfc00317 	ldw	ra,12(sp)
   4dcb8:	dc800217 	ldw	r18,8(sp)
   4dcbc:	dc400117 	ldw	r17,4(sp)
   4dcc0:	dec00404 	addi	sp,sp,16
   4dcc4:	f800283a 	ret
   4dcc8:	9009883a 	mov	r4,r18
   4dccc:	d9400015 	stw	r5,0(sp)
   4dcd0:	004b1c40 	call	4b1c4 <__sinit>
   4dcd4:	d9400017 	ldw	r5,0(sp)
   4dcd8:	28800217 	ldw	r2,8(r5)
   4dcdc:	10bfffc4 	addi	r2,r2,-1
   4dce0:	28800215 	stw	r2,8(r5)
   4dce4:	103fed0e 	bge	r2,zero,4dc9c <putc+0x38>
   4dce8:	28c00617 	ldw	r3,24(r5)
   4dcec:	10c00a16 	blt	r2,r3,4dd18 <putc+0xb4>
   4dcf0:	28800017 	ldw	r2,0(r5)
   4dcf4:	14400005 	stb	r17,0(r2)
   4dcf8:	28c00017 	ldw	r3,0(r5)
   4dcfc:	18800003 	ldbu	r2,0(r3)
   4dd00:	108002a0 	cmpeqi	r2,r2,10
   4dd04:	10000c1e 	bne	r2,zero,4dd38 <putc+0xd4>
   4dd08:	18800044 	addi	r2,r3,1
   4dd0c:	28800015 	stw	r2,0(r5)
   4dd10:	18800003 	ldbu	r2,0(r3)
   4dd14:	003fe706 	br	4dcb4 <putc+0x50>
   4dd18:	280d883a 	mov	r6,r5
   4dd1c:	880b883a 	mov	r5,r17
   4dd20:	9009883a 	mov	r4,r18
   4dd24:	dfc00317 	ldw	ra,12(sp)
   4dd28:	dc800217 	ldw	r18,8(sp)
   4dd2c:	dc400117 	ldw	r17,4(sp)
   4dd30:	dec00404 	addi	sp,sp,16
   4dd34:	004f8801 	jmpi	4f880 <__swbuf_r>
   4dd38:	280d883a 	mov	r6,r5
   4dd3c:	01400284 	movi	r5,10
   4dd40:	003ff706 	br	4dd20 <putc+0xbc>

0004dd44 <_realloc_r>:
   4dd44:	defff504 	addi	sp,sp,-44
   4dd48:	dcc00415 	stw	r19,16(sp)
   4dd4c:	dfc00a15 	stw	ra,40(sp)
   4dd50:	df000915 	stw	fp,36(sp)
   4dd54:	ddc00815 	stw	r23,32(sp)
   4dd58:	dd800715 	stw	r22,28(sp)
   4dd5c:	dd400615 	stw	r21,24(sp)
   4dd60:	dd000515 	stw	r20,20(sp)
   4dd64:	dc800315 	stw	r18,12(sp)
   4dd68:	dc400215 	stw	r17,8(sp)
   4dd6c:	dc000115 	stw	r16,4(sp)
   4dd70:	3027883a 	mov	r19,r6
   4dd74:	28008b26 	beq	r5,zero,4dfa4 <_realloc_r+0x260>
   4dd78:	2821883a 	mov	r16,r5
   4dd7c:	202b883a 	mov	r21,r4
   4dd80:	9c4002c4 	addi	r17,r19,11
   4dd84:	0051ba80 	call	51ba8 <__malloc_lock>
   4dd88:	888005f0 	cmpltui	r2,r17,23
   4dd8c:	84bfff17 	ldw	r18,-4(r16)
   4dd90:	1000511e 	bne	r2,zero,4ded8 <_realloc_r+0x194>
   4dd94:	00bffe04 	movi	r2,-8
   4dd98:	88a2703a 	and	r17,r17,r2
   4dd9c:	880b883a 	mov	r5,r17
   4dda0:	88005016 	blt	r17,zero,4dee4 <_realloc_r+0x1a0>
   4dda4:	8cc04f36 	bltu	r17,r19,4dee4 <_realloc_r+0x1a0>
   4dda8:	00ffff04 	movi	r3,-4
   4ddac:	90e8703a 	and	r20,r18,r3
   4ddb0:	85bffe04 	addi	r22,r16,-8
   4ddb4:	a1403a0e 	bge	r20,r5,4dea0 <_realloc_r+0x15c>
   4ddb8:	07000174 	movhi	fp,5
   4ddbc:	e711e204 	addi	fp,fp,18312
   4ddc0:	e2000217 	ldw	r8,8(fp)
   4ddc4:	b50d883a 	add	r6,r22,r20
   4ddc8:	30800117 	ldw	r2,4(r6)
   4ddcc:	41808e26 	beq	r8,r6,4e008 <_realloc_r+0x2c4>
   4ddd0:	013fff84 	movi	r4,-2
   4ddd4:	1108703a 	and	r4,r2,r4
   4ddd8:	3109883a 	add	r4,r6,r4
   4dddc:	21000117 	ldw	r4,4(r4)
   4dde0:	2100004c 	andi	r4,r4,1
   4dde4:	20004f1e 	bne	r4,zero,4df24 <_realloc_r+0x1e0>
   4dde8:	10c4703a 	and	r2,r2,r3
   4ddec:	a087883a 	add	r3,r20,r2
   4ddf0:	1940bd0e 	bge	r3,r5,4e0e8 <_realloc_r+0x3a4>
   4ddf4:	9480004c 	andi	r18,r18,1
   4ddf8:	90004c1e 	bne	r18,zero,4df2c <_realloc_r+0x1e8>
   4ddfc:	81fffe17 	ldw	r7,-8(r16)
   4de00:	00ffff04 	movi	r3,-4
   4de04:	b1cfc83a 	sub	r7,r22,r7
   4de08:	3c800117 	ldw	r18,4(r7)
   4de0c:	90c6703a 	and	r3,r18,r3
   4de10:	30000426 	beq	r6,zero,4de24 <_realloc_r+0xe0>
   4de14:	a0c9883a 	add	r4,r20,r3
   4de18:	20af883a 	add	r23,r4,r2
   4de1c:	4180bc26 	beq	r8,r6,4e110 <_realloc_r+0x3cc>
   4de20:	b940930e 	bge	r23,r5,4e070 <_realloc_r+0x32c>
   4de24:	38004126 	beq	r7,zero,4df2c <_realloc_r+0x1e8>
   4de28:	a0ef883a 	add	r23,r20,r3
   4de2c:	b9403f16 	blt	r23,r5,4df2c <_realloc_r+0x1e8>
   4de30:	38800317 	ldw	r2,12(r7)
   4de34:	38c00217 	ldw	r3,8(r7)
   4de38:	a1bfff04 	addi	r6,r20,-4
   4de3c:	31400968 	cmpgeui	r5,r6,37
   4de40:	18800315 	stw	r2,12(r3)
   4de44:	10c00215 	stw	r3,8(r2)
   4de48:	39000204 	addi	r4,r7,8
   4de4c:	2800e11e 	bne	r5,zero,4e1d4 <_realloc_r+0x490>
   4de50:	30800530 	cmpltui	r2,r6,20
   4de54:	1000dd1e 	bne	r2,zero,4e1cc <_realloc_r+0x488>
   4de58:	80c00017 	ldw	r3,0(r16)
   4de5c:	30800728 	cmpgeui	r2,r6,28
   4de60:	38c00215 	stw	r3,8(r7)
   4de64:	80c00117 	ldw	r3,4(r16)
   4de68:	38c00315 	stw	r3,12(r7)
   4de6c:	1000e21e 	bne	r2,zero,4e1f8 <_realloc_r+0x4b4>
   4de70:	84000204 	addi	r16,r16,8
   4de74:	38800404 	addi	r2,r7,16
   4de78:	80c00017 	ldw	r3,0(r16)
   4de7c:	b829883a 	mov	r20,r23
   4de80:	382d883a 	mov	r22,r7
   4de84:	10c00015 	stw	r3,0(r2)
   4de88:	80c00117 	ldw	r3,4(r16)
   4de8c:	10c00115 	stw	r3,4(r2)
   4de90:	80c00217 	ldw	r3,8(r16)
   4de94:	2021883a 	mov	r16,r4
   4de98:	10c00215 	stw	r3,8(r2)
   4de9c:	3c800117 	ldw	r18,4(r7)
   4dea0:	a447c83a 	sub	r3,r20,r17
   4dea4:	19000430 	cmpltui	r4,r3,16
   4dea8:	9480004c 	andi	r18,r18,1
   4deac:	b505883a 	add	r2,r22,r20
   4deb0:	20004926 	beq	r4,zero,4dfd8 <_realloc_r+0x294>
   4deb4:	a4a4b03a 	or	r18,r20,r18
   4deb8:	b4800115 	stw	r18,4(r22)
   4debc:	10c00117 	ldw	r3,4(r2)
   4dec0:	18c00054 	ori	r3,r3,1
   4dec4:	10c00115 	stw	r3,4(r2)
   4dec8:	a809883a 	mov	r4,r21
   4decc:	0051bcc0 	call	51bcc <__malloc_unlock>
   4ded0:	8027883a 	mov	r19,r16
   4ded4:	00000606 	br	4def0 <_realloc_r+0x1ac>
   4ded8:	04400404 	movi	r17,16
   4dedc:	01400404 	movi	r5,16
   4dee0:	8cffb12e 	bgeu	r17,r19,4dda8 <_realloc_r+0x64>
   4dee4:	00800304 	movi	r2,12
   4dee8:	a8800015 	stw	r2,0(r21)
   4deec:	0027883a 	mov	r19,zero
   4def0:	9805883a 	mov	r2,r19
   4def4:	dfc00a17 	ldw	ra,40(sp)
   4def8:	df000917 	ldw	fp,36(sp)
   4defc:	ddc00817 	ldw	r23,32(sp)
   4df00:	dd800717 	ldw	r22,28(sp)
   4df04:	dd400617 	ldw	r21,24(sp)
   4df08:	dd000517 	ldw	r20,20(sp)
   4df0c:	dcc00417 	ldw	r19,16(sp)
   4df10:	dc800317 	ldw	r18,12(sp)
   4df14:	dc400217 	ldw	r17,8(sp)
   4df18:	dc000117 	ldw	r16,4(sp)
   4df1c:	dec00b04 	addi	sp,sp,44
   4df20:	f800283a 	ret
   4df24:	9480004c 	andi	r18,r18,1
   4df28:	90006a26 	beq	r18,zero,4e0d4 <_realloc_r+0x390>
   4df2c:	980b883a 	mov	r5,r19
   4df30:	a809883a 	mov	r4,r21
   4df34:	004be800 	call	4be80 <_malloc_r>
   4df38:	1027883a 	mov	r19,r2
   4df3c:	10001626 	beq	r2,zero,4df98 <_realloc_r+0x254>
   4df40:	84bfff17 	ldw	r18,-4(r16)
   4df44:	10fffe04 	addi	r3,r2,-8
   4df48:	00bfff84 	movi	r2,-2
   4df4c:	9084703a 	and	r2,r18,r2
   4df50:	b085883a 	add	r2,r22,r2
   4df54:	10c05a26 	beq	r2,r3,4e0c0 <_realloc_r+0x37c>
   4df58:	a1bfff04 	addi	r6,r20,-4
   4df5c:	30800968 	cmpgeui	r2,r6,37
   4df60:	1000671e 	bne	r2,zero,4e100 <_realloc_r+0x3bc>
   4df64:	30800530 	cmpltui	r2,r6,20
   4df68:	10003826 	beq	r2,zero,4e04c <_realloc_r+0x308>
   4df6c:	9805883a 	mov	r2,r19
   4df70:	8007883a 	mov	r3,r16
   4df74:	19000017 	ldw	r4,0(r3)
   4df78:	11000015 	stw	r4,0(r2)
   4df7c:	19000117 	ldw	r4,4(r3)
   4df80:	11000115 	stw	r4,4(r2)
   4df84:	18c00217 	ldw	r3,8(r3)
   4df88:	10c00215 	stw	r3,8(r2)
   4df8c:	800b883a 	mov	r5,r16
   4df90:	a809883a 	mov	r4,r21
   4df94:	004b3280 	call	4b328 <_free_r>
   4df98:	a809883a 	mov	r4,r21
   4df9c:	0051bcc0 	call	51bcc <__malloc_unlock>
   4dfa0:	003fd306 	br	4def0 <_realloc_r+0x1ac>
   4dfa4:	300b883a 	mov	r5,r6
   4dfa8:	dfc00a17 	ldw	ra,40(sp)
   4dfac:	df000917 	ldw	fp,36(sp)
   4dfb0:	ddc00817 	ldw	r23,32(sp)
   4dfb4:	dd800717 	ldw	r22,28(sp)
   4dfb8:	dd400617 	ldw	r21,24(sp)
   4dfbc:	dd000517 	ldw	r20,20(sp)
   4dfc0:	dcc00417 	ldw	r19,16(sp)
   4dfc4:	dc800317 	ldw	r18,12(sp)
   4dfc8:	dc400217 	ldw	r17,8(sp)
   4dfcc:	dc000117 	ldw	r16,4(sp)
   4dfd0:	dec00b04 	addi	sp,sp,44
   4dfd4:	004be801 	jmpi	4be80 <_malloc_r>
   4dfd8:	9464b03a 	or	r18,r18,r17
   4dfdc:	b4800115 	stw	r18,4(r22)
   4dfe0:	b44b883a 	add	r5,r22,r17
   4dfe4:	18c00054 	ori	r3,r3,1
   4dfe8:	28c00115 	stw	r3,4(r5)
   4dfec:	10c00117 	ldw	r3,4(r2)
   4dff0:	29400204 	addi	r5,r5,8
   4dff4:	a809883a 	mov	r4,r21
   4dff8:	18c00054 	ori	r3,r3,1
   4dffc:	10c00115 	stw	r3,4(r2)
   4e000:	004b3280 	call	4b328 <_free_r>
   4e004:	003fb006 	br	4dec8 <_realloc_r+0x184>
   4e008:	10c4703a 	and	r2,r2,r3
   4e00c:	a087883a 	add	r3,r20,r2
   4e010:	89000404 	addi	r4,r17,16
   4e014:	193f7716 	blt	r3,r4,4ddf4 <_realloc_r+0xb0>
   4e018:	b46d883a 	add	r22,r22,r17
   4e01c:	1c45c83a 	sub	r2,r3,r17
   4e020:	e5800215 	stw	r22,8(fp)
   4e024:	10800054 	ori	r2,r2,1
   4e028:	b0800115 	stw	r2,4(r22)
   4e02c:	80bfff17 	ldw	r2,-4(r16)
   4e030:	a809883a 	mov	r4,r21
   4e034:	8027883a 	mov	r19,r16
   4e038:	1080004c 	andi	r2,r2,1
   4e03c:	1444b03a 	or	r2,r2,r17
   4e040:	80bfff15 	stw	r2,-4(r16)
   4e044:	0051bcc0 	call	51bcc <__malloc_unlock>
   4e048:	003fa906 	br	4def0 <_realloc_r+0x1ac>
   4e04c:	80c00017 	ldw	r3,0(r16)
   4e050:	30800728 	cmpgeui	r2,r6,28
   4e054:	98c00015 	stw	r3,0(r19)
   4e058:	80c00117 	ldw	r3,4(r16)
   4e05c:	98c00115 	stw	r3,4(r19)
   4e060:	1000511e 	bne	r2,zero,4e1a8 <_realloc_r+0x464>
   4e064:	80c00204 	addi	r3,r16,8
   4e068:	98800204 	addi	r2,r19,8
   4e06c:	003fc106 	br	4df74 <_realloc_r+0x230>
   4e070:	30800317 	ldw	r2,12(r6)
   4e074:	30c00217 	ldw	r3,8(r6)
   4e078:	a1bfff04 	addi	r6,r20,-4
   4e07c:	31400968 	cmpgeui	r5,r6,37
   4e080:	18800315 	stw	r2,12(r3)
   4e084:	10c00215 	stw	r3,8(r2)
   4e088:	38c00217 	ldw	r3,8(r7)
   4e08c:	38800317 	ldw	r2,12(r7)
   4e090:	39000204 	addi	r4,r7,8
   4e094:	18800315 	stw	r2,12(r3)
   4e098:	10c00215 	stw	r3,8(r2)
   4e09c:	283f6c26 	beq	r5,zero,4de50 <_realloc_r+0x10c>
   4e0a0:	800b883a 	mov	r5,r16
   4e0a4:	d9c00015 	stw	r7,0(sp)
   4e0a8:	004c8300 	call	4c830 <memmove>
   4e0ac:	d9c00017 	ldw	r7,0(sp)
   4e0b0:	1021883a 	mov	r16,r2
   4e0b4:	b829883a 	mov	r20,r23
   4e0b8:	382d883a 	mov	r22,r7
   4e0bc:	003f7806 	br	4dea0 <_realloc_r+0x15c>
   4e0c0:	98bfff17 	ldw	r2,-4(r19)
   4e0c4:	00ffff04 	movi	r3,-4
   4e0c8:	10c4703a 	and	r2,r2,r3
   4e0cc:	a0a9883a 	add	r20,r20,r2
   4e0d0:	003f7306 	br	4dea0 <_realloc_r+0x15c>
   4e0d4:	81fffe17 	ldw	r7,-8(r16)
   4e0d8:	b1cfc83a 	sub	r7,r22,r7
   4e0dc:	38800117 	ldw	r2,4(r7)
   4e0e0:	10c6703a 	and	r3,r2,r3
   4e0e4:	003f4f06 	br	4de24 <_realloc_r+0xe0>
   4e0e8:	30800317 	ldw	r2,12(r6)
   4e0ec:	31000217 	ldw	r4,8(r6)
   4e0f0:	1829883a 	mov	r20,r3
   4e0f4:	20800315 	stw	r2,12(r4)
   4e0f8:	11000215 	stw	r4,8(r2)
   4e0fc:	003f6806 	br	4dea0 <_realloc_r+0x15c>
   4e100:	800b883a 	mov	r5,r16
   4e104:	9809883a 	mov	r4,r19
   4e108:	004c8300 	call	4c830 <memmove>
   4e10c:	003f9f06 	br	4df8c <_realloc_r+0x248>
   4e110:	88800404 	addi	r2,r17,16
   4e114:	b8bf4316 	blt	r23,r2,4de24 <_realloc_r+0xe0>
   4e118:	38800317 	ldw	r2,12(r7)
   4e11c:	38c00217 	ldw	r3,8(r7)
   4e120:	a1bfff04 	addi	r6,r20,-4
   4e124:	31000968 	cmpgeui	r4,r6,37
   4e128:	18800315 	stw	r2,12(r3)
   4e12c:	10c00215 	stw	r3,8(r2)
   4e130:	3cc00204 	addi	r19,r7,8
   4e134:	2000421e 	bne	r4,zero,4e240 <_realloc_r+0x4fc>
   4e138:	30800530 	cmpltui	r2,r6,20
   4e13c:	10003e1e 	bne	r2,zero,4e238 <_realloc_r+0x4f4>
   4e140:	80c00017 	ldw	r3,0(r16)
   4e144:	30800728 	cmpgeui	r2,r6,28
   4e148:	38c00215 	stw	r3,8(r7)
   4e14c:	80c00117 	ldw	r3,4(r16)
   4e150:	38c00315 	stw	r3,12(r7)
   4e154:	1000471e 	bne	r2,zero,4e274 <_realloc_r+0x530>
   4e158:	84000204 	addi	r16,r16,8
   4e15c:	38800404 	addi	r2,r7,16
   4e160:	80c00017 	ldw	r3,0(r16)
   4e164:	10c00015 	stw	r3,0(r2)
   4e168:	80c00117 	ldw	r3,4(r16)
   4e16c:	10c00115 	stw	r3,4(r2)
   4e170:	80c00217 	ldw	r3,8(r16)
   4e174:	10c00215 	stw	r3,8(r2)
   4e178:	3c47883a 	add	r3,r7,r17
   4e17c:	bc45c83a 	sub	r2,r23,r17
   4e180:	e0c00215 	stw	r3,8(fp)
   4e184:	10800054 	ori	r2,r2,1
   4e188:	18800115 	stw	r2,4(r3)
   4e18c:	38800117 	ldw	r2,4(r7)
   4e190:	a809883a 	mov	r4,r21
   4e194:	1080004c 	andi	r2,r2,1
   4e198:	1444b03a 	or	r2,r2,r17
   4e19c:	38800115 	stw	r2,4(r7)
   4e1a0:	0051bcc0 	call	51bcc <__malloc_unlock>
   4e1a4:	003f5206 	br	4def0 <_realloc_r+0x1ac>
   4e1a8:	80800217 	ldw	r2,8(r16)
   4e1ac:	31800920 	cmpeqi	r6,r6,36
   4e1b0:	98800215 	stw	r2,8(r19)
   4e1b4:	80800317 	ldw	r2,12(r16)
   4e1b8:	98800315 	stw	r2,12(r19)
   4e1bc:	3000171e 	bne	r6,zero,4e21c <_realloc_r+0x4d8>
   4e1c0:	80c00404 	addi	r3,r16,16
   4e1c4:	98800404 	addi	r2,r19,16
   4e1c8:	003f6a06 	br	4df74 <_realloc_r+0x230>
   4e1cc:	2005883a 	mov	r2,r4
   4e1d0:	003f2906 	br	4de78 <_realloc_r+0x134>
   4e1d4:	800b883a 	mov	r5,r16
   4e1d8:	d9c00015 	stw	r7,0(sp)
   4e1dc:	004c8300 	call	4c830 <memmove>
   4e1e0:	d9c00017 	ldw	r7,0(sp)
   4e1e4:	1021883a 	mov	r16,r2
   4e1e8:	b829883a 	mov	r20,r23
   4e1ec:	3c800117 	ldw	r18,4(r7)
   4e1f0:	382d883a 	mov	r22,r7
   4e1f4:	003f2a06 	br	4dea0 <_realloc_r+0x15c>
   4e1f8:	80800217 	ldw	r2,8(r16)
   4e1fc:	31800920 	cmpeqi	r6,r6,36
   4e200:	38800415 	stw	r2,16(r7)
   4e204:	80800317 	ldw	r2,12(r16)
   4e208:	38800515 	stw	r2,20(r7)
   4e20c:	3000121e 	bne	r6,zero,4e258 <_realloc_r+0x514>
   4e210:	84000404 	addi	r16,r16,16
   4e214:	38800604 	addi	r2,r7,24
   4e218:	003f1706 	br	4de78 <_realloc_r+0x134>
   4e21c:	81000417 	ldw	r4,16(r16)
   4e220:	80c00604 	addi	r3,r16,24
   4e224:	98800604 	addi	r2,r19,24
   4e228:	99000415 	stw	r4,16(r19)
   4e22c:	81000517 	ldw	r4,20(r16)
   4e230:	99000515 	stw	r4,20(r19)
   4e234:	003f4f06 	br	4df74 <_realloc_r+0x230>
   4e238:	9805883a 	mov	r2,r19
   4e23c:	003fc806 	br	4e160 <_realloc_r+0x41c>
   4e240:	800b883a 	mov	r5,r16
   4e244:	9809883a 	mov	r4,r19
   4e248:	d9c00015 	stw	r7,0(sp)
   4e24c:	004c8300 	call	4c830 <memmove>
   4e250:	d9c00017 	ldw	r7,0(sp)
   4e254:	003fc806 	br	4e178 <_realloc_r+0x434>
   4e258:	80c00417 	ldw	r3,16(r16)
   4e25c:	84000604 	addi	r16,r16,24
   4e260:	38800804 	addi	r2,r7,32
   4e264:	38c00615 	stw	r3,24(r7)
   4e268:	80ffff17 	ldw	r3,-4(r16)
   4e26c:	38c00715 	stw	r3,28(r7)
   4e270:	003f0106 	br	4de78 <_realloc_r+0x134>
   4e274:	80800217 	ldw	r2,8(r16)
   4e278:	31800920 	cmpeqi	r6,r6,36
   4e27c:	38800415 	stw	r2,16(r7)
   4e280:	80800317 	ldw	r2,12(r16)
   4e284:	38800515 	stw	r2,20(r7)
   4e288:	3000031e 	bne	r6,zero,4e298 <_realloc_r+0x554>
   4e28c:	84000404 	addi	r16,r16,16
   4e290:	38800604 	addi	r2,r7,24
   4e294:	003fb206 	br	4e160 <_realloc_r+0x41c>
   4e298:	80c00417 	ldw	r3,16(r16)
   4e29c:	84000604 	addi	r16,r16,24
   4e2a0:	38800804 	addi	r2,r7,32
   4e2a4:	38c00615 	stw	r3,24(r7)
   4e2a8:	80ffff17 	ldw	r3,-4(r16)
   4e2ac:	38c00715 	stw	r3,28(r7)
   4e2b0:	003fab06 	br	4e160 <_realloc_r+0x41c>

0004e2b4 <_sbrk_r>:
   4e2b4:	defffe04 	addi	sp,sp,-8
   4e2b8:	dc000015 	stw	r16,0(sp)
   4e2bc:	00800174 	movhi	r2,5
   4e2c0:	2021883a 	mov	r16,r4
   4e2c4:	2809883a 	mov	r4,r5
   4e2c8:	dfc00115 	stw	ra,4(sp)
   4e2cc:	101ec815 	stw	zero,31520(r2)
   4e2d0:	0051d800 	call	51d80 <sbrk>
   4e2d4:	10ffffd8 	cmpnei	r3,r2,-1
   4e2d8:	18000426 	beq	r3,zero,4e2ec <_sbrk_r+0x38>
   4e2dc:	dfc00117 	ldw	ra,4(sp)
   4e2e0:	dc000017 	ldw	r16,0(sp)
   4e2e4:	dec00204 	addi	sp,sp,8
   4e2e8:	f800283a 	ret
   4e2ec:	00c00174 	movhi	r3,5
   4e2f0:	18dec817 	ldw	r3,31520(r3)
   4e2f4:	183ff926 	beq	r3,zero,4e2dc <_sbrk_r+0x28>
   4e2f8:	80c00015 	stw	r3,0(r16)
   4e2fc:	dfc00117 	ldw	ra,4(sp)
   4e300:	dc000017 	ldw	r16,0(sp)
   4e304:	dec00204 	addi	sp,sp,8
   4e308:	f800283a 	ret

0004e30c <__sread>:
   4e30c:	defffe04 	addi	sp,sp,-8
   4e310:	dc000015 	stw	r16,0(sp)
   4e314:	2821883a 	mov	r16,r5
   4e318:	2940038f 	ldh	r5,14(r5)
   4e31c:	dfc00115 	stw	ra,4(sp)
   4e320:	00502000 	call	50200 <_read_r>
   4e324:	10000716 	blt	r2,zero,4e344 <__sread+0x38>
   4e328:	80c01417 	ldw	r3,80(r16)
   4e32c:	1887883a 	add	r3,r3,r2
   4e330:	80c01415 	stw	r3,80(r16)
   4e334:	dfc00117 	ldw	ra,4(sp)
   4e338:	dc000017 	ldw	r16,0(sp)
   4e33c:	dec00204 	addi	sp,sp,8
   4e340:	f800283a 	ret
   4e344:	80c0030b 	ldhu	r3,12(r16)
   4e348:	18fbffcc 	andi	r3,r3,61439
   4e34c:	80c0030d 	sth	r3,12(r16)
   4e350:	dfc00117 	ldw	ra,4(sp)
   4e354:	dc000017 	ldw	r16,0(sp)
   4e358:	dec00204 	addi	sp,sp,8
   4e35c:	f800283a 	ret

0004e360 <__seofread>:
   4e360:	0005883a 	mov	r2,zero
   4e364:	f800283a 	ret

0004e368 <__swrite>:
   4e368:	2880030b 	ldhu	r2,12(r5)
   4e36c:	defffb04 	addi	sp,sp,-20
   4e370:	dcc00315 	stw	r19,12(sp)
   4e374:	dc800215 	stw	r18,8(sp)
   4e378:	dc400115 	stw	r17,4(sp)
   4e37c:	dc000015 	stw	r16,0(sp)
   4e380:	dfc00415 	stw	ra,16(sp)
   4e384:	10c0400c 	andi	r3,r2,256
   4e388:	2821883a 	mov	r16,r5
   4e38c:	2023883a 	mov	r17,r4
   4e390:	3025883a 	mov	r18,r6
   4e394:	3827883a 	mov	r19,r7
   4e398:	18000d1e 	bne	r3,zero,4e3d0 <__swrite+0x68>
   4e39c:	8140038f 	ldh	r5,14(r16)
   4e3a0:	10bbffcc 	andi	r2,r2,61439
   4e3a4:	980f883a 	mov	r7,r19
   4e3a8:	900d883a 	mov	r6,r18
   4e3ac:	8809883a 	mov	r4,r17
   4e3b0:	8080030d 	sth	r2,12(r16)
   4e3b4:	dfc00417 	ldw	ra,16(sp)
   4e3b8:	dcc00317 	ldw	r19,12(sp)
   4e3bc:	dc800217 	ldw	r18,8(sp)
   4e3c0:	dc400117 	ldw	r17,4(sp)
   4e3c4:	dc000017 	ldw	r16,0(sp)
   4e3c8:	dec00504 	addi	sp,sp,20
   4e3cc:	004f9e01 	jmpi	4f9e0 <_write_r>
   4e3d0:	2940038f 	ldh	r5,14(r5)
   4e3d4:	01c00084 	movi	r7,2
   4e3d8:	000d883a 	mov	r6,zero
   4e3dc:	005014c0 	call	5014c <_lseek_r>
   4e3e0:	8080030b 	ldhu	r2,12(r16)
   4e3e4:	003fed06 	br	4e39c <__swrite+0x34>

0004e3e8 <__sseek>:
   4e3e8:	defffe04 	addi	sp,sp,-8
   4e3ec:	dc000015 	stw	r16,0(sp)
   4e3f0:	2821883a 	mov	r16,r5
   4e3f4:	2940038f 	ldh	r5,14(r5)
   4e3f8:	dfc00115 	stw	ra,4(sp)
   4e3fc:	005014c0 	call	5014c <_lseek_r>
   4e400:	10ffffd8 	cmpnei	r3,r2,-1
   4e404:	18000826 	beq	r3,zero,4e428 <__sseek+0x40>
   4e408:	80c0030b 	ldhu	r3,12(r16)
   4e40c:	80801415 	stw	r2,80(r16)
   4e410:	18c40014 	ori	r3,r3,4096
   4e414:	80c0030d 	sth	r3,12(r16)
   4e418:	dfc00117 	ldw	ra,4(sp)
   4e41c:	dc000017 	ldw	r16,0(sp)
   4e420:	dec00204 	addi	sp,sp,8
   4e424:	f800283a 	ret
   4e428:	80c0030b 	ldhu	r3,12(r16)
   4e42c:	18fbffcc 	andi	r3,r3,61439
   4e430:	80c0030d 	sth	r3,12(r16)
   4e434:	dfc00117 	ldw	ra,4(sp)
   4e438:	dc000017 	ldw	r16,0(sp)
   4e43c:	dec00204 	addi	sp,sp,8
   4e440:	f800283a 	ret

0004e444 <__sclose>:
   4e444:	2940038f 	ldh	r5,14(r5)
   4e448:	004fa441 	jmpi	4fa44 <_close_r>

0004e44c <__sprint_r.part.0>:
   4e44c:	28801917 	ldw	r2,100(r5)
   4e450:	defff604 	addi	sp,sp,-40
   4e454:	dcc00315 	stw	r19,12(sp)
   4e458:	dfc00915 	stw	ra,36(sp)
   4e45c:	df000815 	stw	fp,32(sp)
   4e460:	ddc00715 	stw	r23,28(sp)
   4e464:	dd800615 	stw	r22,24(sp)
   4e468:	dd400515 	stw	r21,20(sp)
   4e46c:	dd000415 	stw	r20,16(sp)
   4e470:	dc800215 	stw	r18,8(sp)
   4e474:	dc400115 	stw	r17,4(sp)
   4e478:	dc000015 	stw	r16,0(sp)
   4e47c:	1088000c 	andi	r2,r2,8192
   4e480:	3027883a 	mov	r19,r6
   4e484:	10002c26 	beq	r2,zero,4e538 <__sprint_r.part.0+0xec>
   4e488:	30800217 	ldw	r2,8(r6)
   4e48c:	35000017 	ldw	r20,0(r6)
   4e490:	2821883a 	mov	r16,r5
   4e494:	2023883a 	mov	r17,r4
   4e498:	05bfff04 	movi	r22,-4
   4e49c:	10002426 	beq	r2,zero,4e530 <__sprint_r.part.0+0xe4>
   4e4a0:	a5400117 	ldw	r21,4(r20)
   4e4a4:	a5c00017 	ldw	r23,0(r20)
   4e4a8:	a824d0ba 	srli	r18,r21,2
   4e4ac:	90001b26 	beq	r18,zero,4e51c <__sprint_r.part.0+0xd0>
   4e4b0:	0039883a 	mov	fp,zero
   4e4b4:	00000206 	br	4e4c0 <__sprint_r.part.0+0x74>
   4e4b8:	bdc00104 	addi	r23,r23,4
   4e4bc:	97001626 	beq	r18,fp,4e518 <__sprint_r.part.0+0xcc>
   4e4c0:	b9400017 	ldw	r5,0(r23)
   4e4c4:	800d883a 	mov	r6,r16
   4e4c8:	8809883a 	mov	r4,r17
   4e4cc:	004ff040 	call	4ff04 <_fputwc_r>
   4e4d0:	10bfffe0 	cmpeqi	r2,r2,-1
   4e4d4:	e7000044 	addi	fp,fp,1
   4e4d8:	103ff726 	beq	r2,zero,4e4b8 <__sprint_r.part.0+0x6c>
   4e4dc:	00bfffc4 	movi	r2,-1
   4e4e0:	98000215 	stw	zero,8(r19)
   4e4e4:	98000115 	stw	zero,4(r19)
   4e4e8:	dfc00917 	ldw	ra,36(sp)
   4e4ec:	df000817 	ldw	fp,32(sp)
   4e4f0:	ddc00717 	ldw	r23,28(sp)
   4e4f4:	dd800617 	ldw	r22,24(sp)
   4e4f8:	dd400517 	ldw	r21,20(sp)
   4e4fc:	dd000417 	ldw	r20,16(sp)
   4e500:	dcc00317 	ldw	r19,12(sp)
   4e504:	dc800217 	ldw	r18,8(sp)
   4e508:	dc400117 	ldw	r17,4(sp)
   4e50c:	dc000017 	ldw	r16,0(sp)
   4e510:	dec00a04 	addi	sp,sp,40
   4e514:	f800283a 	ret
   4e518:	98800217 	ldw	r2,8(r19)
   4e51c:	adaa703a 	and	r21,r21,r22
   4e520:	1545c83a 	sub	r2,r2,r21
   4e524:	98800215 	stw	r2,8(r19)
   4e528:	a5000204 	addi	r20,r20,8
   4e52c:	103fdc1e 	bne	r2,zero,4e4a0 <__sprint_r.part.0+0x54>
   4e530:	0005883a 	mov	r2,zero
   4e534:	003fea06 	br	4e4e0 <__sprint_r.part.0+0x94>
   4e538:	004b6240 	call	4b624 <__sfvwrite_r>
   4e53c:	003fe806 	br	4e4e0 <__sprint_r.part.0+0x94>

0004e540 <__sprint_r>:
   4e540:	30c00217 	ldw	r3,8(r6)
   4e544:	18000126 	beq	r3,zero,4e54c <__sprint_r+0xc>
   4e548:	004e44c1 	jmpi	4e44c <__sprint_r.part.0>
   4e54c:	30000115 	stw	zero,4(r6)
   4e550:	0005883a 	mov	r2,zero
   4e554:	f800283a 	ret

0004e558 <___vfiprintf_internal_r>:
   4e558:	deffcf04 	addi	sp,sp,-196
   4e55c:	dd802d15 	stw	r22,180(sp)
   4e560:	dd402c15 	stw	r21,176(sp)
   4e564:	dd002b15 	stw	r20,172(sp)
   4e568:	dfc03015 	stw	ra,192(sp)
   4e56c:	df002f15 	stw	fp,188(sp)
   4e570:	ddc02e15 	stw	r23,184(sp)
   4e574:	dcc02a15 	stw	r19,168(sp)
   4e578:	dc802915 	stw	r18,164(sp)
   4e57c:	dc402815 	stw	r17,160(sp)
   4e580:	dc002715 	stw	r16,156(sp)
   4e584:	d9c00415 	stw	r7,16(sp)
   4e588:	202d883a 	mov	r22,r4
   4e58c:	282b883a 	mov	r21,r5
   4e590:	3029883a 	mov	r20,r6
   4e594:	20000226 	beq	r4,zero,4e5a0 <___vfiprintf_internal_r+0x48>
   4e598:	20800e17 	ldw	r2,56(r4)
   4e59c:	1001b826 	beq	r2,zero,4ec80 <___vfiprintf_internal_r+0x728>
   4e5a0:	a880030b 	ldhu	r2,12(r21)
   4e5a4:	10c8000c 	andi	r3,r2,8192
   4e5a8:	1800061e 	bne	r3,zero,4e5c4 <___vfiprintf_internal_r+0x6c>
   4e5ac:	a8c01917 	ldw	r3,100(r21)
   4e5b0:	0137ffc4 	movi	r4,-8193
   4e5b4:	10880014 	ori	r2,r2,8192
   4e5b8:	1906703a 	and	r3,r3,r4
   4e5bc:	a880030d 	sth	r2,12(r21)
   4e5c0:	a8c01915 	stw	r3,100(r21)
   4e5c4:	10c0020c 	andi	r3,r2,8
   4e5c8:	18010326 	beq	r3,zero,4e9d8 <___vfiprintf_internal_r+0x480>
   4e5cc:	a8c00417 	ldw	r3,16(r21)
   4e5d0:	18010126 	beq	r3,zero,4e9d8 <___vfiprintf_internal_r+0x480>
   4e5d4:	1080068c 	andi	r2,r2,26
   4e5d8:	10800298 	cmpnei	r2,r2,10
   4e5dc:	10010626 	beq	r2,zero,4e9f8 <___vfiprintf_internal_r+0x4a0>
   4e5e0:	dc801704 	addi	r18,sp,92
   4e5e4:	dc800a15 	stw	r18,40(sp)
   4e5e8:	d8000c15 	stw	zero,48(sp)
   4e5ec:	d8000b15 	stw	zero,44(sp)
   4e5f0:	9021883a 	mov	r16,r18
   4e5f4:	d8000515 	stw	zero,20(sp)
   4e5f8:	d8000115 	stw	zero,4(sp)
   4e5fc:	a0800007 	ldb	r2,0(r20)
   4e600:	1000e326 	beq	r2,zero,4e990 <___vfiprintf_internal_r+0x438>
   4e604:	a023883a 	mov	r17,r20
   4e608:	00000306 	br	4e618 <___vfiprintf_internal_r+0xc0>
   4e60c:	88800047 	ldb	r2,1(r17)
   4e610:	8c400044 	addi	r17,r17,1
   4e614:	10012e26 	beq	r2,zero,4ead0 <___vfiprintf_internal_r+0x578>
   4e618:	10800958 	cmpnei	r2,r2,37
   4e61c:	103ffb1e 	bne	r2,zero,4e60c <___vfiprintf_internal_r+0xb4>
   4e620:	8d27c83a 	sub	r19,r17,r20
   4e624:	8d012c1e 	bne	r17,r20,4ead8 <___vfiprintf_internal_r+0x580>
   4e628:	88800003 	ldbu	r2,0(r17)
   4e62c:	10803fcc 	andi	r2,r2,255
   4e630:	1080201c 	xori	r2,r2,128
   4e634:	10bfe004 	addi	r2,r2,-128
   4e638:	1000d526 	beq	r2,zero,4e990 <___vfiprintf_internal_r+0x438>
   4e63c:	88800047 	ldb	r2,1(r17)
   4e640:	8d000044 	addi	r20,r17,1
   4e644:	d8000945 	stb	zero,37(sp)
   4e648:	000b883a 	mov	r5,zero
   4e64c:	000d883a 	mov	r6,zero
   4e650:	023fffc4 	movi	r8,-1
   4e654:	0023883a 	mov	r17,zero
   4e658:	001b883a 	mov	r13,zero
   4e65c:	a5000044 	addi	r20,r20,1
   4e660:	10fff804 	addi	r3,r2,-32
   4e664:	19001668 	cmpgeui	r4,r3,89
   4e668:	20006a1e 	bne	r4,zero,4e814 <___vfiprintf_internal_r+0x2bc>
   4e66c:	180690ba 	slli	r3,r3,2
   4e670:	01000174 	movhi	r4,5
   4e674:	1909883a 	add	r4,r3,r4
   4e678:	20f9a017 	ldw	r3,-6528(r4)
   4e67c:	1800683a 	jmp	r3
   4e680:	0004ee94 	movui	zero,5050
   4e684:	0004e814 	movui	zero,5024
   4e688:	0004e814 	movui	zero,5024
   4e68c:	0004ee88 	cmpgei	zero,zero,5050
   4e690:	0004e814 	movui	zero,5024
   4e694:	0004e814 	movui	zero,5024
   4e698:	0004e814 	movui	zero,5024
   4e69c:	0004e814 	movui	zero,5024
   4e6a0:	0004e814 	movui	zero,5024
   4e6a4:	0004e814 	movui	zero,5024
   4e6a8:	0004ecfc 	xorhi	zero,zero,5043
   4e6ac:	0004ee78 	rdprs	zero,zero,5049
   4e6b0:	0004e814 	movui	zero,5024
   4e6b4:	0004ed14 	movui	zero,5044
   4e6b8:	0004ed20 	cmpeqi	zero,zero,5044
   4e6bc:	0004e814 	movui	zero,5024
   4e6c0:	0004ee6c 	andhi	zero,zero,5049
   4e6c4:	0004e7e4 	muli	zero,zero,5023
   4e6c8:	0004e7e4 	muli	zero,zero,5023
   4e6cc:	0004e7e4 	muli	zero,zero,5023
   4e6d0:	0004e7e4 	muli	zero,zero,5023
   4e6d4:	0004e7e4 	muli	zero,zero,5023
   4e6d8:	0004e7e4 	muli	zero,zero,5023
   4e6dc:	0004e7e4 	muli	zero,zero,5023
   4e6e0:	0004e7e4 	muli	zero,zero,5023
   4e6e4:	0004e7e4 	muli	zero,zero,5023
   4e6e8:	0004e814 	movui	zero,5024
   4e6ec:	0004e814 	movui	zero,5024
   4e6f0:	0004e814 	movui	zero,5024
   4e6f4:	0004e814 	movui	zero,5024
   4e6f8:	0004e814 	movui	zero,5024
   4e6fc:	0004e814 	movui	zero,5024
   4e700:	0004e814 	movui	zero,5024
   4e704:	0004e814 	movui	zero,5024
   4e708:	0004e814 	movui	zero,5024
   4e70c:	0004e814 	movui	zero,5024
   4e710:	0004ed64 	muli	zero,zero,5045
   4e714:	0004e814 	movui	zero,5024
   4e718:	0004e814 	movui	zero,5024
   4e71c:	0004e814 	movui	zero,5024
   4e720:	0004e814 	movui	zero,5024
   4e724:	0004e814 	movui	zero,5024
   4e728:	0004e814 	movui	zero,5024
   4e72c:	0004e814 	movui	zero,5024
   4e730:	0004e814 	movui	zero,5024
   4e734:	0004e814 	movui	zero,5024
   4e738:	0004e814 	movui	zero,5024
   4e73c:	0004ea68 	cmpgeui	zero,zero,5033
   4e740:	0004e814 	movui	zero,5024
   4e744:	0004e814 	movui	zero,5024
   4e748:	0004e814 	movui	zero,5024
   4e74c:	0004e814 	movui	zero,5024
   4e750:	0004e814 	movui	zero,5024
   4e754:	0004ea40 	call	4ea4 <__reset-0x3b15c>
   4e758:	0004e814 	movui	zero,5024
   4e75c:	0004e814 	movui	zero,5024
   4e760:	0004ef64 	muli	zero,zero,5053
   4e764:	0004e814 	movui	zero,5024
   4e768:	0004e814 	movui	zero,5024
   4e76c:	0004e814 	movui	zero,5024
   4e770:	0004e814 	movui	zero,5024
   4e774:	0004e814 	movui	zero,5024
   4e778:	0004e814 	movui	zero,5024
   4e77c:	0004e814 	movui	zero,5024
   4e780:	0004e814 	movui	zero,5024
   4e784:	0004e814 	movui	zero,5024
   4e788:	0004e814 	movui	zero,5024
   4e78c:	0004ef3c 	xorhi	zero,zero,5052
   4e790:	0004ec88 	cmpgei	zero,zero,5042
   4e794:	0004e814 	movui	zero,5024
   4e798:	0004e814 	movui	zero,5024
   4e79c:	0004e814 	movui	zero,5024
   4e7a0:	0004eedc 	xori	zero,zero,5051
   4e7a4:	0004ec88 	cmpgei	zero,zero,5042
   4e7a8:	0004e814 	movui	zero,5024
   4e7ac:	0004e814 	movui	zero,5024
   4e7b0:	0004ef28 	cmpgeui	zero,zero,5052
   4e7b4:	0004e814 	movui	zero,5024
   4e7b8:	0004eee8 	cmpgeui	zero,zero,5051
   4e7bc:	0004ea6c 	andhi	zero,zero,5033
   4e7c0:	0004f058 	cmpnei	zero,zero,5057
   4e7c4:	0004f04c 	andi	zero,zero,5057
   4e7c8:	0004e814 	movui	zero,5024
   4e7cc:	0004eff4 	movhi	zero,5055
   4e7d0:	0004e814 	movui	zero,5024
   4e7d4:	0004ea44 	movi	zero,5033
   4e7d8:	0004e814 	movui	zero,5024
   4e7dc:	0004e814 	movui	zero,5024
   4e7e0:	0004efac 	andhi	zero,zero,5054
   4e7e4:	0023883a 	mov	r17,zero
   4e7e8:	10fff404 	addi	r3,r2,-48
   4e7ec:	a0800007 	ldb	r2,0(r20)
   4e7f0:	8c4002a4 	muli	r17,r17,10
   4e7f4:	a5000044 	addi	r20,r20,1
   4e7f8:	1c63883a 	add	r17,r3,r17
   4e7fc:	10fff404 	addi	r3,r2,-48
   4e800:	190002b0 	cmpltui	r4,r3,10
   4e804:	203ff91e 	bne	r4,zero,4e7ec <___vfiprintf_internal_r+0x294>
   4e808:	10fff804 	addi	r3,r2,-32
   4e80c:	19001668 	cmpgeui	r4,r3,89
   4e810:	203f9626 	beq	r4,zero,4e66c <___vfiprintf_internal_r+0x114>
   4e814:	29403fcc 	andi	r5,r5,255
   4e818:	2803b31e 	bne	r5,zero,4f6e8 <___vfiprintf_internal_r+0x1190>
   4e81c:	10005c26 	beq	r2,zero,4e990 <___vfiprintf_internal_r+0x438>
   4e820:	d8800d05 	stb	r2,52(sp)
   4e824:	d8000945 	stb	zero,37(sp)
   4e828:	05c00044 	movi	r23,1
   4e82c:	07000044 	movi	fp,1
   4e830:	dcc00d04 	addi	r19,sp,52
   4e834:	db400015 	stw	r13,0(sp)
   4e838:	0011883a 	mov	r8,zero
   4e83c:	d8800017 	ldw	r2,0(sp)
   4e840:	1380008c 	andi	r14,r2,2
   4e844:	70000126 	beq	r14,zero,4e84c <___vfiprintf_internal_r+0x2f4>
   4e848:	bdc00084 	addi	r23,r23,2
   4e84c:	d8800017 	ldw	r2,0(sp)
   4e850:	d9000b17 	ldw	r4,44(sp)
   4e854:	1340210c 	andi	r13,r2,132
   4e858:	21800044 	addi	r6,r4,1
   4e85c:	d8800c17 	ldw	r2,48(sp)
   4e860:	300b883a 	mov	r5,r6
   4e864:	6800021e 	bne	r13,zero,4e870 <___vfiprintf_internal_r+0x318>
   4e868:	8dc7c83a 	sub	r3,r17,r23
   4e86c:	00c2e216 	blt	zero,r3,4f3f8 <___vfiprintf_internal_r+0xea0>
   4e870:	d8c00947 	ldb	r3,37(sp)
   4e874:	18000c26 	beq	r3,zero,4e8a8 <___vfiprintf_internal_r+0x350>
   4e878:	d8c00944 	addi	r3,sp,37
   4e87c:	10800044 	addi	r2,r2,1
   4e880:	80c00015 	stw	r3,0(r16)
   4e884:	00c00044 	movi	r3,1
   4e888:	80c00115 	stw	r3,4(r16)
   4e88c:	d8800c15 	stw	r2,48(sp)
   4e890:	d9400b15 	stw	r5,44(sp)
   4e894:	28c00208 	cmpgei	r3,r5,8
   4e898:	18029d1e 	bne	r3,zero,4f310 <___vfiprintf_internal_r+0xdb8>
   4e89c:	2809883a 	mov	r4,r5
   4e8a0:	84000204 	addi	r16,r16,8
   4e8a4:	29400044 	addi	r5,r5,1
   4e8a8:	70001726 	beq	r14,zero,4e908 <___vfiprintf_internal_r+0x3b0>
   4e8ac:	d8c00984 	addi	r3,sp,38
   4e8b0:	10800084 	addi	r2,r2,2
   4e8b4:	80c00015 	stw	r3,0(r16)
   4e8b8:	00c00084 	movi	r3,2
   4e8bc:	80c00115 	stw	r3,4(r16)
   4e8c0:	d8800c15 	stw	r2,48(sp)
   4e8c4:	d9400b15 	stw	r5,44(sp)
   4e8c8:	28c00208 	cmpgei	r3,r5,8
   4e8cc:	1802a726 	beq	r3,zero,4f36c <___vfiprintf_internal_r+0xe14>
   4e8d0:	10032226 	beq	r2,zero,4f55c <___vfiprintf_internal_r+0x1004>
   4e8d4:	d9800a04 	addi	r6,sp,40
   4e8d8:	a80b883a 	mov	r5,r21
   4e8dc:	b009883a 	mov	r4,r22
   4e8e0:	da000315 	stw	r8,12(sp)
   4e8e4:	db400215 	stw	r13,8(sp)
   4e8e8:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4e8ec:	10002a1e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4e8f0:	d9000b17 	ldw	r4,44(sp)
   4e8f4:	d8800c17 	ldw	r2,48(sp)
   4e8f8:	da000317 	ldw	r8,12(sp)
   4e8fc:	db400217 	ldw	r13,8(sp)
   4e900:	9021883a 	mov	r16,r18
   4e904:	21400044 	addi	r5,r4,1
   4e908:	6b402018 	cmpnei	r13,r13,128
   4e90c:	6801ee26 	beq	r13,zero,4f0c8 <___vfiprintf_internal_r+0xb70>
   4e910:	4711c83a 	sub	r8,r8,fp
   4e914:	02022b16 	blt	zero,r8,4f1c4 <___vfiprintf_internal_r+0xc6c>
   4e918:	e085883a 	add	r2,fp,r2
   4e91c:	d9400b15 	stw	r5,44(sp)
   4e920:	84c00015 	stw	r19,0(r16)
   4e924:	87000115 	stw	fp,4(r16)
   4e928:	d8800c15 	stw	r2,48(sp)
   4e92c:	29400208 	cmpgei	r5,r5,8
   4e930:	2801df26 	beq	r5,zero,4f0b0 <___vfiprintf_internal_r+0xb58>
   4e934:	10009826 	beq	r2,zero,4eb98 <___vfiprintf_internal_r+0x640>
   4e938:	d9800a04 	addi	r6,sp,40
   4e93c:	a80b883a 	mov	r5,r21
   4e940:	b009883a 	mov	r4,r22
   4e944:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4e948:	1000131e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4e94c:	d8800c17 	ldw	r2,48(sp)
   4e950:	9021883a 	mov	r16,r18
   4e954:	d8c00017 	ldw	r3,0(sp)
   4e958:	1cc0010c 	andi	r19,r3,4
   4e95c:	98000226 	beq	r19,zero,4e968 <___vfiprintf_internal_r+0x410>
   4e960:	8de7c83a 	sub	r19,r17,r23
   4e964:	04c09316 	blt	zero,r19,4ebb4 <___vfiprintf_internal_r+0x65c>
   4e968:	8dc0010e 	bge	r17,r23,4e970 <___vfiprintf_internal_r+0x418>
   4e96c:	b823883a 	mov	r17,r23
   4e970:	d8c00117 	ldw	r3,4(sp)
   4e974:	1c47883a 	add	r3,r3,r17
   4e978:	d8c00115 	stw	r3,4(sp)
   4e97c:	10025a1e 	bne	r2,zero,4f2e8 <___vfiprintf_internal_r+0xd90>
   4e980:	a0800007 	ldb	r2,0(r20)
   4e984:	d8000b15 	stw	zero,44(sp)
   4e988:	9021883a 	mov	r16,r18
   4e98c:	103f1d1e 	bne	r2,zero,4e604 <___vfiprintf_internal_r+0xac>
   4e990:	d8800c17 	ldw	r2,48(sp)
   4e994:	1003561e 	bne	r2,zero,4f6f0 <___vfiprintf_internal_r+0x1198>
   4e998:	a880030b 	ldhu	r2,12(r21)
   4e99c:	1080100c 	andi	r2,r2,64
   4e9a0:	1003711e 	bne	r2,zero,4f768 <___vfiprintf_internal_r+0x1210>
   4e9a4:	d8800117 	ldw	r2,4(sp)
   4e9a8:	dfc03017 	ldw	ra,192(sp)
   4e9ac:	df002f17 	ldw	fp,188(sp)
   4e9b0:	ddc02e17 	ldw	r23,184(sp)
   4e9b4:	dd802d17 	ldw	r22,180(sp)
   4e9b8:	dd402c17 	ldw	r21,176(sp)
   4e9bc:	dd002b17 	ldw	r20,172(sp)
   4e9c0:	dcc02a17 	ldw	r19,168(sp)
   4e9c4:	dc802917 	ldw	r18,164(sp)
   4e9c8:	dc402817 	ldw	r17,160(sp)
   4e9cc:	dc002717 	ldw	r16,156(sp)
   4e9d0:	dec03104 	addi	sp,sp,196
   4e9d4:	f800283a 	ret
   4e9d8:	a80b883a 	mov	r5,r21
   4e9dc:	b009883a 	mov	r4,r22
   4e9e0:	00490c00 	call	490c0 <__swsetup_r>
   4e9e4:	1003601e 	bne	r2,zero,4f768 <___vfiprintf_internal_r+0x1210>
   4e9e8:	a880030b 	ldhu	r2,12(r21)
   4e9ec:	1080068c 	andi	r2,r2,26
   4e9f0:	10800298 	cmpnei	r2,r2,10
   4e9f4:	103efa1e 	bne	r2,zero,4e5e0 <___vfiprintf_internal_r+0x88>
   4e9f8:	a880038f 	ldh	r2,14(r21)
   4e9fc:	103ef816 	blt	r2,zero,4e5e0 <___vfiprintf_internal_r+0x88>
   4ea00:	d9c00417 	ldw	r7,16(sp)
   4ea04:	a00d883a 	mov	r6,r20
   4ea08:	a80b883a 	mov	r5,r21
   4ea0c:	b009883a 	mov	r4,r22
   4ea10:	dfc03017 	ldw	ra,192(sp)
   4ea14:	df002f17 	ldw	fp,188(sp)
   4ea18:	ddc02e17 	ldw	r23,184(sp)
   4ea1c:	dd802d17 	ldw	r22,180(sp)
   4ea20:	dd402c17 	ldw	r21,176(sp)
   4ea24:	dd002b17 	ldw	r20,172(sp)
   4ea28:	dcc02a17 	ldw	r19,168(sp)
   4ea2c:	dc802917 	ldw	r18,164(sp)
   4ea30:	dc402817 	ldw	r17,160(sp)
   4ea34:	dc002717 	ldw	r16,156(sp)
   4ea38:	dec03104 	addi	sp,sp,196
   4ea3c:	004f7c01 	jmpi	4f7c0 <__sbprintf>
   4ea40:	6b400414 	ori	r13,r13,16
   4ea44:	6880080c 	andi	r2,r13,32
   4ea48:	10004726 	beq	r2,zero,4eb68 <___vfiprintf_internal_r+0x610>
   4ea4c:	d8c00417 	ldw	r3,16(sp)
   4ea50:	00800044 	movi	r2,1
   4ea54:	1dc00017 	ldw	r23,0(r3)
   4ea58:	1f000117 	ldw	fp,4(r3)
   4ea5c:	18c00204 	addi	r3,r3,8
   4ea60:	d8c00415 	stw	r3,16(sp)
   4ea64:	00000906 	br	4ea8c <___vfiprintf_internal_r+0x534>
   4ea68:	6b400414 	ori	r13,r13,16
   4ea6c:	6880080c 	andi	r2,r13,32
   4ea70:	10003126 	beq	r2,zero,4eb38 <___vfiprintf_internal_r+0x5e0>
   4ea74:	d8c00417 	ldw	r3,16(sp)
   4ea78:	0005883a 	mov	r2,zero
   4ea7c:	1dc00017 	ldw	r23,0(r3)
   4ea80:	1f000117 	ldw	fp,4(r3)
   4ea84:	18c00204 	addi	r3,r3,8
   4ea88:	d8c00415 	stw	r3,16(sp)
   4ea8c:	001d883a 	mov	r14,zero
   4ea90:	db800945 	stb	r14,37(sp)
   4ea94:	40ffffe0 	cmpeqi	r3,r8,-1
   4ea98:	1800ce1e 	bne	r3,zero,4edd4 <___vfiprintf_internal_r+0x87c>
   4ea9c:	04ffdfc4 	movi	r19,-129
   4eaa0:	6cc8703a 	and	r4,r13,r19
   4eaa4:	bf06b03a 	or	r3,r23,fp
   4eaa8:	d9000015 	stw	r4,0(sp)
   4eaac:	1802331e 	bne	r3,zero,4f37c <___vfiprintf_internal_r+0xe24>
   4eab0:	4001f81e 	bne	r8,zero,4f294 <___vfiprintf_internal_r+0xd3c>
   4eab4:	1002a01e 	bne	r2,zero,4f538 <___vfiprintf_internal_r+0xfe0>
   4eab8:	6f00004c 	andi	fp,r13,1
   4eabc:	e002c426 	beq	fp,zero,4f5d0 <___vfiprintf_internal_r+0x1078>
   4eac0:	00800c04 	movi	r2,48
   4eac4:	d88016c5 	stb	r2,91(sp)
   4eac8:	dcc016c4 	addi	r19,sp,91
   4eacc:	0000de06 	br	4ee48 <___vfiprintf_internal_r+0x8f0>
   4ead0:	8d27c83a 	sub	r19,r17,r20
   4ead4:	8d3fae26 	beq	r17,r20,4e990 <___vfiprintf_internal_r+0x438>
   4ead8:	d8c00c17 	ldw	r3,48(sp)
   4eadc:	d8800b17 	ldw	r2,44(sp)
   4eae0:	85000015 	stw	r20,0(r16)
   4eae4:	98c7883a 	add	r3,r19,r3
   4eae8:	10800044 	addi	r2,r2,1
   4eaec:	d8800b15 	stw	r2,44(sp)
   4eaf0:	84c00115 	stw	r19,4(r16)
   4eaf4:	d8c00c15 	stw	r3,48(sp)
   4eaf8:	10800208 	cmpgei	r2,r2,8
   4eafc:	1000061e 	bne	r2,zero,4eb18 <___vfiprintf_internal_r+0x5c0>
   4eb00:	84000204 	addi	r16,r16,8
   4eb04:	d8c00117 	ldw	r3,4(sp)
   4eb08:	88800003 	ldbu	r2,0(r17)
   4eb0c:	1cc7883a 	add	r3,r3,r19
   4eb10:	d8c00115 	stw	r3,4(sp)
   4eb14:	003ec506 	br	4e62c <___vfiprintf_internal_r+0xd4>
   4eb18:	18028326 	beq	r3,zero,4f528 <___vfiprintf_internal_r+0xfd0>
   4eb1c:	d9800a04 	addi	r6,sp,40
   4eb20:	a80b883a 	mov	r5,r21
   4eb24:	b009883a 	mov	r4,r22
   4eb28:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4eb2c:	103f9a1e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4eb30:	9021883a 	mov	r16,r18
   4eb34:	003ff306 	br	4eb04 <___vfiprintf_internal_r+0x5ac>
   4eb38:	d8c00417 	ldw	r3,16(sp)
   4eb3c:	6880040c 	andi	r2,r13,16
   4eb40:	1dc00017 	ldw	r23,0(r3)
   4eb44:	18c00104 	addi	r3,r3,4
   4eb48:	d8c00415 	stw	r3,16(sp)
   4eb4c:	1000031e 	bne	r2,zero,4eb5c <___vfiprintf_internal_r+0x604>
   4eb50:	6880100c 	andi	r2,r13,64
   4eb54:	10000126 	beq	r2,zero,4eb5c <___vfiprintf_internal_r+0x604>
   4eb58:	bdffffcc 	andi	r23,r23,65535
   4eb5c:	0039883a 	mov	fp,zero
   4eb60:	0005883a 	mov	r2,zero
   4eb64:	003fc906 	br	4ea8c <___vfiprintf_internal_r+0x534>
   4eb68:	d8c00417 	ldw	r3,16(sp)
   4eb6c:	6880040c 	andi	r2,r13,16
   4eb70:	1dc00017 	ldw	r23,0(r3)
   4eb74:	18c00104 	addi	r3,r3,4
   4eb78:	d8c00415 	stw	r3,16(sp)
   4eb7c:	1000031e 	bne	r2,zero,4eb8c <___vfiprintf_internal_r+0x634>
   4eb80:	6880100c 	andi	r2,r13,64
   4eb84:	10000126 	beq	r2,zero,4eb8c <___vfiprintf_internal_r+0x634>
   4eb88:	bdffffcc 	andi	r23,r23,65535
   4eb8c:	0039883a 	mov	fp,zero
   4eb90:	00800044 	movi	r2,1
   4eb94:	003fbd06 	br	4ea8c <___vfiprintf_internal_r+0x534>
   4eb98:	d8c00017 	ldw	r3,0(sp)
   4eb9c:	d8000b15 	stw	zero,44(sp)
   4eba0:	1cc0010c 	andi	r19,r3,4
   4eba4:	98024f26 	beq	r19,zero,4f4e4 <___vfiprintf_internal_r+0xf8c>
   4eba8:	8de7c83a 	sub	r19,r17,r23
   4ebac:	04c24d0e 	bge	zero,r19,4f4e4 <___vfiprintf_internal_r+0xf8c>
   4ebb0:	9021883a 	mov	r16,r18
   4ebb4:	98c00450 	cmplti	r3,r19,17
   4ebb8:	d9000b17 	ldw	r4,44(sp)
   4ebbc:	01c00174 	movhi	r7,5
   4ebc0:	1802e31e 	bne	r3,zero,4f750 <___vfiprintf_internal_r+0x11f8>
   4ebc4:	39d01504 	addi	r7,r7,16468
   4ebc8:	07000404 	movi	fp,16
   4ebcc:	00000606 	br	4ebe8 <___vfiprintf_internal_r+0x690>
   4ebd0:	21400084 	addi	r5,r4,2
   4ebd4:	84000204 	addi	r16,r16,8
   4ebd8:	1809883a 	mov	r4,r3
   4ebdc:	9cfffc04 	addi	r19,r19,-16
   4ebe0:	98c00448 	cmpgei	r3,r19,17
   4ebe4:	18001726 	beq	r3,zero,4ec44 <___vfiprintf_internal_r+0x6ec>
   4ebe8:	20c00044 	addi	r3,r4,1
   4ebec:	10800404 	addi	r2,r2,16
   4ebf0:	81c00015 	stw	r7,0(r16)
   4ebf4:	87000115 	stw	fp,4(r16)
   4ebf8:	d8800c15 	stw	r2,48(sp)
   4ebfc:	d8c00b15 	stw	r3,44(sp)
   4ec00:	19400208 	cmpgei	r5,r3,8
   4ec04:	283ff226 	beq	r5,zero,4ebd0 <___vfiprintf_internal_r+0x678>
   4ec08:	d9800a04 	addi	r6,sp,40
   4ec0c:	a80b883a 	mov	r5,r21
   4ec10:	b009883a 	mov	r4,r22
   4ec14:	10012826 	beq	r2,zero,4f0b8 <___vfiprintf_internal_r+0xb60>
   4ec18:	d9c00015 	stw	r7,0(sp)
   4ec1c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4ec20:	103f5d1e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4ec24:	d9000b17 	ldw	r4,44(sp)
   4ec28:	9cfffc04 	addi	r19,r19,-16
   4ec2c:	98c00448 	cmpgei	r3,r19,17
   4ec30:	d8800c17 	ldw	r2,48(sp)
   4ec34:	d9c00017 	ldw	r7,0(sp)
   4ec38:	9021883a 	mov	r16,r18
   4ec3c:	21400044 	addi	r5,r4,1
   4ec40:	183fe91e 	bne	r3,zero,4ebe8 <___vfiprintf_internal_r+0x690>
   4ec44:	14c5883a 	add	r2,r2,r19
   4ec48:	d9400b15 	stw	r5,44(sp)
   4ec4c:	81c00015 	stw	r7,0(r16)
   4ec50:	84c00115 	stw	r19,4(r16)
   4ec54:	d8800c15 	stw	r2,48(sp)
   4ec58:	29400210 	cmplti	r5,r5,8
   4ec5c:	283f421e 	bne	r5,zero,4e968 <___vfiprintf_internal_r+0x410>
   4ec60:	10022026 	beq	r2,zero,4f4e4 <___vfiprintf_internal_r+0xf8c>
   4ec64:	d9800a04 	addi	r6,sp,40
   4ec68:	a80b883a 	mov	r5,r21
   4ec6c:	b009883a 	mov	r4,r22
   4ec70:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4ec74:	103f481e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4ec78:	d8800c17 	ldw	r2,48(sp)
   4ec7c:	003f3a06 	br	4e968 <___vfiprintf_internal_r+0x410>
   4ec80:	004b1c40 	call	4b1c4 <__sinit>
   4ec84:	003e4606 	br	4e5a0 <___vfiprintf_internal_r+0x48>
   4ec88:	29403fcc 	andi	r5,r5,255
   4ec8c:	2802ae1e 	bne	r5,zero,4f748 <___vfiprintf_internal_r+0x11f0>
   4ec90:	6880080c 	andi	r2,r13,32
   4ec94:	10003826 	beq	r2,zero,4ed78 <___vfiprintf_internal_r+0x820>
   4ec98:	d8c00417 	ldw	r3,16(sp)
   4ec9c:	18800117 	ldw	r2,4(r3)
   4eca0:	1dc00017 	ldw	r23,0(r3)
   4eca4:	18c00204 	addi	r3,r3,8
   4eca8:	d8c00415 	stw	r3,16(sp)
   4ecac:	1039883a 	mov	fp,r2
   4ecb0:	10003f16 	blt	r2,zero,4edb0 <___vfiprintf_internal_r+0x858>
   4ecb4:	40bfffd8 	cmpnei	r2,r8,-1
   4ecb8:	db800943 	ldbu	r14,37(sp)
   4ecbc:	10000626 	beq	r2,zero,4ecd8 <___vfiprintf_internal_r+0x780>
   4ecc0:	04ffdfc4 	movi	r19,-129
   4ecc4:	6cc6703a 	and	r3,r13,r19
   4ecc8:	bf04b03a 	or	r2,r23,fp
   4eccc:	d8c00015 	stw	r3,0(sp)
   4ecd0:	10021826 	beq	r2,zero,4f534 <___vfiprintf_internal_r+0xfdc>
   4ecd4:	db400017 	ldw	r13,0(sp)
   4ecd8:	e001aa1e 	bne	fp,zero,4f384 <___vfiprintf_internal_r+0xe2c>
   4ecdc:	b88002a8 	cmpgeui	r2,r23,10
   4ece0:	1001a81e 	bne	r2,zero,4f384 <___vfiprintf_internal_r+0xe2c>
   4ece4:	bdc00c04 	addi	r23,r23,48
   4ece8:	ddc016c5 	stb	r23,91(sp)
   4ecec:	db400015 	stw	r13,0(sp)
   4ecf0:	07000044 	movi	fp,1
   4ecf4:	dcc016c4 	addi	r19,sp,91
   4ecf8:	00005306 	br	4ee48 <___vfiprintf_internal_r+0x8f0>
   4ecfc:	d8800417 	ldw	r2,16(sp)
   4ed00:	14400017 	ldw	r17,0(r2)
   4ed04:	10c00104 	addi	r3,r2,4
   4ed08:	88022e0e 	bge	r17,zero,4f5c4 <___vfiprintf_internal_r+0x106c>
   4ed0c:	0463c83a 	sub	r17,zero,r17
   4ed10:	d8c00415 	stw	r3,16(sp)
   4ed14:	a0800007 	ldb	r2,0(r20)
   4ed18:	6b400114 	ori	r13,r13,4
   4ed1c:	003e4f06 	br	4e65c <___vfiprintf_internal_r+0x104>
   4ed20:	a0800007 	ldb	r2,0(r20)
   4ed24:	a1000044 	addi	r4,r20,1
   4ed28:	10c00aa0 	cmpeqi	r3,r2,42
   4ed2c:	1802911e 	bne	r3,zero,4f774 <___vfiprintf_internal_r+0x121c>
   4ed30:	10fff404 	addi	r3,r2,-48
   4ed34:	19c002b0 	cmpltui	r7,r3,10
   4ed38:	2029883a 	mov	r20,r4
   4ed3c:	0011883a 	mov	r8,zero
   4ed40:	383e4726 	beq	r7,zero,4e660 <___vfiprintf_internal_r+0x108>
   4ed44:	a0800007 	ldb	r2,0(r20)
   4ed48:	420002a4 	muli	r8,r8,10
   4ed4c:	a5000044 	addi	r20,r20,1
   4ed50:	40d1883a 	add	r8,r8,r3
   4ed54:	10fff404 	addi	r3,r2,-48
   4ed58:	190002b0 	cmpltui	r4,r3,10
   4ed5c:	203ff91e 	bne	r4,zero,4ed44 <___vfiprintf_internal_r+0x7ec>
   4ed60:	003e3f06 	br	4e660 <___vfiprintf_internal_r+0x108>
   4ed64:	29403fcc 	andi	r5,r5,255
   4ed68:	28026c1e 	bne	r5,zero,4f71c <___vfiprintf_internal_r+0x11c4>
   4ed6c:	6b400414 	ori	r13,r13,16
   4ed70:	6880080c 	andi	r2,r13,32
   4ed74:	103fc81e 	bne	r2,zero,4ec98 <___vfiprintf_internal_r+0x740>
   4ed78:	d8c00417 	ldw	r3,16(sp)
   4ed7c:	6880040c 	andi	r2,r13,16
   4ed80:	1dc00017 	ldw	r23,0(r3)
   4ed84:	18c00104 	addi	r3,r3,4
   4ed88:	d8c00415 	stw	r3,16(sp)
   4ed8c:	1001f01e 	bne	r2,zero,4f550 <___vfiprintf_internal_r+0xff8>
   4ed90:	6880100c 	andi	r2,r13,64
   4ed94:	1001ee26 	beq	r2,zero,4f550 <___vfiprintf_internal_r+0xff8>
   4ed98:	bdffffcc 	andi	r23,r23,65535
   4ed9c:	bde0001c 	xori	r23,r23,32768
   4eda0:	bde00004 	addi	r23,r23,-32768
   4eda4:	b839d7fa 	srai	fp,r23,31
   4eda8:	e005883a 	mov	r2,fp
   4edac:	103fc10e 	bge	r2,zero,4ecb4 <___vfiprintf_internal_r+0x75c>
   4edb0:	03800b44 	movi	r14,45
   4edb4:	b804c03a 	cmpne	r2,r23,zero
   4edb8:	0739c83a 	sub	fp,zero,fp
   4edbc:	db800945 	stb	r14,37(sp)
   4edc0:	40ffffe0 	cmpeqi	r3,r8,-1
   4edc4:	e0b9c83a 	sub	fp,fp,r2
   4edc8:	05efc83a 	sub	r23,zero,r23
   4edcc:	00800044 	movi	r2,1
   4edd0:	183f3226 	beq	r3,zero,4ea9c <___vfiprintf_internal_r+0x544>
   4edd4:	10c00060 	cmpeqi	r3,r2,1
   4edd8:	183fbf1e 	bne	r3,zero,4ecd8 <___vfiprintf_internal_r+0x780>
   4eddc:	108000a0 	cmpeqi	r2,r2,2
   4ede0:	1001311e 	bne	r2,zero,4f2a8 <___vfiprintf_internal_r+0xd50>
   4ede4:	9027883a 	mov	r19,r18
   4ede8:	e008977a 	slli	r4,fp,29
   4edec:	b806d0fa 	srli	r3,r23,3
   4edf0:	e038d0fa 	srli	fp,fp,3
   4edf4:	b88001cc 	andi	r2,r23,7
   4edf8:	10800c04 	addi	r2,r2,48
   4edfc:	20eeb03a 	or	r23,r4,r3
   4ee00:	98bfffc5 	stb	r2,-1(r19)
   4ee04:	bf06b03a 	or	r3,r23,fp
   4ee08:	980b883a 	mov	r5,r19
   4ee0c:	9cffffc4 	addi	r19,r19,-1
   4ee10:	183ff51e 	bne	r3,zero,4ede8 <___vfiprintf_internal_r+0x890>
   4ee14:	68c0004c 	andi	r3,r13,1
   4ee18:	18013026 	beq	r3,zero,4f2dc <___vfiprintf_internal_r+0xd84>
   4ee1c:	10803fcc 	andi	r2,r2,255
   4ee20:	1080201c 	xori	r2,r2,128
   4ee24:	10bfe004 	addi	r2,r2,-128
   4ee28:	10800c18 	cmpnei	r2,r2,48
   4ee2c:	10012b26 	beq	r2,zero,4f2dc <___vfiprintf_internal_r+0xd84>
   4ee30:	297fff84 	addi	r5,r5,-2
   4ee34:	00800c04 	movi	r2,48
   4ee38:	98bfffc5 	stb	r2,-1(r19)
   4ee3c:	9179c83a 	sub	fp,r18,r5
   4ee40:	db400015 	stw	r13,0(sp)
   4ee44:	2827883a 	mov	r19,r5
   4ee48:	e02f883a 	mov	r23,fp
   4ee4c:	e200010e 	bge	fp,r8,4ee54 <___vfiprintf_internal_r+0x8fc>
   4ee50:	402f883a 	mov	r23,r8
   4ee54:	73803fcc 	andi	r14,r14,255
   4ee58:	7380201c 	xori	r14,r14,128
   4ee5c:	73bfe004 	addi	r14,r14,-128
   4ee60:	703e7626 	beq	r14,zero,4e83c <___vfiprintf_internal_r+0x2e4>
   4ee64:	bdc00044 	addi	r23,r23,1
   4ee68:	003e7406 	br	4e83c <___vfiprintf_internal_r+0x2e4>
   4ee6c:	a0800007 	ldb	r2,0(r20)
   4ee70:	6b402014 	ori	r13,r13,128
   4ee74:	003df906 	br	4e65c <___vfiprintf_internal_r+0x104>
   4ee78:	a0800007 	ldb	r2,0(r20)
   4ee7c:	01400044 	movi	r5,1
   4ee80:	01800ac4 	movi	r6,43
   4ee84:	003df506 	br	4e65c <___vfiprintf_internal_r+0x104>
   4ee88:	a0800007 	ldb	r2,0(r20)
   4ee8c:	6b400054 	ori	r13,r13,1
   4ee90:	003df206 	br	4e65c <___vfiprintf_internal_r+0x104>
   4ee94:	30c03fcc 	andi	r3,r6,255
   4ee98:	18c0201c 	xori	r3,r3,128
   4ee9c:	18ffe004 	addi	r3,r3,-128
   4eea0:	a0800003 	ldbu	r2,0(r20)
   4eea4:	1800091e 	bne	r3,zero,4eecc <___vfiprintf_internal_r+0x974>
   4eea8:	10803fcc 	andi	r2,r2,255
   4eeac:	1080201c 	xori	r2,r2,128
   4eeb0:	01400044 	movi	r5,1
   4eeb4:	01800804 	movi	r6,32
   4eeb8:	10bfe004 	addi	r2,r2,-128
   4eebc:	003de706 	br	4e65c <___vfiprintf_internal_r+0x104>
   4eec0:	a0800043 	ldbu	r2,1(r20)
   4eec4:	6b400814 	ori	r13,r13,32
   4eec8:	a5000044 	addi	r20,r20,1
   4eecc:	10803fcc 	andi	r2,r2,255
   4eed0:	1080201c 	xori	r2,r2,128
   4eed4:	10bfe004 	addi	r2,r2,-128
   4eed8:	003de006 	br	4e65c <___vfiprintf_internal_r+0x104>
   4eedc:	a0800007 	ldb	r2,0(r20)
   4eee0:	6b401014 	ori	r13,r13,64
   4eee4:	003ddd06 	br	4e65c <___vfiprintf_internal_r+0x104>
   4eee8:	29403fcc 	andi	r5,r5,255
   4eeec:	28020f1e 	bne	r5,zero,4f72c <___vfiprintf_internal_r+0x11d4>
   4eef0:	d9000417 	ldw	r4,16(sp)
   4eef4:	6880080c 	andi	r2,r13,32
   4eef8:	20c00104 	addi	r3,r4,4
   4eefc:	1001c01e 	bne	r2,zero,4f600 <___vfiprintf_internal_r+0x10a8>
   4ef00:	6880040c 	andi	r2,r13,16
   4ef04:	1001df1e 	bne	r2,zero,4f684 <___vfiprintf_internal_r+0x112c>
   4ef08:	6b40100c 	andi	r13,r13,64
   4ef0c:	6801dd26 	beq	r13,zero,4f684 <___vfiprintf_internal_r+0x112c>
   4ef10:	d8800417 	ldw	r2,16(sp)
   4ef14:	d8c00415 	stw	r3,16(sp)
   4ef18:	d8c00117 	ldw	r3,4(sp)
   4ef1c:	10800017 	ldw	r2,0(r2)
   4ef20:	10c0000d 	sth	r3,0(r2)
   4ef24:	003db506 	br	4e5fc <___vfiprintf_internal_r+0xa4>
   4ef28:	a0800007 	ldb	r2,0(r20)
   4ef2c:	10c01b18 	cmpnei	r3,r2,108
   4ef30:	183fe326 	beq	r3,zero,4eec0 <___vfiprintf_internal_r+0x968>
   4ef34:	6b400414 	ori	r13,r13,16
   4ef38:	003dc806 	br	4e65c <___vfiprintf_internal_r+0x104>
   4ef3c:	d8c00417 	ldw	r3,16(sp)
   4ef40:	d8000945 	stb	zero,37(sp)
   4ef44:	05c00044 	movi	r23,1
   4ef48:	18800017 	ldw	r2,0(r3)
   4ef4c:	18c00104 	addi	r3,r3,4
   4ef50:	d8c00415 	stw	r3,16(sp)
   4ef54:	d8800d05 	stb	r2,52(sp)
   4ef58:	07000044 	movi	fp,1
   4ef5c:	dcc00d04 	addi	r19,sp,52
   4ef60:	003e3406 	br	4e834 <___vfiprintf_internal_r+0x2dc>
   4ef64:	29403fcc 	andi	r5,r5,255
   4ef68:	2801ee1e 	bne	r5,zero,4f724 <___vfiprintf_internal_r+0x11cc>
   4ef6c:	00c00174 	movhi	r3,5
   4ef70:	18cf8c04 	addi	r3,r3,15920
   4ef74:	d8c00515 	stw	r3,20(sp)
   4ef78:	68c0080c 	andi	r3,r13,32
   4ef7c:	18001226 	beq	r3,zero,4efc8 <___vfiprintf_internal_r+0xa70>
   4ef80:	d8c00417 	ldw	r3,16(sp)
   4ef84:	1dc00017 	ldw	r23,0(r3)
   4ef88:	1f000117 	ldw	fp,4(r3)
   4ef8c:	18c00204 	addi	r3,r3,8
   4ef90:	d8c00415 	stw	r3,16(sp)
   4ef94:	68c0004c 	andi	r3,r13,1
   4ef98:	18000226 	beq	r3,zero,4efa4 <___vfiprintf_internal_r+0xa4c>
   4ef9c:	bf06b03a 	or	r3,r23,fp
   4efa0:	1801911e 	bne	r3,zero,4f5e8 <___vfiprintf_internal_r+0x1090>
   4efa4:	00800084 	movi	r2,2
   4efa8:	003eb806 	br	4ea8c <___vfiprintf_internal_r+0x534>
   4efac:	29403fcc 	andi	r5,r5,255
   4efb0:	2801e01e 	bne	r5,zero,4f734 <___vfiprintf_internal_r+0x11dc>
   4efb4:	00c00174 	movhi	r3,5
   4efb8:	18cf9104 	addi	r3,r3,15940
   4efbc:	d8c00515 	stw	r3,20(sp)
   4efc0:	68c0080c 	andi	r3,r13,32
   4efc4:	183fee1e 	bne	r3,zero,4ef80 <___vfiprintf_internal_r+0xa28>
   4efc8:	d9000417 	ldw	r4,16(sp)
   4efcc:	68c0040c 	andi	r3,r13,16
   4efd0:	25c00017 	ldw	r23,0(r4)
   4efd4:	21000104 	addi	r4,r4,4
   4efd8:	d9000415 	stw	r4,16(sp)
   4efdc:	18015a1e 	bne	r3,zero,4f548 <___vfiprintf_internal_r+0xff0>
   4efe0:	68c0100c 	andi	r3,r13,64
   4efe4:	18015826 	beq	r3,zero,4f548 <___vfiprintf_internal_r+0xff0>
   4efe8:	bdffffcc 	andi	r23,r23,65535
   4efec:	0039883a 	mov	fp,zero
   4eff0:	003fe806 	br	4ef94 <___vfiprintf_internal_r+0xa3c>
   4eff4:	d8800417 	ldw	r2,16(sp)
   4eff8:	d8000945 	stb	zero,37(sp)
   4effc:	14c00017 	ldw	r19,0(r2)
   4f000:	10c00104 	addi	r3,r2,4
   4f004:	9801a526 	beq	r19,zero,4f69c <___vfiprintf_internal_r+0x1144>
   4f008:	40bfffe0 	cmpeqi	r2,r8,-1
   4f00c:	10018a1e 	bne	r2,zero,4f638 <___vfiprintf_internal_r+0x10e0>
   4f010:	400d883a 	mov	r6,r8
   4f014:	000b883a 	mov	r5,zero
   4f018:	9809883a 	mov	r4,r19
   4f01c:	d8c00315 	stw	r3,12(sp)
   4f020:	db400215 	stw	r13,8(sp)
   4f024:	da000015 	stw	r8,0(sp)
   4f028:	004c6640 	call	4c664 <memchr>
   4f02c:	da000017 	ldw	r8,0(sp)
   4f030:	db400217 	ldw	r13,8(sp)
   4f034:	d8c00317 	ldw	r3,12(sp)
   4f038:	1001b426 	beq	r2,zero,4f70c <___vfiprintf_internal_r+0x11b4>
   4f03c:	14f9c83a 	sub	fp,r2,r19
   4f040:	e02f883a 	mov	r23,fp
   4f044:	d8c00415 	stw	r3,16(sp)
   4f048:	003dfa06 	br	4e834 <___vfiprintf_internal_r+0x2dc>
   4f04c:	a0800007 	ldb	r2,0(r20)
   4f050:	6b400814 	ori	r13,r13,32
   4f054:	003d8106 	br	4e65c <___vfiprintf_internal_r+0x104>
   4f058:	d8c00417 	ldw	r3,16(sp)
   4f05c:	00800c04 	movi	r2,48
   4f060:	d8800985 	stb	r2,38(sp)
   4f064:	00801e04 	movi	r2,120
   4f068:	01000174 	movhi	r4,5
   4f06c:	d88009c5 	stb	r2,39(sp)
   4f070:	18800104 	addi	r2,r3,4
   4f074:	d8800415 	stw	r2,16(sp)
   4f078:	208f9104 	addi	r2,r4,15940
   4f07c:	d8800515 	stw	r2,20(sp)
   4f080:	1dc00017 	ldw	r23,0(r3)
   4f084:	0039883a 	mov	fp,zero
   4f088:	6b400094 	ori	r13,r13,2
   4f08c:	00800084 	movi	r2,2
   4f090:	003e7e06 	br	4ea8c <___vfiprintf_internal_r+0x534>
   4f094:	00c00044 	movi	r3,1
   4f098:	e005883a 	mov	r2,fp
   4f09c:	dcc01715 	stw	r19,92(sp)
   4f0a0:	df001815 	stw	fp,96(sp)
   4f0a4:	df000c15 	stw	fp,48(sp)
   4f0a8:	d8c00b15 	stw	r3,44(sp)
   4f0ac:	9021883a 	mov	r16,r18
   4f0b0:	84000204 	addi	r16,r16,8
   4f0b4:	003e2706 	br	4e954 <___vfiprintf_internal_r+0x3fc>
   4f0b8:	01400044 	movi	r5,1
   4f0bc:	0009883a 	mov	r4,zero
   4f0c0:	9021883a 	mov	r16,r18
   4f0c4:	003ec506 	br	4ebdc <___vfiprintf_internal_r+0x684>
   4f0c8:	8dc7c83a 	sub	r3,r17,r23
   4f0cc:	00fe100e 	bge	zero,r3,4e910 <___vfiprintf_internal_r+0x3b8>
   4f0d0:	19800450 	cmplti	r6,r3,17
   4f0d4:	01c00174 	movhi	r7,5
   4f0d8:	3001a01e 	bne	r6,zero,4f75c <___vfiprintf_internal_r+0x1204>
   4f0dc:	39d01104 	addi	r7,r7,16452
   4f0e0:	03400404 	movi	r13,16
   4f0e4:	00000606 	br	4f100 <___vfiprintf_internal_r+0xba8>
   4f0e8:	21800084 	addi	r6,r4,2
   4f0ec:	84000204 	addi	r16,r16,8
   4f0f0:	2809883a 	mov	r4,r5
   4f0f4:	18fffc04 	addi	r3,r3,-16
   4f0f8:	19400448 	cmpgei	r5,r3,17
   4f0fc:	28001c26 	beq	r5,zero,4f170 <___vfiprintf_internal_r+0xc18>
   4f100:	21400044 	addi	r5,r4,1
   4f104:	10800404 	addi	r2,r2,16
   4f108:	81c00015 	stw	r7,0(r16)
   4f10c:	83400115 	stw	r13,4(r16)
   4f110:	d8800c15 	stw	r2,48(sp)
   4f114:	d9400b15 	stw	r5,44(sp)
   4f118:	29800208 	cmpgei	r6,r5,8
   4f11c:	303ff226 	beq	r6,zero,4f0e8 <___vfiprintf_internal_r+0xb90>
   4f120:	d9800a04 	addi	r6,sp,40
   4f124:	a80b883a 	mov	r5,r21
   4f128:	b009883a 	mov	r4,r22
   4f12c:	10007426 	beq	r2,zero,4f300 <___vfiprintf_internal_r+0xda8>
   4f130:	d9c00615 	stw	r7,24(sp)
   4f134:	d8c00315 	stw	r3,12(sp)
   4f138:	da000215 	stw	r8,8(sp)
   4f13c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f140:	103e151e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f144:	d8c00317 	ldw	r3,12(sp)
   4f148:	d9000b17 	ldw	r4,44(sp)
   4f14c:	d8800c17 	ldw	r2,48(sp)
   4f150:	18fffc04 	addi	r3,r3,-16
   4f154:	19400448 	cmpgei	r5,r3,17
   4f158:	d9c00617 	ldw	r7,24(sp)
   4f15c:	da000217 	ldw	r8,8(sp)
   4f160:	9021883a 	mov	r16,r18
   4f164:	21800044 	addi	r6,r4,1
   4f168:	03400404 	movi	r13,16
   4f16c:	283fe41e 	bne	r5,zero,4f100 <___vfiprintf_internal_r+0xba8>
   4f170:	10c5883a 	add	r2,r2,r3
   4f174:	80c00115 	stw	r3,4(r16)
   4f178:	81c00015 	stw	r7,0(r16)
   4f17c:	d8800c15 	stw	r2,48(sp)
   4f180:	d9800b15 	stw	r6,44(sp)
   4f184:	30c00208 	cmpgei	r3,r6,8
   4f188:	18011326 	beq	r3,zero,4f5d8 <___vfiprintf_internal_r+0x1080>
   4f18c:	10014b26 	beq	r2,zero,4f6bc <___vfiprintf_internal_r+0x1164>
   4f190:	d9800a04 	addi	r6,sp,40
   4f194:	a80b883a 	mov	r5,r21
   4f198:	b009883a 	mov	r4,r22
   4f19c:	da000215 	stw	r8,8(sp)
   4f1a0:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f1a4:	103dfc1e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f1a8:	da000217 	ldw	r8,8(sp)
   4f1ac:	d9000b17 	ldw	r4,44(sp)
   4f1b0:	d8800c17 	ldw	r2,48(sp)
   4f1b4:	4711c83a 	sub	r8,r8,fp
   4f1b8:	9021883a 	mov	r16,r18
   4f1bc:	21400044 	addi	r5,r4,1
   4f1c0:	023dd50e 	bge	zero,r8,4e918 <___vfiprintf_internal_r+0x3c0>
   4f1c4:	01c00174 	movhi	r7,5
   4f1c8:	40c00450 	cmplti	r3,r8,17
   4f1cc:	39d01104 	addi	r7,r7,16452
   4f1d0:	03400404 	movi	r13,16
   4f1d4:	18000726 	beq	r3,zero,4f1f4 <___vfiprintf_internal_r+0xc9c>
   4f1d8:	00002006 	br	4f25c <___vfiprintf_internal_r+0xd04>
   4f1dc:	21400084 	addi	r5,r4,2
   4f1e0:	84000204 	addi	r16,r16,8
   4f1e4:	1809883a 	mov	r4,r3
   4f1e8:	423ffc04 	addi	r8,r8,-16
   4f1ec:	40c00448 	cmpgei	r3,r8,17
   4f1f0:	18001a26 	beq	r3,zero,4f25c <___vfiprintf_internal_r+0xd04>
   4f1f4:	20c00044 	addi	r3,r4,1
   4f1f8:	10800404 	addi	r2,r2,16
   4f1fc:	81c00015 	stw	r7,0(r16)
   4f200:	83400115 	stw	r13,4(r16)
   4f204:	d8800c15 	stw	r2,48(sp)
   4f208:	d8c00b15 	stw	r3,44(sp)
   4f20c:	19400208 	cmpgei	r5,r3,8
   4f210:	283ff226 	beq	r5,zero,4f1dc <___vfiprintf_internal_r+0xc84>
   4f214:	d9800a04 	addi	r6,sp,40
   4f218:	a80b883a 	mov	r5,r21
   4f21c:	b009883a 	mov	r4,r22
   4f220:	10001826 	beq	r2,zero,4f284 <___vfiprintf_internal_r+0xd2c>
   4f224:	d9c00315 	stw	r7,12(sp)
   4f228:	da000215 	stw	r8,8(sp)
   4f22c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f230:	103dd91e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f234:	da000217 	ldw	r8,8(sp)
   4f238:	d9000b17 	ldw	r4,44(sp)
   4f23c:	d8800c17 	ldw	r2,48(sp)
   4f240:	423ffc04 	addi	r8,r8,-16
   4f244:	40c00448 	cmpgei	r3,r8,17
   4f248:	d9c00317 	ldw	r7,12(sp)
   4f24c:	9021883a 	mov	r16,r18
   4f250:	21400044 	addi	r5,r4,1
   4f254:	03400404 	movi	r13,16
   4f258:	183fe61e 	bne	r3,zero,4f1f4 <___vfiprintf_internal_r+0xc9c>
   4f25c:	1205883a 	add	r2,r2,r8
   4f260:	81c00015 	stw	r7,0(r16)
   4f264:	82000115 	stw	r8,4(r16)
   4f268:	d8800c15 	stw	r2,48(sp)
   4f26c:	d9400b15 	stw	r5,44(sp)
   4f270:	28c00208 	cmpgei	r3,r5,8
   4f274:	1800a11e 	bne	r3,zero,4f4fc <___vfiprintf_internal_r+0xfa4>
   4f278:	84000204 	addi	r16,r16,8
   4f27c:	29400044 	addi	r5,r5,1
   4f280:	003da506 	br	4e918 <___vfiprintf_internal_r+0x3c0>
   4f284:	01400044 	movi	r5,1
   4f288:	0009883a 	mov	r4,zero
   4f28c:	9021883a 	mov	r16,r18
   4f290:	003fd506 	br	4f1e8 <___vfiprintf_internal_r+0xc90>
   4f294:	10c00060 	cmpeqi	r3,r2,1
   4f298:	18011a1e 	bne	r3,zero,4f704 <___vfiprintf_internal_r+0x11ac>
   4f29c:	108000a0 	cmpeqi	r2,r2,2
   4f2a0:	db400017 	ldw	r13,0(sp)
   4f2a4:	103ecf26 	beq	r2,zero,4ede4 <___vfiprintf_internal_r+0x88c>
   4f2a8:	9027883a 	mov	r19,r18
   4f2ac:	d9000517 	ldw	r4,20(sp)
   4f2b0:	b88003cc 	andi	r2,r23,15
   4f2b4:	e006973a 	slli	r3,fp,28
   4f2b8:	b82ed13a 	srli	r23,r23,4
   4f2bc:	2085883a 	add	r2,r4,r2
   4f2c0:	10800003 	ldbu	r2,0(r2)
   4f2c4:	e038d13a 	srli	fp,fp,4
   4f2c8:	1deeb03a 	or	r23,r3,r23
   4f2cc:	98bfffc5 	stb	r2,-1(r19)
   4f2d0:	bf04b03a 	or	r2,r23,fp
   4f2d4:	9cffffc4 	addi	r19,r19,-1
   4f2d8:	103ff41e 	bne	r2,zero,4f2ac <___vfiprintf_internal_r+0xd54>
   4f2dc:	94f9c83a 	sub	fp,r18,r19
   4f2e0:	db400015 	stw	r13,0(sp)
   4f2e4:	003ed806 	br	4ee48 <___vfiprintf_internal_r+0x8f0>
   4f2e8:	d9800a04 	addi	r6,sp,40
   4f2ec:	a80b883a 	mov	r5,r21
   4f2f0:	b009883a 	mov	r4,r22
   4f2f4:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f2f8:	103da126 	beq	r2,zero,4e980 <___vfiprintf_internal_r+0x428>
   4f2fc:	003da606 	br	4e998 <___vfiprintf_internal_r+0x440>
   4f300:	01800044 	movi	r6,1
   4f304:	0009883a 	mov	r4,zero
   4f308:	9021883a 	mov	r16,r18
   4f30c:	003f7906 	br	4f0f4 <___vfiprintf_internal_r+0xb9c>
   4f310:	10009626 	beq	r2,zero,4f56c <___vfiprintf_internal_r+0x1014>
   4f314:	d9800a04 	addi	r6,sp,40
   4f318:	a80b883a 	mov	r5,r21
   4f31c:	b009883a 	mov	r4,r22
   4f320:	da000615 	stw	r8,24(sp)
   4f324:	db400315 	stw	r13,12(sp)
   4f328:	db800215 	stw	r14,8(sp)
   4f32c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f330:	103d991e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f334:	d9000b17 	ldw	r4,44(sp)
   4f338:	d8800c17 	ldw	r2,48(sp)
   4f33c:	da000617 	ldw	r8,24(sp)
   4f340:	db400317 	ldw	r13,12(sp)
   4f344:	db800217 	ldw	r14,8(sp)
   4f348:	9021883a 	mov	r16,r18
   4f34c:	21400044 	addi	r5,r4,1
   4f350:	003d5506 	br	4e8a8 <___vfiprintf_internal_r+0x350>
   4f354:	d8800984 	addi	r2,sp,38
   4f358:	d8801715 	stw	r2,92(sp)
   4f35c:	00800084 	movi	r2,2
   4f360:	d8801815 	stw	r2,96(sp)
   4f364:	01400044 	movi	r5,1
   4f368:	9021883a 	mov	r16,r18
   4f36c:	2809883a 	mov	r4,r5
   4f370:	84000204 	addi	r16,r16,8
   4f374:	21400044 	addi	r5,r4,1
   4f378:	003d6306 	br	4e908 <___vfiprintf_internal_r+0x3b0>
   4f37c:	db400017 	ldw	r13,0(sp)
   4f380:	003e9406 	br	4edd4 <___vfiprintf_internal_r+0x87c>
   4f384:	9027883a 	mov	r19,r18
   4f388:	b809883a 	mov	r4,r23
   4f38c:	e00b883a 	mov	r5,fp
   4f390:	01800284 	movi	r6,10
   4f394:	000f883a 	mov	r7,zero
   4f398:	db800315 	stw	r14,12(sp)
   4f39c:	da000215 	stw	r8,8(sp)
   4f3a0:	db400015 	stw	r13,0(sp)
   4f3a4:	0050f080 	call	50f08 <__umoddi3>
   4f3a8:	10800c04 	addi	r2,r2,48
   4f3ac:	b809883a 	mov	r4,r23
   4f3b0:	e00b883a 	mov	r5,fp
   4f3b4:	98bfffc5 	stb	r2,-1(r19)
   4f3b8:	01800284 	movi	r6,10
   4f3bc:	000f883a 	mov	r7,zero
   4f3c0:	00509b80 	call	509b8 <__udivdi3>
   4f3c4:	e009883a 	mov	r4,fp
   4f3c8:	b80b883a 	mov	r5,r23
   4f3cc:	db400017 	ldw	r13,0(sp)
   4f3d0:	da000217 	ldw	r8,8(sp)
   4f3d4:	db800317 	ldw	r14,12(sp)
   4f3d8:	9cffffc4 	addi	r19,r19,-1
   4f3dc:	102f883a 	mov	r23,r2
   4f3e0:	1839883a 	mov	fp,r3
   4f3e4:	203fe81e 	bne	r4,zero,4f388 <___vfiprintf_internal_r+0xe30>
   4f3e8:	294002a8 	cmpgeui	r5,r5,10
   4f3ec:	283fe61e 	bne	r5,zero,4f388 <___vfiprintf_internal_r+0xe30>
   4f3f0:	94f9c83a 	sub	fp,r18,r19
   4f3f4:	003e9406 	br	4ee48 <___vfiprintf_internal_r+0x8f0>
   4f3f8:	19400450 	cmplti	r5,r3,17
   4f3fc:	01c00174 	movhi	r7,5
   4f400:	2800ce1e 	bne	r5,zero,4f73c <___vfiprintf_internal_r+0x11e4>
   4f404:	39d01504 	addi	r7,r7,16468
   4f408:	03c00404 	movi	r15,16
   4f40c:	00000706 	br	4f42c <___vfiprintf_internal_r+0xed4>
   4f410:	27c00084 	addi	ra,r4,2
   4f414:	84000204 	addi	r16,r16,8
   4f418:	3009883a 	mov	r4,r6
   4f41c:	18fffc04 	addi	r3,r3,-16
   4f420:	19400448 	cmpgei	r5,r3,17
   4f424:	28002026 	beq	r5,zero,4f4a8 <___vfiprintf_internal_r+0xf50>
   4f428:	21800044 	addi	r6,r4,1
   4f42c:	10800404 	addi	r2,r2,16
   4f430:	81c00015 	stw	r7,0(r16)
   4f434:	83c00115 	stw	r15,4(r16)
   4f438:	d8800c15 	stw	r2,48(sp)
   4f43c:	d9800b15 	stw	r6,44(sp)
   4f440:	31400208 	cmpgei	r5,r6,8
   4f444:	283ff226 	beq	r5,zero,4f410 <___vfiprintf_internal_r+0xeb8>
   4f448:	d9800a04 	addi	r6,sp,40
   4f44c:	a80b883a 	mov	r5,r21
   4f450:	b009883a 	mov	r4,r22
   4f454:	10001f26 	beq	r2,zero,4f4d4 <___vfiprintf_internal_r+0xf7c>
   4f458:	d9c00815 	stw	r7,32(sp)
   4f45c:	d8c00715 	stw	r3,28(sp)
   4f460:	da000615 	stw	r8,24(sp)
   4f464:	db400315 	stw	r13,12(sp)
   4f468:	db800215 	stw	r14,8(sp)
   4f46c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f470:	103d491e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f474:	d8c00717 	ldw	r3,28(sp)
   4f478:	d9000b17 	ldw	r4,44(sp)
   4f47c:	d8800c17 	ldw	r2,48(sp)
   4f480:	18fffc04 	addi	r3,r3,-16
   4f484:	19400448 	cmpgei	r5,r3,17
   4f488:	d9c00817 	ldw	r7,32(sp)
   4f48c:	da000617 	ldw	r8,24(sp)
   4f490:	db400317 	ldw	r13,12(sp)
   4f494:	db800217 	ldw	r14,8(sp)
   4f498:	9021883a 	mov	r16,r18
   4f49c:	27c00044 	addi	ra,r4,1
   4f4a0:	03c00404 	movi	r15,16
   4f4a4:	283fe01e 	bne	r5,zero,4f428 <___vfiprintf_internal_r+0xed0>
   4f4a8:	10c5883a 	add	r2,r2,r3
   4f4ac:	80c00115 	stw	r3,4(r16)
   4f4b0:	81c00015 	stw	r7,0(r16)
   4f4b4:	d8800c15 	stw	r2,48(sp)
   4f4b8:	dfc00b15 	stw	ra,44(sp)
   4f4bc:	f8c00208 	cmpgei	r3,ra,8
   4f4c0:	18002f1e 	bne	r3,zero,4f580 <___vfiprintf_internal_r+0x1028>
   4f4c4:	84000204 	addi	r16,r16,8
   4f4c8:	f9400044 	addi	r5,ra,1
   4f4cc:	f809883a 	mov	r4,ra
   4f4d0:	003ce706 	br	4e870 <___vfiprintf_internal_r+0x318>
   4f4d4:	0009883a 	mov	r4,zero
   4f4d8:	07c00044 	movi	ra,1
   4f4dc:	9021883a 	mov	r16,r18
   4f4e0:	003fce06 	br	4f41c <___vfiprintf_internal_r+0xec4>
   4f4e4:	8dc0010e 	bge	r17,r23,4f4ec <___vfiprintf_internal_r+0xf94>
   4f4e8:	b823883a 	mov	r17,r23
   4f4ec:	d8800117 	ldw	r2,4(sp)
   4f4f0:	1445883a 	add	r2,r2,r17
   4f4f4:	d8800115 	stw	r2,4(sp)
   4f4f8:	003d2106 	br	4e980 <___vfiprintf_internal_r+0x428>
   4f4fc:	103ee526 	beq	r2,zero,4f094 <___vfiprintf_internal_r+0xb3c>
   4f500:	d9800a04 	addi	r6,sp,40
   4f504:	a80b883a 	mov	r5,r21
   4f508:	b009883a 	mov	r4,r22
   4f50c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f510:	103d211e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f514:	d9400b17 	ldw	r5,44(sp)
   4f518:	d8800c17 	ldw	r2,48(sp)
   4f51c:	9021883a 	mov	r16,r18
   4f520:	29400044 	addi	r5,r5,1
   4f524:	003cfc06 	br	4e918 <___vfiprintf_internal_r+0x3c0>
   4f528:	d8000b15 	stw	zero,44(sp)
   4f52c:	9021883a 	mov	r16,r18
   4f530:	003d7406 	br	4eb04 <___vfiprintf_internal_r+0x5ac>
   4f534:	4000731e 	bne	r8,zero,4f704 <___vfiprintf_internal_r+0x11ac>
   4f538:	0011883a 	mov	r8,zero
   4f53c:	0039883a 	mov	fp,zero
   4f540:	9027883a 	mov	r19,r18
   4f544:	003e4006 	br	4ee48 <___vfiprintf_internal_r+0x8f0>
   4f548:	0039883a 	mov	fp,zero
   4f54c:	003e9106 	br	4ef94 <___vfiprintf_internal_r+0xa3c>
   4f550:	b839d7fa 	srai	fp,r23,31
   4f554:	e005883a 	mov	r2,fp
   4f558:	003dd506 	br	4ecb0 <___vfiprintf_internal_r+0x758>
   4f55c:	01400044 	movi	r5,1
   4f560:	0009883a 	mov	r4,zero
   4f564:	9021883a 	mov	r16,r18
   4f568:	003ce706 	br	4e908 <___vfiprintf_internal_r+0x3b0>
   4f56c:	70002b1e 	bne	r14,zero,4f61c <___vfiprintf_internal_r+0x10c4>
   4f570:	0009883a 	mov	r4,zero
   4f574:	01400044 	movi	r5,1
   4f578:	9021883a 	mov	r16,r18
   4f57c:	003ce206 	br	4e908 <___vfiprintf_internal_r+0x3b0>
   4f580:	10003726 	beq	r2,zero,4f660 <___vfiprintf_internal_r+0x1108>
   4f584:	d9800a04 	addi	r6,sp,40
   4f588:	a80b883a 	mov	r5,r21
   4f58c:	b009883a 	mov	r4,r22
   4f590:	da000615 	stw	r8,24(sp)
   4f594:	db400315 	stw	r13,12(sp)
   4f598:	db800215 	stw	r14,8(sp)
   4f59c:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f5a0:	103cfd1e 	bne	r2,zero,4e998 <___vfiprintf_internal_r+0x440>
   4f5a4:	d9000b17 	ldw	r4,44(sp)
   4f5a8:	d8800c17 	ldw	r2,48(sp)
   4f5ac:	da000617 	ldw	r8,24(sp)
   4f5b0:	db400317 	ldw	r13,12(sp)
   4f5b4:	db800217 	ldw	r14,8(sp)
   4f5b8:	9021883a 	mov	r16,r18
   4f5bc:	21400044 	addi	r5,r4,1
   4f5c0:	003cab06 	br	4e870 <___vfiprintf_internal_r+0x318>
   4f5c4:	a0800007 	ldb	r2,0(r20)
   4f5c8:	d8c00415 	stw	r3,16(sp)
   4f5cc:	003c2306 	br	4e65c <___vfiprintf_internal_r+0x104>
   4f5d0:	9027883a 	mov	r19,r18
   4f5d4:	003e1c06 	br	4ee48 <___vfiprintf_internal_r+0x8f0>
   4f5d8:	84000204 	addi	r16,r16,8
   4f5dc:	31400044 	addi	r5,r6,1
   4f5e0:	3009883a 	mov	r4,r6
   4f5e4:	003cca06 	br	4e910 <___vfiprintf_internal_r+0x3b8>
   4f5e8:	00c00c04 	movi	r3,48
   4f5ec:	d88009c5 	stb	r2,39(sp)
   4f5f0:	d8c00985 	stb	r3,38(sp)
   4f5f4:	6b400094 	ori	r13,r13,2
   4f5f8:	00800084 	movi	r2,2
   4f5fc:	003d2306 	br	4ea8c <___vfiprintf_internal_r+0x534>
   4f600:	d9400117 	ldw	r5,4(sp)
   4f604:	20800017 	ldw	r2,0(r4)
   4f608:	d8c00415 	stw	r3,16(sp)
   4f60c:	2809d7fa 	srai	r4,r5,31
   4f610:	11400015 	stw	r5,0(r2)
   4f614:	11000115 	stw	r4,4(r2)
   4f618:	003bf806 	br	4e5fc <___vfiprintf_internal_r+0xa4>
   4f61c:	d8800984 	addi	r2,sp,38
   4f620:	d8801715 	stw	r2,92(sp)
   4f624:	00800084 	movi	r2,2
   4f628:	d8801815 	stw	r2,96(sp)
   4f62c:	01000044 	movi	r4,1
   4f630:	9021883a 	mov	r16,r18
   4f634:	003f4e06 	br	4f370 <___vfiprintf_internal_r+0xe18>
   4f638:	9809883a 	mov	r4,r19
   4f63c:	d8c00215 	stw	r3,8(sp)
   4f640:	db400015 	stw	r13,0(sp)
   4f644:	0046f3c0 	call	46f3c <strlen>
   4f648:	d8c00217 	ldw	r3,8(sp)
   4f64c:	db400017 	ldw	r13,0(sp)
   4f650:	1039883a 	mov	fp,r2
   4f654:	102f883a 	mov	r23,r2
   4f658:	d8c00415 	stw	r3,16(sp)
   4f65c:	003c7506 	br	4e834 <___vfiprintf_internal_r+0x2dc>
   4f660:	d8c00947 	ldb	r3,37(sp)
   4f664:	18001b26 	beq	r3,zero,4f6d4 <___vfiprintf_internal_r+0x117c>
   4f668:	d8800944 	addi	r2,sp,37
   4f66c:	d8801715 	stw	r2,92(sp)
   4f670:	00800044 	movi	r2,1
   4f674:	d8801815 	stw	r2,96(sp)
   4f678:	01400044 	movi	r5,1
   4f67c:	9021883a 	mov	r16,r18
   4f680:	003c8606 	br	4e89c <___vfiprintf_internal_r+0x344>
   4f684:	d8800417 	ldw	r2,16(sp)
   4f688:	10800017 	ldw	r2,0(r2)
   4f68c:	d8c00415 	stw	r3,16(sp)
   4f690:	d8c00117 	ldw	r3,4(sp)
   4f694:	10c00015 	stw	r3,0(r2)
   4f698:	003bd806 	br	4e5fc <___vfiprintf_internal_r+0xa4>
   4f69c:	408001f0 	cmpltui	r2,r8,7
   4f6a0:	4039883a 	mov	fp,r8
   4f6a4:	10000926 	beq	r2,zero,4f6cc <___vfiprintf_internal_r+0x1174>
   4f6a8:	04c00174 	movhi	r19,5
   4f6ac:	e02f883a 	mov	r23,fp
   4f6b0:	d8c00415 	stw	r3,16(sp)
   4f6b4:	9ccf9604 	addi	r19,r19,15960
   4f6b8:	003c5e06 	br	4e834 <___vfiprintf_internal_r+0x2dc>
   4f6bc:	01400044 	movi	r5,1
   4f6c0:	0009883a 	mov	r4,zero
   4f6c4:	9021883a 	mov	r16,r18
   4f6c8:	003c9106 	br	4e910 <___vfiprintf_internal_r+0x3b8>
   4f6cc:	07000184 	movi	fp,6
   4f6d0:	003ff506 	br	4f6a8 <___vfiprintf_internal_r+0x1150>
   4f6d4:	703f1f1e 	bne	r14,zero,4f354 <___vfiprintf_internal_r+0xdfc>
   4f6d8:	0009883a 	mov	r4,zero
   4f6dc:	01400044 	movi	r5,1
   4f6e0:	9021883a 	mov	r16,r18
   4f6e4:	003c8a06 	br	4e910 <___vfiprintf_internal_r+0x3b8>
   4f6e8:	d9800945 	stb	r6,37(sp)
   4f6ec:	003c4b06 	br	4e81c <___vfiprintf_internal_r+0x2c4>
   4f6f0:	d9800a04 	addi	r6,sp,40
   4f6f4:	a80b883a 	mov	r5,r21
   4f6f8:	b009883a 	mov	r4,r22
   4f6fc:	004e44c0 	call	4e44c <__sprint_r.part.0>
   4f700:	003ca506 	br	4e998 <___vfiprintf_internal_r+0x440>
   4f704:	db400017 	ldw	r13,0(sp)
   4f708:	003d7606 	br	4ece4 <___vfiprintf_internal_r+0x78c>
   4f70c:	402f883a 	mov	r23,r8
   4f710:	d8c00415 	stw	r3,16(sp)
   4f714:	4039883a 	mov	fp,r8
   4f718:	003c4606 	br	4e834 <___vfiprintf_internal_r+0x2dc>
   4f71c:	d9800945 	stb	r6,37(sp)
   4f720:	003d9206 	br	4ed6c <___vfiprintf_internal_r+0x814>
   4f724:	d9800945 	stb	r6,37(sp)
   4f728:	003e1006 	br	4ef6c <___vfiprintf_internal_r+0xa14>
   4f72c:	d9800945 	stb	r6,37(sp)
   4f730:	003def06 	br	4eef0 <___vfiprintf_internal_r+0x998>
   4f734:	d9800945 	stb	r6,37(sp)
   4f738:	003e1e06 	br	4efb4 <___vfiprintf_internal_r+0xa5c>
   4f73c:	303f883a 	mov	ra,r6
   4f740:	39d01504 	addi	r7,r7,16468
   4f744:	003f5806 	br	4f4a8 <___vfiprintf_internal_r+0xf50>
   4f748:	d9800945 	stb	r6,37(sp)
   4f74c:	003d5006 	br	4ec90 <___vfiprintf_internal_r+0x738>
   4f750:	21400044 	addi	r5,r4,1
   4f754:	39d01504 	addi	r7,r7,16468
   4f758:	003d3a06 	br	4ec44 <___vfiprintf_internal_r+0x6ec>
   4f75c:	280d883a 	mov	r6,r5
   4f760:	39d01104 	addi	r7,r7,16452
   4f764:	003e8206 	br	4f170 <___vfiprintf_internal_r+0xc18>
   4f768:	00bfffc4 	movi	r2,-1
   4f76c:	d8800115 	stw	r2,4(sp)
   4f770:	003c8c06 	br	4e9a4 <___vfiprintf_internal_r+0x44c>
   4f774:	d8800417 	ldw	r2,16(sp)
   4f778:	12000017 	ldw	r8,0(r2)
   4f77c:	10c00104 	addi	r3,r2,4
   4f780:	4000010e 	bge	r8,zero,4f788 <___vfiprintf_internal_r+0x1230>
   4f784:	023fffc4 	movi	r8,-1
   4f788:	a0800043 	ldbu	r2,1(r20)
   4f78c:	d8c00415 	stw	r3,16(sp)
   4f790:	2029883a 	mov	r20,r4
   4f794:	10803fcc 	andi	r2,r2,255
   4f798:	1080201c 	xori	r2,r2,128
   4f79c:	10bfe004 	addi	r2,r2,-128
   4f7a0:	003bae06 	br	4e65c <___vfiprintf_internal_r+0x104>

0004f7a4 <__vfiprintf_internal>:
   4f7a4:	00c00174 	movhi	r3,5
   4f7a8:	2005883a 	mov	r2,r4
   4f7ac:	1917c217 	ldw	r4,24328(r3)
   4f7b0:	300f883a 	mov	r7,r6
   4f7b4:	280d883a 	mov	r6,r5
   4f7b8:	100b883a 	mov	r5,r2
   4f7bc:	004e5581 	jmpi	4e558 <___vfiprintf_internal_r>

0004f7c0 <__sbprintf>:
   4f7c0:	2880030b 	ldhu	r2,12(r5)
   4f7c4:	2b001917 	ldw	r12,100(r5)
   4f7c8:	2ac0038b 	ldhu	r11,14(r5)
   4f7cc:	2a800717 	ldw	r10,28(r5)
   4f7d0:	2a400917 	ldw	r9,36(r5)
   4f7d4:	defee204 	addi	sp,sp,-1144
   4f7d8:	da001a04 	addi	r8,sp,104
   4f7dc:	00c10004 	movi	r3,1024
   4f7e0:	dc011a15 	stw	r16,1128(sp)
   4f7e4:	10bfff4c 	andi	r2,r2,65533
   4f7e8:	2821883a 	mov	r16,r5
   4f7ec:	d80b883a 	mov	r5,sp
   4f7f0:	dc811c15 	stw	r18,1136(sp)
   4f7f4:	dc411b15 	stw	r17,1132(sp)
   4f7f8:	dfc11d15 	stw	ra,1140(sp)
   4f7fc:	2025883a 	mov	r18,r4
   4f800:	d880030d 	sth	r2,12(sp)
   4f804:	db001915 	stw	r12,100(sp)
   4f808:	dac0038d 	sth	r11,14(sp)
   4f80c:	da800715 	stw	r10,28(sp)
   4f810:	da400915 	stw	r9,36(sp)
   4f814:	da000015 	stw	r8,0(sp)
   4f818:	da000415 	stw	r8,16(sp)
   4f81c:	d8c00215 	stw	r3,8(sp)
   4f820:	d8c00515 	stw	r3,20(sp)
   4f824:	d8000615 	stw	zero,24(sp)
   4f828:	004e5580 	call	4e558 <___vfiprintf_internal_r>
   4f82c:	1023883a 	mov	r17,r2
   4f830:	10000d0e 	bge	r2,zero,4f868 <__sbprintf+0xa8>
   4f834:	d880030b 	ldhu	r2,12(sp)
   4f838:	1080100c 	andi	r2,r2,64
   4f83c:	10000326 	beq	r2,zero,4f84c <__sbprintf+0x8c>
   4f840:	8080030b 	ldhu	r2,12(r16)
   4f844:	10801014 	ori	r2,r2,64
   4f848:	8080030d 	sth	r2,12(r16)
   4f84c:	8805883a 	mov	r2,r17
   4f850:	dfc11d17 	ldw	ra,1140(sp)
   4f854:	dc811c17 	ldw	r18,1136(sp)
   4f858:	dc411b17 	ldw	r17,1132(sp)
   4f85c:	dc011a17 	ldw	r16,1128(sp)
   4f860:	dec11e04 	addi	sp,sp,1144
   4f864:	f800283a 	ret
   4f868:	d80b883a 	mov	r5,sp
   4f86c:	9009883a 	mov	r4,r18
   4f870:	004ada40 	call	4ada4 <_fflush_r>
   4f874:	103fef26 	beq	r2,zero,4f834 <__sbprintf+0x74>
   4f878:	047fffc4 	movi	r17,-1
   4f87c:	003fed06 	br	4f834 <__sbprintf+0x74>

0004f880 <__swbuf_r>:
   4f880:	defffb04 	addi	sp,sp,-20
   4f884:	dcc00315 	stw	r19,12(sp)
   4f888:	dc400115 	stw	r17,4(sp)
   4f88c:	dc000015 	stw	r16,0(sp)
   4f890:	dfc00415 	stw	ra,16(sp)
   4f894:	dc800215 	stw	r18,8(sp)
   4f898:	2027883a 	mov	r19,r4
   4f89c:	2823883a 	mov	r17,r5
   4f8a0:	3021883a 	mov	r16,r6
   4f8a4:	20000226 	beq	r4,zero,4f8b0 <__swbuf_r+0x30>
   4f8a8:	20800e17 	ldw	r2,56(r4)
   4f8ac:	10003e26 	beq	r2,zero,4f9a8 <__swbuf_r+0x128>
   4f8b0:	80800617 	ldw	r2,24(r16)
   4f8b4:	80c0030b 	ldhu	r3,12(r16)
   4f8b8:	80800215 	stw	r2,8(r16)
   4f8bc:	1880020c 	andi	r2,r3,8
   4f8c0:	10001f26 	beq	r2,zero,4f940 <__swbuf_r+0xc0>
   4f8c4:	80800417 	ldw	r2,16(r16)
   4f8c8:	10001d26 	beq	r2,zero,4f940 <__swbuf_r+0xc0>
   4f8cc:	1948000c 	andi	r5,r3,8192
   4f8d0:	8c803fcc 	andi	r18,r17,255
   4f8d4:	28002326 	beq	r5,zero,4f964 <__swbuf_r+0xe4>
   4f8d8:	80c00017 	ldw	r3,0(r16)
   4f8dc:	81000517 	ldw	r4,20(r16)
   4f8e0:	1885c83a 	sub	r2,r3,r2
   4f8e4:	1100290e 	bge	r2,r4,4f98c <__swbuf_r+0x10c>
   4f8e8:	10800044 	addi	r2,r2,1
   4f8ec:	81400217 	ldw	r5,8(r16)
   4f8f0:	19000044 	addi	r4,r3,1
   4f8f4:	81000015 	stw	r4,0(r16)
   4f8f8:	297fffc4 	addi	r5,r5,-1
   4f8fc:	81400215 	stw	r5,8(r16)
   4f900:	1c400005 	stb	r17,0(r3)
   4f904:	80c00517 	ldw	r3,20(r16)
   4f908:	18802926 	beq	r3,r2,4f9b0 <__swbuf_r+0x130>
   4f90c:	8080030b 	ldhu	r2,12(r16)
   4f910:	1080004c 	andi	r2,r2,1
   4f914:	10000226 	beq	r2,zero,4f920 <__swbuf_r+0xa0>
   4f918:	90800298 	cmpnei	r2,r18,10
   4f91c:	10002426 	beq	r2,zero,4f9b0 <__swbuf_r+0x130>
   4f920:	9005883a 	mov	r2,r18
   4f924:	dfc00417 	ldw	ra,16(sp)
   4f928:	dcc00317 	ldw	r19,12(sp)
   4f92c:	dc800217 	ldw	r18,8(sp)
   4f930:	dc400117 	ldw	r17,4(sp)
   4f934:	dc000017 	ldw	r16,0(sp)
   4f938:	dec00504 	addi	sp,sp,20
   4f93c:	f800283a 	ret
   4f940:	800b883a 	mov	r5,r16
   4f944:	9809883a 	mov	r4,r19
   4f948:	00490c00 	call	490c0 <__swsetup_r>
   4f94c:	10001c1e 	bne	r2,zero,4f9c0 <__swbuf_r+0x140>
   4f950:	80c0030b 	ldhu	r3,12(r16)
   4f954:	80800417 	ldw	r2,16(r16)
   4f958:	8c803fcc 	andi	r18,r17,255
   4f95c:	1948000c 	andi	r5,r3,8192
   4f960:	283fdd1e 	bne	r5,zero,4f8d8 <__swbuf_r+0x58>
   4f964:	81001917 	ldw	r4,100(r16)
   4f968:	18c80014 	ori	r3,r3,8192
   4f96c:	0177ffc4 	movi	r5,-8193
   4f970:	2148703a 	and	r4,r4,r5
   4f974:	80c0030d 	sth	r3,12(r16)
   4f978:	80c00017 	ldw	r3,0(r16)
   4f97c:	81001915 	stw	r4,100(r16)
   4f980:	81000517 	ldw	r4,20(r16)
   4f984:	1885c83a 	sub	r2,r3,r2
   4f988:	113fd716 	blt	r2,r4,4f8e8 <__swbuf_r+0x68>
   4f98c:	800b883a 	mov	r5,r16
   4f990:	9809883a 	mov	r4,r19
   4f994:	004ada40 	call	4ada4 <_fflush_r>
   4f998:	1000091e 	bne	r2,zero,4f9c0 <__swbuf_r+0x140>
   4f99c:	80c00017 	ldw	r3,0(r16)
   4f9a0:	00800044 	movi	r2,1
   4f9a4:	003fd106 	br	4f8ec <__swbuf_r+0x6c>
   4f9a8:	004b1c40 	call	4b1c4 <__sinit>
   4f9ac:	003fc006 	br	4f8b0 <__swbuf_r+0x30>
   4f9b0:	800b883a 	mov	r5,r16
   4f9b4:	9809883a 	mov	r4,r19
   4f9b8:	004ada40 	call	4ada4 <_fflush_r>
   4f9bc:	103fd826 	beq	r2,zero,4f920 <__swbuf_r+0xa0>
   4f9c0:	04bfffc4 	movi	r18,-1
   4f9c4:	003fd606 	br	4f920 <__swbuf_r+0xa0>

0004f9c8 <__swbuf>:
   4f9c8:	00c00174 	movhi	r3,5
   4f9cc:	2005883a 	mov	r2,r4
   4f9d0:	1917c217 	ldw	r4,24328(r3)
   4f9d4:	280d883a 	mov	r6,r5
   4f9d8:	100b883a 	mov	r5,r2
   4f9dc:	004f8801 	jmpi	4f880 <__swbuf_r>

0004f9e0 <_write_r>:
   4f9e0:	2807883a 	mov	r3,r5
   4f9e4:	defffe04 	addi	sp,sp,-8
   4f9e8:	dc000015 	stw	r16,0(sp)
   4f9ec:	300b883a 	mov	r5,r6
   4f9f0:	00800174 	movhi	r2,5
   4f9f4:	380d883a 	mov	r6,r7
   4f9f8:	2021883a 	mov	r16,r4
   4f9fc:	1809883a 	mov	r4,r3
   4fa00:	dfc00115 	stw	ra,4(sp)
   4fa04:	101ec815 	stw	zero,31520(r2)
   4fa08:	0051e740 	call	51e74 <write>
   4fa0c:	10ffffd8 	cmpnei	r3,r2,-1
   4fa10:	18000426 	beq	r3,zero,4fa24 <_write_r+0x44>
   4fa14:	dfc00117 	ldw	ra,4(sp)
   4fa18:	dc000017 	ldw	r16,0(sp)
   4fa1c:	dec00204 	addi	sp,sp,8
   4fa20:	f800283a 	ret
   4fa24:	00c00174 	movhi	r3,5
   4fa28:	18dec817 	ldw	r3,31520(r3)
   4fa2c:	183ff926 	beq	r3,zero,4fa14 <_write_r+0x34>
   4fa30:	80c00015 	stw	r3,0(r16)
   4fa34:	dfc00117 	ldw	ra,4(sp)
   4fa38:	dc000017 	ldw	r16,0(sp)
   4fa3c:	dec00204 	addi	sp,sp,8
   4fa40:	f800283a 	ret

0004fa44 <_close_r>:
   4fa44:	defffe04 	addi	sp,sp,-8
   4fa48:	dc000015 	stw	r16,0(sp)
   4fa4c:	00800174 	movhi	r2,5
   4fa50:	2021883a 	mov	r16,r4
   4fa54:	2809883a 	mov	r4,r5
   4fa58:	dfc00115 	stw	ra,4(sp)
   4fa5c:	101ec815 	stw	zero,31520(r2)
   4fa60:	00514e40 	call	514e4 <close>
   4fa64:	10ffffd8 	cmpnei	r3,r2,-1
   4fa68:	18000426 	beq	r3,zero,4fa7c <_close_r+0x38>
   4fa6c:	dfc00117 	ldw	ra,4(sp)
   4fa70:	dc000017 	ldw	r16,0(sp)
   4fa74:	dec00204 	addi	sp,sp,8
   4fa78:	f800283a 	ret
   4fa7c:	00c00174 	movhi	r3,5
   4fa80:	18dec817 	ldw	r3,31520(r3)
   4fa84:	183ff926 	beq	r3,zero,4fa6c <_close_r+0x28>
   4fa88:	80c00015 	stw	r3,0(r16)
   4fa8c:	dfc00117 	ldw	ra,4(sp)
   4fa90:	dc000017 	ldw	r16,0(sp)
   4fa94:	dec00204 	addi	sp,sp,8
   4fa98:	f800283a 	ret

0004fa9c <__assert_func>:
   4fa9c:	00800174 	movhi	r2,5
   4faa0:	1217c217 	ldw	r8,24328(r2)
   4faa4:	defffc04 	addi	sp,sp,-16
   4faa8:	3807883a 	mov	r3,r7
   4faac:	3005883a 	mov	r2,r6
   4fab0:	dfc00315 	stw	ra,12(sp)
   4fab4:	42400317 	ldw	r9,12(r8)
   4fab8:	200f883a 	mov	r7,r4
   4fabc:	2811883a 	mov	r8,r5
   4fac0:	180d883a 	mov	r6,r3
   4fac4:	10000a26 	beq	r2,zero,4faf0 <__assert_func+0x54>
   4fac8:	00c00174 	movhi	r3,5
   4facc:	18d01904 	addi	r3,r3,16484
   4fad0:	01400174 	movhi	r5,5
   4fad4:	29501d04 	addi	r5,r5,16500
   4fad8:	4809883a 	mov	r4,r9
   4fadc:	d8c00115 	stw	r3,4(sp)
   4fae0:	da000015 	stw	r8,0(sp)
   4fae4:	d8800215 	stw	r2,8(sp)
   4fae8:	004fd680 	call	4fd68 <fiprintf>
   4faec:	00504500 	call	50450 <abort>
   4faf0:	00c00174 	movhi	r3,5
   4faf4:	18d01c04 	addi	r3,r3,16496
   4faf8:	1805883a 	mov	r2,r3
   4fafc:	003ff406 	br	4fad0 <__assert_func+0x34>

0004fb00 <__assert>:
   4fb00:	deffff04 	addi	sp,sp,-4
   4fb04:	300f883a 	mov	r7,r6
   4fb08:	000d883a 	mov	r6,zero
   4fb0c:	dfc00015 	stw	ra,0(sp)
   4fb10:	004fa9c0 	call	4fa9c <__assert_func>

0004fb14 <_calloc_r>:
   4fb14:	2804d43a 	srli	r2,r5,16
   4fb18:	deffff04 	addi	sp,sp,-4
   4fb1c:	dfc00015 	stw	ra,0(sp)
   4fb20:	3006d43a 	srli	r3,r6,16
   4fb24:	10002a1e 	bne	r2,zero,4fbd0 <_calloc_r+0xbc>
   4fb28:	18003a1e 	bne	r3,zero,4fc14 <_calloc_r+0x100>
   4fb2c:	297fffcc 	andi	r5,r5,65535
   4fb30:	31bfffcc 	andi	r6,r6,65535
   4fb34:	298b383a 	mul	r5,r5,r6
   4fb38:	004be800 	call	4be80 <_malloc_r>
   4fb3c:	1009883a 	mov	r4,r2
   4fb40:	10001626 	beq	r2,zero,4fb9c <_calloc_r+0x88>
   4fb44:	11bfff17 	ldw	r6,-4(r2)
   4fb48:	00bfff04 	movi	r2,-4
   4fb4c:	308c703a 	and	r6,r6,r2
   4fb50:	31bfff04 	addi	r6,r6,-4
   4fb54:	30800968 	cmpgeui	r2,r6,37
   4fb58:	1000141e 	bne	r2,zero,4fbac <_calloc_r+0x98>
   4fb5c:	30800530 	cmpltui	r2,r6,20
   4fb60:	10000a1e 	bne	r2,zero,4fb8c <_calloc_r+0x78>
   4fb64:	20000015 	stw	zero,0(r4)
   4fb68:	20000115 	stw	zero,4(r4)
   4fb6c:	30800728 	cmpgeui	r2,r6,28
   4fb70:	10001526 	beq	r2,zero,4fbc8 <_calloc_r+0xb4>
   4fb74:	20000215 	stw	zero,8(r4)
   4fb78:	20000315 	stw	zero,12(r4)
   4fb7c:	31800920 	cmpeqi	r6,r6,36
   4fb80:	30002b1e 	bne	r6,zero,4fc30 <_calloc_r+0x11c>
   4fb84:	20800404 	addi	r2,r4,16
   4fb88:	00000106 	br	4fb90 <_calloc_r+0x7c>
   4fb8c:	2005883a 	mov	r2,r4
   4fb90:	10000015 	stw	zero,0(r2)
   4fb94:	10000115 	stw	zero,4(r2)
   4fb98:	10000215 	stw	zero,8(r2)
   4fb9c:	2005883a 	mov	r2,r4
   4fba0:	dfc00017 	ldw	ra,0(sp)
   4fba4:	dec00104 	addi	sp,sp,4
   4fba8:	f800283a 	ret
   4fbac:	000b883a 	mov	r5,zero
   4fbb0:	004c95c0 	call	4c95c <memset>
   4fbb4:	1009883a 	mov	r4,r2
   4fbb8:	2005883a 	mov	r2,r4
   4fbbc:	dfc00017 	ldw	ra,0(sp)
   4fbc0:	dec00104 	addi	sp,sp,4
   4fbc4:	f800283a 	ret
   4fbc8:	20800204 	addi	r2,r4,8
   4fbcc:	003ff006 	br	4fb90 <_calloc_r+0x7c>
   4fbd0:	1800121e 	bne	r3,zero,4fc1c <_calloc_r+0x108>
   4fbd4:	1007883a 	mov	r3,r2
   4fbd8:	3005883a 	mov	r2,r6
   4fbdc:	297fffcc 	andi	r5,r5,65535
   4fbe0:	31bfffcc 	andi	r6,r6,65535
   4fbe4:	298b383a 	mul	r5,r5,r6
   4fbe8:	18ffffcc 	andi	r3,r3,65535
   4fbec:	10bfffcc 	andi	r2,r2,65535
   4fbf0:	10c5383a 	mul	r2,r2,r3
   4fbf4:	2806d43a 	srli	r3,r5,16
   4fbf8:	10c5883a 	add	r2,r2,r3
   4fbfc:	1006d43a 	srli	r3,r2,16
   4fc00:	1800061e 	bne	r3,zero,4fc1c <_calloc_r+0x108>
   4fc04:	1004943a 	slli	r2,r2,16
   4fc08:	297fffcc 	andi	r5,r5,65535
   4fc0c:	114ab03a 	or	r5,r2,r5
   4fc10:	003fc906 	br	4fb38 <_calloc_r+0x24>
   4fc14:	2805883a 	mov	r2,r5
   4fc18:	003ff006 	br	4fbdc <_calloc_r+0xc8>
   4fc1c:	0046dcc0 	call	46dcc <__errno>
   4fc20:	00c00304 	movi	r3,12
   4fc24:	10c00015 	stw	r3,0(r2)
   4fc28:	0009883a 	mov	r4,zero
   4fc2c:	003fdb06 	br	4fb9c <_calloc_r+0x88>
   4fc30:	20000415 	stw	zero,16(r4)
   4fc34:	20800604 	addi	r2,r4,24
   4fc38:	20000515 	stw	zero,20(r4)
   4fc3c:	003fd406 	br	4fb90 <_calloc_r+0x7c>

0004fc40 <_fclose_r>:
   4fc40:	defffc04 	addi	sp,sp,-16
   4fc44:	dfc00315 	stw	ra,12(sp)
   4fc48:	dc800215 	stw	r18,8(sp)
   4fc4c:	dc400115 	stw	r17,4(sp)
   4fc50:	dc000015 	stw	r16,0(sp)
   4fc54:	28000726 	beq	r5,zero,4fc74 <_fclose_r+0x34>
   4fc58:	2821883a 	mov	r16,r5
   4fc5c:	2023883a 	mov	r17,r4
   4fc60:	20000226 	beq	r4,zero,4fc6c <_fclose_r+0x2c>
   4fc64:	20800e17 	ldw	r2,56(r4)
   4fc68:	10002726 	beq	r2,zero,4fd08 <_fclose_r+0xc8>
   4fc6c:	8080030f 	ldh	r2,12(r16)
   4fc70:	1000081e 	bne	r2,zero,4fc94 <_fclose_r+0x54>
   4fc74:	0025883a 	mov	r18,zero
   4fc78:	9005883a 	mov	r2,r18
   4fc7c:	dfc00317 	ldw	ra,12(sp)
   4fc80:	dc800217 	ldw	r18,8(sp)
   4fc84:	dc400117 	ldw	r17,4(sp)
   4fc88:	dc000017 	ldw	r16,0(sp)
   4fc8c:	dec00404 	addi	sp,sp,16
   4fc90:	f800283a 	ret
   4fc94:	800b883a 	mov	r5,r16
   4fc98:	8809883a 	mov	r4,r17
   4fc9c:	004ab7c0 	call	4ab7c <__sflush_r>
   4fca0:	80c00b17 	ldw	r3,44(r16)
   4fca4:	1025883a 	mov	r18,r2
   4fca8:	18000426 	beq	r3,zero,4fcbc <_fclose_r+0x7c>
   4fcac:	81400717 	ldw	r5,28(r16)
   4fcb0:	8809883a 	mov	r4,r17
   4fcb4:	183ee83a 	callr	r3
   4fcb8:	10001716 	blt	r2,zero,4fd18 <_fclose_r+0xd8>
   4fcbc:	8080030b 	ldhu	r2,12(r16)
   4fcc0:	1080200c 	andi	r2,r2,128
   4fcc4:	1000181e 	bne	r2,zero,4fd28 <_fclose_r+0xe8>
   4fcc8:	81400c17 	ldw	r5,48(r16)
   4fccc:	28000526 	beq	r5,zero,4fce4 <_fclose_r+0xa4>
   4fcd0:	80801004 	addi	r2,r16,64
   4fcd4:	28800226 	beq	r5,r2,4fce0 <_fclose_r+0xa0>
   4fcd8:	8809883a 	mov	r4,r17
   4fcdc:	004b3280 	call	4b328 <_free_r>
   4fce0:	80000c15 	stw	zero,48(r16)
   4fce4:	81401117 	ldw	r5,68(r16)
   4fce8:	28000326 	beq	r5,zero,4fcf8 <_fclose_r+0xb8>
   4fcec:	8809883a 	mov	r4,r17
   4fcf0:	004b3280 	call	4b328 <_free_r>
   4fcf4:	80001115 	stw	zero,68(r16)
   4fcf8:	004b1d40 	call	4b1d4 <__sfp_lock_acquire>
   4fcfc:	8000030d 	sth	zero,12(r16)
   4fd00:	004b1d80 	call	4b1d8 <__sfp_lock_release>
   4fd04:	003fdc06 	br	4fc78 <_fclose_r+0x38>
   4fd08:	004b1c40 	call	4b1c4 <__sinit>
   4fd0c:	8080030f 	ldh	r2,12(r16)
   4fd10:	103fd826 	beq	r2,zero,4fc74 <_fclose_r+0x34>
   4fd14:	003fdf06 	br	4fc94 <_fclose_r+0x54>
   4fd18:	8080030b 	ldhu	r2,12(r16)
   4fd1c:	04bfffc4 	movi	r18,-1
   4fd20:	1080200c 	andi	r2,r2,128
   4fd24:	103fe826 	beq	r2,zero,4fcc8 <_fclose_r+0x88>
   4fd28:	81400417 	ldw	r5,16(r16)
   4fd2c:	8809883a 	mov	r4,r17
   4fd30:	004b3280 	call	4b328 <_free_r>
   4fd34:	003fe406 	br	4fcc8 <_fclose_r+0x88>

0004fd38 <fclose>:
   4fd38:	00800174 	movhi	r2,5
   4fd3c:	200b883a 	mov	r5,r4
   4fd40:	1117c217 	ldw	r4,24328(r2)
   4fd44:	004fc401 	jmpi	4fc40 <_fclose_r>

0004fd48 <_fiprintf_r>:
   4fd48:	defffe04 	addi	sp,sp,-8
   4fd4c:	dfc00015 	stw	ra,0(sp)
   4fd50:	d9c00115 	stw	r7,4(sp)
   4fd54:	d9c00104 	addi	r7,sp,4
   4fd58:	005031c0 	call	5031c <_vfiprintf_r>
   4fd5c:	dfc00017 	ldw	ra,0(sp)
   4fd60:	dec00204 	addi	sp,sp,8
   4fd64:	f800283a 	ret

0004fd68 <fiprintf>:
   4fd68:	defffd04 	addi	sp,sp,-12
   4fd6c:	2005883a 	mov	r2,r4
   4fd70:	dfc00015 	stw	ra,0(sp)
   4fd74:	d9800115 	stw	r6,4(sp)
   4fd78:	d9c00215 	stw	r7,8(sp)
   4fd7c:	00c00174 	movhi	r3,5
   4fd80:	1917c217 	ldw	r4,24328(r3)
   4fd84:	280d883a 	mov	r6,r5
   4fd88:	d9c00104 	addi	r7,sp,4
   4fd8c:	100b883a 	mov	r5,r2
   4fd90:	005031c0 	call	5031c <_vfiprintf_r>
   4fd94:	dfc00017 	ldw	ra,0(sp)
   4fd98:	dec00304 	addi	sp,sp,12
   4fd9c:	f800283a 	ret

0004fda0 <__fputwc>:
   4fda0:	defff904 	addi	sp,sp,-28
   4fda4:	dcc00415 	stw	r19,16(sp)
   4fda8:	dc800315 	stw	r18,12(sp)
   4fdac:	dc000115 	stw	r16,4(sp)
   4fdb0:	dfc00615 	stw	ra,24(sp)
   4fdb4:	dd000515 	stw	r20,20(sp)
   4fdb8:	dc400215 	stw	r17,8(sp)
   4fdbc:	2025883a 	mov	r18,r4
   4fdc0:	2827883a 	mov	r19,r5
   4fdc4:	3021883a 	mov	r16,r6
   4fdc8:	00500cc0 	call	500cc <__locale_mb_cur_max>
   4fdcc:	10800058 	cmpnei	r2,r2,1
   4fdd0:	1000071e 	bne	r2,zero,4fdf0 <__fputwc+0x50>
   4fdd4:	98bfffc4 	addi	r2,r19,-1
   4fdd8:	10803fe8 	cmpgeui	r2,r2,255
   4fddc:	1000041e 	bne	r2,zero,4fdf0 <__fputwc+0x50>
   4fde0:	980b883a 	mov	r5,r19
   4fde4:	dcc000c5 	stb	r19,3(sp)
   4fde8:	05000044 	movi	r20,1
   4fdec:	00000a06 	br	4fe18 <__fputwc+0x78>
   4fdf0:	81c01704 	addi	r7,r16,92
   4fdf4:	980d883a 	mov	r6,r19
   4fdf8:	d94000c4 	addi	r5,sp,3
   4fdfc:	9009883a 	mov	r4,r18
   4fe00:	00503200 	call	50320 <_wcrtomb_r>
   4fe04:	1029883a 	mov	r20,r2
   4fe08:	10bfffd8 	cmpnei	r2,r2,-1
   4fe0c:	10003926 	beq	r2,zero,4fef4 <__fputwc+0x154>
   4fe10:	a0001f26 	beq	r20,zero,4fe90 <__fputwc+0xf0>
   4fe14:	d94000c3 	ldbu	r5,3(sp)
   4fe18:	0023883a 	mov	r17,zero
   4fe1c:	00000a06 	br	4fe48 <__fputwc+0xa8>
   4fe20:	80800017 	ldw	r2,0(r16)
   4fe24:	11400005 	stb	r5,0(r2)
   4fe28:	80c00017 	ldw	r3,0(r16)
   4fe2c:	18c00044 	addi	r3,r3,1
   4fe30:	80c00015 	stw	r3,0(r16)
   4fe34:	8c400044 	addi	r17,r17,1
   4fe38:	d88000c4 	addi	r2,sp,3
   4fe3c:	1447883a 	add	r3,r2,r17
   4fe40:	8d00132e 	bgeu	r17,r20,4fe90 <__fputwc+0xf0>
   4fe44:	19400003 	ldbu	r5,0(r3)
   4fe48:	80c00217 	ldw	r3,8(r16)
   4fe4c:	18ffffc4 	addi	r3,r3,-1
   4fe50:	80c00215 	stw	r3,8(r16)
   4fe54:	183ff20e 	bge	r3,zero,4fe20 <__fputwc+0x80>
   4fe58:	80800617 	ldw	r2,24(r16)
   4fe5c:	18801616 	blt	r3,r2,4feb8 <__fputwc+0x118>
   4fe60:	80800017 	ldw	r2,0(r16)
   4fe64:	11400005 	stb	r5,0(r2)
   4fe68:	80800017 	ldw	r2,0(r16)
   4fe6c:	10c00003 	ldbu	r3,0(r2)
   4fe70:	10800044 	addi	r2,r2,1
   4fe74:	18c002a0 	cmpeqi	r3,r3,10
   4fe78:	1800171e 	bne	r3,zero,4fed8 <__fputwc+0x138>
   4fe7c:	80800015 	stw	r2,0(r16)
   4fe80:	8c400044 	addi	r17,r17,1
   4fe84:	d88000c4 	addi	r2,sp,3
   4fe88:	1447883a 	add	r3,r2,r17
   4fe8c:	8d3fed36 	bltu	r17,r20,4fe44 <__fputwc+0xa4>
   4fe90:	9829883a 	mov	r20,r19
   4fe94:	a005883a 	mov	r2,r20
   4fe98:	dfc00617 	ldw	ra,24(sp)
   4fe9c:	dd000517 	ldw	r20,20(sp)
   4fea0:	dcc00417 	ldw	r19,16(sp)
   4fea4:	dc800317 	ldw	r18,12(sp)
   4fea8:	dc400217 	ldw	r17,8(sp)
   4feac:	dc000117 	ldw	r16,4(sp)
   4feb0:	dec00704 	addi	sp,sp,28
   4feb4:	f800283a 	ret
   4feb8:	29403fcc 	andi	r5,r5,255
   4febc:	800d883a 	mov	r6,r16
   4fec0:	9009883a 	mov	r4,r18
   4fec4:	004f8800 	call	4f880 <__swbuf_r>
   4fec8:	10bfffe0 	cmpeqi	r2,r2,-1
   4fecc:	103fd926 	beq	r2,zero,4fe34 <__fputwc+0x94>
   4fed0:	053fffc4 	movi	r20,-1
   4fed4:	003fef06 	br	4fe94 <__fputwc+0xf4>
   4fed8:	800d883a 	mov	r6,r16
   4fedc:	01400284 	movi	r5,10
   4fee0:	9009883a 	mov	r4,r18
   4fee4:	004f8800 	call	4f880 <__swbuf_r>
   4fee8:	10bfffe0 	cmpeqi	r2,r2,-1
   4feec:	103fd126 	beq	r2,zero,4fe34 <__fputwc+0x94>
   4fef0:	003ff706 	br	4fed0 <__fputwc+0x130>
   4fef4:	8080030b 	ldhu	r2,12(r16)
   4fef8:	10801014 	ori	r2,r2,64
   4fefc:	8080030d 	sth	r2,12(r16)
   4ff00:	003fe406 	br	4fe94 <__fputwc+0xf4>

0004ff04 <_fputwc_r>:
   4ff04:	3080030b 	ldhu	r2,12(r6)
   4ff08:	10c8000c 	andi	r3,r2,8192
   4ff0c:	1800051e 	bne	r3,zero,4ff24 <_fputwc_r+0x20>
   4ff10:	30c01917 	ldw	r3,100(r6)
   4ff14:	10880014 	ori	r2,r2,8192
   4ff18:	3080030d 	sth	r2,12(r6)
   4ff1c:	18880014 	ori	r2,r3,8192
   4ff20:	30801915 	stw	r2,100(r6)
   4ff24:	004fda01 	jmpi	4fda0 <__fputwc>

0004ff28 <fputwc>:
   4ff28:	defffc04 	addi	sp,sp,-16
   4ff2c:	00800174 	movhi	r2,5
   4ff30:	dc000215 	stw	r16,8(sp)
   4ff34:	1417c217 	ldw	r16,24328(r2)
   4ff38:	dfc00315 	stw	ra,12(sp)
   4ff3c:	280d883a 	mov	r6,r5
   4ff40:	200b883a 	mov	r5,r4
   4ff44:	80000226 	beq	r16,zero,4ff50 <fputwc+0x28>
   4ff48:	80800e17 	ldw	r2,56(r16)
   4ff4c:	10000d26 	beq	r2,zero,4ff84 <fputwc+0x5c>
   4ff50:	3080030b 	ldhu	r2,12(r6)
   4ff54:	10c8000c 	andi	r3,r2,8192
   4ff58:	1800051e 	bne	r3,zero,4ff70 <fputwc+0x48>
   4ff5c:	30c01917 	ldw	r3,100(r6)
   4ff60:	10880014 	ori	r2,r2,8192
   4ff64:	3080030d 	sth	r2,12(r6)
   4ff68:	18880014 	ori	r2,r3,8192
   4ff6c:	30801915 	stw	r2,100(r6)
   4ff70:	8009883a 	mov	r4,r16
   4ff74:	dfc00317 	ldw	ra,12(sp)
   4ff78:	dc000217 	ldw	r16,8(sp)
   4ff7c:	dec00404 	addi	sp,sp,16
   4ff80:	004fda01 	jmpi	4fda0 <__fputwc>
   4ff84:	d9000015 	stw	r4,0(sp)
   4ff88:	8009883a 	mov	r4,r16
   4ff8c:	d9800115 	stw	r6,4(sp)
   4ff90:	004b1c40 	call	4b1c4 <__sinit>
   4ff94:	d9800117 	ldw	r6,4(sp)
   4ff98:	d9400017 	ldw	r5,0(sp)
   4ff9c:	003fec06 	br	4ff50 <fputwc+0x28>

0004ffa0 <_fstat_r>:
   4ffa0:	2807883a 	mov	r3,r5
   4ffa4:	defffe04 	addi	sp,sp,-8
   4ffa8:	dc000015 	stw	r16,0(sp)
   4ffac:	00800174 	movhi	r2,5
   4ffb0:	300b883a 	mov	r5,r6
   4ffb4:	2021883a 	mov	r16,r4
   4ffb8:	1809883a 	mov	r4,r3
   4ffbc:	dfc00115 	stw	ra,4(sp)
   4ffc0:	101ec815 	stw	zero,31520(r2)
   4ffc4:	00516540 	call	51654 <fstat>
   4ffc8:	10ffffd8 	cmpnei	r3,r2,-1
   4ffcc:	18000426 	beq	r3,zero,4ffe0 <_fstat_r+0x40>
   4ffd0:	dfc00117 	ldw	ra,4(sp)
   4ffd4:	dc000017 	ldw	r16,0(sp)
   4ffd8:	dec00204 	addi	sp,sp,8
   4ffdc:	f800283a 	ret
   4ffe0:	00c00174 	movhi	r3,5
   4ffe4:	18dec817 	ldw	r3,31520(r3)
   4ffe8:	183ff926 	beq	r3,zero,4ffd0 <_fstat_r+0x30>
   4ffec:	80c00015 	stw	r3,0(r16)
   4fff0:	dfc00117 	ldw	ra,4(sp)
   4fff4:	dc000017 	ldw	r16,0(sp)
   4fff8:	dec00204 	addi	sp,sp,8
   4fffc:	f800283a 	ret

00050000 <_isatty_r>:
   50000:	defffe04 	addi	sp,sp,-8
   50004:	dc000015 	stw	r16,0(sp)
   50008:	00800174 	movhi	r2,5
   5000c:	2021883a 	mov	r16,r4
   50010:	2809883a 	mov	r4,r5
   50014:	dfc00115 	stw	ra,4(sp)
   50018:	101ec815 	stw	zero,31520(r2)
   5001c:	00517600 	call	51760 <isatty>
   50020:	10ffffd8 	cmpnei	r3,r2,-1
   50024:	18000426 	beq	r3,zero,50038 <_isatty_r+0x38>
   50028:	dfc00117 	ldw	ra,4(sp)
   5002c:	dc000017 	ldw	r16,0(sp)
   50030:	dec00204 	addi	sp,sp,8
   50034:	f800283a 	ret
   50038:	00c00174 	movhi	r3,5
   5003c:	18dec817 	ldw	r3,31520(r3)
   50040:	183ff926 	beq	r3,zero,50028 <_isatty_r+0x28>
   50044:	80c00015 	stw	r3,0(r16)
   50048:	dfc00117 	ldw	ra,4(sp)
   5004c:	dc000017 	ldw	r16,0(sp)
   50050:	dec00204 	addi	sp,sp,8
   50054:	f800283a 	ret

00050058 <_setlocale_r>:
   50058:	30001626 	beq	r6,zero,500b4 <_setlocale_r+0x5c>
   5005c:	01400174 	movhi	r5,5
   50060:	defffe04 	addi	sp,sp,-8
   50064:	29502a04 	addi	r5,r5,16552
   50068:	3009883a 	mov	r4,r6
   5006c:	dc000015 	stw	r16,0(sp)
   50070:	dfc00115 	stw	ra,4(sp)
   50074:	3021883a 	mov	r16,r6
   50078:	00502640 	call	50264 <strcmp>
   5007c:	1000061e 	bne	r2,zero,50098 <_setlocale_r+0x40>
   50080:	00800174 	movhi	r2,5
   50084:	10902904 	addi	r2,r2,16548
   50088:	dfc00117 	ldw	ra,4(sp)
   5008c:	dc000017 	ldw	r16,0(sp)
   50090:	dec00204 	addi	sp,sp,8
   50094:	f800283a 	ret
   50098:	80800003 	ldbu	r2,0(r16)
   5009c:	10bfef44 	addi	r2,r2,-67
   500a0:	10000726 	beq	r2,zero,500c0 <_setlocale_r+0x68>
   500a4:	80800003 	ldbu	r2,0(r16)
   500a8:	103ff526 	beq	r2,zero,50080 <_setlocale_r+0x28>
   500ac:	0005883a 	mov	r2,zero
   500b0:	003ff506 	br	50088 <_setlocale_r+0x30>
   500b4:	00800174 	movhi	r2,5
   500b8:	10902904 	addi	r2,r2,16548
   500bc:	f800283a 	ret
   500c0:	80800043 	ldbu	r2,1(r16)
   500c4:	103fee26 	beq	r2,zero,50080 <_setlocale_r+0x28>
   500c8:	003ff606 	br	500a4 <_setlocale_r+0x4c>

000500cc <__locale_mb_cur_max>:
   500cc:	00800174 	movhi	r2,5
   500d0:	10932e07 	ldb	r2,19640(r2)
   500d4:	f800283a 	ret

000500d8 <setlocale>:
   500d8:	28001626 	beq	r5,zero,50134 <setlocale+0x5c>
   500dc:	defffe04 	addi	sp,sp,-8
   500e0:	dc000015 	stw	r16,0(sp)
   500e4:	2821883a 	mov	r16,r5
   500e8:	01400174 	movhi	r5,5
   500ec:	29502a04 	addi	r5,r5,16552
   500f0:	8009883a 	mov	r4,r16
   500f4:	dfc00115 	stw	ra,4(sp)
   500f8:	00502640 	call	50264 <strcmp>
   500fc:	1000061e 	bne	r2,zero,50118 <setlocale+0x40>
   50100:	00800174 	movhi	r2,5
   50104:	10902904 	addi	r2,r2,16548
   50108:	dfc00117 	ldw	ra,4(sp)
   5010c:	dc000017 	ldw	r16,0(sp)
   50110:	dec00204 	addi	sp,sp,8
   50114:	f800283a 	ret
   50118:	80800003 	ldbu	r2,0(r16)
   5011c:	10bfef44 	addi	r2,r2,-67
   50120:	10000726 	beq	r2,zero,50140 <setlocale+0x68>
   50124:	80800003 	ldbu	r2,0(r16)
   50128:	103ff526 	beq	r2,zero,50100 <setlocale+0x28>
   5012c:	0005883a 	mov	r2,zero
   50130:	003ff506 	br	50108 <setlocale+0x30>
   50134:	00800174 	movhi	r2,5
   50138:	10902904 	addi	r2,r2,16548
   5013c:	f800283a 	ret
   50140:	80800043 	ldbu	r2,1(r16)
   50144:	103fee26 	beq	r2,zero,50100 <setlocale+0x28>
   50148:	003ff606 	br	50124 <setlocale+0x4c>

0005014c <_lseek_r>:
   5014c:	2807883a 	mov	r3,r5
   50150:	defffe04 	addi	sp,sp,-8
   50154:	dc000015 	stw	r16,0(sp)
   50158:	300b883a 	mov	r5,r6
   5015c:	00800174 	movhi	r2,5
   50160:	380d883a 	mov	r6,r7
   50164:	2021883a 	mov	r16,r4
   50168:	1809883a 	mov	r4,r3
   5016c:	dfc00115 	stw	ra,4(sp)
   50170:	101ec815 	stw	zero,31520(r2)
   50174:	0051a580 	call	51a58 <lseek>
   50178:	10ffffd8 	cmpnei	r3,r2,-1
   5017c:	18000426 	beq	r3,zero,50190 <_lseek_r+0x44>
   50180:	dfc00117 	ldw	ra,4(sp)
   50184:	dc000017 	ldw	r16,0(sp)
   50188:	dec00204 	addi	sp,sp,8
   5018c:	f800283a 	ret
   50190:	00c00174 	movhi	r3,5
   50194:	18dec817 	ldw	r3,31520(r3)
   50198:	183ff926 	beq	r3,zero,50180 <_lseek_r+0x34>
   5019c:	80c00015 	stw	r3,0(r16)
   501a0:	dfc00117 	ldw	ra,4(sp)
   501a4:	dc000017 	ldw	r16,0(sp)
   501a8:	dec00204 	addi	sp,sp,8
   501ac:	f800283a 	ret

000501b0 <_mbtowc_r>:
   501b0:	00800174 	movhi	r2,5
   501b4:	10931d17 	ldw	r2,19572(r2)
   501b8:	1000683a 	jmp	r2

000501bc <__ascii_mbtowc>:
   501bc:	deffff04 	addi	sp,sp,-4
   501c0:	28000826 	beq	r5,zero,501e4 <__ascii_mbtowc+0x28>
   501c4:	30000926 	beq	r6,zero,501ec <__ascii_mbtowc+0x30>
   501c8:	38000b26 	beq	r7,zero,501f8 <__ascii_mbtowc+0x3c>
   501cc:	30800003 	ldbu	r2,0(r6)
   501d0:	28800015 	stw	r2,0(r5)
   501d4:	30800003 	ldbu	r2,0(r6)
   501d8:	1004c03a 	cmpne	r2,r2,zero
   501dc:	dec00104 	addi	sp,sp,4
   501e0:	f800283a 	ret
   501e4:	d80b883a 	mov	r5,sp
   501e8:	303ff71e 	bne	r6,zero,501c8 <__ascii_mbtowc+0xc>
   501ec:	0005883a 	mov	r2,zero
   501f0:	dec00104 	addi	sp,sp,4
   501f4:	f800283a 	ret
   501f8:	00bfff84 	movi	r2,-2
   501fc:	003ff706 	br	501dc <__ascii_mbtowc+0x20>

00050200 <_read_r>:
   50200:	2807883a 	mov	r3,r5
   50204:	defffe04 	addi	sp,sp,-8
   50208:	dc000015 	stw	r16,0(sp)
   5020c:	300b883a 	mov	r5,r6
   50210:	00800174 	movhi	r2,5
   50214:	380d883a 	mov	r6,r7
   50218:	2021883a 	mov	r16,r4
   5021c:	1809883a 	mov	r4,r3
   50220:	dfc00115 	stw	ra,4(sp)
   50224:	101ec815 	stw	zero,31520(r2)
   50228:	0051c2c0 	call	51c2c <read>
   5022c:	10ffffd8 	cmpnei	r3,r2,-1
   50230:	18000426 	beq	r3,zero,50244 <_read_r+0x44>
   50234:	dfc00117 	ldw	ra,4(sp)
   50238:	dc000017 	ldw	r16,0(sp)
   5023c:	dec00204 	addi	sp,sp,8
   50240:	f800283a 	ret
   50244:	00c00174 	movhi	r3,5
   50248:	18dec817 	ldw	r3,31520(r3)
   5024c:	183ff926 	beq	r3,zero,50234 <_read_r+0x34>
   50250:	80c00015 	stw	r3,0(r16)
   50254:	dfc00117 	ldw	ra,4(sp)
   50258:	dc000017 	ldw	r16,0(sp)
   5025c:	dec00204 	addi	sp,sp,8
   50260:	f800283a 	ret

00050264 <strcmp>:
   50264:	2144b03a 	or	r2,r4,r5
   50268:	108000cc 	andi	r2,r2,3
   5026c:	1000141e 	bne	r2,zero,502c0 <strcmp+0x5c>
   50270:	20800017 	ldw	r2,0(r4)
   50274:	28c00017 	ldw	r3,0(r5)
   50278:	10c0111e 	bne	r2,r3,502c0 <strcmp+0x5c>
   5027c:	01ffbff4 	movhi	r7,65279
   50280:	01a02074 	movhi	r6,32897
   50284:	39ffbfc4 	addi	r7,r7,-257
   50288:	31a02004 	addi	r6,r6,-32640
   5028c:	00000306 	br	5029c <strcmp+0x38>
   50290:	20800017 	ldw	r2,0(r4)
   50294:	28c00017 	ldw	r3,0(r5)
   50298:	10c0091e 	bne	r2,r3,502c0 <strcmp+0x5c>
   5029c:	11c7883a 	add	r3,r2,r7
   502a0:	0084303a 	nor	r2,zero,r2
   502a4:	1884703a 	and	r2,r3,r2
   502a8:	1184703a 	and	r2,r2,r6
   502ac:	21000104 	addi	r4,r4,4
   502b0:	29400104 	addi	r5,r5,4
   502b4:	103ff626 	beq	r2,zero,50290 <strcmp+0x2c>
   502b8:	0005883a 	mov	r2,zero
   502bc:	f800283a 	ret
   502c0:	20c00003 	ldbu	r3,0(r4)
   502c4:	18803fcc 	andi	r2,r3,255
   502c8:	1080201c 	xori	r2,r2,128
   502cc:	10bfe004 	addi	r2,r2,-128
   502d0:	1000071e 	bne	r2,zero,502f0 <strcmp+0x8c>
   502d4:	00000a06 	br	50300 <strcmp+0x9c>
   502d8:	20c00003 	ldbu	r3,0(r4)
   502dc:	29400044 	addi	r5,r5,1
   502e0:	18803fcc 	andi	r2,r3,255
   502e4:	1080201c 	xori	r2,r2,128
   502e8:	10bfe004 	addi	r2,r2,-128
   502ec:	10000726 	beq	r2,zero,5030c <strcmp+0xa8>
   502f0:	29800007 	ldb	r6,0(r5)
   502f4:	21000044 	addi	r4,r4,1
   502f8:	30bff726 	beq	r6,r2,502d8 <strcmp+0x74>
   502fc:	18803fcc 	andi	r2,r3,255
   50300:	28c00003 	ldbu	r3,0(r5)
   50304:	10c5c83a 	sub	r2,r2,r3
   50308:	f800283a 	ret
   5030c:	28c00003 	ldbu	r3,0(r5)
   50310:	0005883a 	mov	r2,zero
   50314:	10c5c83a 	sub	r2,r2,r3
   50318:	f800283a 	ret

0005031c <_vfiprintf_r>:
   5031c:	004e5581 	jmpi	4e558 <___vfiprintf_internal_r>

00050320 <_wcrtomb_r>:
   50320:	defffa04 	addi	sp,sp,-24
   50324:	dc400415 	stw	r17,16(sp)
   50328:	dc000315 	stw	r16,12(sp)
   5032c:	00800174 	movhi	r2,5
   50330:	dfc00515 	stw	ra,20(sp)
   50334:	10931c17 	ldw	r2,19568(r2)
   50338:	2023883a 	mov	r17,r4
   5033c:	3821883a 	mov	r16,r7
   50340:	28000826 	beq	r5,zero,50364 <_wcrtomb_r+0x44>
   50344:	103ee83a 	callr	r2
   50348:	10ffffd8 	cmpnei	r3,r2,-1
   5034c:	18000a26 	beq	r3,zero,50378 <_wcrtomb_r+0x58>
   50350:	dfc00517 	ldw	ra,20(sp)
   50354:	dc400417 	ldw	r17,16(sp)
   50358:	dc000317 	ldw	r16,12(sp)
   5035c:	dec00604 	addi	sp,sp,24
   50360:	f800283a 	ret
   50364:	000d883a 	mov	r6,zero
   50368:	d9400084 	addi	r5,sp,2
   5036c:	103ee83a 	callr	r2
   50370:	10ffffd8 	cmpnei	r3,r2,-1
   50374:	183ff61e 	bne	r3,zero,50350 <_wcrtomb_r+0x30>
   50378:	00802284 	movi	r2,138
   5037c:	80000015 	stw	zero,0(r16)
   50380:	88800015 	stw	r2,0(r17)
   50384:	00bfffc4 	movi	r2,-1
   50388:	003ff106 	br	50350 <_wcrtomb_r+0x30>

0005038c <wcrtomb>:
   5038c:	defffa04 	addi	sp,sp,-24
   50390:	00c00174 	movhi	r3,5
   50394:	dc400415 	stw	r17,16(sp)
   50398:	dc000315 	stw	r16,12(sp)
   5039c:	1c57c217 	ldw	r17,24328(r3)
   503a0:	dfc00515 	stw	ra,20(sp)
   503a4:	00c00174 	movhi	r3,5
   503a8:	18d31c17 	ldw	r3,19568(r3)
   503ac:	3021883a 	mov	r16,r6
   503b0:	20000c26 	beq	r4,zero,503e4 <wcrtomb+0x58>
   503b4:	280d883a 	mov	r6,r5
   503b8:	800f883a 	mov	r7,r16
   503bc:	200b883a 	mov	r5,r4
   503c0:	8809883a 	mov	r4,r17
   503c4:	183ee83a 	callr	r3
   503c8:	10ffffd8 	cmpnei	r3,r2,-1
   503cc:	18000c26 	beq	r3,zero,50400 <wcrtomb+0x74>
   503d0:	dfc00517 	ldw	ra,20(sp)
   503d4:	dc400417 	ldw	r17,16(sp)
   503d8:	dc000317 	ldw	r16,12(sp)
   503dc:	dec00604 	addi	sp,sp,24
   503e0:	f800283a 	ret
   503e4:	300f883a 	mov	r7,r6
   503e8:	d9400084 	addi	r5,sp,2
   503ec:	000d883a 	mov	r6,zero
   503f0:	8809883a 	mov	r4,r17
   503f4:	183ee83a 	callr	r3
   503f8:	10ffffd8 	cmpnei	r3,r2,-1
   503fc:	183ff41e 	bne	r3,zero,503d0 <wcrtomb+0x44>
   50400:	00802284 	movi	r2,138
   50404:	80000015 	stw	zero,0(r16)
   50408:	88800015 	stw	r2,0(r17)
   5040c:	00bfffc4 	movi	r2,-1
   50410:	003fef06 	br	503d0 <wcrtomb+0x44>

00050414 <_wctomb_r>:
   50414:	00800174 	movhi	r2,5
   50418:	10931c17 	ldw	r2,19568(r2)
   5041c:	1000683a 	jmp	r2

00050420 <__ascii_wctomb>:
   50420:	28000926 	beq	r5,zero,50448 <__ascii_wctomb+0x28>
   50424:	30804030 	cmpltui	r2,r6,256
   50428:	10000326 	beq	r2,zero,50438 <__ascii_wctomb+0x18>
   5042c:	29800005 	stb	r6,0(r5)
   50430:	00800044 	movi	r2,1
   50434:	f800283a 	ret
   50438:	00802284 	movi	r2,138
   5043c:	20800015 	stw	r2,0(r4)
   50440:	00bfffc4 	movi	r2,-1
   50444:	f800283a 	ret
   50448:	0005883a 	mov	r2,zero
   5044c:	f800283a 	ret

00050450 <abort>:
   50450:	deffff04 	addi	sp,sp,-4
   50454:	01000184 	movi	r4,6
   50458:	dfc00015 	stw	ra,0(sp)
   5045c:	00506dc0 	call	506dc <raise>
   50460:	01000044 	movi	r4,1
   50464:	00515e00 	call	515e0 <_exit>

00050468 <_init_signal_r>:
   50468:	2080b717 	ldw	r2,732(r4)
   5046c:	10000226 	beq	r2,zero,50478 <_init_signal_r+0x10>
   50470:	0005883a 	mov	r2,zero
   50474:	f800283a 	ret
   50478:	defffe04 	addi	sp,sp,-8
   5047c:	01402004 	movi	r5,128
   50480:	dc000015 	stw	r16,0(sp)
   50484:	dfc00115 	stw	ra,4(sp)
   50488:	2021883a 	mov	r16,r4
   5048c:	004be800 	call	4be80 <_malloc_r>
   50490:	8080b715 	stw	r2,732(r16)
   50494:	1009883a 	mov	r4,r2
   50498:	10000826 	beq	r2,zero,504bc <_init_signal_r+0x54>
   5049c:	01802004 	movi	r6,128
   504a0:	000b883a 	mov	r5,zero
   504a4:	004c95c0 	call	4c95c <memset>
   504a8:	0005883a 	mov	r2,zero
   504ac:	dfc00117 	ldw	ra,4(sp)
   504b0:	dc000017 	ldw	r16,0(sp)
   504b4:	dec00204 	addi	sp,sp,8
   504b8:	f800283a 	ret
   504bc:	00bfffc4 	movi	r2,-1
   504c0:	003ffa06 	br	504ac <_init_signal_r+0x44>

000504c4 <_signal_r>:
   504c4:	defffc04 	addi	sp,sp,-16
   504c8:	dc400115 	stw	r17,4(sp)
   504cc:	dfc00315 	stw	ra,12(sp)
   504d0:	dc800215 	stw	r18,8(sp)
   504d4:	dc000015 	stw	r16,0(sp)
   504d8:	28800830 	cmpltui	r2,r5,32
   504dc:	2023883a 	mov	r17,r4
   504e0:	10000e26 	beq	r2,zero,5051c <_signal_r+0x58>
   504e4:	20c0b717 	ldw	r3,732(r4)
   504e8:	2821883a 	mov	r16,r5
   504ec:	3025883a 	mov	r18,r6
   504f0:	18000e26 	beq	r3,zero,5052c <_signal_r+0x68>
   504f4:	802090ba 	slli	r16,r16,2
   504f8:	1c07883a 	add	r3,r3,r16
   504fc:	18800017 	ldw	r2,0(r3)
   50500:	1c800015 	stw	r18,0(r3)
   50504:	dfc00317 	ldw	ra,12(sp)
   50508:	dc800217 	ldw	r18,8(sp)
   5050c:	dc400117 	ldw	r17,4(sp)
   50510:	dc000017 	ldw	r16,0(sp)
   50514:	dec00404 	addi	sp,sp,16
   50518:	f800283a 	ret
   5051c:	00800584 	movi	r2,22
   50520:	20800015 	stw	r2,0(r4)
   50524:	00bfffc4 	movi	r2,-1
   50528:	003ff606 	br	50504 <_signal_r+0x40>
   5052c:	01402004 	movi	r5,128
   50530:	004be800 	call	4be80 <_malloc_r>
   50534:	8880b715 	stw	r2,732(r17)
   50538:	10000626 	beq	r2,zero,50554 <_signal_r+0x90>
   5053c:	01802004 	movi	r6,128
   50540:	000b883a 	mov	r5,zero
   50544:	1009883a 	mov	r4,r2
   50548:	004c95c0 	call	4c95c <memset>
   5054c:	1007883a 	mov	r3,r2
   50550:	003fe806 	br	504f4 <_signal_r+0x30>
   50554:	00bfffc4 	movi	r2,-1
   50558:	003fea06 	br	50504 <_signal_r+0x40>

0005055c <_raise_r>:
   5055c:	28800830 	cmpltui	r2,r5,32
   50560:	10002b26 	beq	r2,zero,50610 <_raise_r+0xb4>
   50564:	2080b717 	ldw	r2,732(r4)
   50568:	defffd04 	addi	sp,sp,-12
   5056c:	dc000115 	stw	r16,4(sp)
   50570:	dfc00215 	stw	ra,8(sp)
   50574:	2821883a 	mov	r16,r5
   50578:	10001026 	beq	r2,zero,505bc <_raise_r+0x60>
   5057c:	280690ba 	slli	r3,r5,2
   50580:	10c5883a 	add	r2,r2,r3
   50584:	10c00017 	ldw	r3,0(r2)
   50588:	18000c26 	beq	r3,zero,505bc <_raise_r+0x60>
   5058c:	19400060 	cmpeqi	r5,r3,1
   50590:	28001a1e 	bne	r5,zero,505fc <_raise_r+0xa0>
   50594:	197fffd8 	cmpnei	r5,r3,-1
   50598:	28001126 	beq	r5,zero,505e0 <_raise_r+0x84>
   5059c:	10000015 	stw	zero,0(r2)
   505a0:	8009883a 	mov	r4,r16
   505a4:	183ee83a 	callr	r3
   505a8:	0005883a 	mov	r2,zero
   505ac:	dfc00217 	ldw	ra,8(sp)
   505b0:	dc000117 	ldw	r16,4(sp)
   505b4:	dec00304 	addi	sp,sp,12
   505b8:	f800283a 	ret
   505bc:	d9000015 	stw	r4,0(sp)
   505c0:	00509b40 	call	509b4 <_getpid_r>
   505c4:	d9000017 	ldw	r4,0(sp)
   505c8:	800d883a 	mov	r6,r16
   505cc:	100b883a 	mov	r5,r2
   505d0:	dfc00217 	ldw	ra,8(sp)
   505d4:	dc000117 	ldw	r16,4(sp)
   505d8:	dec00304 	addi	sp,sp,12
   505dc:	00509541 	jmpi	50954 <_kill_r>
   505e0:	00800584 	movi	r2,22
   505e4:	20800015 	stw	r2,0(r4)
   505e8:	00800044 	movi	r2,1
   505ec:	dfc00217 	ldw	ra,8(sp)
   505f0:	dc000117 	ldw	r16,4(sp)
   505f4:	dec00304 	addi	sp,sp,12
   505f8:	f800283a 	ret
   505fc:	0005883a 	mov	r2,zero
   50600:	dfc00217 	ldw	ra,8(sp)
   50604:	dc000117 	ldw	r16,4(sp)
   50608:	dec00304 	addi	sp,sp,12
   5060c:	f800283a 	ret
   50610:	00800584 	movi	r2,22
   50614:	20800015 	stw	r2,0(r4)
   50618:	00bfffc4 	movi	r2,-1
   5061c:	f800283a 	ret

00050620 <__sigtramp_r>:
   50620:	28800830 	cmpltui	r2,r5,32
   50624:	10002b26 	beq	r2,zero,506d4 <__sigtramp_r+0xb4>
   50628:	20c0b717 	ldw	r3,732(r4)
   5062c:	defffd04 	addi	sp,sp,-12
   50630:	dc400115 	stw	r17,4(sp)
   50634:	dc000015 	stw	r16,0(sp)
   50638:	dfc00215 	stw	ra,8(sp)
   5063c:	2821883a 	mov	r16,r5
   50640:	2023883a 	mov	r17,r4
   50644:	18001326 	beq	r3,zero,50694 <__sigtramp_r+0x74>
   50648:	800490ba 	slli	r2,r16,2
   5064c:	1887883a 	add	r3,r3,r2
   50650:	18800017 	ldw	r2,0(r3)
   50654:	10000d26 	beq	r2,zero,5068c <__sigtramp_r+0x6c>
   50658:	113fffe0 	cmpeqi	r4,r2,-1
   5065c:	2000191e 	bne	r4,zero,506c4 <__sigtramp_r+0xa4>
   50660:	11000060 	cmpeqi	r4,r2,1
   50664:	2000151e 	bne	r4,zero,506bc <__sigtramp_r+0x9c>
   50668:	18000015 	stw	zero,0(r3)
   5066c:	8009883a 	mov	r4,r16
   50670:	103ee83a 	callr	r2
   50674:	0005883a 	mov	r2,zero
   50678:	dfc00217 	ldw	ra,8(sp)
   5067c:	dc400117 	ldw	r17,4(sp)
   50680:	dc000017 	ldw	r16,0(sp)
   50684:	dec00304 	addi	sp,sp,12
   50688:	f800283a 	ret
   5068c:	00800044 	movi	r2,1
   50690:	003ff906 	br	50678 <__sigtramp_r+0x58>
   50694:	01402004 	movi	r5,128
   50698:	004be800 	call	4be80 <_malloc_r>
   5069c:	8880b715 	stw	r2,732(r17)
   506a0:	10000a26 	beq	r2,zero,506cc <__sigtramp_r+0xac>
   506a4:	01802004 	movi	r6,128
   506a8:	000b883a 	mov	r5,zero
   506ac:	1009883a 	mov	r4,r2
   506b0:	004c95c0 	call	4c95c <memset>
   506b4:	1007883a 	mov	r3,r2
   506b8:	003fe306 	br	50648 <__sigtramp_r+0x28>
   506bc:	008000c4 	movi	r2,3
   506c0:	003fed06 	br	50678 <__sigtramp_r+0x58>
   506c4:	00800084 	movi	r2,2
   506c8:	003feb06 	br	50678 <__sigtramp_r+0x58>
   506cc:	00bfffc4 	movi	r2,-1
   506d0:	003fe906 	br	50678 <__sigtramp_r+0x58>
   506d4:	00bfffc4 	movi	r2,-1
   506d8:	f800283a 	ret

000506dc <raise>:
   506dc:	defffd04 	addi	sp,sp,-12
   506e0:	dc400115 	stw	r17,4(sp)
   506e4:	00c00174 	movhi	r3,5
   506e8:	dfc00215 	stw	ra,8(sp)
   506ec:	dc000015 	stw	r16,0(sp)
   506f0:	20800830 	cmpltui	r2,r4,32
   506f4:	1c57c217 	ldw	r17,24328(r3)
   506f8:	10002326 	beq	r2,zero,50788 <raise+0xac>
   506fc:	8880b717 	ldw	r2,732(r17)
   50700:	2021883a 	mov	r16,r4
   50704:	10001026 	beq	r2,zero,50748 <raise+0x6c>
   50708:	200690ba 	slli	r3,r4,2
   5070c:	10c5883a 	add	r2,r2,r3
   50710:	10c00017 	ldw	r3,0(r2)
   50714:	18000c26 	beq	r3,zero,50748 <raise+0x6c>
   50718:	19400060 	cmpeqi	r5,r3,1
   5071c:	2800181e 	bne	r5,zero,50780 <raise+0xa4>
   50720:	197fffd8 	cmpnei	r5,r3,-1
   50724:	28001226 	beq	r5,zero,50770 <raise+0x94>
   50728:	10000015 	stw	zero,0(r2)
   5072c:	183ee83a 	callr	r3
   50730:	0005883a 	mov	r2,zero
   50734:	dfc00217 	ldw	ra,8(sp)
   50738:	dc400117 	ldw	r17,4(sp)
   5073c:	dc000017 	ldw	r16,0(sp)
   50740:	dec00304 	addi	sp,sp,12
   50744:	f800283a 	ret
   50748:	8809883a 	mov	r4,r17
   5074c:	00509b40 	call	509b4 <_getpid_r>
   50750:	800d883a 	mov	r6,r16
   50754:	100b883a 	mov	r5,r2
   50758:	8809883a 	mov	r4,r17
   5075c:	dfc00217 	ldw	ra,8(sp)
   50760:	dc400117 	ldw	r17,4(sp)
   50764:	dc000017 	ldw	r16,0(sp)
   50768:	dec00304 	addi	sp,sp,12
   5076c:	00509541 	jmpi	50954 <_kill_r>
   50770:	00800584 	movi	r2,22
   50774:	88800015 	stw	r2,0(r17)
   50778:	00800044 	movi	r2,1
   5077c:	003fed06 	br	50734 <raise+0x58>
   50780:	0005883a 	mov	r2,zero
   50784:	003feb06 	br	50734 <raise+0x58>
   50788:	00800584 	movi	r2,22
   5078c:	88800015 	stw	r2,0(r17)
   50790:	00bfffc4 	movi	r2,-1
   50794:	003fe706 	br	50734 <raise+0x58>

00050798 <signal>:
   50798:	defffc04 	addi	sp,sp,-16
   5079c:	dc800215 	stw	r18,8(sp)
   507a0:	00c00174 	movhi	r3,5
   507a4:	dfc00315 	stw	ra,12(sp)
   507a8:	dc400115 	stw	r17,4(sp)
   507ac:	dc000015 	stw	r16,0(sp)
   507b0:	20800830 	cmpltui	r2,r4,32
   507b4:	1c97c217 	ldw	r18,24328(r3)
   507b8:	10000e26 	beq	r2,zero,507f4 <signal+0x5c>
   507bc:	2021883a 	mov	r16,r4
   507c0:	9100b717 	ldw	r4,732(r18)
   507c4:	2823883a 	mov	r17,r5
   507c8:	20000e26 	beq	r4,zero,50804 <signal+0x6c>
   507cc:	802090ba 	slli	r16,r16,2
   507d0:	2409883a 	add	r4,r4,r16
   507d4:	20800017 	ldw	r2,0(r4)
   507d8:	24400015 	stw	r17,0(r4)
   507dc:	dfc00317 	ldw	ra,12(sp)
   507e0:	dc800217 	ldw	r18,8(sp)
   507e4:	dc400117 	ldw	r17,4(sp)
   507e8:	dc000017 	ldw	r16,0(sp)
   507ec:	dec00404 	addi	sp,sp,16
   507f0:	f800283a 	ret
   507f4:	00800584 	movi	r2,22
   507f8:	90800015 	stw	r2,0(r18)
   507fc:	00bfffc4 	movi	r2,-1
   50800:	003ff606 	br	507dc <signal+0x44>
   50804:	9009883a 	mov	r4,r18
   50808:	01402004 	movi	r5,128
   5080c:	004be800 	call	4be80 <_malloc_r>
   50810:	9080b715 	stw	r2,732(r18)
   50814:	1009883a 	mov	r4,r2
   50818:	10000526 	beq	r2,zero,50830 <signal+0x98>
   5081c:	01802004 	movi	r6,128
   50820:	000b883a 	mov	r5,zero
   50824:	004c95c0 	call	4c95c <memset>
   50828:	1009883a 	mov	r4,r2
   5082c:	003fe706 	br	507cc <signal+0x34>
   50830:	00bfffc4 	movi	r2,-1
   50834:	003fe906 	br	507dc <signal+0x44>

00050838 <_init_signal>:
   50838:	defffe04 	addi	sp,sp,-8
   5083c:	00800174 	movhi	r2,5
   50840:	dc000015 	stw	r16,0(sp)
   50844:	1417c217 	ldw	r16,24328(r2)
   50848:	dfc00115 	stw	ra,4(sp)
   5084c:	8080b717 	ldw	r2,732(r16)
   50850:	10000526 	beq	r2,zero,50868 <_init_signal+0x30>
   50854:	0005883a 	mov	r2,zero
   50858:	dfc00117 	ldw	ra,4(sp)
   5085c:	dc000017 	ldw	r16,0(sp)
   50860:	dec00204 	addi	sp,sp,8
   50864:	f800283a 	ret
   50868:	8009883a 	mov	r4,r16
   5086c:	01402004 	movi	r5,128
   50870:	004be800 	call	4be80 <_malloc_r>
   50874:	8080b715 	stw	r2,732(r16)
   50878:	1009883a 	mov	r4,r2
   5087c:	10000426 	beq	r2,zero,50890 <_init_signal+0x58>
   50880:	01802004 	movi	r6,128
   50884:	000b883a 	mov	r5,zero
   50888:	004c95c0 	call	4c95c <memset>
   5088c:	003ff106 	br	50854 <_init_signal+0x1c>
   50890:	00bfffc4 	movi	r2,-1
   50894:	003ff006 	br	50858 <_init_signal+0x20>

00050898 <__sigtramp>:
   50898:	defffd04 	addi	sp,sp,-12
   5089c:	dc400115 	stw	r17,4(sp)
   508a0:	00c00174 	movhi	r3,5
   508a4:	dfc00215 	stw	ra,8(sp)
   508a8:	dc000015 	stw	r16,0(sp)
   508ac:	20800830 	cmpltui	r2,r4,32
   508b0:	1c57c217 	ldw	r17,24328(r3)
   508b4:	10002526 	beq	r2,zero,5094c <__sigtramp+0xb4>
   508b8:	2021883a 	mov	r16,r4
   508bc:	8900b717 	ldw	r4,732(r17)
   508c0:	20001326 	beq	r4,zero,50910 <__sigtramp+0x78>
   508c4:	800490ba 	slli	r2,r16,2
   508c8:	2087883a 	add	r3,r4,r2
   508cc:	18800017 	ldw	r2,0(r3)
   508d0:	10000d26 	beq	r2,zero,50908 <__sigtramp+0x70>
   508d4:	113fffe0 	cmpeqi	r4,r2,-1
   508d8:	20001a1e 	bne	r4,zero,50944 <__sigtramp+0xac>
   508dc:	11000060 	cmpeqi	r4,r2,1
   508e0:	2000161e 	bne	r4,zero,5093c <__sigtramp+0xa4>
   508e4:	18000015 	stw	zero,0(r3)
   508e8:	8009883a 	mov	r4,r16
   508ec:	103ee83a 	callr	r2
   508f0:	0005883a 	mov	r2,zero
   508f4:	dfc00217 	ldw	ra,8(sp)
   508f8:	dc400117 	ldw	r17,4(sp)
   508fc:	dc000017 	ldw	r16,0(sp)
   50900:	dec00304 	addi	sp,sp,12
   50904:	f800283a 	ret
   50908:	00800044 	movi	r2,1
   5090c:	003ff906 	br	508f4 <__sigtramp+0x5c>
   50910:	8809883a 	mov	r4,r17
   50914:	01402004 	movi	r5,128
   50918:	004be800 	call	4be80 <_malloc_r>
   5091c:	8880b715 	stw	r2,732(r17)
   50920:	1009883a 	mov	r4,r2
   50924:	10000926 	beq	r2,zero,5094c <__sigtramp+0xb4>
   50928:	01802004 	movi	r6,128
   5092c:	000b883a 	mov	r5,zero
   50930:	004c95c0 	call	4c95c <memset>
   50934:	1009883a 	mov	r4,r2
   50938:	003fe206 	br	508c4 <__sigtramp+0x2c>
   5093c:	008000c4 	movi	r2,3
   50940:	003fec06 	br	508f4 <__sigtramp+0x5c>
   50944:	00800084 	movi	r2,2
   50948:	003fea06 	br	508f4 <__sigtramp+0x5c>
   5094c:	00bfffc4 	movi	r2,-1
   50950:	003fe806 	br	508f4 <__sigtramp+0x5c>

00050954 <_kill_r>:
   50954:	2807883a 	mov	r3,r5
   50958:	defffe04 	addi	sp,sp,-8
   5095c:	dc000015 	stw	r16,0(sp)
   50960:	00800174 	movhi	r2,5
   50964:	300b883a 	mov	r5,r6
   50968:	2021883a 	mov	r16,r4
   5096c:	1809883a 	mov	r4,r3
   50970:	dfc00115 	stw	ra,4(sp)
   50974:	101ec815 	stw	zero,31520(r2)
   50978:	00518400 	call	51840 <kill>
   5097c:	10ffffd8 	cmpnei	r3,r2,-1
   50980:	18000426 	beq	r3,zero,50994 <_kill_r+0x40>
   50984:	dfc00117 	ldw	ra,4(sp)
   50988:	dc000017 	ldw	r16,0(sp)
   5098c:	dec00204 	addi	sp,sp,8
   50990:	f800283a 	ret
   50994:	00c00174 	movhi	r3,5
   50998:	18dec817 	ldw	r3,31520(r3)
   5099c:	183ff926 	beq	r3,zero,50984 <_kill_r+0x30>
   509a0:	80c00015 	stw	r3,0(r16)
   509a4:	dfc00117 	ldw	ra,4(sp)
   509a8:	dc000017 	ldw	r16,0(sp)
   509ac:	dec00204 	addi	sp,sp,8
   509b0:	f800283a 	ret

000509b4 <_getpid_r>:
   509b4:	00517041 	jmpi	51704 <getpid>

000509b8 <__udivdi3>:
   509b8:	defff504 	addi	sp,sp,-44
   509bc:	dc800315 	stw	r18,12(sp)
   509c0:	dc000115 	stw	r16,4(sp)
   509c4:	dfc00a15 	stw	ra,40(sp)
   509c8:	df000915 	stw	fp,36(sp)
   509cc:	ddc00815 	stw	r23,32(sp)
   509d0:	dd800715 	stw	r22,28(sp)
   509d4:	dd400615 	stw	r21,24(sp)
   509d8:	dd000515 	stw	r20,20(sp)
   509dc:	dcc00415 	stw	r19,16(sp)
   509e0:	dc400215 	stw	r17,8(sp)
   509e4:	2025883a 	mov	r18,r4
   509e8:	2821883a 	mov	r16,r5
   509ec:	3800401e 	bne	r7,zero,50af0 <__udivdi3+0x138>
   509f0:	3023883a 	mov	r17,r6
   509f4:	2027883a 	mov	r19,r4
   509f8:	29805d2e 	bgeu	r5,r6,50b70 <__udivdi3+0x1b8>
   509fc:	00bfffd4 	movui	r2,65535
   50a00:	282b883a 	mov	r21,r5
   50a04:	11809e2e 	bgeu	r2,r6,50c80 <__udivdi3+0x2c8>
   50a08:	00804034 	movhi	r2,256
   50a0c:	30812736 	bltu	r6,r2,50eac <__udivdi3+0x4f4>
   50a10:	00c00604 	movi	r3,24
   50a14:	30cad83a 	srl	r5,r6,r3
   50a18:	00800174 	movhi	r2,5
   50a1c:	01000804 	movi	r4,32
   50a20:	2885883a 	add	r2,r5,r2
   50a24:	108f4703 	ldbu	r2,15644(r2)
   50a28:	10c5883a 	add	r2,r2,r3
   50a2c:	2087c83a 	sub	r3,r4,r2
   50a30:	20800526 	beq	r4,r2,50a48 <__udivdi3+0x90>
   50a34:	80ea983a 	sll	r21,r16,r3
   50a38:	9084d83a 	srl	r2,r18,r2
   50a3c:	30e2983a 	sll	r17,r6,r3
   50a40:	90e6983a 	sll	r19,r18,r3
   50a44:	156ab03a 	or	r21,r2,r21
   50a48:	882cd43a 	srli	r22,r17,16
   50a4c:	a809883a 	mov	r4,r21
   50a50:	8d3fffcc 	andi	r20,r17,65535
   50a54:	b00b883a 	mov	r5,r22
   50a58:	0046d700 	call	46d70 <__umodsi3>
   50a5c:	a809883a 	mov	r4,r21
   50a60:	b00b883a 	mov	r5,r22
   50a64:	1025883a 	mov	r18,r2
   50a68:	0046d0c0 	call	46d0c <__udivsi3>
   50a6c:	9008943a 	slli	r4,r18,16
   50a70:	9806d43a 	srli	r3,r19,16
   50a74:	1021883a 	mov	r16,r2
   50a78:	a085383a 	mul	r2,r20,r2
   50a7c:	20c8b03a 	or	r4,r4,r3
   50a80:	2080052e 	bgeu	r4,r2,50a98 <__udivdi3+0xe0>
   50a84:	2449883a 	add	r4,r4,r17
   50a88:	80ffffc4 	addi	r3,r16,-1
   50a8c:	24400136 	bltu	r4,r17,50a94 <__udivdi3+0xdc>
   50a90:	20811736 	bltu	r4,r2,50ef0 <__udivdi3+0x538>
   50a94:	1821883a 	mov	r16,r3
   50a98:	20a5c83a 	sub	r18,r4,r2
   50a9c:	9009883a 	mov	r4,r18
   50aa0:	b00b883a 	mov	r5,r22
   50aa4:	0046d700 	call	46d70 <__umodsi3>
   50aa8:	9009883a 	mov	r4,r18
   50aac:	b00b883a 	mov	r5,r22
   50ab0:	1025883a 	mov	r18,r2
   50ab4:	0046d0c0 	call	46d0c <__udivsi3>
   50ab8:	9006943a 	slli	r3,r18,16
   50abc:	a0a9383a 	mul	r20,r20,r2
   50ac0:	9cffffcc 	andi	r19,r19,65535
   50ac4:	1cc6b03a 	or	r3,r3,r19
   50ac8:	1d00052e 	bgeu	r3,r20,50ae0 <__udivdi3+0x128>
   50acc:	88c7883a 	add	r3,r17,r3
   50ad0:	113fffc4 	addi	r4,r2,-1
   50ad4:	1c400136 	bltu	r3,r17,50adc <__udivdi3+0x124>
   50ad8:	1d010336 	bltu	r3,r20,50ee8 <__udivdi3+0x530>
   50adc:	2005883a 	mov	r2,r4
   50ae0:	800c943a 	slli	r6,r16,16
   50ae4:	0007883a 	mov	r3,zero
   50ae8:	3084b03a 	or	r2,r6,r2
   50aec:	00000306 	br	50afc <__udivdi3+0x144>
   50af0:	29c00e2e 	bgeu	r5,r7,50b2c <__udivdi3+0x174>
   50af4:	0007883a 	mov	r3,zero
   50af8:	0005883a 	mov	r2,zero
   50afc:	dfc00a17 	ldw	ra,40(sp)
   50b00:	df000917 	ldw	fp,36(sp)
   50b04:	ddc00817 	ldw	r23,32(sp)
   50b08:	dd800717 	ldw	r22,28(sp)
   50b0c:	dd400617 	ldw	r21,24(sp)
   50b10:	dd000517 	ldw	r20,20(sp)
   50b14:	dcc00417 	ldw	r19,16(sp)
   50b18:	dc800317 	ldw	r18,12(sp)
   50b1c:	dc400217 	ldw	r17,8(sp)
   50b20:	dc000117 	ldw	r16,4(sp)
   50b24:	dec00b04 	addi	sp,sp,44
   50b28:	f800283a 	ret
   50b2c:	00bfffd4 	movui	r2,65535
   50b30:	11c0562e 	bgeu	r2,r7,50c8c <__udivdi3+0x2d4>
   50b34:	00804034 	movhi	r2,256
   50b38:	3880da36 	bltu	r7,r2,50ea4 <__udivdi3+0x4ec>
   50b3c:	00c00604 	movi	r3,24
   50b40:	38cad83a 	srl	r5,r7,r3
   50b44:	00800174 	movhi	r2,5
   50b48:	01000804 	movi	r4,32
   50b4c:	2885883a 	add	r2,r5,r2
   50b50:	108f4703 	ldbu	r2,15644(r2)
   50b54:	10c5883a 	add	r2,r2,r3
   50b58:	20abc83a 	sub	r21,r4,r2
   50b5c:	2080801e 	bne	r4,r2,50d60 <__udivdi3+0x3a8>
   50b60:	3c00d436 	bltu	r7,r16,50eb4 <__udivdi3+0x4fc>
   50b64:	9185403a 	cmpgeu	r2,r18,r6
   50b68:	0007883a 	mov	r3,zero
   50b6c:	003fe306 	br	50afc <__udivdi3+0x144>
   50b70:	3000041e 	bne	r6,zero,50b84 <__udivdi3+0x1cc>
   50b74:	000b883a 	mov	r5,zero
   50b78:	01000044 	movi	r4,1
   50b7c:	0046d0c0 	call	46d0c <__udivsi3>
   50b80:	1023883a 	mov	r17,r2
   50b84:	00bfffd4 	movui	r2,65535
   50b88:	14403a2e 	bgeu	r2,r17,50c74 <__udivdi3+0x2bc>
   50b8c:	00804034 	movhi	r2,256
   50b90:	8880c236 	bltu	r17,r2,50e9c <__udivdi3+0x4e4>
   50b94:	01000604 	movi	r4,24
   50b98:	8906d83a 	srl	r3,r17,r4
   50b9c:	00800174 	movhi	r2,5
   50ba0:	01400804 	movi	r5,32
   50ba4:	1885883a 	add	r2,r3,r2
   50ba8:	10cf4703 	ldbu	r3,15644(r2)
   50bac:	1907883a 	add	r3,r3,r4
   50bb0:	28cdc83a 	sub	r6,r5,r3
   50bb4:	28c0381e 	bne	r5,r3,50c98 <__udivdi3+0x2e0>
   50bb8:	882cd43a 	srli	r22,r17,16
   50bbc:	8461c83a 	sub	r16,r16,r17
   50bc0:	8d3fffcc 	andi	r20,r17,65535
   50bc4:	00c00044 	movi	r3,1
   50bc8:	8009883a 	mov	r4,r16
   50bcc:	b00b883a 	mov	r5,r22
   50bd0:	d8c00015 	stw	r3,0(sp)
   50bd4:	0046d700 	call	46d70 <__umodsi3>
   50bd8:	8009883a 	mov	r4,r16
   50bdc:	b00b883a 	mov	r5,r22
   50be0:	1025883a 	mov	r18,r2
   50be4:	0046d0c0 	call	46d0c <__udivsi3>
   50be8:	9008943a 	slli	r4,r18,16
   50bec:	980ad43a 	srli	r5,r19,16
   50bf0:	1021883a 	mov	r16,r2
   50bf4:	1505383a 	mul	r2,r2,r20
   50bf8:	2148b03a 	or	r4,r4,r5
   50bfc:	d8c00017 	ldw	r3,0(sp)
   50c00:	2080052e 	bgeu	r4,r2,50c18 <__udivdi3+0x260>
   50c04:	2449883a 	add	r4,r4,r17
   50c08:	817fffc4 	addi	r5,r16,-1
   50c0c:	24400136 	bltu	r4,r17,50c14 <__udivdi3+0x25c>
   50c10:	2080ba36 	bltu	r4,r2,50efc <__udivdi3+0x544>
   50c14:	2821883a 	mov	r16,r5
   50c18:	20a5c83a 	sub	r18,r4,r2
   50c1c:	9009883a 	mov	r4,r18
   50c20:	b00b883a 	mov	r5,r22
   50c24:	d8c00015 	stw	r3,0(sp)
   50c28:	0046d700 	call	46d70 <__umodsi3>
   50c2c:	9009883a 	mov	r4,r18
   50c30:	b00b883a 	mov	r5,r22
   50c34:	1025883a 	mov	r18,r2
   50c38:	0046d0c0 	call	46d0c <__udivsi3>
   50c3c:	9008943a 	slli	r4,r18,16
   50c40:	1529383a 	mul	r20,r2,r20
   50c44:	9cffffcc 	andi	r19,r19,65535
   50c48:	24c8b03a 	or	r4,r4,r19
   50c4c:	d8c00017 	ldw	r3,0(sp)
   50c50:	2500052e 	bgeu	r4,r20,50c68 <__udivdi3+0x2b0>
   50c54:	8909883a 	add	r4,r17,r4
   50c58:	117fffc4 	addi	r5,r2,-1
   50c5c:	24400136 	bltu	r4,r17,50c64 <__udivdi3+0x2ac>
   50c60:	25009f36 	bltu	r4,r20,50ee0 <__udivdi3+0x528>
   50c64:	2805883a 	mov	r2,r5
   50c68:	800c943a 	slli	r6,r16,16
   50c6c:	3084b03a 	or	r2,r6,r2
   50c70:	003fa206 	br	50afc <__udivdi3+0x144>
   50c74:	89004028 	cmpgeui	r4,r17,256
   50c78:	200890fa 	slli	r4,r4,3
   50c7c:	003fc606 	br	50b98 <__udivdi3+0x1e0>
   50c80:	30c04028 	cmpgeui	r3,r6,256
   50c84:	180690fa 	slli	r3,r3,3
   50c88:	003f6206 	br	50a14 <__udivdi3+0x5c>
   50c8c:	38c04028 	cmpgeui	r3,r7,256
   50c90:	180690fa 	slli	r3,r3,3
   50c94:	003faa06 	br	50b40 <__udivdi3+0x188>
   50c98:	89a2983a 	sll	r17,r17,r6
   50c9c:	80e8d83a 	srl	r20,r16,r3
   50ca0:	81a0983a 	sll	r16,r16,r6
   50ca4:	882cd43a 	srli	r22,r17,16
   50ca8:	90c6d83a 	srl	r3,r18,r3
   50cac:	a009883a 	mov	r4,r20
   50cb0:	b00b883a 	mov	r5,r22
   50cb4:	1c2ab03a 	or	r21,r3,r16
   50cb8:	91a6983a 	sll	r19,r18,r6
   50cbc:	0046d700 	call	46d70 <__umodsi3>
   50cc0:	a009883a 	mov	r4,r20
   50cc4:	b00b883a 	mov	r5,r22
   50cc8:	1021883a 	mov	r16,r2
   50ccc:	0046d0c0 	call	46d0c <__udivsi3>
   50cd0:	8008943a 	slli	r4,r16,16
   50cd4:	a80ad43a 	srli	r5,r21,16
   50cd8:	8d3fffcc 	andi	r20,r17,65535
   50cdc:	1025883a 	mov	r18,r2
   50ce0:	a085383a 	mul	r2,r20,r2
   50ce4:	2148b03a 	or	r4,r4,r5
   50ce8:	2080062e 	bgeu	r4,r2,50d04 <__udivdi3+0x34c>
   50cec:	2449883a 	add	r4,r4,r17
   50cf0:	90ffffc4 	addi	r3,r18,-1
   50cf4:	24407836 	bltu	r4,r17,50ed8 <__udivdi3+0x520>
   50cf8:	2080772e 	bgeu	r4,r2,50ed8 <__udivdi3+0x520>
   50cfc:	94bfff84 	addi	r18,r18,-2
   50d00:	2449883a 	add	r4,r4,r17
   50d04:	20a1c83a 	sub	r16,r4,r2
   50d08:	8009883a 	mov	r4,r16
   50d0c:	b00b883a 	mov	r5,r22
   50d10:	0046d700 	call	46d70 <__umodsi3>
   50d14:	8009883a 	mov	r4,r16
   50d18:	b00b883a 	mov	r5,r22
   50d1c:	1021883a 	mov	r16,r2
   50d20:	8020943a 	slli	r16,r16,16
   50d24:	0046d0c0 	call	46d0c <__udivsi3>
   50d28:	a089383a 	mul	r4,r20,r2
   50d2c:	ad7fffcc 	andi	r21,r21,65535
   50d30:	8560b03a 	or	r16,r16,r21
   50d34:	8100062e 	bgeu	r16,r4,50d50 <__udivdi3+0x398>
   50d38:	8461883a 	add	r16,r16,r17
   50d3c:	10ffffc4 	addi	r3,r2,-1
   50d40:	84406136 	bltu	r16,r17,50ec8 <__udivdi3+0x510>
   50d44:	8100602e 	bgeu	r16,r4,50ec8 <__udivdi3+0x510>
   50d48:	10bfff84 	addi	r2,r2,-2
   50d4c:	8461883a 	add	r16,r16,r17
   50d50:	9006943a 	slli	r3,r18,16
   50d54:	8121c83a 	sub	r16,r16,r4
   50d58:	1886b03a 	or	r3,r3,r2
   50d5c:	003f9a06 	br	50bc8 <__udivdi3+0x210>
   50d60:	30acd83a 	srl	r22,r6,r2
   50d64:	3d4e983a 	sll	r7,r7,r21
   50d68:	80a6d83a 	srl	r19,r16,r2
   50d6c:	90a2d83a 	srl	r17,r18,r2
   50d70:	b1ecb03a 	or	r22,r22,r7
   50d74:	b038d43a 	srli	fp,r22,16
   50d78:	8544983a 	sll	r2,r16,r21
   50d7c:	9809883a 	mov	r4,r19
   50d80:	e00b883a 	mov	r5,fp
   50d84:	3568983a 	sll	r20,r6,r21
   50d88:	88a2b03a 	or	r17,r17,r2
   50d8c:	0046d700 	call	46d70 <__umodsi3>
   50d90:	9809883a 	mov	r4,r19
   50d94:	e00b883a 	mov	r5,fp
   50d98:	1027883a 	mov	r19,r2
   50d9c:	0046d0c0 	call	46d0c <__udivsi3>
   50da0:	9808943a 	slli	r4,r19,16
   50da4:	8806d43a 	srli	r3,r17,16
   50da8:	b5ffffcc 	andi	r23,r22,65535
   50dac:	1021883a 	mov	r16,r2
   50db0:	b885383a 	mul	r2,r23,r2
   50db4:	20c8b03a 	or	r4,r4,r3
   50db8:	2080062e 	bgeu	r4,r2,50dd4 <__udivdi3+0x41c>
   50dbc:	2589883a 	add	r4,r4,r22
   50dc0:	80ffffc4 	addi	r3,r16,-1
   50dc4:	25804236 	bltu	r4,r22,50ed0 <__udivdi3+0x518>
   50dc8:	2080412e 	bgeu	r4,r2,50ed0 <__udivdi3+0x518>
   50dcc:	843fff84 	addi	r16,r16,-2
   50dd0:	2589883a 	add	r4,r4,r22
   50dd4:	20a7c83a 	sub	r19,r4,r2
   50dd8:	9809883a 	mov	r4,r19
   50ddc:	e00b883a 	mov	r5,fp
   50de0:	0046d700 	call	46d70 <__umodsi3>
   50de4:	9809883a 	mov	r4,r19
   50de8:	e00b883a 	mov	r5,fp
   50dec:	1027883a 	mov	r19,r2
   50df0:	0046d0c0 	call	46d0c <__udivsi3>
   50df4:	9806943a 	slli	r3,r19,16
   50df8:	b8af383a 	mul	r23,r23,r2
   50dfc:	8c7fffcc 	andi	r17,r17,65535
   50e00:	1c46b03a 	or	r3,r3,r17
   50e04:	1009883a 	mov	r4,r2
   50e08:	1dc0062e 	bgeu	r3,r23,50e24 <__udivdi3+0x46c>
   50e0c:	1d87883a 	add	r3,r3,r22
   50e10:	10bfffc4 	addi	r2,r2,-1
   50e14:	1d802a36 	bltu	r3,r22,50ec0 <__udivdi3+0x508>
   50e18:	1dc0292e 	bgeu	r3,r23,50ec0 <__udivdi3+0x508>
   50e1c:	213fff84 	addi	r4,r4,-2
   50e20:	1d87883a 	add	r3,r3,r22
   50e24:	8004943a 	slli	r2,r16,16
   50e28:	a00ed43a 	srli	r7,r20,16
   50e2c:	217fffcc 	andi	r5,r4,65535
   50e30:	1104b03a 	or	r2,r2,r4
   50e34:	1008d43a 	srli	r4,r2,16
   50e38:	a53fffcc 	andi	r20,r20,65535
   50e3c:	2d11383a 	mul	r8,r5,r20
   50e40:	2529383a 	mul	r20,r4,r20
   50e44:	29cb383a 	mul	r5,r5,r7
   50e48:	400cd43a 	srli	r6,r8,16
   50e4c:	21c9383a 	mul	r4,r4,r7
   50e50:	2d0b883a 	add	r5,r5,r20
   50e54:	314b883a 	add	r5,r6,r5
   50e58:	1dc7c83a 	sub	r3,r3,r23
   50e5c:	2d00022e 	bgeu	r5,r20,50e68 <__udivdi3+0x4b0>
   50e60:	01800074 	movhi	r6,1
   50e64:	2189883a 	add	r4,r4,r6
   50e68:	280cd43a 	srli	r6,r5,16
   50e6c:	3109883a 	add	r4,r6,r4
   50e70:	19000836 	bltu	r3,r4,50e94 <__udivdi3+0x4dc>
   50e74:	19000226 	beq	r3,r4,50e80 <__udivdi3+0x4c8>
   50e78:	0007883a 	mov	r3,zero
   50e7c:	003f1f06 	br	50afc <__udivdi3+0x144>
   50e80:	280a943a 	slli	r5,r5,16
   50e84:	9548983a 	sll	r4,r18,r21
   50e88:	423fffcc 	andi	r8,r8,65535
   50e8c:	2a0b883a 	add	r5,r5,r8
   50e90:	217ff92e 	bgeu	r4,r5,50e78 <__udivdi3+0x4c0>
   50e94:	10bfffc4 	addi	r2,r2,-1
   50e98:	003ff706 	br	50e78 <__udivdi3+0x4c0>
   50e9c:	01000404 	movi	r4,16
   50ea0:	003f3d06 	br	50b98 <__udivdi3+0x1e0>
   50ea4:	00c00404 	movi	r3,16
   50ea8:	003f2506 	br	50b40 <__udivdi3+0x188>
   50eac:	00c00404 	movi	r3,16
   50eb0:	003ed806 	br	50a14 <__udivdi3+0x5c>
   50eb4:	0007883a 	mov	r3,zero
   50eb8:	00800044 	movi	r2,1
   50ebc:	003f0f06 	br	50afc <__udivdi3+0x144>
   50ec0:	1009883a 	mov	r4,r2
   50ec4:	003fd706 	br	50e24 <__udivdi3+0x46c>
   50ec8:	1805883a 	mov	r2,r3
   50ecc:	003fa006 	br	50d50 <__udivdi3+0x398>
   50ed0:	1821883a 	mov	r16,r3
   50ed4:	003fbf06 	br	50dd4 <__udivdi3+0x41c>
   50ed8:	1825883a 	mov	r18,r3
   50edc:	003f8906 	br	50d04 <__udivdi3+0x34c>
   50ee0:	10bfff84 	addi	r2,r2,-2
   50ee4:	003f6006 	br	50c68 <__udivdi3+0x2b0>
   50ee8:	10bfff84 	addi	r2,r2,-2
   50eec:	003efc06 	br	50ae0 <__udivdi3+0x128>
   50ef0:	843fff84 	addi	r16,r16,-2
   50ef4:	2449883a 	add	r4,r4,r17
   50ef8:	003ee706 	br	50a98 <__udivdi3+0xe0>
   50efc:	843fff84 	addi	r16,r16,-2
   50f00:	2449883a 	add	r4,r4,r17
   50f04:	003f4406 	br	50c18 <__udivdi3+0x260>

00050f08 <__umoddi3>:
   50f08:	defff504 	addi	sp,sp,-44
   50f0c:	dcc00415 	stw	r19,16(sp)
   50f10:	dc000115 	stw	r16,4(sp)
   50f14:	dfc00a15 	stw	ra,40(sp)
   50f18:	df000915 	stw	fp,36(sp)
   50f1c:	ddc00815 	stw	r23,32(sp)
   50f20:	dd800715 	stw	r22,28(sp)
   50f24:	dd400615 	stw	r21,24(sp)
   50f28:	dd000515 	stw	r20,20(sp)
   50f2c:	dc800315 	stw	r18,12(sp)
   50f30:	dc400215 	stw	r17,8(sp)
   50f34:	2021883a 	mov	r16,r4
   50f38:	2827883a 	mov	r19,r5
   50f3c:	38003b1e 	bne	r7,zero,5102c <__umoddi3+0x124>
   50f40:	3029883a 	mov	r20,r6
   50f44:	2025883a 	mov	r18,r4
   50f48:	29805d2e 	bgeu	r5,r6,510c0 <__umoddi3+0x1b8>
   50f4c:	00bfffd4 	movui	r2,65535
   50f50:	282d883a 	mov	r22,r5
   50f54:	1180942e 	bgeu	r2,r6,511a8 <__umoddi3+0x2a0>
   50f58:	00804034 	movhi	r2,256
   50f5c:	30812036 	bltu	r6,r2,513e0 <__umoddi3+0x4d8>
   50f60:	00c00604 	movi	r3,24
   50f64:	30cad83a 	srl	r5,r6,r3
   50f68:	00800174 	movhi	r2,5
   50f6c:	01000804 	movi	r4,32
   50f70:	2885883a 	add	r2,r5,r2
   50f74:	108f4703 	ldbu	r2,15644(r2)
   50f78:	10c5883a 	add	r2,r2,r3
   50f7c:	20a3c83a 	sub	r17,r4,r2
   50f80:	20800526 	beq	r4,r2,50f98 <__umoddi3+0x90>
   50f84:	9c6c983a 	sll	r22,r19,r17
   50f88:	8084d83a 	srl	r2,r16,r2
   50f8c:	3468983a 	sll	r20,r6,r17
   50f90:	8464983a 	sll	r18,r16,r17
   50f94:	15acb03a 	or	r22,r2,r22
   50f98:	a02ed43a 	srli	r23,r20,16
   50f9c:	b009883a 	mov	r4,r22
   50fa0:	a57fffcc 	andi	r21,r20,65535
   50fa4:	b80b883a 	mov	r5,r23
   50fa8:	0046d700 	call	46d70 <__umodsi3>
   50fac:	b009883a 	mov	r4,r22
   50fb0:	b80b883a 	mov	r5,r23
   50fb4:	1021883a 	mov	r16,r2
   50fb8:	0046d0c0 	call	46d0c <__udivsi3>
   50fbc:	8008943a 	slli	r4,r16,16
   50fc0:	9006d43a 	srli	r3,r18,16
   50fc4:	a885383a 	mul	r2,r21,r2
   50fc8:	20c8b03a 	or	r4,r4,r3
   50fcc:	2080032e 	bgeu	r4,r2,50fdc <__umoddi3+0xd4>
   50fd0:	2509883a 	add	r4,r4,r20
   50fd4:	25000136 	bltu	r4,r20,50fdc <__umoddi3+0xd4>
   50fd8:	20810b36 	bltu	r4,r2,51408 <__umoddi3+0x500>
   50fdc:	20a7c83a 	sub	r19,r4,r2
   50fe0:	b80b883a 	mov	r5,r23
   50fe4:	9809883a 	mov	r4,r19
   50fe8:	0046d700 	call	46d70 <__umodsi3>
   50fec:	1021883a 	mov	r16,r2
   50ff0:	b80b883a 	mov	r5,r23
   50ff4:	9809883a 	mov	r4,r19
   50ff8:	8020943a 	slli	r16,r16,16
   50ffc:	0046d0c0 	call	46d0c <__udivsi3>
   51000:	a8ab383a 	mul	r21,r21,r2
   51004:	94bfffcc 	andi	r18,r18,65535
   51008:	84a0b03a 	or	r16,r16,r18
   5100c:	8540032e 	bgeu	r16,r21,5101c <__umoddi3+0x114>
   51010:	8521883a 	add	r16,r16,r20
   51014:	85000136 	bltu	r16,r20,5101c <__umoddi3+0x114>
   51018:	8540f936 	bltu	r16,r21,51400 <__umoddi3+0x4f8>
   5101c:	8561c83a 	sub	r16,r16,r21
   51020:	8444d83a 	srl	r2,r16,r17
   51024:	0007883a 	mov	r3,zero
   51028:	00000306 	br	51038 <__umoddi3+0x130>
   5102c:	29c00e2e 	bgeu	r5,r7,51068 <__umoddi3+0x160>
   51030:	2005883a 	mov	r2,r4
   51034:	2807883a 	mov	r3,r5
   51038:	dfc00a17 	ldw	ra,40(sp)
   5103c:	df000917 	ldw	fp,36(sp)
   51040:	ddc00817 	ldw	r23,32(sp)
   51044:	dd800717 	ldw	r22,28(sp)
   51048:	dd400617 	ldw	r21,24(sp)
   5104c:	dd000517 	ldw	r20,20(sp)
   51050:	dcc00417 	ldw	r19,16(sp)
   51054:	dc800317 	ldw	r18,12(sp)
   51058:	dc400217 	ldw	r17,8(sp)
   5105c:	dc000117 	ldw	r16,4(sp)
   51060:	dec00b04 	addi	sp,sp,44
   51064:	f800283a 	ret
   51068:	2005883a 	mov	r2,r4
   5106c:	013fffd4 	movui	r4,65535
   51070:	2807883a 	mov	r3,r5
   51074:	21c04f2e 	bgeu	r4,r7,511b4 <__umoddi3+0x2ac>
   51078:	01004034 	movhi	r4,256
   5107c:	3900da36 	bltu	r7,r4,513e8 <__umoddi3+0x4e0>
   51080:	01400604 	movi	r5,24
   51084:	3952d83a 	srl	r9,r7,r5
   51088:	01000174 	movhi	r4,5
   5108c:	02000804 	movi	r8,32
   51090:	4909883a 	add	r4,r9,r4
   51094:	250f4703 	ldbu	r20,15644(r4)
   51098:	a169883a 	add	r20,r20,r5
   5109c:	4525c83a 	sub	r18,r8,r20
   510a0:	4500471e 	bne	r8,r20,511c0 <__umoddi3+0x2b8>
   510a4:	3cc00136 	bltu	r7,r19,510ac <__umoddi3+0x1a4>
   510a8:	81bfe336 	bltu	r16,r6,51038 <__umoddi3+0x130>
   510ac:	8185c83a 	sub	r2,r16,r6
   510b0:	99cfc83a 	sub	r7,r19,r7
   510b4:	8087803a 	cmpltu	r3,r16,r2
   510b8:	38c7c83a 	sub	r3,r7,r3
   510bc:	003fde06 	br	51038 <__umoddi3+0x130>
   510c0:	3000041e 	bne	r6,zero,510d4 <__umoddi3+0x1cc>
   510c4:	000b883a 	mov	r5,zero
   510c8:	01000044 	movi	r4,1
   510cc:	0046d0c0 	call	46d0c <__udivsi3>
   510d0:	1029883a 	mov	r20,r2
   510d4:	00bfffd4 	movui	r2,65535
   510d8:	1500302e 	bgeu	r2,r20,5119c <__umoddi3+0x294>
   510dc:	00804034 	movhi	r2,256
   510e0:	a080bd36 	bltu	r20,r2,513d8 <__umoddi3+0x4d0>
   510e4:	00c00604 	movi	r3,24
   510e8:	a0cad83a 	srl	r5,r20,r3
   510ec:	00800174 	movhi	r2,5
   510f0:	01000804 	movi	r4,32
   510f4:	2885883a 	add	r2,r5,r2
   510f8:	158f4703 	ldbu	r22,15644(r2)
   510fc:	b0ed883a 	add	r22,r22,r3
   51100:	25a3c83a 	sub	r17,r4,r22
   51104:	2580821e 	bne	r4,r22,51310 <__umoddi3+0x408>
   51108:	a02ed43a 	srli	r23,r20,16
   5110c:	9d27c83a 	sub	r19,r19,r20
   51110:	a57fffcc 	andi	r21,r20,65535
   51114:	b80b883a 	mov	r5,r23
   51118:	9809883a 	mov	r4,r19
   5111c:	0046d700 	call	46d70 <__umodsi3>
   51120:	9809883a 	mov	r4,r19
   51124:	b80b883a 	mov	r5,r23
   51128:	1021883a 	mov	r16,r2
   5112c:	0046d0c0 	call	46d0c <__udivsi3>
   51130:	8008943a 	slli	r4,r16,16
   51134:	9006d43a 	srli	r3,r18,16
   51138:	1545383a 	mul	r2,r2,r21
   5113c:	20c8b03a 	or	r4,r4,r3
   51140:	2080032e 	bgeu	r4,r2,51150 <__umoddi3+0x248>
   51144:	2509883a 	add	r4,r4,r20
   51148:	25000136 	bltu	r4,r20,51150 <__umoddi3+0x248>
   5114c:	2080b036 	bltu	r4,r2,51410 <__umoddi3+0x508>
   51150:	20a7c83a 	sub	r19,r4,r2
   51154:	b80b883a 	mov	r5,r23
   51158:	9809883a 	mov	r4,r19
   5115c:	0046d700 	call	46d70 <__umodsi3>
   51160:	1021883a 	mov	r16,r2
   51164:	b80b883a 	mov	r5,r23
   51168:	9809883a 	mov	r4,r19
   5116c:	8020943a 	slli	r16,r16,16
   51170:	0046d0c0 	call	46d0c <__udivsi3>
   51174:	1545383a 	mul	r2,r2,r21
   51178:	94bfffcc 	andi	r18,r18,65535
   5117c:	84a0b03a 	or	r16,r16,r18
   51180:	8080042e 	bgeu	r16,r2,51194 <__umoddi3+0x28c>
   51184:	8521883a 	add	r16,r16,r20
   51188:	85000236 	bltu	r16,r20,51194 <__umoddi3+0x28c>
   5118c:	8080012e 	bgeu	r16,r2,51194 <__umoddi3+0x28c>
   51190:	8521883a 	add	r16,r16,r20
   51194:	80a1c83a 	sub	r16,r16,r2
   51198:	003fa106 	br	51020 <__umoddi3+0x118>
   5119c:	a0c04028 	cmpgeui	r3,r20,256
   511a0:	180690fa 	slli	r3,r3,3
   511a4:	003fd006 	br	510e8 <__umoddi3+0x1e0>
   511a8:	30c04028 	cmpgeui	r3,r6,256
   511ac:	180690fa 	slli	r3,r3,3
   511b0:	003f6c06 	br	50f64 <__umoddi3+0x5c>
   511b4:	39404028 	cmpgeui	r5,r7,256
   511b8:	280a90fa 	slli	r5,r5,3
   511bc:	003fb106 	br	51084 <__umoddi3+0x17c>
   511c0:	352cd83a 	srl	r22,r6,r20
   511c4:	3c8e983a 	sll	r7,r7,r18
   511c8:	9d2ad83a 	srl	r21,r19,r20
   511cc:	8504d83a 	srl	r2,r16,r20
   511d0:	b1ecb03a 	or	r22,r22,r7
   511d4:	b038d43a 	srli	fp,r22,16
   511d8:	9ca6983a 	sll	r19,r19,r18
   511dc:	a809883a 	mov	r4,r21
   511e0:	e00b883a 	mov	r5,fp
   511e4:	34a2983a 	sll	r17,r6,r18
   511e8:	14e6b03a 	or	r19,r2,r19
   511ec:	0046d700 	call	46d70 <__umodsi3>
   511f0:	a809883a 	mov	r4,r21
   511f4:	e00b883a 	mov	r5,fp
   511f8:	102f883a 	mov	r23,r2
   511fc:	0046d0c0 	call	46d0c <__udivsi3>
   51200:	b808943a 	slli	r4,r23,16
   51204:	9806d43a 	srli	r3,r19,16
   51208:	b1bfffcc 	andi	r6,r22,65535
   5120c:	102b883a 	mov	r21,r2
   51210:	3085383a 	mul	r2,r6,r2
   51214:	20c8b03a 	or	r4,r4,r3
   51218:	84ae983a 	sll	r23,r16,r18
   5121c:	2080062e 	bgeu	r4,r2,51238 <__umoddi3+0x330>
   51220:	2589883a 	add	r4,r4,r22
   51224:	a8ffffc4 	addi	r3,r21,-1
   51228:	25807336 	bltu	r4,r22,513f8 <__umoddi3+0x4f0>
   5122c:	2080722e 	bgeu	r4,r2,513f8 <__umoddi3+0x4f0>
   51230:	ad7fff84 	addi	r21,r21,-2
   51234:	2589883a 	add	r4,r4,r22
   51238:	20a1c83a 	sub	r16,r4,r2
   5123c:	8009883a 	mov	r4,r16
   51240:	e00b883a 	mov	r5,fp
   51244:	d9800015 	stw	r6,0(sp)
   51248:	0046d700 	call	46d70 <__umodsi3>
   5124c:	e00b883a 	mov	r5,fp
   51250:	8009883a 	mov	r4,r16
   51254:	1021883a 	mov	r16,r2
   51258:	0046d0c0 	call	46d0c <__udivsi3>
   5125c:	d9800017 	ldw	r6,0(sp)
   51260:	8006943a 	slli	r3,r16,16
   51264:	9cffffcc 	andi	r19,r19,65535
   51268:	308b383a 	mul	r5,r6,r2
   5126c:	1cc6b03a 	or	r3,r3,r19
   51270:	1940062e 	bgeu	r3,r5,5128c <__umoddi3+0x384>
   51274:	1d87883a 	add	r3,r3,r22
   51278:	113fffc4 	addi	r4,r2,-1
   5127c:	1d805c36 	bltu	r3,r22,513f0 <__umoddi3+0x4e8>
   51280:	19405b2e 	bgeu	r3,r5,513f0 <__umoddi3+0x4e8>
   51284:	10bfff84 	addi	r2,r2,-2
   51288:	1d87883a 	add	r3,r3,r22
   5128c:	a82a943a 	slli	r21,r21,16
   51290:	113fffcc 	andi	r4,r2,65535
   51294:	8810d43a 	srli	r8,r17,16
   51298:	a8aab03a 	or	r21,r21,r2
   5129c:	a82ad43a 	srli	r21,r21,16
   512a0:	89bfffcc 	andi	r6,r17,65535
   512a4:	218f383a 	mul	r7,r4,r6
   512a8:	a98d383a 	mul	r6,r21,r6
   512ac:	2209383a 	mul	r4,r4,r8
   512b0:	3804d43a 	srli	r2,r7,16
   512b4:	aa2b383a 	mul	r21,r21,r8
   512b8:	2189883a 	add	r4,r4,r6
   512bc:	1105883a 	add	r2,r2,r4
   512c0:	1947c83a 	sub	r3,r3,r5
   512c4:	1180022e 	bgeu	r2,r6,512d0 <__umoddi3+0x3c8>
   512c8:	01000074 	movhi	r4,1
   512cc:	a92b883a 	add	r21,r21,r4
   512d0:	1008d43a 	srli	r4,r2,16
   512d4:	1004943a 	slli	r2,r2,16
   512d8:	39ffffcc 	andi	r7,r7,65535
   512dc:	2549883a 	add	r4,r4,r21
   512e0:	11c5883a 	add	r2,r2,r7
   512e4:	19003636 	bltu	r3,r4,513c0 <__umoddi3+0x4b8>
   512e8:	19003426 	beq	r3,r4,513bc <__umoddi3+0x4b4>
   512ec:	b885c83a 	sub	r2,r23,r2
   512f0:	b8af803a 	cmpltu	r23,r23,r2
   512f4:	1907c83a 	sub	r3,r3,r4
   512f8:	1dc7c83a 	sub	r3,r3,r23
   512fc:	1d28983a 	sll	r20,r3,r20
   51300:	1484d83a 	srl	r2,r2,r18
   51304:	1c86d83a 	srl	r3,r3,r18
   51308:	a084b03a 	or	r2,r20,r2
   5130c:	003f4a06 	br	51038 <__umoddi3+0x130>
   51310:	a468983a 	sll	r20,r20,r17
   51314:	9daad83a 	srl	r21,r19,r22
   51318:	85acd83a 	srl	r22,r16,r22
   5131c:	a02ed43a 	srli	r23,r20,16
   51320:	a809883a 	mov	r4,r21
   51324:	9c66983a 	sll	r19,r19,r17
   51328:	b80b883a 	mov	r5,r23
   5132c:	0046d700 	call	46d70 <__umodsi3>
   51330:	a809883a 	mov	r4,r21
   51334:	b80b883a 	mov	r5,r23
   51338:	1025883a 	mov	r18,r2
   5133c:	b4ecb03a 	or	r22,r22,r19
   51340:	0046d0c0 	call	46d0c <__udivsi3>
   51344:	9008943a 	slli	r4,r18,16
   51348:	b006d43a 	srli	r3,r22,16
   5134c:	a57fffcc 	andi	r21,r20,65535
   51350:	a885383a 	mul	r2,r21,r2
   51354:	20c8b03a 	or	r4,r4,r3
   51358:	8464983a 	sll	r18,r16,r17
   5135c:	2080042e 	bgeu	r4,r2,51370 <__umoddi3+0x468>
   51360:	2509883a 	add	r4,r4,r20
   51364:	25000236 	bltu	r4,r20,51370 <__umoddi3+0x468>
   51368:	2080012e 	bgeu	r4,r2,51370 <__umoddi3+0x468>
   5136c:	2509883a 	add	r4,r4,r20
   51370:	20a1c83a 	sub	r16,r4,r2
   51374:	b80b883a 	mov	r5,r23
   51378:	8009883a 	mov	r4,r16
   5137c:	0046d700 	call	46d70 <__umodsi3>
   51380:	1027883a 	mov	r19,r2
   51384:	b80b883a 	mov	r5,r23
   51388:	8009883a 	mov	r4,r16
   5138c:	9826943a 	slli	r19,r19,16
   51390:	0046d0c0 	call	46d0c <__udivsi3>
   51394:	a885383a 	mul	r2,r21,r2
   51398:	b5bfffcc 	andi	r22,r22,65535
   5139c:	9da6b03a 	or	r19,r19,r22
   513a0:	9880042e 	bgeu	r19,r2,513b4 <__umoddi3+0x4ac>
   513a4:	9d27883a 	add	r19,r19,r20
   513a8:	9d000236 	bltu	r19,r20,513b4 <__umoddi3+0x4ac>
   513ac:	9880012e 	bgeu	r19,r2,513b4 <__umoddi3+0x4ac>
   513b0:	9d27883a 	add	r19,r19,r20
   513b4:	98a7c83a 	sub	r19,r19,r2
   513b8:	003f5606 	br	51114 <__umoddi3+0x20c>
   513bc:	b8bfcb2e 	bgeu	r23,r2,512ec <__umoddi3+0x3e4>
   513c0:	1463c83a 	sub	r17,r2,r17
   513c4:	1445803a 	cmpltu	r2,r2,r17
   513c8:	1585883a 	add	r2,r2,r22
   513cc:	2089c83a 	sub	r4,r4,r2
   513d0:	8805883a 	mov	r2,r17
   513d4:	003fc506 	br	512ec <__umoddi3+0x3e4>
   513d8:	00c00404 	movi	r3,16
   513dc:	003f4206 	br	510e8 <__umoddi3+0x1e0>
   513e0:	00c00404 	movi	r3,16
   513e4:	003edf06 	br	50f64 <__umoddi3+0x5c>
   513e8:	01400404 	movi	r5,16
   513ec:	003f2506 	br	51084 <__umoddi3+0x17c>
   513f0:	2005883a 	mov	r2,r4
   513f4:	003fa506 	br	5128c <__umoddi3+0x384>
   513f8:	182b883a 	mov	r21,r3
   513fc:	003f8e06 	br	51238 <__umoddi3+0x330>
   51400:	8521883a 	add	r16,r16,r20
   51404:	003f0506 	br	5101c <__umoddi3+0x114>
   51408:	2509883a 	add	r4,r4,r20
   5140c:	003ef306 	br	50fdc <__umoddi3+0xd4>
   51410:	2509883a 	add	r4,r4,r20
   51414:	003f4e06 	br	51150 <__umoddi3+0x248>

00051418 <__floatunsidf>:
   51418:	defffe04 	addi	sp,sp,-8
   5141c:	dc000015 	stw	r16,0(sp)
   51420:	dfc00115 	stw	ra,4(sp)
   51424:	2021883a 	mov	r16,r4
   51428:	20000f26 	beq	r4,zero,51468 <__floatunsidf+0x50>
   5142c:	0046bc80 	call	46bc8 <__clzsi2>
   51430:	00c10784 	movi	r3,1054
   51434:	1887c83a 	sub	r3,r3,r2
   51438:	110002c8 	cmpgei	r4,r2,11
   5143c:	18c1ffcc 	andi	r3,r3,2047
   51440:	2000121e 	bne	r4,zero,5148c <__floatunsidf+0x74>
   51444:	010002c4 	movi	r4,11
   51448:	2089c83a 	sub	r4,r4,r2
   5144c:	8108d83a 	srl	r4,r16,r4
   51450:	01400434 	movhi	r5,16
   51454:	10800544 	addi	r2,r2,21
   51458:	297fffc4 	addi	r5,r5,-1
   5145c:	80a0983a 	sll	r16,r16,r2
   51460:	214a703a 	and	r5,r4,r5
   51464:	00000206 	br	51470 <__floatunsidf+0x58>
   51468:	0007883a 	mov	r3,zero
   5146c:	000b883a 	mov	r5,zero
   51470:	1806953a 	slli	r3,r3,20
   51474:	8005883a 	mov	r2,r16
   51478:	1946b03a 	or	r3,r3,r5
   5147c:	dfc00117 	ldw	ra,4(sp)
   51480:	dc000017 	ldw	r16,0(sp)
   51484:	dec00204 	addi	sp,sp,8
   51488:	f800283a 	ret
   5148c:	117ffd44 	addi	r5,r2,-11
   51490:	814a983a 	sll	r5,r16,r5
   51494:	00800434 	movhi	r2,16
   51498:	10bfffc4 	addi	r2,r2,-1
   5149c:	288a703a 	and	r5,r5,r2
   514a0:	0021883a 	mov	r16,zero
   514a4:	003ff206 	br	51470 <__floatunsidf+0x58>

000514a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   514a8:	defffe04 	addi	sp,sp,-8
   514ac:	dfc00115 	stw	ra,4(sp)
   514b0:	df000015 	stw	fp,0(sp)
   514b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   514b8:	d0a00917 	ldw	r2,-32732(gp)
   514bc:	10000326 	beq	r2,zero,514cc <alt_get_errno+0x24>
   514c0:	d0a00917 	ldw	r2,-32732(gp)
   514c4:	103ee83a 	callr	r2
   514c8:	00000106 	br	514d0 <alt_get_errno+0x28>
   514cc:	d0a70704 	addi	r2,gp,-25572
}
   514d0:	e037883a 	mov	sp,fp
   514d4:	dfc00117 	ldw	ra,4(sp)
   514d8:	df000017 	ldw	fp,0(sp)
   514dc:	dec00204 	addi	sp,sp,8
   514e0:	f800283a 	ret

000514e4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   514e4:	defffb04 	addi	sp,sp,-20
   514e8:	dfc00415 	stw	ra,16(sp)
   514ec:	df000315 	stw	fp,12(sp)
   514f0:	df000304 	addi	fp,sp,12
   514f4:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   514f8:	e0bffd17 	ldw	r2,-12(fp)
   514fc:	10000616 	blt	r2,zero,51518 <close+0x34>
   51500:	e0bffd17 	ldw	r2,-12(fp)
   51504:	10c00324 	muli	r3,r2,12
   51508:	00800174 	movhi	r2,5
   5150c:	10934904 	addi	r2,r2,19748
   51510:	1885883a 	add	r2,r3,r2
   51514:	00000106 	br	5151c <close+0x38>
   51518:	0005883a 	mov	r2,zero
   5151c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   51520:	e0bfff17 	ldw	r2,-4(fp)
   51524:	10001926 	beq	r2,zero,5158c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   51528:	e0bfff17 	ldw	r2,-4(fp)
   5152c:	10800017 	ldw	r2,0(r2)
   51530:	10800417 	ldw	r2,16(r2)
   51534:	10000626 	beq	r2,zero,51550 <close+0x6c>
   51538:	e0bfff17 	ldw	r2,-4(fp)
   5153c:	10800017 	ldw	r2,0(r2)
   51540:	10800417 	ldw	r2,16(r2)
   51544:	e13fff17 	ldw	r4,-4(fp)
   51548:	103ee83a 	callr	r2
   5154c:	00000106 	br	51554 <close+0x70>
   51550:	0005883a 	mov	r2,zero
   51554:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   51558:	e13ffd17 	ldw	r4,-12(fp)
   5155c:	0051d280 	call	51d28 <alt_release_fd>
    if (rval < 0)
   51560:	e0bffe17 	ldw	r2,-8(fp)
   51564:	1000070e 	bge	r2,zero,51584 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   51568:	00514a80 	call	514a8 <alt_get_errno>
   5156c:	1007883a 	mov	r3,r2
   51570:	e0bffe17 	ldw	r2,-8(fp)
   51574:	0085c83a 	sub	r2,zero,r2
   51578:	18800015 	stw	r2,0(r3)
      return -1;
   5157c:	00bfffc4 	movi	r2,-1
   51580:	00000706 	br	515a0 <close+0xbc>
    }
    return 0;
   51584:	0005883a 	mov	r2,zero
   51588:	00000506 	br	515a0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   5158c:	00514a80 	call	514a8 <alt_get_errno>
   51590:	1007883a 	mov	r3,r2
   51594:	00801444 	movi	r2,81
   51598:	18800015 	stw	r2,0(r3)
    return -1;
   5159c:	00bfffc4 	movi	r2,-1
  }
}
   515a0:	e037883a 	mov	sp,fp
   515a4:	dfc00117 	ldw	ra,4(sp)
   515a8:	df000017 	ldw	fp,0(sp)
   515ac:	dec00204 	addi	sp,sp,8
   515b0:	f800283a 	ret

000515b4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   515b4:	defffc04 	addi	sp,sp,-16
   515b8:	df000315 	stw	fp,12(sp)
   515bc:	df000304 	addi	fp,sp,12
   515c0:	e13fff15 	stw	r4,-4(fp)
   515c4:	e17ffe15 	stw	r5,-8(fp)
   515c8:	e1bffd15 	stw	r6,-12(fp)
  return len;
   515cc:	e0bffd17 	ldw	r2,-12(fp)
}
   515d0:	e037883a 	mov	sp,fp
   515d4:	df000017 	ldw	fp,0(sp)
   515d8:	dec00104 	addi	sp,sp,4
   515dc:	f800283a 	ret

000515e0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   515e0:	defffd04 	addi	sp,sp,-12
   515e4:	df000215 	stw	fp,8(sp)
   515e8:	df000204 	addi	fp,sp,8
   515ec:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   515f0:	0001883a 	nop
   515f4:	e0bffe17 	ldw	r2,-8(fp)
   515f8:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   515fc:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   51600:	10000226 	beq	r2,zero,5160c <_exit+0x2c>
    ALT_SIM_FAIL();
   51604:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   51608:	00000106 	br	51610 <_exit+0x30>
    ALT_SIM_PASS();
   5160c:	002af0b0 	cmpltui	zero,zero,43970
}
   51610:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   51614:	003fff06 	br	51614 <_exit+0x34>

00051618 <alt_get_errno>:
{
   51618:	defffe04 	addi	sp,sp,-8
   5161c:	dfc00115 	stw	ra,4(sp)
   51620:	df000015 	stw	fp,0(sp)
   51624:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51628:	d0a00917 	ldw	r2,-32732(gp)
   5162c:	10000326 	beq	r2,zero,5163c <alt_get_errno+0x24>
   51630:	d0a00917 	ldw	r2,-32732(gp)
   51634:	103ee83a 	callr	r2
   51638:	00000106 	br	51640 <alt_get_errno+0x28>
   5163c:	d0a70704 	addi	r2,gp,-25572
}
   51640:	e037883a 	mov	sp,fp
   51644:	dfc00117 	ldw	ra,4(sp)
   51648:	df000017 	ldw	fp,0(sp)
   5164c:	dec00204 	addi	sp,sp,8
   51650:	f800283a 	ret

00051654 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   51654:	defffb04 	addi	sp,sp,-20
   51658:	dfc00415 	stw	ra,16(sp)
   5165c:	df000315 	stw	fp,12(sp)
   51660:	df000304 	addi	fp,sp,12
   51664:	e13ffe15 	stw	r4,-8(fp)
   51668:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5166c:	e0bffe17 	ldw	r2,-8(fp)
   51670:	10000616 	blt	r2,zero,5168c <fstat+0x38>
   51674:	e0bffe17 	ldw	r2,-8(fp)
   51678:	10c00324 	muli	r3,r2,12
   5167c:	00800174 	movhi	r2,5
   51680:	10934904 	addi	r2,r2,19748
   51684:	1885883a 	add	r2,r3,r2
   51688:	00000106 	br	51690 <fstat+0x3c>
   5168c:	0005883a 	mov	r2,zero
   51690:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   51694:	e0bfff17 	ldw	r2,-4(fp)
   51698:	10001026 	beq	r2,zero,516dc <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   5169c:	e0bfff17 	ldw	r2,-4(fp)
   516a0:	10800017 	ldw	r2,0(r2)
   516a4:	10800817 	ldw	r2,32(r2)
   516a8:	10000726 	beq	r2,zero,516c8 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   516ac:	e0bfff17 	ldw	r2,-4(fp)
   516b0:	10800017 	ldw	r2,0(r2)
   516b4:	10800817 	ldw	r2,32(r2)
   516b8:	e17ffd17 	ldw	r5,-12(fp)
   516bc:	e13fff17 	ldw	r4,-4(fp)
   516c0:	103ee83a 	callr	r2
   516c4:	00000a06 	br	516f0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   516c8:	e0bffd17 	ldw	r2,-12(fp)
   516cc:	00c80004 	movi	r3,8192
   516d0:	10c00115 	stw	r3,4(r2)
      return 0;
   516d4:	0005883a 	mov	r2,zero
   516d8:	00000506 	br	516f0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   516dc:	00516180 	call	51618 <alt_get_errno>
   516e0:	1007883a 	mov	r3,r2
   516e4:	00801444 	movi	r2,81
   516e8:	18800015 	stw	r2,0(r3)
    return -1;
   516ec:	00bfffc4 	movi	r2,-1
  }
}
   516f0:	e037883a 	mov	sp,fp
   516f4:	dfc00117 	ldw	ra,4(sp)
   516f8:	df000017 	ldw	fp,0(sp)
   516fc:	dec00204 	addi	sp,sp,8
   51700:	f800283a 	ret

00051704 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   51704:	deffff04 	addi	sp,sp,-4
   51708:	df000015 	stw	fp,0(sp)
   5170c:	d839883a 	mov	fp,sp
  return 0;
   51710:	0005883a 	mov	r2,zero
}
   51714:	e037883a 	mov	sp,fp
   51718:	df000017 	ldw	fp,0(sp)
   5171c:	dec00104 	addi	sp,sp,4
   51720:	f800283a 	ret

00051724 <alt_get_errno>:
{
   51724:	defffe04 	addi	sp,sp,-8
   51728:	dfc00115 	stw	ra,4(sp)
   5172c:	df000015 	stw	fp,0(sp)
   51730:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51734:	d0a00917 	ldw	r2,-32732(gp)
   51738:	10000326 	beq	r2,zero,51748 <alt_get_errno+0x24>
   5173c:	d0a00917 	ldw	r2,-32732(gp)
   51740:	103ee83a 	callr	r2
   51744:	00000106 	br	5174c <alt_get_errno+0x28>
   51748:	d0a70704 	addi	r2,gp,-25572
}
   5174c:	e037883a 	mov	sp,fp
   51750:	dfc00117 	ldw	ra,4(sp)
   51754:	df000017 	ldw	fp,0(sp)
   51758:	dec00204 	addi	sp,sp,8
   5175c:	f800283a 	ret

00051760 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   51760:	deffea04 	addi	sp,sp,-88
   51764:	dfc01515 	stw	ra,84(sp)
   51768:	df001415 	stw	fp,80(sp)
   5176c:	df001404 	addi	fp,sp,80
   51770:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   51774:	e0bfec17 	ldw	r2,-80(fp)
   51778:	10000616 	blt	r2,zero,51794 <isatty+0x34>
   5177c:	e0bfec17 	ldw	r2,-80(fp)
   51780:	10c00324 	muli	r3,r2,12
   51784:	00800174 	movhi	r2,5
   51788:	10934904 	addi	r2,r2,19748
   5178c:	1885883a 	add	r2,r3,r2
   51790:	00000106 	br	51798 <isatty+0x38>
   51794:	0005883a 	mov	r2,zero
   51798:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   5179c:	e0bfff17 	ldw	r2,-4(fp)
   517a0:	10000e26 	beq	r2,zero,517dc <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   517a4:	e0bfff17 	ldw	r2,-4(fp)
   517a8:	10800017 	ldw	r2,0(r2)
   517ac:	10800817 	ldw	r2,32(r2)
   517b0:	1000021e 	bne	r2,zero,517bc <isatty+0x5c>
    {
      return 1;
   517b4:	00800044 	movi	r2,1
   517b8:	00000d06 	br	517f0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   517bc:	e0bfed04 	addi	r2,fp,-76
   517c0:	100b883a 	mov	r5,r2
   517c4:	e13fec17 	ldw	r4,-80(fp)
   517c8:	00516540 	call	51654 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   517cc:	e0bfee17 	ldw	r2,-72(fp)
   517d0:	10880020 	cmpeqi	r2,r2,8192
   517d4:	10803fcc 	andi	r2,r2,255
   517d8:	00000506 	br	517f0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   517dc:	00517240 	call	51724 <alt_get_errno>
   517e0:	1007883a 	mov	r3,r2
   517e4:	00801444 	movi	r2,81
   517e8:	18800015 	stw	r2,0(r3)
    return 0;
   517ec:	0005883a 	mov	r2,zero
  }
}
   517f0:	e037883a 	mov	sp,fp
   517f4:	dfc00117 	ldw	ra,4(sp)
   517f8:	df000017 	ldw	fp,0(sp)
   517fc:	dec00204 	addi	sp,sp,8
   51800:	f800283a 	ret

00051804 <alt_get_errno>:
{
   51804:	defffe04 	addi	sp,sp,-8
   51808:	dfc00115 	stw	ra,4(sp)
   5180c:	df000015 	stw	fp,0(sp)
   51810:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51814:	d0a00917 	ldw	r2,-32732(gp)
   51818:	10000326 	beq	r2,zero,51828 <alt_get_errno+0x24>
   5181c:	d0a00917 	ldw	r2,-32732(gp)
   51820:	103ee83a 	callr	r2
   51824:	00000106 	br	5182c <alt_get_errno+0x28>
   51828:	d0a70704 	addi	r2,gp,-25572
}
   5182c:	e037883a 	mov	sp,fp
   51830:	dfc00117 	ldw	ra,4(sp)
   51834:	df000017 	ldw	fp,0(sp)
   51838:	dec00204 	addi	sp,sp,8
   5183c:	f800283a 	ret

00051840 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   51840:	defffb04 	addi	sp,sp,-20
   51844:	dfc00415 	stw	ra,16(sp)
   51848:	df000315 	stw	fp,12(sp)
   5184c:	df000304 	addi	fp,sp,12
   51850:	e13ffe15 	stw	r4,-8(fp)
   51854:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   51858:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   5185c:	e0bffe17 	ldw	r2,-8(fp)
   51860:	00801d16 	blt	zero,r2,518d8 <kill+0x98>
  {
    switch (sig)
   51864:	e0bffd17 	ldw	r2,-12(fp)
   51868:	10002026 	beq	r2,zero,518ec <kill+0xac>
   5186c:	e0bffd17 	ldw	r2,-12(fp)
   51870:	10001616 	blt	r2,zero,518cc <kill+0x8c>
   51874:	e0bffd17 	ldw	r2,-12(fp)
   51878:	10800808 	cmpgei	r2,r2,32
   5187c:	1000131e 	bne	r2,zero,518cc <kill+0x8c>
   51880:	e0bffd17 	ldw	r2,-12(fp)
   51884:	108000d0 	cmplti	r2,r2,3
   51888:	1000101e 	bne	r2,zero,518cc <kill+0x8c>
   5188c:	e0bffd17 	ldw	r2,-12(fp)
   51890:	00c00044 	movi	r3,1
   51894:	1886983a 	sll	r3,r3,r2
   51898:	00b3e074 	movhi	r2,53121
   5189c:	10bfde04 	addi	r2,r2,-136
   518a0:	1884703a 	and	r2,r3,r2
   518a4:	1004c03a 	cmpne	r2,r2,zero
   518a8:	10803fcc 	andi	r2,r2,255
   518ac:	1000051e 	bne	r2,zero,518c4 <kill+0x84>
   518b0:	1880046c 	andhi	r2,r3,17
   518b4:	1004c03a 	cmpne	r2,r2,zero
   518b8:	10803fcc 	andi	r2,r2,255
   518bc:	10000d1e 	bne	r2,zero,518f4 <kill+0xb4>
   518c0:	00000206 	br	518cc <kill+0x8c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   518c4:	0009883a 	mov	r4,zero
   518c8:	00515e00 	call	515e0 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   518cc:	00800584 	movi	r2,22
   518d0:	e0bfff15 	stw	r2,-4(fp)
   518d4:	00000806 	br	518f8 <kill+0xb8>
    }
  }

  else if (pid > 0)
   518d8:	e0bffe17 	ldw	r2,-8(fp)
   518dc:	0080060e 	bge	zero,r2,518f8 <kill+0xb8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   518e0:	008000c4 	movi	r2,3
   518e4:	e0bfff15 	stw	r2,-4(fp)
   518e8:	00000306 	br	518f8 <kill+0xb8>
      break;
   518ec:	0001883a 	nop
   518f0:	00000106 	br	518f8 <kill+0xb8>
      break;
   518f4:	0001883a 	nop
  }

  if (status)
   518f8:	e0bfff17 	ldw	r2,-4(fp)
   518fc:	10000626 	beq	r2,zero,51918 <kill+0xd8>
  {
    ALT_ERRNO = status;
   51900:	00518040 	call	51804 <alt_get_errno>
   51904:	1007883a 	mov	r3,r2
   51908:	e0bfff17 	ldw	r2,-4(fp)
   5190c:	18800015 	stw	r2,0(r3)
    return -1;
   51910:	00bfffc4 	movi	r2,-1
   51914:	00000106 	br	5191c <kill+0xdc>
  }

  return 0;
   51918:	0005883a 	mov	r2,zero
}
   5191c:	e037883a 	mov	sp,fp
   51920:	dfc00117 	ldw	ra,4(sp)
   51924:	df000017 	ldw	fp,0(sp)
   51928:	dec00204 	addi	sp,sp,8
   5192c:	f800283a 	ret

00051930 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   51930:	defffc04 	addi	sp,sp,-16
   51934:	df000315 	stw	fp,12(sp)
   51938:	df000304 	addi	fp,sp,12
   5193c:	e13fff15 	stw	r4,-4(fp)
   51940:	e17ffe15 	stw	r5,-8(fp)
   51944:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   51948:	e0fffe17 	ldw	r3,-8(fp)
   5194c:	e0bfff17 	ldw	r2,-4(fp)
   51950:	18800c26 	beq	r3,r2,51984 <alt_load_section+0x54>
  {
    while( to != end )
   51954:	00000806 	br	51978 <alt_load_section+0x48>
    {
      *to++ = *from++;
   51958:	e0ffff17 	ldw	r3,-4(fp)
   5195c:	18800104 	addi	r2,r3,4
   51960:	e0bfff15 	stw	r2,-4(fp)
   51964:	e0bffe17 	ldw	r2,-8(fp)
   51968:	11000104 	addi	r4,r2,4
   5196c:	e13ffe15 	stw	r4,-8(fp)
   51970:	18c00017 	ldw	r3,0(r3)
   51974:	10c00015 	stw	r3,0(r2)
    while( to != end )
   51978:	e0fffe17 	ldw	r3,-8(fp)
   5197c:	e0bffd17 	ldw	r2,-12(fp)
   51980:	18bff51e 	bne	r3,r2,51958 <alt_load_section+0x28>
    }
  }
}
   51984:	0001883a 	nop
   51988:	e037883a 	mov	sp,fp
   5198c:	df000017 	ldw	fp,0(sp)
   51990:	dec00104 	addi	sp,sp,4
   51994:	f800283a 	ret

00051998 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   51998:	defffe04 	addi	sp,sp,-8
   5199c:	dfc00115 	stw	ra,4(sp)
   519a0:	df000015 	stw	fp,0(sp)
   519a4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   519a8:	01800174 	movhi	r6,5
   519ac:	3197cf04 	addi	r6,r6,24380
   519b0:	01400174 	movhi	r5,5
   519b4:	2950d904 	addi	r5,r5,17252
   519b8:	01000174 	movhi	r4,5
   519bc:	2117cf04 	addi	r4,r4,24380
   519c0:	00519300 	call	51930 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   519c4:	01800134 	movhi	r6,4
   519c8:	31808e04 	addi	r6,r6,568
   519cc:	01400134 	movhi	r5,4
   519d0:	29400804 	addi	r5,r5,32
   519d4:	01000134 	movhi	r4,4
   519d8:	21000804 	addi	r4,r4,32
   519dc:	00519300 	call	51930 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   519e0:	01800174 	movhi	r6,5
   519e4:	3190d904 	addi	r6,r6,17252
   519e8:	01400174 	movhi	r5,5
   519ec:	294ef404 	addi	r5,r5,15312
   519f0:	01000174 	movhi	r4,5
   519f4:	210ef404 	addi	r4,r4,15312
   519f8:	00519300 	call	51930 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   519fc:	0052bf80 	call	52bf8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   51a00:	0052df00 	call	52df0 <alt_icache_flush_all>
}
   51a04:	0001883a 	nop
   51a08:	e037883a 	mov	sp,fp
   51a0c:	dfc00117 	ldw	ra,4(sp)
   51a10:	df000017 	ldw	fp,0(sp)
   51a14:	dec00204 	addi	sp,sp,8
   51a18:	f800283a 	ret

00051a1c <alt_get_errno>:
{
   51a1c:	defffe04 	addi	sp,sp,-8
   51a20:	dfc00115 	stw	ra,4(sp)
   51a24:	df000015 	stw	fp,0(sp)
   51a28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51a2c:	d0a00917 	ldw	r2,-32732(gp)
   51a30:	10000326 	beq	r2,zero,51a40 <alt_get_errno+0x24>
   51a34:	d0a00917 	ldw	r2,-32732(gp)
   51a38:	103ee83a 	callr	r2
   51a3c:	00000106 	br	51a44 <alt_get_errno+0x28>
   51a40:	d0a70704 	addi	r2,gp,-25572
}
   51a44:	e037883a 	mov	sp,fp
   51a48:	dfc00117 	ldw	ra,4(sp)
   51a4c:	df000017 	ldw	fp,0(sp)
   51a50:	dec00204 	addi	sp,sp,8
   51a54:	f800283a 	ret

00051a58 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   51a58:	defff904 	addi	sp,sp,-28
   51a5c:	dfc00615 	stw	ra,24(sp)
   51a60:	df000515 	stw	fp,20(sp)
   51a64:	df000504 	addi	fp,sp,20
   51a68:	e13ffd15 	stw	r4,-12(fp)
   51a6c:	e17ffc15 	stw	r5,-16(fp)
   51a70:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   51a74:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   51a78:	e0bffd17 	ldw	r2,-12(fp)
   51a7c:	10000616 	blt	r2,zero,51a98 <lseek+0x40>
   51a80:	e0bffd17 	ldw	r2,-12(fp)
   51a84:	10c00324 	muli	r3,r2,12
   51a88:	00800174 	movhi	r2,5
   51a8c:	10934904 	addi	r2,r2,19748
   51a90:	1885883a 	add	r2,r3,r2
   51a94:	00000106 	br	51a9c <lseek+0x44>
   51a98:	0005883a 	mov	r2,zero
   51a9c:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   51aa0:	e0bffe17 	ldw	r2,-8(fp)
   51aa4:	10001026 	beq	r2,zero,51ae8 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   51aa8:	e0bffe17 	ldw	r2,-8(fp)
   51aac:	10800017 	ldw	r2,0(r2)
   51ab0:	10800717 	ldw	r2,28(r2)
   51ab4:	10000926 	beq	r2,zero,51adc <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   51ab8:	e0bffe17 	ldw	r2,-8(fp)
   51abc:	10800017 	ldw	r2,0(r2)
   51ac0:	10800717 	ldw	r2,28(r2)
   51ac4:	e1bffb17 	ldw	r6,-20(fp)
   51ac8:	e17ffc17 	ldw	r5,-16(fp)
   51acc:	e13ffe17 	ldw	r4,-8(fp)
   51ad0:	103ee83a 	callr	r2
   51ad4:	e0bfff15 	stw	r2,-4(fp)
   51ad8:	00000506 	br	51af0 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   51adc:	00bfde84 	movi	r2,-134
   51ae0:	e0bfff15 	stw	r2,-4(fp)
   51ae4:	00000206 	br	51af0 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   51ae8:	00bfebc4 	movi	r2,-81
   51aec:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   51af0:	e0bfff17 	ldw	r2,-4(fp)
   51af4:	1000070e 	bge	r2,zero,51b14 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   51af8:	0051a1c0 	call	51a1c <alt_get_errno>
   51afc:	1007883a 	mov	r3,r2
   51b00:	e0bfff17 	ldw	r2,-4(fp)
   51b04:	0085c83a 	sub	r2,zero,r2
   51b08:	18800015 	stw	r2,0(r3)
    rc = -1;
   51b0c:	00bfffc4 	movi	r2,-1
   51b10:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   51b14:	e0bfff17 	ldw	r2,-4(fp)
}
   51b18:	e037883a 	mov	sp,fp
   51b1c:	dfc00117 	ldw	ra,4(sp)
   51b20:	df000017 	ldw	fp,0(sp)
   51b24:	dec00204 	addi	sp,sp,8
   51b28:	f800283a 	ret

00051b2c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   51b2c:	defffd04 	addi	sp,sp,-12
   51b30:	dfc00215 	stw	ra,8(sp)
   51b34:	df000115 	stw	fp,4(sp)
   51b38:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   51b3c:	0009883a 	mov	r4,zero
   51b40:	0051fa00 	call	51fa0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   51b44:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   51b48:	0051fdc0 	call	51fdc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   51b4c:	01800174 	movhi	r6,5
   51b50:	3190d104 	addi	r6,r6,17220
   51b54:	01400174 	movhi	r5,5
   51b58:	2950d104 	addi	r5,r5,17220
   51b5c:	01000174 	movhi	r4,5
   51b60:	2110d104 	addi	r4,r4,17220
   51b64:	005316c0 	call	5316c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   51b68:	0052d280 	call	52d28 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   51b6c:	01000174 	movhi	r4,5
   51b70:	210b6304 	addi	r4,r4,11660
   51b74:	00539600 	call	53960 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   51b78:	d0a70917 	ldw	r2,-25564(gp)
   51b7c:	d0e70a17 	ldw	r3,-25560(gp)
   51b80:	d1270b17 	ldw	r4,-25556(gp)
   51b84:	200d883a 	mov	r6,r4
   51b88:	180b883a 	mov	r5,r3
   51b8c:	1009883a 	mov	r4,r2
   51b90:	0040e840 	call	40e84 <main>
   51b94:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   51b98:	01000044 	movi	r4,1
   51b9c:	00514e40 	call	514e4 <close>
  exit (result);
   51ba0:	e13fff17 	ldw	r4,-4(fp)
   51ba4:	00539740 	call	53974 <exit>

00051ba8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   51ba8:	defffe04 	addi	sp,sp,-8
   51bac:	df000115 	stw	fp,4(sp)
   51bb0:	df000104 	addi	fp,sp,4
   51bb4:	e13fff15 	stw	r4,-4(fp)
}
   51bb8:	0001883a 	nop
   51bbc:	e037883a 	mov	sp,fp
   51bc0:	df000017 	ldw	fp,0(sp)
   51bc4:	dec00104 	addi	sp,sp,4
   51bc8:	f800283a 	ret

00051bcc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   51bcc:	defffe04 	addi	sp,sp,-8
   51bd0:	df000115 	stw	fp,4(sp)
   51bd4:	df000104 	addi	fp,sp,4
   51bd8:	e13fff15 	stw	r4,-4(fp)
}
   51bdc:	0001883a 	nop
   51be0:	e037883a 	mov	sp,fp
   51be4:	df000017 	ldw	fp,0(sp)
   51be8:	dec00104 	addi	sp,sp,4
   51bec:	f800283a 	ret

00051bf0 <alt_get_errno>:
{
   51bf0:	defffe04 	addi	sp,sp,-8
   51bf4:	dfc00115 	stw	ra,4(sp)
   51bf8:	df000015 	stw	fp,0(sp)
   51bfc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51c00:	d0a00917 	ldw	r2,-32732(gp)
   51c04:	10000326 	beq	r2,zero,51c14 <alt_get_errno+0x24>
   51c08:	d0a00917 	ldw	r2,-32732(gp)
   51c0c:	103ee83a 	callr	r2
   51c10:	00000106 	br	51c18 <alt_get_errno+0x28>
   51c14:	d0a70704 	addi	r2,gp,-25572
}
   51c18:	e037883a 	mov	sp,fp
   51c1c:	dfc00117 	ldw	ra,4(sp)
   51c20:	df000017 	ldw	fp,0(sp)
   51c24:	dec00204 	addi	sp,sp,8
   51c28:	f800283a 	ret

00051c2c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   51c2c:	defff904 	addi	sp,sp,-28
   51c30:	dfc00615 	stw	ra,24(sp)
   51c34:	df000515 	stw	fp,20(sp)
   51c38:	df000504 	addi	fp,sp,20
   51c3c:	e13ffd15 	stw	r4,-12(fp)
   51c40:	e17ffc15 	stw	r5,-16(fp)
   51c44:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   51c48:	e0bffd17 	ldw	r2,-12(fp)
   51c4c:	10000616 	blt	r2,zero,51c68 <read+0x3c>
   51c50:	e0bffd17 	ldw	r2,-12(fp)
   51c54:	10c00324 	muli	r3,r2,12
   51c58:	00800174 	movhi	r2,5
   51c5c:	10934904 	addi	r2,r2,19748
   51c60:	1885883a 	add	r2,r3,r2
   51c64:	00000106 	br	51c6c <read+0x40>
   51c68:	0005883a 	mov	r2,zero
   51c6c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   51c70:	e0bfff17 	ldw	r2,-4(fp)
   51c74:	10002226 	beq	r2,zero,51d00 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   51c78:	e0bfff17 	ldw	r2,-4(fp)
   51c7c:	10800217 	ldw	r2,8(r2)
   51c80:	108000cc 	andi	r2,r2,3
   51c84:	10800060 	cmpeqi	r2,r2,1
   51c88:	1000181e 	bne	r2,zero,51cec <read+0xc0>
        (fd->dev->read))
   51c8c:	e0bfff17 	ldw	r2,-4(fp)
   51c90:	10800017 	ldw	r2,0(r2)
   51c94:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   51c98:	10001426 	beq	r2,zero,51cec <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   51c9c:	e0bfff17 	ldw	r2,-4(fp)
   51ca0:	10800017 	ldw	r2,0(r2)
   51ca4:	10800517 	ldw	r2,20(r2)
   51ca8:	e0fffb17 	ldw	r3,-20(fp)
   51cac:	180d883a 	mov	r6,r3
   51cb0:	e17ffc17 	ldw	r5,-16(fp)
   51cb4:	e13fff17 	ldw	r4,-4(fp)
   51cb8:	103ee83a 	callr	r2
   51cbc:	e0bffe15 	stw	r2,-8(fp)
   51cc0:	e0bffe17 	ldw	r2,-8(fp)
   51cc4:	1000070e 	bge	r2,zero,51ce4 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   51cc8:	0051bf00 	call	51bf0 <alt_get_errno>
   51ccc:	1007883a 	mov	r3,r2
   51cd0:	e0bffe17 	ldw	r2,-8(fp)
   51cd4:	0085c83a 	sub	r2,zero,r2
   51cd8:	18800015 	stw	r2,0(r3)
          return -1;
   51cdc:	00bfffc4 	movi	r2,-1
   51ce0:	00000c06 	br	51d14 <read+0xe8>
        }
        return rval;
   51ce4:	e0bffe17 	ldw	r2,-8(fp)
   51ce8:	00000a06 	br	51d14 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   51cec:	0051bf00 	call	51bf0 <alt_get_errno>
   51cf0:	1007883a 	mov	r3,r2
   51cf4:	00800344 	movi	r2,13
   51cf8:	18800015 	stw	r2,0(r3)
   51cfc:	00000406 	br	51d10 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   51d00:	0051bf00 	call	51bf0 <alt_get_errno>
   51d04:	1007883a 	mov	r3,r2
   51d08:	00801444 	movi	r2,81
   51d0c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   51d10:	00bfffc4 	movi	r2,-1
}
   51d14:	e037883a 	mov	sp,fp
   51d18:	dfc00117 	ldw	ra,4(sp)
   51d1c:	df000017 	ldw	fp,0(sp)
   51d20:	dec00204 	addi	sp,sp,8
   51d24:	f800283a 	ret

00051d28 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   51d28:	defffe04 	addi	sp,sp,-8
   51d2c:	df000115 	stw	fp,4(sp)
   51d30:	df000104 	addi	fp,sp,4
   51d34:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   51d38:	e0bfff17 	ldw	r2,-4(fp)
   51d3c:	108000d0 	cmplti	r2,r2,3
   51d40:	10000a1e 	bne	r2,zero,51d6c <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   51d44:	e0bfff17 	ldw	r2,-4(fp)
   51d48:	10c00324 	muli	r3,r2,12
   51d4c:	00800174 	movhi	r2,5
   51d50:	1885883a 	add	r2,r3,r2
   51d54:	10134b15 	stw	zero,19756(r2)
    alt_fd_list[fd].dev      = 0;
   51d58:	e0bfff17 	ldw	r2,-4(fp)
   51d5c:	10c00324 	muli	r3,r2,12
   51d60:	00800174 	movhi	r2,5
   51d64:	1885883a 	add	r2,r3,r2
   51d68:	10134915 	stw	zero,19748(r2)
  }
}
   51d6c:	0001883a 	nop
   51d70:	e037883a 	mov	sp,fp
   51d74:	df000017 	ldw	fp,0(sp)
   51d78:	dec00104 	addi	sp,sp,4
   51d7c:	f800283a 	ret

00051d80 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   51d80:	defff904 	addi	sp,sp,-28
   51d84:	df000615 	stw	fp,24(sp)
   51d88:	df000604 	addi	fp,sp,24
   51d8c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   51d90:	0005303a 	rdctl	r2,status
   51d94:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51d98:	e0fffd17 	ldw	r3,-12(fp)
   51d9c:	00bfff84 	movi	r2,-2
   51da0:	1884703a 	and	r2,r3,r2
   51da4:	1001703a 	wrctl	status,r2
  return context;
   51da8:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   51dac:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   51db0:	d0a00a17 	ldw	r2,-32728(gp)
   51db4:	10c000c4 	addi	r3,r2,3
   51db8:	00bfff04 	movi	r2,-4
   51dbc:	1884703a 	and	r2,r3,r2
   51dc0:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   51dc4:	d0e00a17 	ldw	r3,-32728(gp)
   51dc8:	e0bffa17 	ldw	r2,-24(fp)
   51dcc:	1887883a 	add	r3,r3,r2
   51dd0:	008001f4 	movhi	r2,7
   51dd4:	10880004 	addi	r2,r2,8192
   51dd8:	10c0072e 	bgeu	r2,r3,51df8 <sbrk+0x78>
   51ddc:	e0bfff17 	ldw	r2,-4(fp)
   51de0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   51de4:	e0bffc17 	ldw	r2,-16(fp)
   51de8:	1001703a 	wrctl	status,r2
}
   51dec:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   51df0:	00bfffc4 	movi	r2,-1
   51df4:	00000c06 	br	51e28 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   51df8:	d0a00a17 	ldw	r2,-32728(gp)
   51dfc:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   51e00:	d0e00a17 	ldw	r3,-32728(gp)
   51e04:	e0bffa17 	ldw	r2,-24(fp)
   51e08:	1885883a 	add	r2,r3,r2
   51e0c:	d0a00a15 	stw	r2,-32728(gp)
   51e10:	e0bfff17 	ldw	r2,-4(fp)
   51e14:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   51e18:	e0bffb17 	ldw	r2,-20(fp)
   51e1c:	1001703a 	wrctl	status,r2
}
   51e20:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   51e24:	e0bffe17 	ldw	r2,-8(fp)
} 
   51e28:	e037883a 	mov	sp,fp
   51e2c:	df000017 	ldw	fp,0(sp)
   51e30:	dec00104 	addi	sp,sp,4
   51e34:	f800283a 	ret

00051e38 <alt_get_errno>:
{
   51e38:	defffe04 	addi	sp,sp,-8
   51e3c:	dfc00115 	stw	ra,4(sp)
   51e40:	df000015 	stw	fp,0(sp)
   51e44:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51e48:	d0a00917 	ldw	r2,-32732(gp)
   51e4c:	10000326 	beq	r2,zero,51e5c <alt_get_errno+0x24>
   51e50:	d0a00917 	ldw	r2,-32732(gp)
   51e54:	103ee83a 	callr	r2
   51e58:	00000106 	br	51e60 <alt_get_errno+0x28>
   51e5c:	d0a70704 	addi	r2,gp,-25572
}
   51e60:	e037883a 	mov	sp,fp
   51e64:	dfc00117 	ldw	ra,4(sp)
   51e68:	df000017 	ldw	fp,0(sp)
   51e6c:	dec00204 	addi	sp,sp,8
   51e70:	f800283a 	ret

00051e74 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   51e74:	defff904 	addi	sp,sp,-28
   51e78:	dfc00615 	stw	ra,24(sp)
   51e7c:	df000515 	stw	fp,20(sp)
   51e80:	df000504 	addi	fp,sp,20
   51e84:	e13ffd15 	stw	r4,-12(fp)
   51e88:	e17ffc15 	stw	r5,-16(fp)
   51e8c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   51e90:	e0bffd17 	ldw	r2,-12(fp)
   51e94:	10000616 	blt	r2,zero,51eb0 <write+0x3c>
   51e98:	e0bffd17 	ldw	r2,-12(fp)
   51e9c:	10c00324 	muli	r3,r2,12
   51ea0:	00800174 	movhi	r2,5
   51ea4:	10934904 	addi	r2,r2,19748
   51ea8:	1885883a 	add	r2,r3,r2
   51eac:	00000106 	br	51eb4 <write+0x40>
   51eb0:	0005883a 	mov	r2,zero
   51eb4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   51eb8:	e0bfff17 	ldw	r2,-4(fp)
   51ebc:	10002126 	beq	r2,zero,51f44 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   51ec0:	e0bfff17 	ldw	r2,-4(fp)
   51ec4:	10800217 	ldw	r2,8(r2)
   51ec8:	108000cc 	andi	r2,r2,3
   51ecc:	10001826 	beq	r2,zero,51f30 <write+0xbc>
   51ed0:	e0bfff17 	ldw	r2,-4(fp)
   51ed4:	10800017 	ldw	r2,0(r2)
   51ed8:	10800617 	ldw	r2,24(r2)
   51edc:	10001426 	beq	r2,zero,51f30 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   51ee0:	e0bfff17 	ldw	r2,-4(fp)
   51ee4:	10800017 	ldw	r2,0(r2)
   51ee8:	10800617 	ldw	r2,24(r2)
   51eec:	e0fffb17 	ldw	r3,-20(fp)
   51ef0:	180d883a 	mov	r6,r3
   51ef4:	e17ffc17 	ldw	r5,-16(fp)
   51ef8:	e13fff17 	ldw	r4,-4(fp)
   51efc:	103ee83a 	callr	r2
   51f00:	e0bffe15 	stw	r2,-8(fp)
   51f04:	e0bffe17 	ldw	r2,-8(fp)
   51f08:	1000070e 	bge	r2,zero,51f28 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   51f0c:	0051e380 	call	51e38 <alt_get_errno>
   51f10:	1007883a 	mov	r3,r2
   51f14:	e0bffe17 	ldw	r2,-8(fp)
   51f18:	0085c83a 	sub	r2,zero,r2
   51f1c:	18800015 	stw	r2,0(r3)
        return -1;
   51f20:	00bfffc4 	movi	r2,-1
   51f24:	00000c06 	br	51f58 <write+0xe4>
      }
      return rval;
   51f28:	e0bffe17 	ldw	r2,-8(fp)
   51f2c:	00000a06 	br	51f58 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   51f30:	0051e380 	call	51e38 <alt_get_errno>
   51f34:	1007883a 	mov	r3,r2
   51f38:	00800344 	movi	r2,13
   51f3c:	18800015 	stw	r2,0(r3)
   51f40:	00000406 	br	51f54 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   51f44:	0051e380 	call	51e38 <alt_get_errno>
   51f48:	1007883a 	mov	r3,r2
   51f4c:	00801444 	movi	r2,81
   51f50:	18800015 	stw	r2,0(r3)
  }
  return -1;
   51f54:	00bfffc4 	movi	r2,-1
}
   51f58:	e037883a 	mov	sp,fp
   51f5c:	dfc00117 	ldw	ra,4(sp)
   51f60:	df000017 	ldw	fp,0(sp)
   51f64:	dec00204 	addi	sp,sp,8
   51f68:	f800283a 	ret

00051f6c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   51f6c:	defffd04 	addi	sp,sp,-12
   51f70:	dfc00215 	stw	ra,8(sp)
   51f74:	df000115 	stw	fp,4(sp)
   51f78:	df000104 	addi	fp,sp,4
   51f7c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   51f80:	d1600604 	addi	r5,gp,-32744
   51f84:	e13fff17 	ldw	r4,-4(fp)
   51f88:	0052c800 	call	52c80 <alt_dev_llist_insert>
}
   51f8c:	e037883a 	mov	sp,fp
   51f90:	dfc00117 	ldw	ra,4(sp)
   51f94:	df000017 	ldw	fp,0(sp)
   51f98:	dec00204 	addi	sp,sp,8
   51f9c:	f800283a 	ret

00051fa0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   51fa0:	defffd04 	addi	sp,sp,-12
   51fa4:	dfc00215 	stw	ra,8(sp)
   51fa8:	df000115 	stw	fp,4(sp)
   51fac:	df000104 	addi	fp,sp,4
   51fb0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU_LAB6, cpu_lab6);
   51fb4:	00536000 	call	53600 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   51fb8:	00800044 	movi	r2,1
   51fbc:	1001703a 	wrctl	status,r2
}
   51fc0:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   51fc4:	0001883a 	nop
   51fc8:	e037883a 	mov	sp,fp
   51fcc:	dfc00117 	ldw	ra,4(sp)
   51fd0:	df000017 	ldw	fp,0(sp)
   51fd4:	dec00204 	addi	sp,sp,8
   51fd8:	f800283a 	ret

00051fdc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   51fdc:	defffe04 	addi	sp,sp,-8
   51fe0:	dfc00115 	stw	ra,4(sp)
   51fe4:	df000015 	stw	fp,0(sp)
   51fe8:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   51fec:	000d883a 	mov	r6,zero
   51ff0:	000b883a 	mov	r5,zero
   51ff4:	01000174 	movhi	r4,5
   51ff8:	2113b304 	addi	r4,r4,20172
   51ffc:	00521880 	call	52188 <altera_avalon_jtag_uart_init>
   52000:	01000174 	movhi	r4,5
   52004:	2113a904 	addi	r4,r4,20132
   52008:	0051f6c0 	call	51f6c <alt_dev_reg>
}
   5200c:	0001883a 	nop
   52010:	e037883a 	mov	sp,fp
   52014:	dfc00117 	ldw	ra,4(sp)
   52018:	df000017 	ldw	fp,0(sp)
   5201c:	dec00204 	addi	sp,sp,8
   52020:	f800283a 	ret

00052024 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   52024:	defffa04 	addi	sp,sp,-24
   52028:	dfc00515 	stw	ra,20(sp)
   5202c:	df000415 	stw	fp,16(sp)
   52030:	df000404 	addi	fp,sp,16
   52034:	e13ffe15 	stw	r4,-8(fp)
   52038:	e17ffd15 	stw	r5,-12(fp)
   5203c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   52040:	e0bffe17 	ldw	r2,-8(fp)
   52044:	10800017 	ldw	r2,0(r2)
   52048:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   5204c:	e0bfff17 	ldw	r2,-4(fp)
   52050:	10c00a04 	addi	r3,r2,40
   52054:	e0bffe17 	ldw	r2,-8(fp)
   52058:	10800217 	ldw	r2,8(r2)
   5205c:	100f883a 	mov	r7,r2
   52060:	e1bffc17 	ldw	r6,-16(fp)
   52064:	e17ffd17 	ldw	r5,-12(fp)
   52068:	1809883a 	mov	r4,r3
   5206c:	00526500 	call	52650 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   52070:	e037883a 	mov	sp,fp
   52074:	dfc00117 	ldw	ra,4(sp)
   52078:	df000017 	ldw	fp,0(sp)
   5207c:	dec00204 	addi	sp,sp,8
   52080:	f800283a 	ret

00052084 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   52084:	defffa04 	addi	sp,sp,-24
   52088:	dfc00515 	stw	ra,20(sp)
   5208c:	df000415 	stw	fp,16(sp)
   52090:	df000404 	addi	fp,sp,16
   52094:	e13ffe15 	stw	r4,-8(fp)
   52098:	e17ffd15 	stw	r5,-12(fp)
   5209c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   520a0:	e0bffe17 	ldw	r2,-8(fp)
   520a4:	10800017 	ldw	r2,0(r2)
   520a8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   520ac:	e0bfff17 	ldw	r2,-4(fp)
   520b0:	10c00a04 	addi	r3,r2,40
   520b4:	e0bffe17 	ldw	r2,-8(fp)
   520b8:	10800217 	ldw	r2,8(r2)
   520bc:	100f883a 	mov	r7,r2
   520c0:	e1bffc17 	ldw	r6,-16(fp)
   520c4:	e17ffd17 	ldw	r5,-12(fp)
   520c8:	1809883a 	mov	r4,r3
   520cc:	00528700 	call	52870 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   520d0:	e037883a 	mov	sp,fp
   520d4:	dfc00117 	ldw	ra,4(sp)
   520d8:	df000017 	ldw	fp,0(sp)
   520dc:	dec00204 	addi	sp,sp,8
   520e0:	f800283a 	ret

000520e4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   520e4:	defffc04 	addi	sp,sp,-16
   520e8:	dfc00315 	stw	ra,12(sp)
   520ec:	df000215 	stw	fp,8(sp)
   520f0:	df000204 	addi	fp,sp,8
   520f4:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   520f8:	e0bffe17 	ldw	r2,-8(fp)
   520fc:	10800017 	ldw	r2,0(r2)
   52100:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   52104:	e0bfff17 	ldw	r2,-4(fp)
   52108:	10c00a04 	addi	r3,r2,40
   5210c:	e0bffe17 	ldw	r2,-8(fp)
   52110:	10800217 	ldw	r2,8(r2)
   52114:	100b883a 	mov	r5,r2
   52118:	1809883a 	mov	r4,r3
   5211c:	00524f40 	call	524f4 <altera_avalon_jtag_uart_close>
}
   52120:	e037883a 	mov	sp,fp
   52124:	dfc00117 	ldw	ra,4(sp)
   52128:	df000017 	ldw	fp,0(sp)
   5212c:	dec00204 	addi	sp,sp,8
   52130:	f800283a 	ret

00052134 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   52134:	defffa04 	addi	sp,sp,-24
   52138:	dfc00515 	stw	ra,20(sp)
   5213c:	df000415 	stw	fp,16(sp)
   52140:	df000404 	addi	fp,sp,16
   52144:	e13ffe15 	stw	r4,-8(fp)
   52148:	e17ffd15 	stw	r5,-12(fp)
   5214c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   52150:	e0bffe17 	ldw	r2,-8(fp)
   52154:	10800017 	ldw	r2,0(r2)
   52158:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   5215c:	e0bfff17 	ldw	r2,-4(fp)
   52160:	10800a04 	addi	r2,r2,40
   52164:	e1bffc17 	ldw	r6,-16(fp)
   52168:	e17ffd17 	ldw	r5,-12(fp)
   5216c:	1009883a 	mov	r4,r2
   52170:	005255c0 	call	5255c <altera_avalon_jtag_uart_ioctl>
}
   52174:	e037883a 	mov	sp,fp
   52178:	dfc00117 	ldw	ra,4(sp)
   5217c:	df000017 	ldw	fp,0(sp)
   52180:	dec00204 	addi	sp,sp,8
   52184:	f800283a 	ret

00052188 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   52188:	defffa04 	addi	sp,sp,-24
   5218c:	dfc00515 	stw	ra,20(sp)
   52190:	df000415 	stw	fp,16(sp)
   52194:	df000404 	addi	fp,sp,16
   52198:	e13fff15 	stw	r4,-4(fp)
   5219c:	e17ffe15 	stw	r5,-8(fp)
   521a0:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   521a4:	e0bfff17 	ldw	r2,-4(fp)
   521a8:	00c00044 	movi	r3,1
   521ac:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   521b0:	e0bfff17 	ldw	r2,-4(fp)
   521b4:	10800017 	ldw	r2,0(r2)
   521b8:	10800104 	addi	r2,r2,4
   521bc:	1007883a 	mov	r3,r2
   521c0:	e0bfff17 	ldw	r2,-4(fp)
   521c4:	10800817 	ldw	r2,32(r2)
   521c8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   521cc:	e0bffe17 	ldw	r2,-8(fp)
   521d0:	e0fffd17 	ldw	r3,-12(fp)
   521d4:	d8000015 	stw	zero,0(sp)
   521d8:	e1ffff17 	ldw	r7,-4(fp)
   521dc:	01800174 	movhi	r6,5
   521e0:	31889204 	addi	r6,r6,8776
   521e4:	180b883a 	mov	r5,r3
   521e8:	1009883a 	mov	r4,r2
   521ec:	0052e240 	call	52e24 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   521f0:	e0bfff17 	ldw	r2,-4(fp)
   521f4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   521f8:	e0bfff17 	ldw	r2,-4(fp)
   521fc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   52200:	d0e70d17 	ldw	r3,-25548(gp)
   52204:	e1ffff17 	ldw	r7,-4(fp)
   52208:	01800174 	movhi	r6,5
   5220c:	31891504 	addi	r6,r6,9300
   52210:	180b883a 	mov	r5,r3
   52214:	1009883a 	mov	r4,r2
   52218:	0052a980 	call	52a98 <alt_alarm_start>
   5221c:	1000040e 	bge	r2,zero,52230 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   52220:	e0ffff17 	ldw	r3,-4(fp)
   52224:	00a00034 	movhi	r2,32768
   52228:	10bfffc4 	addi	r2,r2,-1
   5222c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   52230:	0001883a 	nop
   52234:	e037883a 	mov	sp,fp
   52238:	dfc00117 	ldw	ra,4(sp)
   5223c:	df000017 	ldw	fp,0(sp)
   52240:	dec00204 	addi	sp,sp,8
   52244:	f800283a 	ret

00052248 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   52248:	defff804 	addi	sp,sp,-32
   5224c:	df000715 	stw	fp,28(sp)
   52250:	df000704 	addi	fp,sp,28
   52254:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   52258:	e0bff917 	ldw	r2,-28(fp)
   5225c:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   52260:	e0bffd17 	ldw	r2,-12(fp)
   52264:	10800017 	ldw	r2,0(r2)
   52268:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   5226c:	e0bffc17 	ldw	r2,-16(fp)
   52270:	10800104 	addi	r2,r2,4
   52274:	10800037 	ldwio	r2,0(r2)
   52278:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   5227c:	e0bffb17 	ldw	r2,-20(fp)
   52280:	1080c00c 	andi	r2,r2,768
   52284:	10006d26 	beq	r2,zero,5243c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   52288:	e0bffb17 	ldw	r2,-20(fp)
   5228c:	1080400c 	andi	r2,r2,256
   52290:	10003526 	beq	r2,zero,52368 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   52294:	00800074 	movhi	r2,1
   52298:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   5229c:	e0bffd17 	ldw	r2,-12(fp)
   522a0:	10800a17 	ldw	r2,40(r2)
   522a4:	10800044 	addi	r2,r2,1
   522a8:	1081ffcc 	andi	r2,r2,2047
   522ac:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   522b0:	e0bffd17 	ldw	r2,-12(fp)
   522b4:	10800b17 	ldw	r2,44(r2)
   522b8:	e0fffa17 	ldw	r3,-24(fp)
   522bc:	18801526 	beq	r3,r2,52314 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   522c0:	e0bffc17 	ldw	r2,-16(fp)
   522c4:	10800037 	ldwio	r2,0(r2)
   522c8:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   522cc:	e0bfff17 	ldw	r2,-4(fp)
   522d0:	10a0000c 	andi	r2,r2,32768
   522d4:	10001126 	beq	r2,zero,5231c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   522d8:	e0bffd17 	ldw	r2,-12(fp)
   522dc:	10800a17 	ldw	r2,40(r2)
   522e0:	e0ffff17 	ldw	r3,-4(fp)
   522e4:	1809883a 	mov	r4,r3
   522e8:	e0fffd17 	ldw	r3,-12(fp)
   522ec:	1885883a 	add	r2,r3,r2
   522f0:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   522f4:	e0bffd17 	ldw	r2,-12(fp)
   522f8:	10800a17 	ldw	r2,40(r2)
   522fc:	10800044 	addi	r2,r2,1
   52300:	10c1ffcc 	andi	r3,r2,2047
   52304:	e0bffd17 	ldw	r2,-12(fp)
   52308:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   5230c:	0001883a 	nop
      {
   52310:	003fe206 	br	5229c <altera_avalon_jtag_uart_irq+0x54>
          break;
   52314:	0001883a 	nop
   52318:	00000106 	br	52320 <altera_avalon_jtag_uart_irq+0xd8>
          break;
   5231c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   52320:	e0bfff17 	ldw	r2,-4(fp)
   52324:	10bfffec 	andhi	r2,r2,65535
   52328:	10000f26 	beq	r2,zero,52368 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   5232c:	e0bffd17 	ldw	r2,-12(fp)
   52330:	10c00817 	ldw	r3,32(r2)
   52334:	00bfff84 	movi	r2,-2
   52338:	1886703a 	and	r3,r3,r2
   5233c:	e0bffd17 	ldw	r2,-12(fp)
   52340:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   52344:	e0bffc17 	ldw	r2,-16(fp)
   52348:	10800104 	addi	r2,r2,4
   5234c:	1007883a 	mov	r3,r2
   52350:	e0bffd17 	ldw	r2,-12(fp)
   52354:	10800817 	ldw	r2,32(r2)
   52358:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   5235c:	e0bffc17 	ldw	r2,-16(fp)
   52360:	10800104 	addi	r2,r2,4
   52364:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   52368:	e0bffb17 	ldw	r2,-20(fp)
   5236c:	1080800c 	andi	r2,r2,512
   52370:	103fbe26 	beq	r2,zero,5226c <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   52374:	e0bffb17 	ldw	r2,-20(fp)
   52378:	1004d43a 	srli	r2,r2,16
   5237c:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   52380:	00001406 	br	523d4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   52384:	e0bffc17 	ldw	r2,-16(fp)
   52388:	e0fffd17 	ldw	r3,-12(fp)
   5238c:	18c00d17 	ldw	r3,52(r3)
   52390:	e13ffd17 	ldw	r4,-12(fp)
   52394:	20c7883a 	add	r3,r4,r3
   52398:	18c20e03 	ldbu	r3,2104(r3)
   5239c:	18c03fcc 	andi	r3,r3,255
   523a0:	18c0201c 	xori	r3,r3,128
   523a4:	18ffe004 	addi	r3,r3,-128
   523a8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   523ac:	e0bffd17 	ldw	r2,-12(fp)
   523b0:	10800d17 	ldw	r2,52(r2)
   523b4:	10800044 	addi	r2,r2,1
   523b8:	10c1ffcc 	andi	r3,r2,2047
   523bc:	e0bffd17 	ldw	r2,-12(fp)
   523c0:	10c00d15 	stw	r3,52(r2)
   523c4:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   523c8:	e0bffe17 	ldw	r2,-8(fp)
   523cc:	10bfffc4 	addi	r2,r2,-1
   523d0:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   523d4:	e0bffe17 	ldw	r2,-8(fp)
   523d8:	10000526 	beq	r2,zero,523f0 <altera_avalon_jtag_uart_irq+0x1a8>
   523dc:	e0bffd17 	ldw	r2,-12(fp)
   523e0:	10c00d17 	ldw	r3,52(r2)
   523e4:	e0bffd17 	ldw	r2,-12(fp)
   523e8:	10800c17 	ldw	r2,48(r2)
   523ec:	18bfe51e 	bne	r3,r2,52384 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
   523f0:	e0bffe17 	ldw	r2,-8(fp)
   523f4:	103f9d26 	beq	r2,zero,5226c <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   523f8:	e0bffd17 	ldw	r2,-12(fp)
   523fc:	10c00817 	ldw	r3,32(r2)
   52400:	00bfff44 	movi	r2,-3
   52404:	1886703a 	and	r3,r3,r2
   52408:	e0bffd17 	ldw	r2,-12(fp)
   5240c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   52410:	e0bffd17 	ldw	r2,-12(fp)
   52414:	10800017 	ldw	r2,0(r2)
   52418:	10800104 	addi	r2,r2,4
   5241c:	1007883a 	mov	r3,r2
   52420:	e0bffd17 	ldw	r2,-12(fp)
   52424:	10800817 	ldw	r2,32(r2)
   52428:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   5242c:	e0bffc17 	ldw	r2,-16(fp)
   52430:	10800104 	addi	r2,r2,4
   52434:	10800037 	ldwio	r2,0(r2)
  {
   52438:	003f8c06 	br	5226c <altera_avalon_jtag_uart_irq+0x24>
      break;
   5243c:	0001883a 	nop
      }
    }
  }
}
   52440:	0001883a 	nop
   52444:	e037883a 	mov	sp,fp
   52448:	df000017 	ldw	fp,0(sp)
   5244c:	dec00104 	addi	sp,sp,4
   52450:	f800283a 	ret

00052454 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   52454:	defffc04 	addi	sp,sp,-16
   52458:	df000315 	stw	fp,12(sp)
   5245c:	df000304 	addi	fp,sp,12
   52460:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   52464:	e0bffd17 	ldw	r2,-12(fp)
   52468:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   5246c:	e0bfff17 	ldw	r2,-4(fp)
   52470:	10800017 	ldw	r2,0(r2)
   52474:	10800104 	addi	r2,r2,4
   52478:	10800037 	ldwio	r2,0(r2)
   5247c:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   52480:	e0bffe17 	ldw	r2,-8(fp)
   52484:	1081000c 	andi	r2,r2,1024
   52488:	10000b26 	beq	r2,zero,524b8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   5248c:	e0bfff17 	ldw	r2,-4(fp)
   52490:	10800017 	ldw	r2,0(r2)
   52494:	10800104 	addi	r2,r2,4
   52498:	1007883a 	mov	r3,r2
   5249c:	e0bfff17 	ldw	r2,-4(fp)
   524a0:	10800817 	ldw	r2,32(r2)
   524a4:	10810014 	ori	r2,r2,1024
   524a8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   524ac:	e0bfff17 	ldw	r2,-4(fp)
   524b0:	10000915 	stw	zero,36(r2)
   524b4:	00000a06 	br	524e0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   524b8:	e0bfff17 	ldw	r2,-4(fp)
   524bc:	10c00917 	ldw	r3,36(r2)
   524c0:	00a00034 	movhi	r2,32768
   524c4:	10bfff04 	addi	r2,r2,-4
   524c8:	10c00536 	bltu	r2,r3,524e0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   524cc:	e0bfff17 	ldw	r2,-4(fp)
   524d0:	10800917 	ldw	r2,36(r2)
   524d4:	10c00044 	addi	r3,r2,1
   524d8:	e0bfff17 	ldw	r2,-4(fp)
   524dc:	10c00915 	stw	r3,36(r2)
   524e0:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   524e4:	e037883a 	mov	sp,fp
   524e8:	df000017 	ldw	fp,0(sp)
   524ec:	dec00104 	addi	sp,sp,4
   524f0:	f800283a 	ret

000524f4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   524f4:	defffd04 	addi	sp,sp,-12
   524f8:	df000215 	stw	fp,8(sp)
   524fc:	df000204 	addi	fp,sp,8
   52500:	e13fff15 	stw	r4,-4(fp)
   52504:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   52508:	00000506 	br	52520 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   5250c:	e0bffe17 	ldw	r2,-8(fp)
   52510:	1090000c 	andi	r2,r2,16384
   52514:	10000226 	beq	r2,zero,52520 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   52518:	00bffd44 	movi	r2,-11
   5251c:	00000b06 	br	5254c <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   52520:	e0bfff17 	ldw	r2,-4(fp)
   52524:	10c00d17 	ldw	r3,52(r2)
   52528:	e0bfff17 	ldw	r2,-4(fp)
   5252c:	10800c17 	ldw	r2,48(r2)
   52530:	18800526 	beq	r3,r2,52548 <altera_avalon_jtag_uart_close+0x54>
   52534:	e0bfff17 	ldw	r2,-4(fp)
   52538:	10c00917 	ldw	r3,36(r2)
   5253c:	e0bfff17 	ldw	r2,-4(fp)
   52540:	10800117 	ldw	r2,4(r2)
   52544:	18bff136 	bltu	r3,r2,5250c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   52548:	0005883a 	mov	r2,zero
}
   5254c:	e037883a 	mov	sp,fp
   52550:	df000017 	ldw	fp,0(sp)
   52554:	dec00104 	addi	sp,sp,4
   52558:	f800283a 	ret

0005255c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   5255c:	defffa04 	addi	sp,sp,-24
   52560:	df000515 	stw	fp,20(sp)
   52564:	df000504 	addi	fp,sp,20
   52568:	e13ffd15 	stw	r4,-12(fp)
   5256c:	e17ffc15 	stw	r5,-16(fp)
   52570:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   52574:	00bff9c4 	movi	r2,-25
   52578:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   5257c:	e0bffc17 	ldw	r2,-16(fp)
   52580:	109a8060 	cmpeqi	r2,r2,27137
   52584:	1000041e 	bne	r2,zero,52598 <altera_avalon_jtag_uart_ioctl+0x3c>
   52588:	e0bffc17 	ldw	r2,-16(fp)
   5258c:	109a80a0 	cmpeqi	r2,r2,27138
   52590:	1000181e 	bne	r2,zero,525f4 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   52594:	00002906 	br	5263c <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   52598:	e0bffd17 	ldw	r2,-12(fp)
   5259c:	10c00117 	ldw	r3,4(r2)
   525a0:	00a00034 	movhi	r2,32768
   525a4:	10bfffc4 	addi	r2,r2,-1
   525a8:	18802126 	beq	r3,r2,52630 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   525ac:	e0bffb17 	ldw	r2,-20(fp)
   525b0:	10800017 	ldw	r2,0(r2)
   525b4:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   525b8:	e0bffe17 	ldw	r2,-8(fp)
   525bc:	10800090 	cmplti	r2,r2,2
   525c0:	1000061e 	bne	r2,zero,525dc <altera_avalon_jtag_uart_ioctl+0x80>
   525c4:	e0fffe17 	ldw	r3,-8(fp)
   525c8:	00a00034 	movhi	r2,32768
   525cc:	10bfffc4 	addi	r2,r2,-1
   525d0:	18800226 	beq	r3,r2,525dc <altera_avalon_jtag_uart_ioctl+0x80>
   525d4:	e0bffe17 	ldw	r2,-8(fp)
   525d8:	00000206 	br	525e4 <altera_avalon_jtag_uart_ioctl+0x88>
   525dc:	00a00034 	movhi	r2,32768
   525e0:	10bfff84 	addi	r2,r2,-2
   525e4:	e0fffd17 	ldw	r3,-12(fp)
   525e8:	18800115 	stw	r2,4(r3)
      rc = 0;
   525ec:	e03fff15 	stw	zero,-4(fp)
    break;
   525f0:	00000f06 	br	52630 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   525f4:	e0bffd17 	ldw	r2,-12(fp)
   525f8:	10c00117 	ldw	r3,4(r2)
   525fc:	00a00034 	movhi	r2,32768
   52600:	10bfffc4 	addi	r2,r2,-1
   52604:	18800c26 	beq	r3,r2,52638 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   52608:	e0bffd17 	ldw	r2,-12(fp)
   5260c:	10c00917 	ldw	r3,36(r2)
   52610:	e0bffd17 	ldw	r2,-12(fp)
   52614:	10800117 	ldw	r2,4(r2)
   52618:	1885803a 	cmpltu	r2,r3,r2
   5261c:	10c03fcc 	andi	r3,r2,255
   52620:	e0bffb17 	ldw	r2,-20(fp)
   52624:	10c00015 	stw	r3,0(r2)
      rc = 0;
   52628:	e03fff15 	stw	zero,-4(fp)
    break;
   5262c:	00000206 	br	52638 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   52630:	0001883a 	nop
   52634:	00000106 	br	5263c <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   52638:	0001883a 	nop
  }

  return rc;
   5263c:	e0bfff17 	ldw	r2,-4(fp)
}
   52640:	e037883a 	mov	sp,fp
   52644:	df000017 	ldw	fp,0(sp)
   52648:	dec00104 	addi	sp,sp,4
   5264c:	f800283a 	ret

00052650 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   52650:	defff304 	addi	sp,sp,-52
   52654:	dfc00c15 	stw	ra,48(sp)
   52658:	df000b15 	stw	fp,44(sp)
   5265c:	df000b04 	addi	fp,sp,44
   52660:	e13ff815 	stw	r4,-32(fp)
   52664:	e17ff715 	stw	r5,-36(fp)
   52668:	e1bff615 	stw	r6,-40(fp)
   5266c:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   52670:	e0bff717 	ldw	r2,-36(fp)
   52674:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   52678:	00004706 	br	52798 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   5267c:	e0bff817 	ldw	r2,-32(fp)
   52680:	10800a17 	ldw	r2,40(r2)
   52684:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   52688:	e0bff817 	ldw	r2,-32(fp)
   5268c:	10800b17 	ldw	r2,44(r2)
   52690:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   52694:	e0fffd17 	ldw	r3,-12(fp)
   52698:	e0bffc17 	ldw	r2,-16(fp)
   5269c:	18800536 	bltu	r3,r2,526b4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   526a0:	e0fffd17 	ldw	r3,-12(fp)
   526a4:	e0bffc17 	ldw	r2,-16(fp)
   526a8:	1885c83a 	sub	r2,r3,r2
   526ac:	e0bffe15 	stw	r2,-8(fp)
   526b0:	00000406 	br	526c4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   526b4:	00c20004 	movi	r3,2048
   526b8:	e0bffc17 	ldw	r2,-16(fp)
   526bc:	1885c83a 	sub	r2,r3,r2
   526c0:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   526c4:	e0bffe17 	ldw	r2,-8(fp)
   526c8:	10001e26 	beq	r2,zero,52744 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   526cc:	e0fff617 	ldw	r3,-40(fp)
   526d0:	e0bffe17 	ldw	r2,-8(fp)
   526d4:	1880022e 	bgeu	r3,r2,526e0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   526d8:	e0bff617 	ldw	r2,-40(fp)
   526dc:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   526e0:	e0bff817 	ldw	r2,-32(fp)
   526e4:	10c00e04 	addi	r3,r2,56
   526e8:	e0bffc17 	ldw	r2,-16(fp)
   526ec:	1885883a 	add	r2,r3,r2
   526f0:	e1bffe17 	ldw	r6,-8(fp)
   526f4:	100b883a 	mov	r5,r2
   526f8:	e13fff17 	ldw	r4,-4(fp)
   526fc:	004c7300 	call	4c730 <memcpy>
      ptr   += n;
   52700:	e0ffff17 	ldw	r3,-4(fp)
   52704:	e0bffe17 	ldw	r2,-8(fp)
   52708:	1885883a 	add	r2,r3,r2
   5270c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   52710:	e0fff617 	ldw	r3,-40(fp)
   52714:	e0bffe17 	ldw	r2,-8(fp)
   52718:	1885c83a 	sub	r2,r3,r2
   5271c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   52720:	e0fffc17 	ldw	r3,-16(fp)
   52724:	e0bffe17 	ldw	r2,-8(fp)
   52728:	1885883a 	add	r2,r3,r2
   5272c:	10c1ffcc 	andi	r3,r2,2047
   52730:	e0bff817 	ldw	r2,-32(fp)
   52734:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   52738:	e0bff617 	ldw	r2,-40(fp)
   5273c:	00bfcf16 	blt	zero,r2,5267c <altera_avalon_jtag_uart_read+0x2c>
   52740:	00000106 	br	52748 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   52744:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   52748:	e0ffff17 	ldw	r3,-4(fp)
   5274c:	e0bff717 	ldw	r2,-36(fp)
   52750:	1880141e 	bne	r3,r2,527a4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   52754:	e0bff517 	ldw	r2,-44(fp)
   52758:	1090000c 	andi	r2,r2,16384
   5275c:	1000131e 	bne	r2,zero,527ac <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   52760:	0001883a 	nop
   52764:	e0bff817 	ldw	r2,-32(fp)
   52768:	10800a17 	ldw	r2,40(r2)
   5276c:	e0fffd17 	ldw	r3,-12(fp)
   52770:	1880051e 	bne	r3,r2,52788 <altera_avalon_jtag_uart_read+0x138>
   52774:	e0bff817 	ldw	r2,-32(fp)
   52778:	10c00917 	ldw	r3,36(r2)
   5277c:	e0bff817 	ldw	r2,-32(fp)
   52780:	10800117 	ldw	r2,4(r2)
   52784:	18bff736 	bltu	r3,r2,52764 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   52788:	e0bff817 	ldw	r2,-32(fp)
   5278c:	10800a17 	ldw	r2,40(r2)
   52790:	e0fffd17 	ldw	r3,-12(fp)
   52794:	18800726 	beq	r3,r2,527b4 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   52798:	e0bff617 	ldw	r2,-40(fp)
   5279c:	00bfb716 	blt	zero,r2,5267c <altera_avalon_jtag_uart_read+0x2c>
   527a0:	00000506 	br	527b8 <altera_avalon_jtag_uart_read+0x168>
      break;
   527a4:	0001883a 	nop
   527a8:	00000306 	br	527b8 <altera_avalon_jtag_uart_read+0x168>
      break;
   527ac:	0001883a 	nop
   527b0:	00000106 	br	527b8 <altera_avalon_jtag_uart_read+0x168>
      break;
   527b4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   527b8:	e0ffff17 	ldw	r3,-4(fp)
   527bc:	e0bff717 	ldw	r2,-36(fp)
   527c0:	18801926 	beq	r3,r2,52828 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   527c4:	0005303a 	rdctl	r2,status
   527c8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   527cc:	e0fff917 	ldw	r3,-28(fp)
   527d0:	00bfff84 	movi	r2,-2
   527d4:	1884703a 	and	r2,r3,r2
   527d8:	1001703a 	wrctl	status,r2
  return context;
   527dc:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   527e0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   527e4:	e0bff817 	ldw	r2,-32(fp)
   527e8:	10800817 	ldw	r2,32(r2)
   527ec:	10c00054 	ori	r3,r2,1
   527f0:	e0bff817 	ldw	r2,-32(fp)
   527f4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   527f8:	e0bff817 	ldw	r2,-32(fp)
   527fc:	10800017 	ldw	r2,0(r2)
   52800:	10800104 	addi	r2,r2,4
   52804:	1007883a 	mov	r3,r2
   52808:	e0bff817 	ldw	r2,-32(fp)
   5280c:	10800817 	ldw	r2,32(r2)
   52810:	18800035 	stwio	r2,0(r3)
   52814:	e0bffb17 	ldw	r2,-20(fp)
   52818:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   5281c:	e0bffa17 	ldw	r2,-24(fp)
   52820:	1001703a 	wrctl	status,r2
}
   52824:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   52828:	e0ffff17 	ldw	r3,-4(fp)
   5282c:	e0bff717 	ldw	r2,-36(fp)
   52830:	18800426 	beq	r3,r2,52844 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   52834:	e0ffff17 	ldw	r3,-4(fp)
   52838:	e0bff717 	ldw	r2,-36(fp)
   5283c:	1885c83a 	sub	r2,r3,r2
   52840:	00000606 	br	5285c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   52844:	e0bff517 	ldw	r2,-44(fp)
   52848:	1090000c 	andi	r2,r2,16384
   5284c:	10000226 	beq	r2,zero,52858 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   52850:	00bffd44 	movi	r2,-11
   52854:	00000106 	br	5285c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   52858:	00bffec4 	movi	r2,-5
}
   5285c:	e037883a 	mov	sp,fp
   52860:	dfc00117 	ldw	ra,4(sp)
   52864:	df000017 	ldw	fp,0(sp)
   52868:	dec00204 	addi	sp,sp,8
   5286c:	f800283a 	ret

00052870 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   52870:	defff304 	addi	sp,sp,-52
   52874:	dfc00c15 	stw	ra,48(sp)
   52878:	df000b15 	stw	fp,44(sp)
   5287c:	df000b04 	addi	fp,sp,44
   52880:	e13ff815 	stw	r4,-32(fp)
   52884:	e17ff715 	stw	r5,-36(fp)
   52888:	e1bff615 	stw	r6,-40(fp)
   5288c:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   52890:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   52894:	e0bff717 	ldw	r2,-36(fp)
   52898:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   5289c:	00003706 	br	5297c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   528a0:	e0bff817 	ldw	r2,-32(fp)
   528a4:	10800c17 	ldw	r2,48(r2)
   528a8:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   528ac:	e0bff817 	ldw	r2,-32(fp)
   528b0:	10800d17 	ldw	r2,52(r2)
   528b4:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   528b8:	e0fffc17 	ldw	r3,-16(fp)
   528bc:	e0bfff17 	ldw	r2,-4(fp)
   528c0:	1880062e 	bgeu	r3,r2,528dc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   528c4:	e0ffff17 	ldw	r3,-4(fp)
   528c8:	e0bffc17 	ldw	r2,-16(fp)
   528cc:	1885c83a 	sub	r2,r3,r2
   528d0:	10bfffc4 	addi	r2,r2,-1
   528d4:	e0bffe15 	stw	r2,-8(fp)
   528d8:	00000b06 	br	52908 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   528dc:	e0bfff17 	ldw	r2,-4(fp)
   528e0:	10000526 	beq	r2,zero,528f8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   528e4:	00c20004 	movi	r3,2048
   528e8:	e0bffc17 	ldw	r2,-16(fp)
   528ec:	1885c83a 	sub	r2,r3,r2
   528f0:	e0bffe15 	stw	r2,-8(fp)
   528f4:	00000406 	br	52908 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   528f8:	00c1ffc4 	movi	r3,2047
   528fc:	e0bffc17 	ldw	r2,-16(fp)
   52900:	1885c83a 	sub	r2,r3,r2
   52904:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   52908:	e0bffe17 	ldw	r2,-8(fp)
   5290c:	10001e26 	beq	r2,zero,52988 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   52910:	e0fff617 	ldw	r3,-40(fp)
   52914:	e0bffe17 	ldw	r2,-8(fp)
   52918:	1880022e 	bgeu	r3,r2,52924 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   5291c:	e0bff617 	ldw	r2,-40(fp)
   52920:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   52924:	e0bff817 	ldw	r2,-32(fp)
   52928:	10c20e04 	addi	r3,r2,2104
   5292c:	e0bffc17 	ldw	r2,-16(fp)
   52930:	1885883a 	add	r2,r3,r2
   52934:	e1bffe17 	ldw	r6,-8(fp)
   52938:	e17ff717 	ldw	r5,-36(fp)
   5293c:	1009883a 	mov	r4,r2
   52940:	004c7300 	call	4c730 <memcpy>
      ptr   += n;
   52944:	e0fff717 	ldw	r3,-36(fp)
   52948:	e0bffe17 	ldw	r2,-8(fp)
   5294c:	1885883a 	add	r2,r3,r2
   52950:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   52954:	e0fff617 	ldw	r3,-40(fp)
   52958:	e0bffe17 	ldw	r2,-8(fp)
   5295c:	1885c83a 	sub	r2,r3,r2
   52960:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   52964:	e0fffc17 	ldw	r3,-16(fp)
   52968:	e0bffe17 	ldw	r2,-8(fp)
   5296c:	1885883a 	add	r2,r3,r2
   52970:	10c1ffcc 	andi	r3,r2,2047
   52974:	e0bff817 	ldw	r2,-32(fp)
   52978:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   5297c:	e0bff617 	ldw	r2,-40(fp)
   52980:	00bfc716 	blt	zero,r2,528a0 <altera_avalon_jtag_uart_write+0x30>
   52984:	00000106 	br	5298c <altera_avalon_jtag_uart_write+0x11c>
        break;
   52988:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   5298c:	0005303a 	rdctl	r2,status
   52990:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52994:	e0fff917 	ldw	r3,-28(fp)
   52998:	00bfff84 	movi	r2,-2
   5299c:	1884703a 	and	r2,r3,r2
   529a0:	1001703a 	wrctl	status,r2
  return context;
   529a4:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   529a8:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   529ac:	e0bff817 	ldw	r2,-32(fp)
   529b0:	10800817 	ldw	r2,32(r2)
   529b4:	10c00094 	ori	r3,r2,2
   529b8:	e0bff817 	ldw	r2,-32(fp)
   529bc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   529c0:	e0bff817 	ldw	r2,-32(fp)
   529c4:	10800017 	ldw	r2,0(r2)
   529c8:	10800104 	addi	r2,r2,4
   529cc:	1007883a 	mov	r3,r2
   529d0:	e0bff817 	ldw	r2,-32(fp)
   529d4:	10800817 	ldw	r2,32(r2)
   529d8:	18800035 	stwio	r2,0(r3)
   529dc:	e0bffb17 	ldw	r2,-20(fp)
   529e0:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   529e4:	e0bffa17 	ldw	r2,-24(fp)
   529e8:	1001703a 	wrctl	status,r2
}
   529ec:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   529f0:	e0bff617 	ldw	r2,-40(fp)
   529f4:	0080100e 	bge	zero,r2,52a38 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   529f8:	e0bff517 	ldw	r2,-44(fp)
   529fc:	1090000c 	andi	r2,r2,16384
   52a00:	1000101e 	bne	r2,zero,52a44 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   52a04:	0001883a 	nop
   52a08:	e0bff817 	ldw	r2,-32(fp)
   52a0c:	10800d17 	ldw	r2,52(r2)
   52a10:	e0ffff17 	ldw	r3,-4(fp)
   52a14:	1880051e 	bne	r3,r2,52a2c <altera_avalon_jtag_uart_write+0x1bc>
   52a18:	e0bff817 	ldw	r2,-32(fp)
   52a1c:	10c00917 	ldw	r3,36(r2)
   52a20:	e0bff817 	ldw	r2,-32(fp)
   52a24:	10800117 	ldw	r2,4(r2)
   52a28:	18bff736 	bltu	r3,r2,52a08 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   52a2c:	e0bff817 	ldw	r2,-32(fp)
   52a30:	10800917 	ldw	r2,36(r2)
   52a34:	1000051e 	bne	r2,zero,52a4c <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   52a38:	e0bff617 	ldw	r2,-40(fp)
   52a3c:	00bfcf16 	blt	zero,r2,5297c <altera_avalon_jtag_uart_write+0x10c>
   52a40:	00000306 	br	52a50 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   52a44:	0001883a 	nop
   52a48:	00000106 	br	52a50 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   52a4c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   52a50:	e0fff717 	ldw	r3,-36(fp)
   52a54:	e0bffd17 	ldw	r2,-12(fp)
   52a58:	18800426 	beq	r3,r2,52a6c <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   52a5c:	e0fff717 	ldw	r3,-36(fp)
   52a60:	e0bffd17 	ldw	r2,-12(fp)
   52a64:	1885c83a 	sub	r2,r3,r2
   52a68:	00000606 	br	52a84 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   52a6c:	e0bff517 	ldw	r2,-44(fp)
   52a70:	1090000c 	andi	r2,r2,16384
   52a74:	10000226 	beq	r2,zero,52a80 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   52a78:	00bffd44 	movi	r2,-11
   52a7c:	00000106 	br	52a84 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   52a80:	00bffec4 	movi	r2,-5
}
   52a84:	e037883a 	mov	sp,fp
   52a88:	dfc00117 	ldw	ra,4(sp)
   52a8c:	df000017 	ldw	fp,0(sp)
   52a90:	dec00204 	addi	sp,sp,8
   52a94:	f800283a 	ret

00052a98 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   52a98:	defff404 	addi	sp,sp,-48
   52a9c:	df000b15 	stw	fp,44(sp)
   52aa0:	df000b04 	addi	fp,sp,44
   52aa4:	e13ff815 	stw	r4,-32(fp)
   52aa8:	e17ff715 	stw	r5,-36(fp)
   52aac:	e1bff615 	stw	r6,-40(fp)
   52ab0:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   52ab4:	e03ffe15 	stw	zero,-8(fp)
   52ab8:	e03fff15 	stw	zero,-4(fp)
   52abc:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
   52ac0:	10004826 	beq	r2,zero,52be4 <alt_alarm_start+0x14c>
  {
    if (alarm)
   52ac4:	e0bff817 	ldw	r2,-32(fp)
   52ac8:	10004426 	beq	r2,zero,52bdc <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   52acc:	e0bff817 	ldw	r2,-32(fp)
   52ad0:	e0fff617 	ldw	r3,-40(fp)
   52ad4:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   52ad8:	e0bff817 	ldw	r2,-32(fp)
   52adc:	e0fff517 	ldw	r3,-44(fp)
   52ae0:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   52ae4:	0005303a 	rdctl	r2,status
   52ae8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52aec:	e0fff917 	ldw	r3,-28(fp)
   52af0:	00bfff84 	movi	r2,-2
   52af4:	1884703a 	and	r2,r3,r2
   52af8:	1001703a 	wrctl	status,r2
  return context;
   52afc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   52b00:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   52b04:	d0a70e17 	ldw	r2,-25544(gp)
   52b08:	d0e70f17 	ldw	r3,-25540(gp)
      
      current_nticks = alt_nticks();
   52b0c:	e0bffe15 	stw	r2,-8(fp)
   52b10:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   52b14:	e0bff717 	ldw	r2,-36(fp)
   52b18:	1011883a 	mov	r8,r2
   52b1c:	0013883a 	mov	r9,zero
   52b20:	e13ffe17 	ldw	r4,-8(fp)
   52b24:	e17fff17 	ldw	r5,-4(fp)
   52b28:	4105883a 	add	r2,r8,r4
   52b2c:	120d803a 	cmpltu	r6,r2,r8
   52b30:	4947883a 	add	r3,r9,r5
   52b34:	30c9883a 	add	r4,r6,r3
   52b38:	2007883a 	mov	r3,r4
   52b3c:	1009883a 	mov	r4,r2
   52b40:	180b883a 	mov	r5,r3
   52b44:	01800044 	movi	r6,1
   52b48:	000f883a 	mov	r7,zero
   52b4c:	2185883a 	add	r2,r4,r6
   52b50:	1111803a 	cmpltu	r8,r2,r4
   52b54:	29c7883a 	add	r3,r5,r7
   52b58:	40c9883a 	add	r4,r8,r3
   52b5c:	2007883a 	mov	r3,r4
   52b60:	1009883a 	mov	r4,r2
   52b64:	180b883a 	mov	r5,r3
   52b68:	e0bff817 	ldw	r2,-32(fp)
   52b6c:	11000215 	stw	r4,8(r2)
   52b70:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   52b74:	e0bff817 	ldw	r2,-32(fp)
   52b78:	d0e00c04 	addi	r3,gp,-32720
   52b7c:	e0fffb15 	stw	r3,-20(fp)
   52b80:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   52b84:	e0bffa17 	ldw	r2,-24(fp)
   52b88:	e0fffb17 	ldw	r3,-20(fp)
   52b8c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   52b90:	e0bffb17 	ldw	r2,-20(fp)
   52b94:	10c00017 	ldw	r3,0(r2)
   52b98:	e0bffa17 	ldw	r2,-24(fp)
   52b9c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   52ba0:	e0bffb17 	ldw	r2,-20(fp)
   52ba4:	10800017 	ldw	r2,0(r2)
   52ba8:	e0fffa17 	ldw	r3,-24(fp)
   52bac:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   52bb0:	e0bffb17 	ldw	r2,-20(fp)
   52bb4:	e0fffa17 	ldw	r3,-24(fp)
   52bb8:	10c00015 	stw	r3,0(r2)
}
   52bbc:	0001883a 	nop
   52bc0:	e0bffd17 	ldw	r2,-12(fp)
   52bc4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   52bc8:	e0bffc17 	ldw	r2,-16(fp)
   52bcc:	1001703a 	wrctl	status,r2
}
   52bd0:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   52bd4:	0005883a 	mov	r2,zero
   52bd8:	00000306 	br	52be8 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   52bdc:	00bffa84 	movi	r2,-22
   52be0:	00000106 	br	52be8 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   52be4:	00bfde84 	movi	r2,-134
  }
}
   52be8:	e037883a 	mov	sp,fp
   52bec:	df000017 	ldw	fp,0(sp)
   52bf0:	dec00104 	addi	sp,sp,4
   52bf4:	f800283a 	ret

00052bf8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   52bf8:	defffe04 	addi	sp,sp,-8
   52bfc:	df000115 	stw	fp,4(sp)
   52c00:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   52c04:	e03fff15 	stw	zero,-4(fp)
   52c08:	00000506 	br	52c20 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   52c0c:	e0bfff17 	ldw	r2,-4(fp)
   52c10:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   52c14:	e0bfff17 	ldw	r2,-4(fp)
   52c18:	10800804 	addi	r2,r2,32
   52c1c:	e0bfff15 	stw	r2,-4(fp)
   52c20:	e0bfff17 	ldw	r2,-4(fp)
   52c24:	10820030 	cmpltui	r2,r2,2048
   52c28:	103ff81e 	bne	r2,zero,52c0c <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   52c2c:	0001883a 	nop
   52c30:	0001883a 	nop
   52c34:	e037883a 	mov	sp,fp
   52c38:	df000017 	ldw	fp,0(sp)
   52c3c:	dec00104 	addi	sp,sp,4
   52c40:	f800283a 	ret

00052c44 <alt_get_errno>:
{
   52c44:	defffe04 	addi	sp,sp,-8
   52c48:	dfc00115 	stw	ra,4(sp)
   52c4c:	df000015 	stw	fp,0(sp)
   52c50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   52c54:	d0a00917 	ldw	r2,-32732(gp)
   52c58:	10000326 	beq	r2,zero,52c68 <alt_get_errno+0x24>
   52c5c:	d0a00917 	ldw	r2,-32732(gp)
   52c60:	103ee83a 	callr	r2
   52c64:	00000106 	br	52c6c <alt_get_errno+0x28>
   52c68:	d0a70704 	addi	r2,gp,-25572
}
   52c6c:	e037883a 	mov	sp,fp
   52c70:	dfc00117 	ldw	ra,4(sp)
   52c74:	df000017 	ldw	fp,0(sp)
   52c78:	dec00204 	addi	sp,sp,8
   52c7c:	f800283a 	ret

00052c80 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   52c80:	defffa04 	addi	sp,sp,-24
   52c84:	dfc00515 	stw	ra,20(sp)
   52c88:	df000415 	stw	fp,16(sp)
   52c8c:	df000404 	addi	fp,sp,16
   52c90:	e13ffd15 	stw	r4,-12(fp)
   52c94:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   52c98:	e0bffd17 	ldw	r2,-12(fp)
   52c9c:	10000326 	beq	r2,zero,52cac <alt_dev_llist_insert+0x2c>
   52ca0:	e0bffd17 	ldw	r2,-12(fp)
   52ca4:	10800217 	ldw	r2,8(r2)
   52ca8:	1000061e 	bne	r2,zero,52cc4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   52cac:	0052c440 	call	52c44 <alt_get_errno>
   52cb0:	1007883a 	mov	r3,r2
   52cb4:	00800584 	movi	r2,22
   52cb8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   52cbc:	00bffa84 	movi	r2,-22
   52cc0:	00001406 	br	52d14 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   52cc4:	e0bffd17 	ldw	r2,-12(fp)
   52cc8:	e0fffc17 	ldw	r3,-16(fp)
   52ccc:	e0ffff15 	stw	r3,-4(fp)
   52cd0:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   52cd4:	e0bffe17 	ldw	r2,-8(fp)
   52cd8:	e0ffff17 	ldw	r3,-4(fp)
   52cdc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   52ce0:	e0bfff17 	ldw	r2,-4(fp)
   52ce4:	10c00017 	ldw	r3,0(r2)
   52ce8:	e0bffe17 	ldw	r2,-8(fp)
   52cec:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   52cf0:	e0bfff17 	ldw	r2,-4(fp)
   52cf4:	10800017 	ldw	r2,0(r2)
   52cf8:	e0fffe17 	ldw	r3,-8(fp)
   52cfc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   52d00:	e0bfff17 	ldw	r2,-4(fp)
   52d04:	e0fffe17 	ldw	r3,-8(fp)
   52d08:	10c00015 	stw	r3,0(r2)
}
   52d0c:	0001883a 	nop

  return 0;  
   52d10:	0005883a 	mov	r2,zero
}
   52d14:	e037883a 	mov	sp,fp
   52d18:	dfc00117 	ldw	ra,4(sp)
   52d1c:	df000017 	ldw	fp,0(sp)
   52d20:	dec00204 	addi	sp,sp,8
   52d24:	f800283a 	ret

00052d28 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   52d28:	defffd04 	addi	sp,sp,-12
   52d2c:	dfc00215 	stw	ra,8(sp)
   52d30:	df000115 	stw	fp,4(sp)
   52d34:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   52d38:	00800174 	movhi	r2,5
   52d3c:	108ef304 	addi	r2,r2,15308
   52d40:	e0bfff15 	stw	r2,-4(fp)
   52d44:	00000606 	br	52d60 <_do_ctors+0x38>
        (*ctor) (); 
   52d48:	e0bfff17 	ldw	r2,-4(fp)
   52d4c:	10800017 	ldw	r2,0(r2)
   52d50:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   52d54:	e0bfff17 	ldw	r2,-4(fp)
   52d58:	10bfff04 	addi	r2,r2,-4
   52d5c:	e0bfff15 	stw	r2,-4(fp)
   52d60:	e0ffff17 	ldw	r3,-4(fp)
   52d64:	00800174 	movhi	r2,5
   52d68:	108ef404 	addi	r2,r2,15312
   52d6c:	18bff62e 	bgeu	r3,r2,52d48 <_do_ctors+0x20>
}
   52d70:	0001883a 	nop
   52d74:	0001883a 	nop
   52d78:	e037883a 	mov	sp,fp
   52d7c:	dfc00117 	ldw	ra,4(sp)
   52d80:	df000017 	ldw	fp,0(sp)
   52d84:	dec00204 	addi	sp,sp,8
   52d88:	f800283a 	ret

00052d8c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   52d8c:	defffd04 	addi	sp,sp,-12
   52d90:	dfc00215 	stw	ra,8(sp)
   52d94:	df000115 	stw	fp,4(sp)
   52d98:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   52d9c:	00800174 	movhi	r2,5
   52da0:	108ef304 	addi	r2,r2,15308
   52da4:	e0bfff15 	stw	r2,-4(fp)
   52da8:	00000606 	br	52dc4 <_do_dtors+0x38>
        (*dtor) (); 
   52dac:	e0bfff17 	ldw	r2,-4(fp)
   52db0:	10800017 	ldw	r2,0(r2)
   52db4:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   52db8:	e0bfff17 	ldw	r2,-4(fp)
   52dbc:	10bfff04 	addi	r2,r2,-4
   52dc0:	e0bfff15 	stw	r2,-4(fp)
   52dc4:	e0ffff17 	ldw	r3,-4(fp)
   52dc8:	00800174 	movhi	r2,5
   52dcc:	108ef404 	addi	r2,r2,15312
   52dd0:	18bff62e 	bgeu	r3,r2,52dac <_do_dtors+0x20>
}
   52dd4:	0001883a 	nop
   52dd8:	0001883a 	nop
   52ddc:	e037883a 	mov	sp,fp
   52de0:	dfc00117 	ldw	ra,4(sp)
   52de4:	df000017 	ldw	fp,0(sp)
   52de8:	dec00204 	addi	sp,sp,8
   52dec:	f800283a 	ret

00052df0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   52df0:	defffe04 	addi	sp,sp,-8
   52df4:	dfc00115 	stw	ra,4(sp)
   52df8:	df000015 	stw	fp,0(sp)
   52dfc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   52e00:	01440004 	movi	r5,4096
   52e04:	0009883a 	mov	r4,zero
   52e08:	005385c0 	call	5385c <alt_icache_flush>
#endif
}
   52e0c:	0001883a 	nop
   52e10:	e037883a 	mov	sp,fp
   52e14:	dfc00117 	ldw	ra,4(sp)
   52e18:	df000017 	ldw	fp,0(sp)
   52e1c:	dec00204 	addi	sp,sp,8
   52e20:	f800283a 	ret

00052e24 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   52e24:	defff904 	addi	sp,sp,-28
   52e28:	dfc00615 	stw	ra,24(sp)
   52e2c:	df000515 	stw	fp,20(sp)
   52e30:	df000504 	addi	fp,sp,20
   52e34:	e13fff15 	stw	r4,-4(fp)
   52e38:	e17ffe15 	stw	r5,-8(fp)
   52e3c:	e1bffd15 	stw	r6,-12(fp)
   52e40:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   52e44:	e0800217 	ldw	r2,8(fp)
   52e48:	d8800015 	stw	r2,0(sp)
   52e4c:	e1fffc17 	ldw	r7,-16(fp)
   52e50:	e1bffd17 	ldw	r6,-12(fp)
   52e54:	e17ffe17 	ldw	r5,-8(fp)
   52e58:	e13fff17 	ldw	r4,-4(fp)
   52e5c:	0052fd40 	call	52fd4 <alt_iic_isr_register>
}  
   52e60:	e037883a 	mov	sp,fp
   52e64:	dfc00117 	ldw	ra,4(sp)
   52e68:	df000017 	ldw	fp,0(sp)
   52e6c:	dec00204 	addi	sp,sp,8
   52e70:	f800283a 	ret

00052e74 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   52e74:	defff904 	addi	sp,sp,-28
   52e78:	df000615 	stw	fp,24(sp)
   52e7c:	df000604 	addi	fp,sp,24
   52e80:	e13ffb15 	stw	r4,-20(fp)
   52e84:	e17ffa15 	stw	r5,-24(fp)
   52e88:	e0bffa17 	ldw	r2,-24(fp)
   52e8c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   52e90:	0005303a 	rdctl	r2,status
   52e94:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52e98:	e0fffe17 	ldw	r3,-8(fp)
   52e9c:	00bfff84 	movi	r2,-2
   52ea0:	1884703a 	and	r2,r3,r2
   52ea4:	1001703a 	wrctl	status,r2
  return context;
   52ea8:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   52eac:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   52eb0:	00c00044 	movi	r3,1
   52eb4:	e0bfff17 	ldw	r2,-4(fp)
   52eb8:	1884983a 	sll	r2,r3,r2
   52ebc:	1007883a 	mov	r3,r2
   52ec0:	d0a70c17 	ldw	r2,-25552(gp)
   52ec4:	1884b03a 	or	r2,r3,r2
   52ec8:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   52ecc:	d0a70c17 	ldw	r2,-25552(gp)
   52ed0:	100170fa 	wrctl	ienable,r2
   52ed4:	e0bffd17 	ldw	r2,-12(fp)
   52ed8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   52edc:	e0bffc17 	ldw	r2,-16(fp)
   52ee0:	1001703a 	wrctl	status,r2
}
   52ee4:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   52ee8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   52eec:	e037883a 	mov	sp,fp
   52ef0:	df000017 	ldw	fp,0(sp)
   52ef4:	dec00104 	addi	sp,sp,4
   52ef8:	f800283a 	ret

00052efc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   52efc:	defff904 	addi	sp,sp,-28
   52f00:	df000615 	stw	fp,24(sp)
   52f04:	df000604 	addi	fp,sp,24
   52f08:	e13ffb15 	stw	r4,-20(fp)
   52f0c:	e17ffa15 	stw	r5,-24(fp)
   52f10:	e0bffa17 	ldw	r2,-24(fp)
   52f14:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   52f18:	0005303a 	rdctl	r2,status
   52f1c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52f20:	e0fffe17 	ldw	r3,-8(fp)
   52f24:	00bfff84 	movi	r2,-2
   52f28:	1884703a 	and	r2,r3,r2
   52f2c:	1001703a 	wrctl	status,r2
  return context;
   52f30:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
   52f34:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
   52f38:	00c00044 	movi	r3,1
   52f3c:	e0bfff17 	ldw	r2,-4(fp)
   52f40:	1884983a 	sll	r2,r3,r2
   52f44:	0084303a 	nor	r2,zero,r2
   52f48:	1007883a 	mov	r3,r2
   52f4c:	d0a70c17 	ldw	r2,-25552(gp)
   52f50:	1884703a 	and	r2,r3,r2
   52f54:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   52f58:	d0a70c17 	ldw	r2,-25552(gp)
   52f5c:	100170fa 	wrctl	ienable,r2
   52f60:	e0bffd17 	ldw	r2,-12(fp)
   52f64:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   52f68:	e0bffc17 	ldw	r2,-16(fp)
   52f6c:	1001703a 	wrctl	status,r2
}
   52f70:	0001883a 	nop
  return 0;
   52f74:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   52f78:	e037883a 	mov	sp,fp
   52f7c:	df000017 	ldw	fp,0(sp)
   52f80:	dec00104 	addi	sp,sp,4
   52f84:	f800283a 	ret

00052f88 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   52f88:	defffc04 	addi	sp,sp,-16
   52f8c:	df000315 	stw	fp,12(sp)
   52f90:	df000304 	addi	fp,sp,12
   52f94:	e13ffe15 	stw	r4,-8(fp)
   52f98:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   52f9c:	000530fa 	rdctl	r2,ienable
   52fa0:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   52fa4:	00c00044 	movi	r3,1
   52fa8:	e0bffd17 	ldw	r2,-12(fp)
   52fac:	1884983a 	sll	r2,r3,r2
   52fb0:	1007883a 	mov	r3,r2
   52fb4:	e0bfff17 	ldw	r2,-4(fp)
   52fb8:	1884703a 	and	r2,r3,r2
   52fbc:	1004c03a 	cmpne	r2,r2,zero
   52fc0:	10803fcc 	andi	r2,r2,255
}
   52fc4:	e037883a 	mov	sp,fp
   52fc8:	df000017 	ldw	fp,0(sp)
   52fcc:	dec00104 	addi	sp,sp,4
   52fd0:	f800283a 	ret

00052fd4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   52fd4:	defff504 	addi	sp,sp,-44
   52fd8:	dfc00a15 	stw	ra,40(sp)
   52fdc:	df000915 	stw	fp,36(sp)
   52fe0:	df000904 	addi	fp,sp,36
   52fe4:	e13ffa15 	stw	r4,-24(fp)
   52fe8:	e17ff915 	stw	r5,-28(fp)
   52fec:	e1bff815 	stw	r6,-32(fp)
   52ff0:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
   52ff4:	00bffa84 	movi	r2,-22
   52ff8:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   52ffc:	e0bff917 	ldw	r2,-28(fp)
   53000:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   53004:	e0bffe17 	ldw	r2,-8(fp)
   53008:	10800808 	cmpgei	r2,r2,32
   5300c:	1000251e 	bne	r2,zero,530a4 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
   53010:	0005303a 	rdctl	r2,status
   53014:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   53018:	e0fffc17 	ldw	r3,-16(fp)
   5301c:	00bfff84 	movi	r2,-2
   53020:	1884703a 	and	r2,r3,r2
   53024:	1001703a 	wrctl	status,r2
  return context;
   53028:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   5302c:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
   53030:	e0bffe17 	ldw	r2,-8(fp)
   53034:	100890fa 	slli	r4,r2,3
   53038:	e0fff817 	ldw	r3,-32(fp)
   5303c:	00800174 	movhi	r2,5
   53040:	2085883a 	add	r2,r4,r2
   53044:	10dedc15 	stw	r3,31600(r2)
    alt_irq[id].context = isr_context;
   53048:	e0bffe17 	ldw	r2,-8(fp)
   5304c:	100890fa 	slli	r4,r2,3
   53050:	e0fff717 	ldw	r3,-36(fp)
   53054:	00800174 	movhi	r2,5
   53058:	2085883a 	add	r2,r4,r2
   5305c:	10dedd15 	stw	r3,31604(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   53060:	e0bff817 	ldw	r2,-32(fp)
   53064:	10000526 	beq	r2,zero,5307c <alt_iic_isr_register+0xa8>
   53068:	e0bffe17 	ldw	r2,-8(fp)
   5306c:	100b883a 	mov	r5,r2
   53070:	e13ffa17 	ldw	r4,-24(fp)
   53074:	0052e740 	call	52e74 <alt_ic_irq_enable>
   53078:	00000406 	br	5308c <alt_iic_isr_register+0xb8>
   5307c:	e0bffe17 	ldw	r2,-8(fp)
   53080:	100b883a 	mov	r5,r2
   53084:	e13ffa17 	ldw	r4,-24(fp)
   53088:	0052efc0 	call	52efc <alt_ic_irq_disable>
   5308c:	e0bfff15 	stw	r2,-4(fp)
   53090:	e0bffd17 	ldw	r2,-12(fp)
   53094:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   53098:	e0bffb17 	ldw	r2,-20(fp)
   5309c:	1001703a 	wrctl	status,r2
}
   530a0:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
   530a4:	e0bfff17 	ldw	r2,-4(fp)
}
   530a8:	e037883a 	mov	sp,fp
   530ac:	dfc00117 	ldw	ra,4(sp)
   530b0:	df000017 	ldw	fp,0(sp)
   530b4:	dec00204 	addi	sp,sp,8
   530b8:	f800283a 	ret

000530bc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   530bc:	defff904 	addi	sp,sp,-28
   530c0:	dfc00615 	stw	ra,24(sp)
   530c4:	df000515 	stw	fp,20(sp)
   530c8:	df000504 	addi	fp,sp,20
   530cc:	e13ffe15 	stw	r4,-8(fp)
   530d0:	e17ffd15 	stw	r5,-12(fp)
   530d4:	e1bffc15 	stw	r6,-16(fp)
   530d8:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   530dc:	e1bffb17 	ldw	r6,-20(fp)
   530e0:	e17ffc17 	ldw	r5,-16(fp)
   530e4:	e13ffd17 	ldw	r4,-12(fp)
   530e8:	00532dc0 	call	532dc <open>
   530ec:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   530f0:	e0bfff17 	ldw	r2,-4(fp)
   530f4:	10001716 	blt	r2,zero,53154 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   530f8:	e0bfff17 	ldw	r2,-4(fp)
   530fc:	10c00324 	muli	r3,r2,12
   53100:	00800174 	movhi	r2,5
   53104:	1885883a 	add	r2,r3,r2
   53108:	10d34917 	ldw	r3,19748(r2)
   5310c:	e0bffe17 	ldw	r2,-8(fp)
   53110:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   53114:	e0bfff17 	ldw	r2,-4(fp)
   53118:	10c00324 	muli	r3,r2,12
   5311c:	00800174 	movhi	r2,5
   53120:	1885883a 	add	r2,r3,r2
   53124:	10d34a17 	ldw	r3,19752(r2)
   53128:	e0bffe17 	ldw	r2,-8(fp)
   5312c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   53130:	e0bfff17 	ldw	r2,-4(fp)
   53134:	10c00324 	muli	r3,r2,12
   53138:	00800174 	movhi	r2,5
   5313c:	1885883a 	add	r2,r3,r2
   53140:	10d34b17 	ldw	r3,19756(r2)
   53144:	e0bffe17 	ldw	r2,-8(fp)
   53148:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   5314c:	e13fff17 	ldw	r4,-4(fp)
   53150:	0051d280 	call	51d28 <alt_release_fd>
  }
} 
   53154:	0001883a 	nop
   53158:	e037883a 	mov	sp,fp
   5315c:	dfc00117 	ldw	ra,4(sp)
   53160:	df000017 	ldw	fp,0(sp)
   53164:	dec00204 	addi	sp,sp,8
   53168:	f800283a 	ret

0005316c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   5316c:	defffb04 	addi	sp,sp,-20
   53170:	dfc00415 	stw	ra,16(sp)
   53174:	df000315 	stw	fp,12(sp)
   53178:	df000304 	addi	fp,sp,12
   5317c:	e13fff15 	stw	r4,-4(fp)
   53180:	e17ffe15 	stw	r5,-8(fp)
   53184:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   53188:	01c07fc4 	movi	r7,511
   5318c:	01800044 	movi	r6,1
   53190:	e17fff17 	ldw	r5,-4(fp)
   53194:	01000174 	movhi	r4,5
   53198:	21134c04 	addi	r4,r4,19760
   5319c:	00530bc0 	call	530bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   531a0:	01c07fc4 	movi	r7,511
   531a4:	000d883a 	mov	r6,zero
   531a8:	e17ffe17 	ldw	r5,-8(fp)
   531ac:	01000174 	movhi	r4,5
   531b0:	21134904 	addi	r4,r4,19748
   531b4:	00530bc0 	call	530bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   531b8:	01c07fc4 	movi	r7,511
   531bc:	01800044 	movi	r6,1
   531c0:	e17ffd17 	ldw	r5,-12(fp)
   531c4:	01000174 	movhi	r4,5
   531c8:	21134f04 	addi	r4,r4,19772
   531cc:	00530bc0 	call	530bc <alt_open_fd>
}  
   531d0:	0001883a 	nop
   531d4:	e037883a 	mov	sp,fp
   531d8:	dfc00117 	ldw	ra,4(sp)
   531dc:	df000017 	ldw	fp,0(sp)
   531e0:	dec00204 	addi	sp,sp,8
   531e4:	f800283a 	ret

000531e8 <alt_get_errno>:
{
   531e8:	defffe04 	addi	sp,sp,-8
   531ec:	dfc00115 	stw	ra,4(sp)
   531f0:	df000015 	stw	fp,0(sp)
   531f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   531f8:	d0a00917 	ldw	r2,-32732(gp)
   531fc:	10000326 	beq	r2,zero,5320c <alt_get_errno+0x24>
   53200:	d0a00917 	ldw	r2,-32732(gp)
   53204:	103ee83a 	callr	r2
   53208:	00000106 	br	53210 <alt_get_errno+0x28>
   5320c:	d0a70704 	addi	r2,gp,-25572
}
   53210:	e037883a 	mov	sp,fp
   53214:	dfc00117 	ldw	ra,4(sp)
   53218:	df000017 	ldw	fp,0(sp)
   5321c:	dec00204 	addi	sp,sp,8
   53220:	f800283a 	ret

00053224 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   53224:	defffd04 	addi	sp,sp,-12
   53228:	df000215 	stw	fp,8(sp)
   5322c:	df000204 	addi	fp,sp,8
   53230:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   53234:	e0bffe17 	ldw	r2,-8(fp)
   53238:	10800217 	ldw	r2,8(r2)
   5323c:	10d00034 	orhi	r3,r2,16384
   53240:	e0bffe17 	ldw	r2,-8(fp)
   53244:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   53248:	e03fff15 	stw	zero,-4(fp)
   5324c:	00001a06 	br	532b8 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   53250:	e0bfff17 	ldw	r2,-4(fp)
   53254:	10c00324 	muli	r3,r2,12
   53258:	00800174 	movhi	r2,5
   5325c:	1885883a 	add	r2,r3,r2
   53260:	10d34917 	ldw	r3,19748(r2)
   53264:	e0bffe17 	ldw	r2,-8(fp)
   53268:	10800017 	ldw	r2,0(r2)
   5326c:	18800f1e 	bne	r3,r2,532ac <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   53270:	e0bfff17 	ldw	r2,-4(fp)
   53274:	10c00324 	muli	r3,r2,12
   53278:	00800174 	movhi	r2,5
   5327c:	1885883a 	add	r2,r3,r2
   53280:	10934b17 	ldw	r2,19756(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   53284:	1000090e 	bge	r2,zero,532ac <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   53288:	e0bfff17 	ldw	r2,-4(fp)
   5328c:	10c00324 	muli	r3,r2,12
   53290:	00800174 	movhi	r2,5
   53294:	10934904 	addi	r2,r2,19748
   53298:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   5329c:	e0fffe17 	ldw	r3,-8(fp)
   532a0:	18800226 	beq	r3,r2,532ac <alt_file_locked+0x88>
    {
      return -EACCES;
   532a4:	00bffcc4 	movi	r2,-13
   532a8:	00000806 	br	532cc <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
   532ac:	e0bfff17 	ldw	r2,-4(fp)
   532b0:	10800044 	addi	r2,r2,1
   532b4:	e0bfff15 	stw	r2,-4(fp)
   532b8:	d0a00817 	ldw	r2,-32736(gp)
   532bc:	1007883a 	mov	r3,r2
   532c0:	e0bfff17 	ldw	r2,-4(fp)
   532c4:	18bfe22e 	bgeu	r3,r2,53250 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   532c8:	0005883a 	mov	r2,zero
}
   532cc:	e037883a 	mov	sp,fp
   532d0:	df000017 	ldw	fp,0(sp)
   532d4:	dec00104 	addi	sp,sp,4
   532d8:	f800283a 	ret

000532dc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   532dc:	defff604 	addi	sp,sp,-40
   532e0:	dfc00915 	stw	ra,36(sp)
   532e4:	df000815 	stw	fp,32(sp)
   532e8:	df000804 	addi	fp,sp,32
   532ec:	e13ffa15 	stw	r4,-24(fp)
   532f0:	e17ff915 	stw	r5,-28(fp)
   532f4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   532f8:	00bfffc4 	movi	r2,-1
   532fc:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   53300:	00bffb44 	movi	r2,-19
   53304:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   53308:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   5330c:	d1600604 	addi	r5,gp,-32744
   53310:	e13ffa17 	ldw	r4,-24(fp)
   53314:	00536240 	call	53624 <alt_find_dev>
   53318:	e0bfff15 	stw	r2,-4(fp)
   5331c:	e0bfff17 	ldw	r2,-4(fp)
   53320:	1000051e 	bne	r2,zero,53338 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   53324:	e13ffa17 	ldw	r4,-24(fp)
   53328:	00536b40 	call	536b4 <alt_find_file>
   5332c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   53330:	00800044 	movi	r2,1
   53334:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   53338:	e0bfff17 	ldw	r2,-4(fp)
   5333c:	10002926 	beq	r2,zero,533e4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   53340:	e13fff17 	ldw	r4,-4(fp)
   53344:	00537bc0 	call	537bc <alt_get_fd>
   53348:	e0bffe15 	stw	r2,-8(fp)
   5334c:	e0bffe17 	ldw	r2,-8(fp)
   53350:	1000030e 	bge	r2,zero,53360 <open+0x84>
    {
      status = index;
   53354:	e0bffe17 	ldw	r2,-8(fp)
   53358:	e0bffd15 	stw	r2,-12(fp)
   5335c:	00002306 	br	533ec <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   53360:	e0bffe17 	ldw	r2,-8(fp)
   53364:	10c00324 	muli	r3,r2,12
   53368:	00800174 	movhi	r2,5
   5336c:	10934904 	addi	r2,r2,19748
   53370:	1885883a 	add	r2,r3,r2
   53374:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   53378:	e0fff917 	ldw	r3,-28(fp)
   5337c:	00900034 	movhi	r2,16384
   53380:	10bfffc4 	addi	r2,r2,-1
   53384:	1886703a 	and	r3,r3,r2
   53388:	e0bffb17 	ldw	r2,-20(fp)
   5338c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   53390:	e0bffc17 	ldw	r2,-16(fp)
   53394:	1000051e 	bne	r2,zero,533ac <open+0xd0>
   53398:	e13ffb17 	ldw	r4,-20(fp)
   5339c:	00532240 	call	53224 <alt_file_locked>
   533a0:	e0bffd15 	stw	r2,-12(fp)
   533a4:	e0bffd17 	ldw	r2,-12(fp)
   533a8:	10001016 	blt	r2,zero,533ec <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   533ac:	e0bfff17 	ldw	r2,-4(fp)
   533b0:	10800317 	ldw	r2,12(r2)
   533b4:	10000826 	beq	r2,zero,533d8 <open+0xfc>
   533b8:	e0bfff17 	ldw	r2,-4(fp)
   533bc:	10800317 	ldw	r2,12(r2)
   533c0:	e1fff817 	ldw	r7,-32(fp)
   533c4:	e1bff917 	ldw	r6,-28(fp)
   533c8:	e17ffa17 	ldw	r5,-24(fp)
   533cc:	e13ffb17 	ldw	r4,-20(fp)
   533d0:	103ee83a 	callr	r2
   533d4:	00000106 	br	533dc <open+0x100>
   533d8:	0005883a 	mov	r2,zero
   533dc:	e0bffd15 	stw	r2,-12(fp)
   533e0:	00000206 	br	533ec <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   533e4:	00bffb44 	movi	r2,-19
   533e8:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   533ec:	e0bffd17 	ldw	r2,-12(fp)
   533f0:	1000090e 	bge	r2,zero,53418 <open+0x13c>
  {
    alt_release_fd (index);  
   533f4:	e13ffe17 	ldw	r4,-8(fp)
   533f8:	0051d280 	call	51d28 <alt_release_fd>
    ALT_ERRNO = -status;
   533fc:	00531e80 	call	531e8 <alt_get_errno>
   53400:	1007883a 	mov	r3,r2
   53404:	e0bffd17 	ldw	r2,-12(fp)
   53408:	0085c83a 	sub	r2,zero,r2
   5340c:	18800015 	stw	r2,0(r3)
    return -1;
   53410:	00bfffc4 	movi	r2,-1
   53414:	00000106 	br	5341c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   53418:	e0bffe17 	ldw	r2,-8(fp)
}
   5341c:	e037883a 	mov	sp,fp
   53420:	dfc00117 	ldw	ra,4(sp)
   53424:	df000017 	ldw	fp,0(sp)
   53428:	dec00204 	addi	sp,sp,8
   5342c:	f800283a 	ret

00053430 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   53430:	defffa04 	addi	sp,sp,-24
   53434:	df000515 	stw	fp,20(sp)
   53438:	df000504 	addi	fp,sp,20
   5343c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   53440:	0005303a 	rdctl	r2,status
   53444:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   53448:	e0fffc17 	ldw	r3,-16(fp)
   5344c:	00bfff84 	movi	r2,-2
   53450:	1884703a 	and	r2,r3,r2
   53454:	1001703a 	wrctl	status,r2
  return context;
   53458:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   5345c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   53460:	e0bffb17 	ldw	r2,-20(fp)
   53464:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   53468:	e0bffd17 	ldw	r2,-12(fp)
   5346c:	10800017 	ldw	r2,0(r2)
   53470:	e0fffd17 	ldw	r3,-12(fp)
   53474:	18c00117 	ldw	r3,4(r3)
   53478:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   5347c:	e0bffd17 	ldw	r2,-12(fp)
   53480:	10800117 	ldw	r2,4(r2)
   53484:	e0fffd17 	ldw	r3,-12(fp)
   53488:	18c00017 	ldw	r3,0(r3)
   5348c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   53490:	e0bffd17 	ldw	r2,-12(fp)
   53494:	e0fffd17 	ldw	r3,-12(fp)
   53498:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   5349c:	e0bffd17 	ldw	r2,-12(fp)
   534a0:	e0fffd17 	ldw	r3,-12(fp)
   534a4:	10c00015 	stw	r3,0(r2)
} 
   534a8:	0001883a 	nop
   534ac:	e0bfff17 	ldw	r2,-4(fp)
   534b0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   534b4:	e0bffe17 	ldw	r2,-8(fp)
   534b8:	1001703a 	wrctl	status,r2
}
   534bc:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   534c0:	0001883a 	nop
   534c4:	e037883a 	mov	sp,fp
   534c8:	df000017 	ldw	fp,0(sp)
   534cc:	dec00104 	addi	sp,sp,4
   534d0:	f800283a 	ret

000534d4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   534d4:	defff904 	addi	sp,sp,-28
   534d8:	dfc00615 	stw	ra,24(sp)
   534dc:	df000515 	stw	fp,20(sp)
   534e0:	dc400415 	stw	r17,16(sp)
   534e4:	dc000315 	stw	r16,12(sp)
   534e8:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   534ec:	d0a00c17 	ldw	r2,-32720(gp)
   534f0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   534f4:	d1270e17 	ldw	r4,-25544(gp)
   534f8:	d1670f17 	ldw	r5,-25540(gp)
   534fc:	01800044 	movi	r6,1
   53500:	000f883a 	mov	r7,zero
   53504:	2185883a 	add	r2,r4,r6
   53508:	1111803a 	cmpltu	r8,r2,r4
   5350c:	29c7883a 	add	r3,r5,r7
   53510:	40c9883a 	add	r4,r8,r3
   53514:	2007883a 	mov	r3,r4
   53518:	1009883a 	mov	r4,r2
   5351c:	180b883a 	mov	r5,r3
   53520:	d1270e15 	stw	r4,-25544(gp)
   53524:	d1670f15 	stw	r5,-25540(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   53528:	00002906 	br	535d0 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   5352c:	e0bffd17 	ldw	r2,-12(fp)
   53530:	10800017 	ldw	r2,0(r2)
   53534:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   53538:	e13ffd17 	ldw	r4,-12(fp)
   5353c:	20800217 	ldw	r2,8(r4)
   53540:	20c00317 	ldw	r3,12(r4)
   53544:	d1270e17 	ldw	r4,-25544(gp)
   53548:	d1670f17 	ldw	r5,-25540(gp)
   5354c:	28c01e36 	bltu	r5,r3,535c8 <alt_tick+0xf4>
   53550:	1940011e 	bne	r3,r5,53558 <alt_tick+0x84>
   53554:	20801c36 	bltu	r4,r2,535c8 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   53558:	e0bffd17 	ldw	r2,-12(fp)
   5355c:	10800417 	ldw	r2,16(r2)
   53560:	e0fffd17 	ldw	r3,-12(fp)
   53564:	18c00517 	ldw	r3,20(r3)
   53568:	1809883a 	mov	r4,r3
   5356c:	103ee83a 	callr	r2
   53570:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   53574:	e0bffb17 	ldw	r2,-20(fp)
   53578:	1000031e 	bne	r2,zero,53588 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   5357c:	e13ffd17 	ldw	r4,-12(fp)
   53580:	00534300 	call	53430 <alt_alarm_stop>
   53584:	00001006 	br	535c8 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   53588:	e0bffd17 	ldw	r2,-12(fp)
   5358c:	11000217 	ldw	r4,8(r2)
   53590:	11400317 	ldw	r5,12(r2)
   53594:	e0bffb17 	ldw	r2,-20(fp)
   53598:	1021883a 	mov	r16,r2
   5359c:	0023883a 	mov	r17,zero
   535a0:	2405883a 	add	r2,r4,r16
   535a4:	110d803a 	cmpltu	r6,r2,r4
   535a8:	2c47883a 	add	r3,r5,r17
   535ac:	30c9883a 	add	r4,r6,r3
   535b0:	2007883a 	mov	r3,r4
   535b4:	1009883a 	mov	r4,r2
   535b8:	180b883a 	mov	r5,r3
   535bc:	e0bffd17 	ldw	r2,-12(fp)
   535c0:	11000215 	stw	r4,8(r2)
   535c4:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   535c8:	e0bffc17 	ldw	r2,-16(fp)
   535cc:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   535d0:	e0fffd17 	ldw	r3,-12(fp)
   535d4:	d0a00c04 	addi	r2,gp,-32720
   535d8:	18bfd41e 	bne	r3,r2,5352c <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   535dc:	0001883a 	nop
}
   535e0:	0001883a 	nop
   535e4:	e6fffe04 	addi	sp,fp,-8
   535e8:	dfc00317 	ldw	ra,12(sp)
   535ec:	df000217 	ldw	fp,8(sp)
   535f0:	dc400117 	ldw	r17,4(sp)
   535f4:	dc000017 	ldw	r16,0(sp)
   535f8:	dec00404 	addi	sp,sp,16
   535fc:	f800283a 	ret

00053600 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   53600:	deffff04 	addi	sp,sp,-4
   53604:	df000015 	stw	fp,0(sp)
   53608:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   5360c:	000170fa 	wrctl	ienable,zero
}
   53610:	0001883a 	nop
   53614:	e037883a 	mov	sp,fp
   53618:	df000017 	ldw	fp,0(sp)
   5361c:	dec00104 	addi	sp,sp,4
   53620:	f800283a 	ret

00053624 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   53624:	defffa04 	addi	sp,sp,-24
   53628:	dfc00515 	stw	ra,20(sp)
   5362c:	df000415 	stw	fp,16(sp)
   53630:	df000404 	addi	fp,sp,16
   53634:	e13ffd15 	stw	r4,-12(fp)
   53638:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   5363c:	e0bffc17 	ldw	r2,-16(fp)
   53640:	10800017 	ldw	r2,0(r2)
   53644:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   53648:	e13ffd17 	ldw	r4,-12(fp)
   5364c:	0046f3c0 	call	46f3c <strlen>
   53650:	10800044 	addi	r2,r2,1
   53654:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   53658:	00000d06 	br	53690 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   5365c:	e0bfff17 	ldw	r2,-4(fp)
   53660:	10800217 	ldw	r2,8(r2)
   53664:	e0fffe17 	ldw	r3,-8(fp)
   53668:	180d883a 	mov	r6,r3
   5366c:	e17ffd17 	ldw	r5,-12(fp)
   53670:	1009883a 	mov	r4,r2
   53674:	00539a80 	call	539a8 <memcmp>
   53678:	1000021e 	bne	r2,zero,53684 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   5367c:	e0bfff17 	ldw	r2,-4(fp)
   53680:	00000706 	br	536a0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   53684:	e0bfff17 	ldw	r2,-4(fp)
   53688:	10800017 	ldw	r2,0(r2)
   5368c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   53690:	e0ffff17 	ldw	r3,-4(fp)
   53694:	e0bffc17 	ldw	r2,-16(fp)
   53698:	18bff01e 	bne	r3,r2,5365c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   5369c:	0005883a 	mov	r2,zero
}
   536a0:	e037883a 	mov	sp,fp
   536a4:	dfc00117 	ldw	ra,4(sp)
   536a8:	df000017 	ldw	fp,0(sp)
   536ac:	dec00204 	addi	sp,sp,8
   536b0:	f800283a 	ret

000536b4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   536b4:	defffb04 	addi	sp,sp,-20
   536b8:	dfc00415 	stw	ra,16(sp)
   536bc:	df000315 	stw	fp,12(sp)
   536c0:	df000304 	addi	fp,sp,12
   536c4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   536c8:	d0a00417 	ldw	r2,-32752(gp)
   536cc:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   536d0:	00003106 	br	53798 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   536d4:	e0bfff17 	ldw	r2,-4(fp)
   536d8:	10800217 	ldw	r2,8(r2)
   536dc:	1009883a 	mov	r4,r2
   536e0:	0046f3c0 	call	46f3c <strlen>
   536e4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   536e8:	e0bfff17 	ldw	r2,-4(fp)
   536ec:	10c00217 	ldw	r3,8(r2)
   536f0:	e0bffe17 	ldw	r2,-8(fp)
   536f4:	10bfffc4 	addi	r2,r2,-1
   536f8:	1885883a 	add	r2,r3,r2
   536fc:	10800003 	ldbu	r2,0(r2)
   53700:	10803fcc 	andi	r2,r2,255
   53704:	1080201c 	xori	r2,r2,128
   53708:	10bfe004 	addi	r2,r2,-128
   5370c:	10800bd8 	cmpnei	r2,r2,47
   53710:	1000031e 	bne	r2,zero,53720 <alt_find_file+0x6c>
    {
      len -= 1;
   53714:	e0bffe17 	ldw	r2,-8(fp)
   53718:	10bfffc4 	addi	r2,r2,-1
   5371c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   53720:	e0bffe17 	ldw	r2,-8(fp)
   53724:	e0fffd17 	ldw	r3,-12(fp)
   53728:	1885883a 	add	r2,r3,r2
   5372c:	10800003 	ldbu	r2,0(r2)
   53730:	10803fcc 	andi	r2,r2,255
   53734:	1080201c 	xori	r2,r2,128
   53738:	10bfe004 	addi	r2,r2,-128
   5373c:	10800be0 	cmpeqi	r2,r2,47
   53740:	1000081e 	bne	r2,zero,53764 <alt_find_file+0xb0>
   53744:	e0bffe17 	ldw	r2,-8(fp)
   53748:	e0fffd17 	ldw	r3,-12(fp)
   5374c:	1885883a 	add	r2,r3,r2
   53750:	10800003 	ldbu	r2,0(r2)
   53754:	10803fcc 	andi	r2,r2,255
   53758:	1080201c 	xori	r2,r2,128
   5375c:	10bfe004 	addi	r2,r2,-128
   53760:	10000a1e 	bne	r2,zero,5378c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   53764:	e0bfff17 	ldw	r2,-4(fp)
   53768:	10800217 	ldw	r2,8(r2)
   5376c:	e0fffe17 	ldw	r3,-8(fp)
   53770:	180d883a 	mov	r6,r3
   53774:	e17ffd17 	ldw	r5,-12(fp)
   53778:	1009883a 	mov	r4,r2
   5377c:	00539a80 	call	539a8 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   53780:	1000021e 	bne	r2,zero,5378c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   53784:	e0bfff17 	ldw	r2,-4(fp)
   53788:	00000706 	br	537a8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   5378c:	e0bfff17 	ldw	r2,-4(fp)
   53790:	10800017 	ldw	r2,0(r2)
   53794:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   53798:	e0ffff17 	ldw	r3,-4(fp)
   5379c:	d0a00404 	addi	r2,gp,-32752
   537a0:	18bfcc1e 	bne	r3,r2,536d4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   537a4:	0005883a 	mov	r2,zero
}
   537a8:	e037883a 	mov	sp,fp
   537ac:	dfc00117 	ldw	ra,4(sp)
   537b0:	df000017 	ldw	fp,0(sp)
   537b4:	dec00204 	addi	sp,sp,8
   537b8:	f800283a 	ret

000537bc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   537bc:	defffc04 	addi	sp,sp,-16
   537c0:	df000315 	stw	fp,12(sp)
   537c4:	df000304 	addi	fp,sp,12
   537c8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   537cc:	00bffa04 	movi	r2,-24
   537d0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   537d4:	e03fff15 	stw	zero,-4(fp)
   537d8:	00001706 	br	53838 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
   537dc:	e0bfff17 	ldw	r2,-4(fp)
   537e0:	10c00324 	muli	r3,r2,12
   537e4:	00800174 	movhi	r2,5
   537e8:	1885883a 	add	r2,r3,r2
   537ec:	10934917 	ldw	r2,19748(r2)
   537f0:	10000e1e 	bne	r2,zero,5382c <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
   537f4:	e0bfff17 	ldw	r2,-4(fp)
   537f8:	11000324 	muli	r4,r2,12
   537fc:	e0fffd17 	ldw	r3,-12(fp)
   53800:	00800174 	movhi	r2,5
   53804:	2085883a 	add	r2,r4,r2
   53808:	10d34915 	stw	r3,19748(r2)
      if (i > alt_max_fd)
   5380c:	d0e00817 	ldw	r3,-32736(gp)
   53810:	e0bfff17 	ldw	r2,-4(fp)
   53814:	1880020e 	bge	r3,r2,53820 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
   53818:	e0bfff17 	ldw	r2,-4(fp)
   5381c:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   53820:	e0bfff17 	ldw	r2,-4(fp)
   53824:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   53828:	00000706 	br	53848 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
   5382c:	e0bfff17 	ldw	r2,-4(fp)
   53830:	10800044 	addi	r2,r2,1
   53834:	e0bfff15 	stw	r2,-4(fp)
   53838:	e0bfff17 	ldw	r2,-4(fp)
   5383c:	10800810 	cmplti	r2,r2,32
   53840:	103fe61e 	bne	r2,zero,537dc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   53844:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   53848:	e0bffe17 	ldw	r2,-8(fp)
}
   5384c:	e037883a 	mov	sp,fp
   53850:	df000017 	ldw	fp,0(sp)
   53854:	dec00104 	addi	sp,sp,4
   53858:	f800283a 	ret

0005385c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   5385c:	defffb04 	addi	sp,sp,-20
   53860:	df000415 	stw	fp,16(sp)
   53864:	df000404 	addi	fp,sp,16
   53868:	e13ffd15 	stw	r4,-12(fp)
   5386c:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   53870:	e0bffc17 	ldw	r2,-16(fp)
   53874:	10840070 	cmpltui	r2,r2,4097
   53878:	1000021e 	bne	r2,zero,53884 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   5387c:	00840004 	movi	r2,4096
   53880:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
   53884:	e0fffd17 	ldw	r3,-12(fp)
   53888:	e0bffc17 	ldw	r2,-16(fp)
   5388c:	1885883a 	add	r2,r3,r2
   53890:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   53894:	e0bffd17 	ldw	r2,-12(fp)
   53898:	e0bfff15 	stw	r2,-4(fp)
   5389c:	00000506 	br	538b4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   538a0:	e0bfff17 	ldw	r2,-4(fp)
   538a4:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   538a8:	e0bfff17 	ldw	r2,-4(fp)
   538ac:	10800804 	addi	r2,r2,32
   538b0:	e0bfff15 	stw	r2,-4(fp)
   538b4:	e0ffff17 	ldw	r3,-4(fp)
   538b8:	e0bffe17 	ldw	r2,-8(fp)
   538bc:	18bff836 	bltu	r3,r2,538a0 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   538c0:	e0bffd17 	ldw	r2,-12(fp)
   538c4:	108007cc 	andi	r2,r2,31
   538c8:	10000226 	beq	r2,zero,538d4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   538cc:	e0bfff17 	ldw	r2,-4(fp)
   538d0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   538d4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   538d8:	0001883a 	nop
   538dc:	e037883a 	mov	sp,fp
   538e0:	df000017 	ldw	fp,0(sp)
   538e4:	dec00104 	addi	sp,sp,4
   538e8:	f800283a 	ret

000538ec <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   538ec:	defffe04 	addi	sp,sp,-8
   538f0:	df000115 	stw	fp,4(sp)
   538f4:	df000104 	addi	fp,sp,4
   538f8:	e13fff15 	stw	r4,-4(fp)
   538fc:	e0bfff17 	ldw	r2,-4(fp)
   53900:	10bffe84 	addi	r2,r2,-6
   53904:	10c00428 	cmpgeui	r3,r2,16
   53908:	18c03fcc 	andi	r3,r3,255
   5390c:	18000f1e 	bne	r3,zero,5394c <alt_exception_cause_generated_bad_addr+0x60>
   53910:	00c00044 	movi	r3,1
   53914:	1884983a 	sll	r2,r3,r2
   53918:	10e2c8cc 	andi	r3,r2,35619
   5391c:	1806c03a 	cmpne	r3,r3,zero
   53920:	18c03fcc 	andi	r3,r3,255
   53924:	1800051e 	bne	r3,zero,5393c <alt_exception_cause_generated_bad_addr+0x50>
   53928:	1084100c 	andi	r2,r2,4160
   5392c:	1004c03a 	cmpne	r2,r2,zero
   53930:	10803fcc 	andi	r2,r2,255
   53934:	1000031e 	bne	r2,zero,53944 <alt_exception_cause_generated_bad_addr+0x58>
   53938:	00000406 	br	5394c <alt_exception_cause_generated_bad_addr+0x60>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   5393c:	00800044 	movi	r2,1
   53940:	00000306 	br	53950 <alt_exception_cause_generated_bad_addr+0x64>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   53944:	0005883a 	mov	r2,zero
   53948:	00000106 	br	53950 <alt_exception_cause_generated_bad_addr+0x64>

  default:
    return 0;
   5394c:	0005883a 	mov	r2,zero
  }
}
   53950:	e037883a 	mov	sp,fp
   53954:	df000017 	ldw	fp,0(sp)
   53958:	dec00104 	addi	sp,sp,4
   5395c:	f800283a 	ret

00053960 <atexit>:
   53960:	200b883a 	mov	r5,r4
   53964:	000f883a 	mov	r7,zero
   53968:	000d883a 	mov	r6,zero
   5396c:	0009883a 	mov	r4,zero
   53970:	0053a201 	jmpi	53a20 <__register_exitproc>

00053974 <exit>:
   53974:	defffe04 	addi	sp,sp,-8
   53978:	000b883a 	mov	r5,zero
   5397c:	dc000015 	stw	r16,0(sp)
   53980:	dfc00115 	stw	ra,4(sp)
   53984:	2021883a 	mov	r16,r4
   53988:	0053ab00 	call	53ab0 <__call_exitprocs>
   5398c:	00800174 	movhi	r2,5
   53990:	1117c117 	ldw	r4,24324(r2)
   53994:	20800f17 	ldw	r2,60(r4)
   53998:	10000126 	beq	r2,zero,539a0 <exit+0x2c>
   5399c:	103ee83a 	callr	r2
   539a0:	8009883a 	mov	r4,r16
   539a4:	00515e00 	call	515e0 <_exit>

000539a8 <memcmp>:
   539a8:	30800130 	cmpltui	r2,r6,4
   539ac:	10000b1e 	bne	r2,zero,539dc <memcmp+0x34>
   539b0:	2144b03a 	or	r2,r4,r5
   539b4:	108000cc 	andi	r2,r2,3
   539b8:	1000171e 	bne	r2,zero,53a18 <memcmp+0x70>
   539bc:	20c00017 	ldw	r3,0(r4)
   539c0:	28800017 	ldw	r2,0(r5)
   539c4:	1880141e 	bne	r3,r2,53a18 <memcmp+0x70>
   539c8:	31bfff04 	addi	r6,r6,-4
   539cc:	30800128 	cmpgeui	r2,r6,4
   539d0:	21000104 	addi	r4,r4,4
   539d4:	29400104 	addi	r5,r5,4
   539d8:	103ff81e 	bne	r2,zero,539bc <memcmp+0x14>
   539dc:	30bfffc4 	addi	r2,r6,-1
   539e0:	30000b26 	beq	r6,zero,53a10 <memcmp+0x68>
   539e4:	11800044 	addi	r6,r2,1
   539e8:	218d883a 	add	r6,r4,r6
   539ec:	00000106 	br	539f4 <memcmp+0x4c>
   539f0:	21800726 	beq	r4,r6,53a10 <memcmp+0x68>
   539f4:	20800003 	ldbu	r2,0(r4)
   539f8:	28c00003 	ldbu	r3,0(r5)
   539fc:	21000044 	addi	r4,r4,1
   53a00:	29400044 	addi	r5,r5,1
   53a04:	10fffa26 	beq	r2,r3,539f0 <memcmp+0x48>
   53a08:	10c5c83a 	sub	r2,r2,r3
   53a0c:	f800283a 	ret
   53a10:	0005883a 	mov	r2,zero
   53a14:	f800283a 	ret
   53a18:	30bfffc4 	addi	r2,r6,-1
   53a1c:	003ff106 	br	539e4 <memcmp+0x3c>

00053a20 <__register_exitproc>:
   53a20:	00800174 	movhi	r2,5
   53a24:	10d7c117 	ldw	r3,24324(r2)
   53a28:	18805217 	ldw	r2,328(r3)
   53a2c:	10001726 	beq	r2,zero,53a8c <__register_exitproc+0x6c>
   53a30:	10c00117 	ldw	r3,4(r2)
   53a34:	1a000808 	cmpgei	r8,r3,32
   53a38:	40001b1e 	bne	r8,zero,53aa8 <__register_exitproc+0x88>
   53a3c:	20000b26 	beq	r4,zero,53a6c <__register_exitproc+0x4c>
   53a40:	181090ba 	slli	r8,r3,2
   53a44:	02400044 	movi	r9,1
   53a48:	48d2983a 	sll	r9,r9,r3
   53a4c:	1211883a 	add	r8,r2,r8
   53a50:	41802215 	stw	r6,136(r8)
   53a54:	11806217 	ldw	r6,392(r2)
   53a58:	21000098 	cmpnei	r4,r4,2
   53a5c:	324cb03a 	or	r6,r6,r9
   53a60:	11806215 	stw	r6,392(r2)
   53a64:	41c04215 	stw	r7,264(r8)
   53a68:	20000b26 	beq	r4,zero,53a98 <__register_exitproc+0x78>
   53a6c:	19000084 	addi	r4,r3,2
   53a70:	200890ba 	slli	r4,r4,2
   53a74:	18c00044 	addi	r3,r3,1
   53a78:	10c00115 	stw	r3,4(r2)
   53a7c:	1105883a 	add	r2,r2,r4
   53a80:	11400015 	stw	r5,0(r2)
   53a84:	0005883a 	mov	r2,zero
   53a88:	f800283a 	ret
   53a8c:	18805304 	addi	r2,r3,332
   53a90:	18805215 	stw	r2,328(r3)
   53a94:	003fe606 	br	53a30 <__register_exitproc+0x10>
   53a98:	11006317 	ldw	r4,396(r2)
   53a9c:	2248b03a 	or	r4,r4,r9
   53aa0:	11006315 	stw	r4,396(r2)
   53aa4:	003ff106 	br	53a6c <__register_exitproc+0x4c>
   53aa8:	00bfffc4 	movi	r2,-1
   53aac:	f800283a 	ret

00053ab0 <__call_exitprocs>:
   53ab0:	defff704 	addi	sp,sp,-36
   53ab4:	00800174 	movhi	r2,5
   53ab8:	dcc00315 	stw	r19,12(sp)
   53abc:	14d7c117 	ldw	r19,24324(r2)
   53ac0:	dc800215 	stw	r18,8(sp)
   53ac4:	dfc00815 	stw	ra,32(sp)
   53ac8:	9c805217 	ldw	r18,328(r19)
   53acc:	ddc00715 	stw	r23,28(sp)
   53ad0:	dd800615 	stw	r22,24(sp)
   53ad4:	dd400515 	stw	r21,20(sp)
   53ad8:	dd000415 	stw	r20,16(sp)
   53adc:	dc400115 	stw	r17,4(sp)
   53ae0:	dc000015 	stw	r16,0(sp)
   53ae4:	90001026 	beq	r18,zero,53b28 <__call_exitprocs+0x78>
   53ae8:	202b883a 	mov	r21,r4
   53aec:	282d883a 	mov	r22,r5
   53af0:	05000044 	movi	r20,1
   53af4:	94000117 	ldw	r16,4(r18)
   53af8:	847fffc4 	addi	r17,r16,-1
   53afc:	88000a16 	blt	r17,zero,53b28 <__call_exitprocs+0x78>
   53b00:	84000044 	addi	r16,r16,1
   53b04:	802090ba 	slli	r16,r16,2
   53b08:	9421883a 	add	r16,r18,r16
   53b0c:	b0001126 	beq	r22,zero,53b54 <__call_exitprocs+0xa4>
   53b10:	80804017 	ldw	r2,256(r16)
   53b14:	15800f26 	beq	r2,r22,53b54 <__call_exitprocs+0xa4>
   53b18:	8c7fffc4 	addi	r17,r17,-1
   53b1c:	88bfffd8 	cmpnei	r2,r17,-1
   53b20:	843fff04 	addi	r16,r16,-4
   53b24:	103ff91e 	bne	r2,zero,53b0c <__call_exitprocs+0x5c>
   53b28:	dfc00817 	ldw	ra,32(sp)
   53b2c:	ddc00717 	ldw	r23,28(sp)
   53b30:	dd800617 	ldw	r22,24(sp)
   53b34:	dd400517 	ldw	r21,20(sp)
   53b38:	dd000417 	ldw	r20,16(sp)
   53b3c:	dcc00317 	ldw	r19,12(sp)
   53b40:	dc800217 	ldw	r18,8(sp)
   53b44:	dc400117 	ldw	r17,4(sp)
   53b48:	dc000017 	ldw	r16,0(sp)
   53b4c:	dec00904 	addi	sp,sp,36
   53b50:	f800283a 	ret
   53b54:	90800117 	ldw	r2,4(r18)
   53b58:	81800017 	ldw	r6,0(r16)
   53b5c:	10bfffc4 	addi	r2,r2,-1
   53b60:	14401726 	beq	r2,r17,53bc0 <__call_exitprocs+0x110>
   53b64:	80000015 	stw	zero,0(r16)
   53b68:	303feb26 	beq	r6,zero,53b18 <__call_exitprocs+0x68>
   53b6c:	a446983a 	sll	r3,r20,r17
   53b70:	90806217 	ldw	r2,392(r18)
   53b74:	95c00117 	ldw	r23,4(r18)
   53b78:	1884703a 	and	r2,r3,r2
   53b7c:	1000081e 	bne	r2,zero,53ba0 <__call_exitprocs+0xf0>
   53b80:	303ee83a 	callr	r6
   53b84:	90c00117 	ldw	r3,4(r18)
   53b88:	98805217 	ldw	r2,328(r19)
   53b8c:	1dc0011e 	bne	r3,r23,53b94 <__call_exitprocs+0xe4>
   53b90:	14bfe126 	beq	r2,r18,53b18 <__call_exitprocs+0x68>
   53b94:	103fe426 	beq	r2,zero,53b28 <__call_exitprocs+0x78>
   53b98:	1025883a 	mov	r18,r2
   53b9c:	003fd506 	br	53af4 <__call_exitprocs+0x44>
   53ba0:	90806317 	ldw	r2,396(r18)
   53ba4:	81002017 	ldw	r4,128(r16)
   53ba8:	1886703a 	and	r3,r3,r2
   53bac:	1800061e 	bne	r3,zero,53bc8 <__call_exitprocs+0x118>
   53bb0:	200b883a 	mov	r5,r4
   53bb4:	a809883a 	mov	r4,r21
   53bb8:	303ee83a 	callr	r6
   53bbc:	003ff106 	br	53b84 <__call_exitprocs+0xd4>
   53bc0:	94400115 	stw	r17,4(r18)
   53bc4:	003fe806 	br	53b68 <__call_exitprocs+0xb8>
   53bc8:	303ee83a 	callr	r6
   53bcc:	003fed06 	br	53b84 <__call_exitprocs+0xd4>
